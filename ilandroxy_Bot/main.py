# region import –∏ API key
import random
import telebot
from telebot import types
import sqlite3
import csv
import time
import datetime as dt

with open("token.txt") as f:
    TOKEN = f.read().strip()

# bot = telebot.TeleBot(f'{TOKEN}')
bot = telebot.TeleBot("5734914555:AAHshNFPEP2SszdrAKbfm_6uKZI4waH1Nbs")
# endregion import –∏ API key

# region –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
MondayStudents = {
    1477701439: ["Valeria.py", '15:00-16:30', 4000//4, "–í–∞–ª–µ—Ä–∏—è", 4],
    768734764: ["Bogdan.py", '16:30-17:30', 4000//4, "–ë–æ–≥–¥–∞–Ω", 4],
    1454117859: ['Diana', "20:00-21:00", 4800//8, "–î–∏–∞–Ω–∞", 8],
    659796558: ['Ivan.py', '21:00-22:00', 1000, "–ò–≤–∞–Ω", 1000],
    826004697: ['Nikita.py', '22:00-23:00', 4000//4, "–ù–∏–∫–∏—Ç–∞", 4]}
TuesdayStudents = {
    1949653479: ['Yanina.py', '11:00-12:00', 4800//8, "–Ø–Ω–∏–Ω–∞", 8],
    1649389148: ['Slava.py', "15:00-16:00", 8000//8, "–°–ª–∞–≤–∞", 8],
    789322200: ['Katya.py', "16:00-17:00", 4000//4, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", 4],
    1208542295: ['Sasha.py', '19:00-20:00', 4800//8, "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞", 8],
    804184353: ['Islam.py', '21:00-22:00', 5400//4, "–ò—Å–ª–∞–º", 4],
    923349631: ['Olesya.py', '22:00-23:00', 9600//8, '–û–ª–µ—Å—è', 8]}
ThursdayStudents = {
    1949653479: ['Yanina.py', '11:00-12:00', 4800//8, "–Ø–Ω–∏–Ω–∞", 8],
    431685002: ['Vsevolod.py', '15:00-16:00', 5400//4, "–í—Å–µ–≤–æ–ª–æ–¥", 4],
    5242003138: ['Dima.py', '16:00-17:00', 4000//4, "–î–º–∏—Ç—Ä–∏–π", 4],
    1187852992: ['Aleksandr_2.py', "17:00-18:00", 6800//8, "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä2", 8],
    816859380: ['Sergey.py', '18:00-19:00', 9600//8, '–°–µ—Ä–≥–µ–π', 8],
    811476623:  ["Georgie.py", "20:00-21:00", 4800//4, "–ì–µ–æ—Ä–≥–∏–π", 4],
    799740089: ["Bulat.py", "21:00", 4000//4, "–ë—É–ª–∞—Ç", 4],
    1537718492: ["Aleksandr.py", "22:00-23:00", 8000//8, "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", 8]}
FridayStudents = {
    575882793: ['Artem.py', '15:00-16:00', 9600//8, '–ê—Ä—Ç–µ–º', 8],
    719571990: ['Stepan.py', "16:00-17:00", 6800//8, "–°—Ç–µ–ø–∞–Ω", 8],
    644645774: ['Stasya.py', "17:00-18:30", 10200//8, "–°—Ç–∞—Å—è", 8],
    986539147: ['Danil.py', '19:00-20:00', 8000 // 8, "–î–∞–Ω–∏–ª", 8],
    659796558: ['Ivan.py', '20:00-21:00', 1000, "–ò–≤–∞–Ω", 1000],
    1029532016: ['Maria.py', "21:00-22:00", 8000//8, "–ú–∞—Ä–∏—è", 8],
    1649389148: ['Slava.py', "22:00-23:00", 8000//8,  "–°–ª–∞–≤–∞", 8]}
SaturdayStudents = {
    1347259493: ['Andrey.py', '15:45-17:15', 1500, '–ê–Ω–¥—Ä–µ–π', 1000],
    1763801774: ['Kirill.py', "17:30-18:30", 4000//4, "–ö–∏—Ä–∏–ª–ª", 4],
    5148819382: ['Tatyana.py', "18:30-20:00", 10200//8, "–¢–∞—Ç—å—è–Ω–∞", 8],
    1314375732: ['Vasiliy.py', "21:00-22:00", 6800//8, "–í–∞—Å–∏–ª–∏–π", 8],
    871237277: ['Vladek.py', "22:00-23:00", 8000//8, "–í–ª–∞–¥–µ–∫", 8],
    438879394: ['Ilya.py', '14:00', 0, "–ò–ª—å—è", 1]}

Me = {1891281816: ['', '00:00', 0, "i–†–µ–ø–µ—Ç–∏—Ç–æ—Ä", 5],
      438879394: ['Ilya.py', '14:00', 0, "–ò–ª—å—è", 1]}

PrivateMe = {1891281816: "–†–∞–±–æ—á–∏–π –∞–∫–∫–∞—É–Ω—Ç",
             438879394: '–ò–ª—å—è',
             -1001822573914: "Homework",
             -1001819293687: "Lessons"}

Students = MondayStudents | TuesdayStudents | ThursdayStudents | FridayStudents | SaturdayStudents

S = []
for k, v in sorted(Students.items()):
    S.append((v, k))
# endregion –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤

# region –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞—Ç—ã
def my_time(timer: str) -> str:
    '''
:param timer: nsk_now.strftime('%A %d %B %Y')
:return: –ø—Ä–∏–º–µ—Ä #–°—Ä–µ–¥–∞ #25.–Ø–Ω–≤–∞—Ä—è.2023
    '''
    month_dict = {'January': '–Ø–Ω–≤–∞—Ä—è',
                  'February': '–§–µ–≤—Ä–∞–ª—è',
                  'March': '–ú–∞—Ä—Ç–∞',
                  'April': '–ê–ø—Ä–µ–ª—å',
                  'May': '–ú–∞–π',
                  'June': '–ò—é–Ω—å',
                  'July': '–ò—é–ª—å',
                  'August': '–ê–≤–≥—É—Å—Ç',
                  'September': '–°–µ–Ω—Ç—è–±—Ä—å',
                  'October': '–û–∫—Ç—è–±—Ä—å',
                  'November': '–ù–æ—è–±—Ä—å',
                  'December': '–î–µ–∫–∞–±—Ä—å'
                  }

    day_dict = {'Monday': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
                'Tuesday': '–í—Ç–æ—Ä–Ω–∏–∫',
                'Wednesday': '–°—Ä–µ–¥–∞',
                'Thursday': '–ß–µ—Ç–≤–µ—Ä–≥',
                'Friday': '–ü—è—Ç–Ω–∏—Ü–∞',
                'Saturday': '–°—É–±–±–æ—Ç–∞',
                'Sunday': '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
                }

    datetime_date = timer.split()
    my_date = f'#{day_dict[datetime_date[0]]} #{datetime_date[1]}{month_dict[datetime_date[2]]}{datetime_date[3]}'
    return my_date
# endregion —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞—Ç—ã

# üëâ üôè üëÜ üëá üòÖ üëã üôå ‚ò∫Ô∏è ‚ùó Ô∏è‚ÄºÔ∏è ‚úåÔ∏è üëå ‚úä üë®‚Äçüíª  ü§ñ üòâ
# ‚òùÔ∏è ‚ù§Ô∏è üí™ ‚úçÔ∏è üéØ  ‚õî  Ô∏è‚úÖ üìäüìàüßÆ   üó≥Ô∏è 0Ô∏è‚É£  1Ô∏è‚É£  2Ô∏è‚É£
# 3Ô∏è‚É£  4Ô∏è‚É£  5Ô∏è‚É£  6Ô∏è‚É£  7Ô∏è‚É£  8Ô∏è‚É£  9Ô∏è‚É£  üîü    üêç ‚òéÔ∏è üìû üëæ


@bot.callback_query_handler(func=lambda call: True)
def step(call):
    markup = telebot.types.InlineKeyboardMarkup(row_width=1)

    # region call.data –¥–ª—è –†–µ–ø–µ—Ç–∏—Ç–æ—Ä
    if call.data == 'price':
        pic_2 = open("photo/price.PNG", "rb")
        bot.send_photo(call.message.chat.id, pic_2)

        send_message2 = f"*–ü–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –ë–ï–°–ü–õ–ê–¢–ù–û*,\n–Ω–∞ –Ω–µ–º —è –æ–ø—Ä–µ–¥–µ–ª—é —É—Ä–æ–≤–µ–Ω—å " \
                        f"–∑–Ω–∞–Ω–∏–π, –∏ –º—ã –≤–º–µ—Å—Ç–µ –ø–æ–¥–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç!\n\n" \
                        f"–†–∞–±–æ—Ç–∞—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –ø–æ —á–µ–∫–∞–º —á–µ—Ä–µ–∑ –ù–ü–î (`–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π`).\n\n"
        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(types.InlineKeyboardButton("üßëüèΩ‚Äçüíª –û —Å–µ–±–µ", callback_data="iam"),
                   types.InlineKeyboardButton("‚¨áÔ∏è –ü—Ä–æ–≥—Ä–∞–º–º—ã", callback_data="downloads"),
                   types.InlineKeyboardButton("üßÆ –†–µ–∫–≤–∏–∑–∏—Ç—ã", callback_data="wallet"))
        bot.send_message(call.message.chat.id, send_message2,
                         parse_mode="Markdown", reply_markup=markup)

    elif call.data == "iam":
        send_message1 = f"*–û —Å–µ–±–µ:*\n" \
                        f"–í—ã–ø—É—Å–∫–Ω–∏–∫ *–°–∏–±–ì–£–¢–ò* —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ _¬´–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏ –∏ " \
                        f"–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏¬ª_.\n\n" \
                        f"–ü–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ *developer Telegram –±–æ—Ç–æ–≤* " \
                        f"–∏ –¥—Ä—É–≥–∏—Ö —á–∞—Ç –±–æ—Ç–æ–≤, –Ω–æ –Ω–∞—à–µ–ª —Å–≤–æ–µ –ø—Ä–∏–∑–≤–∞–Ω–∏–µ –≤ " \
                        f"—Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏." \
                        f"\n\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–∂—É –æ–±—É—á–µ–Ω–∏–µ –≤ *–ù–ì–ü–£*," \
                        f" –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é: `¬´–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ " \
                        f"–¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å –≤—ã—Å—à–∏–º –Ω–µ–ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º¬ª`."
        bot.send_message(call.message.chat.id, send_message1,
                         parse_mode="Markdown", disable_web_page_preview=True)

        pic = open("photo/diploma.png", "rb")
        bot.send_photo(call.message.chat.id, pic)

        send_message2 = f" \n\nüéØ –¶–µ–ª—å –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ—é —à–∫–æ–ª—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è " \
                        f"–¥–ª—è –¥–µ—Ç–µ–π –∏ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤!\n\n" \
                        f"–û–±—â–∏–π —Å—Ç–∞–∂ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–æ–ª—å—à–µ 3 –ª–µ—Ç, " \
                        f"–≤ –º–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å " \
                        f"[–æ—Ç–∑—ã–≤–∞–º–∏](https://www.avito.ru/user/590293c00d3ab79d83e929a6731df164/profile?src=sharing) " \
                        f"–¥–æ–≤–æ–ª—å–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤ –∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π."
        bot.send_message(call.message.chat.id, send_message2,
                         parse_mode="Markdown", disable_web_page_preview=True)

        pic_3 = open("photo/otzivy.PNG", "rb")
        bot.send_photo(call.message.chat.id, pic_3)

        markup2 = types.InlineKeyboardMarkup(row_width=1)
        markup2.add(types.InlineKeyboardButton("‚¨áÔ∏è –ü—Ä–æ–≥—Ä–∞–º–º—ã", callback_data="downloads"),
                   types.InlineKeyboardButton("üè∑ –ü—Ä–∞–π—Å", callback_data="price"),
                   types.InlineKeyboardButton("üßÆ –†–µ–∫–≤–∏–∑–∏—Ç—ã", callback_data="wallet"))

        send_message2 = f"–ü—Ä–µ–ø–æ–¥–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ " \
                        f"*Python* –≤ —á–∞—Å—Ç–Ω—ã—Ö —à–∫–æ–ª–∞—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö. "
        msg = bot.send_message(call.message.chat.id, send_message2,
                               parse_mode="Markdown")

        pic_4 = open("photo/kids2.JPG", "rb")
        msg = bot.send_photo(call.message.chat.id, pic_4)

        pic_5 = open("photo/kids1.JPG", "rb")
        msg = bot.send_photo(call.message.chat.id, pic_5,  reply_markup=markup2)

    elif call.data == "downloads":
        message_text = f"*–ü–µ—Ä–µ—á–µ–Ω—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º:*\n\n" \
                       f"1. Python [—Å–∫–∞—á–∞—Ç—å](www.python.org/downloads/)\n\n" \
                       f"2. Telegram Desktop [—Å–∫–∞—á–∞—Ç—å](telegram.org/)\n\n" \
                       f"3. Discord [—Å–∫–∞—á–∞—Ç—å](discord.com/download)\n\n" \
                       f"4. Pycharm [—Å–∫–∞—á–∞—Ç—å](www.jetbrains.com/ru-ru/pycharm/download/)\n\n" \
                       f"–í —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å " \
                       f"[–≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π](https://www.youtube.com/watch?v=wquEFeQAjPQ&t=303s) " \
                       f"–ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ PyCharm" \

        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(types.InlineKeyboardButton("üßëüèΩ‚Äçüíª –û —Å–µ–±–µ", callback_data="iam"),
                   types.InlineKeyboardButton("üè∑ –ü—Ä–∞–π—Å", callback_data="price"),
                   types.InlineKeyboardButton("üßÆ –†–µ–∫–≤–∏–∑–∏—Ç—ã", callback_data="wallet"))

        msg = bot.send_message(call.message.chat.id, message_text,
                               parse_mode="Markdown", reply_markup=markup,
                               disable_web_page_preview=True)

    elif call.data == "wallet":

        send_message = f"*–ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞*\n\n" \
                       f"*–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* \n`+7 (913) 468-35-34`" \
                       f"\n–°–ë–ï–† –∏–ª–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ, *–µ—Å—Ç—å –°–ë–ü*.\n\n" \
                       f"*–ò–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã:*\n–¢–∏–Ω—å–∫–æ—Ñ: `5536 9140 2240 5801`" \
                       f"\n–°–ë–ï–†: `5469 4400 2244 1977`\n" \
                       f"–¢–∏–Ω—å–∫–æ—Ñ –ú–ò–†: `2200 7004 1864 5957`\n" \
                       f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: `–ê–Ω–¥—Ä–∏–∞–Ω–æ–≤ –ò–ª—å—è –ê–ª–µ–∫—Å–µ–µ–≤–∏—á`\n\n" \
                       f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–∫–∏–¥—ã–≤–∞—é –≤–∞–º —á–µ–∫, —Ä–∞–±–æ—Ç–∞—é " \
                       f"–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ –ù–ü–î (`–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π`).\n\n" \
                       f"[–û—Å—Ç–∞–≤–∏—Ç—å —á–∞–µ–≤—ã–µ](https://www.tinkoff.ru/cf/9f3vcMecD9w)"

        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(types.InlineKeyboardButton("üßëüèΩ‚Äçüíª –û —Å–µ–±–µ", callback_data="iam"),
                   types.InlineKeyboardButton("‚¨áÔ∏è –ü—Ä–æ–≥—Ä–∞–º–º—ã", callback_data="downloads"),
                   types.InlineKeyboardButton("üè∑ –ü—Ä–∞–π—Å", callback_data="price"))

        bot.send_message(call.message.chat.id,
                         send_message,
                         parse_mode="Markdown",
                         reply_markup=markup,
                         disable_web_page_preview=True)
    # endregion call.data –¥–ª—è –†–µ–ø–µ—Ç–∏—Ç–æ—Ä

    # region call.data –¥–ª—è –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –¥–æ–º–∞—à–∫–∏
    elif call.data == 'firstclass':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
        btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
        markup.add(btn1)
        bot.send_message(call.message.chat.id, "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –∑–∞–¥–∞—á:\nP.s. –∑–∞–¥–∞—á–∏ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è!",
                         parse_mode='Markdown', reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                if call.message.chat.id != 1891281816:
                    bot.send_message(-1001822573914,
                                     f'#{Students[call.message.chat.id][3]} –ø–æ–ª—É—á–∏–ª –¥–æ–º–∞—à–∫—É:',
                                     parse_mode='Markdown')
                n = int(message.text)
                M = []
                for i in range(n):
                    x = random.randint(1, 25)
                    while x in M:
                        x = random.randint(1, 25)
                    M.append(x)
                    photo = open(f'theoryHW/firstclass/{x}.png', 'rb')
                    bot.send_photo(call.message.chat.id, photo)
                    if call.message.chat.id != 1891281816:
                        photo = open(f'theoryHW/firstclass/{x}.png', 'rb')
                        bot.send_photo(-1001822573914, photo)
                M.clear()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id, f'–£–¥–∞—á–∏ ‚úåÔ∏è\n–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ üëâ @ilandroxy',
                                 parse_mode='Markdown', reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

        bot.register_next_step_handler(call.message, message_input)

    elif call.data == 'ifelifelse':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
        btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
        markup.add(btn1)
        bot.send_message(call.message.chat.id,
                         "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –∑–∞–¥–∞—á:\n"
                         "P.s. –∑–∞–¥–∞—á–∏ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è!",
                         parse_mode='Markdown',
                         reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                if call.message.chat.id != 1891281816:
                    bot.send_message(-1001822573914, f'#{Students[call.message.chat.id][3]} –ø–æ–ª—É—á–∏–ª –¥–æ–º–∞—à–∫—É:',
                                 parse_mode='Markdown')
                n = int(message.text)
                M = []
                for i in range(n):
                    x = random.randint(1, 21)
                    while x in M:
                        x = random.randint(1, 21)
                    M.append(x)
                    photo = open(f'theoryHW/ifelifelse/{x}.png', 'rb')
                    bot.send_photo(call.message.chat.id, photo)
                    if call.message.chat.id != 1891281816:
                        photo = open(f'theoryHW/ifelifelse/{x}.png', 'rb')
                        bot.send_photo(-1001822573914, photo)
                M.clear()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id, f'–£–¥–∞—á–∏ ‚úåÔ∏è\n–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ üëâ @ilandroxy',
                                 parse_mode='Markdown', reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

        bot.register_next_step_handler(call.message, message_input)

    elif call.data == 'whilefor':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
        btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
        markup.add(btn1)
        bot.send_message(call.message.chat.id,
                         "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –∑–∞–¥–∞—á:\n"
                         "P.s. –∑–∞–¥–∞—á–∏ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è!",
                         parse_mode='Markdown',
                         reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                if call.message.chat.id != 1891281816:
                    bot.send_message(-1001822573914,
                                     f'#{Students[call.message.chat.id][3]} –ø–æ–ª—É—á–∏–ª –¥–æ–º–∞—à–∫—É:',
                                     parse_mode='Markdown')
                n = int(message.text)
                M = []
                for i in range(n):
                    x = random.randint(1, 20)
                    while x in M:
                        x = random.randint(1, 20)
                    M.append(x)
                    photo = open(f'theoryHW/whilefor/{x}.png', 'rb')
                    bot.send_photo(call.message.chat.id, photo)
                    if call.message.chat.id != 1891281816:
                        photo = open(f'theoryHW/whilefor/{x}.png', 'rb')
                        bot.send_photo(-1001822573914, photo)
                M.clear()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id, f'–£–¥–∞—á–∏ ‚úåÔ∏è\n–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ üëâ @ilandroxy',
                                 parse_mode='Markdown', reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

        bot.register_next_step_handler(call.message, message_input)

    elif call.data == 'list':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
        btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
        markup.add(btn1)
        bot.send_message(call.message.chat.id,
                         "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –∑–∞–¥–∞—á:\n"
                         "P.s. –∑–∞–¥–∞—á–∏ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è!",
                         parse_mode='Markdown', reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                if call.message.chat.id != 1891281816:
                    bot.send_message(-1001822573914, f'#{Students[call.message.chat.id][3]} –ø–æ–ª—É—á–∏–ª –¥–æ–º–∞—à–∫—É:',
                                 parse_mode='Markdown')
                n = int(message.text)
                M = []
                for i in range(n):
                    x = random.randint(1, 18)
                    while x in M:
                        x = random.randint(1, 18)
                    M.append(x)
                    photo = open(f'theoryHW/list/{x}.png', 'rb')
                    bot.send_photo(call.message.chat.id, photo)
                    if call.message.chat.id != 1891281816:
                        photo = open(f'theoryHW/list/{x}.png', 'rb')
                        bot.send_photo(-1001822573914, photo)
                M.clear()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id, f'–£–¥–∞—á–∏ ‚úåÔ∏è\n–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ üëâ @ilandroxy',
                                 parse_mode='Markdown', reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

        bot.register_next_step_handler(call.message, message_input)

    elif call.data == 'string':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
        btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
        markup.add(btn1)
        bot.send_message(call.message.chat.id,
                         "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –∑–∞–¥–∞—á:\n"
                         "P.s. –∑–∞–¥–∞—á–∏ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è!",
                         parse_mode='Markdown', reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                if call.message.chat.id != 1891281816:
                    bot.send_message(-1001822573914,
                                     f'#{Students[call.message.chat.id][3]} –ø–æ–ª—É—á–∏–ª –¥–æ–º–∞—à–∫—É:',
                                     parse_mode='Markdown')
                n = int(message.text)
                M = []
                for i in range(n):
                    x = random.randint(1, 14)
                    while x in M:
                        x = random.randint(1, 14)
                    M.append(x)
                    photo = open(f'theoryHW/string/{x}.png', 'rb')
                    bot.send_photo(call.message.chat.id, photo)
                    if call.message.chat.id != 1891281816:
                        photo = open(f'theoryHW/string/{x}.png', 'rb')
                        bot.send_photo(-1001822573914, photo)
                M.clear()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id,
                                 f'–£–¥–∞—á–∏ ‚úåÔ∏è\n–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ üëâ @ilandroxy',
                                 parse_mode='Markdown',
                                 reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(call.message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

        bot.register_next_step_handler(call.message, message_input)

    elif call.data == 'function':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
        btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
        markup.add(btn1)
        send_message = "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –∑–∞–¥–∞—á:\nP.s. –∑–∞–¥–∞—á–∏ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è!"
        bot.send_message(call.message.chat.id, send_message, parse_mode='Markdown', reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                if call.message.chat.id != 1891281816:
                    send_message = f'#{Students[call.message.chat.id][3]} –ø–æ–ª—É—á–∏–ª –¥–æ–º–∞—à–∫—É:'
                    bot.send_message(-1001822573914, send_message, parse_mode='Markdown')
                n = int(message.text)
                M = []
                for i in range(n):
                    x = random.randint(1, 16)
                    while x in M:
                        x = random.randint(1, 16)
                    M.append(x)
                    photo = open(f'theoryHW/functions/{x}.png', 'rb')
                    bot.send_photo(call.message.chat.id, photo)
                    if call.message.chat.id != 1891281816:
                        photo = open(f'theoryHW/functions/{x}.png', 'rb')
                        bot.send_photo(-1001822573914, photo)
                M.clear()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                send_message = f'–£–¥–∞—á–∏ ‚úåÔ∏è\n–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ üëâ @ilandroxy'
                bot.send_message(call.message.chat.id, send_message,
                                 parse_mode='Markdown', reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                send_message = f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî"
                bot.send_message(call.message.chat.id, send_message,
                                 reply_markup=markup)

        bot.register_next_step_handler(call.message, message_input)
    # endregion call.data –¥–ª—è —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –¥–æ–º–∞—à–∫–∏

    # region call.data –¥–ª—è Useful
    elif call.data == 'py01':
        py01 = open('files/py01.pdf', 'rb')
        bot.send_document(call.message.chat.id, py01)

    elif call.data == 'py02':
        py02 = open('files/py02.pdf', 'rb')
        bot.send_document(call.message.chat.id, py02)

    elif call.data == 'py03':
        py03 = open('files/py03.pdf', 'rb')
        bot.send_document(call.message.chat.id, py03)

    elif call.data == 'py04':
        py04 = open('files/py04.pdf', 'rb')
        msg = bot.send_document(call.message.chat.id, py04)

    elif call.data == 'py05':
        py05 = open('files/py05.pdf', 'rb')
        bot.send_document(call.message.chat.id, py05)

    elif call.data == 'py06':
        py06 = open('files/py06.pdf', 'rb')
        bot.send_document(call.message.chat.id, py06)

    elif call.data == 'py07':
        py07 = open('files/py07.pdf', 'rb')
        bot.send_document(call.message.chat.id, py07)
    # endregion call.data –¥–ª—è Useful

    # region call.data –¥–ª—è –ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç
    elif call.data == 'next1':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('photo/hw_button_1.jpg', 'rb')),
                              types.InputMediaPhoto(open('photo/hw_button_2.jpg', 'rb')),
                              types.InputMediaPhoto(open('photo/hw_button_3.jpg', 'rb')),
                              types.InputMediaPhoto(open('photo/hw_button_4.jpg', 'rb'))])
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data='next2'))

        bot.send_message(call.message.chat.id,
                         'üëæ –ë–æ—Ç –≤—ã–¥–∞–µ—Ç –¥–æ–º–∞—à–Ω—é—é —Ä–∞–±–æ—Ç—É,\n'
                         '–∞ —Ç–∞–∫–∂–µ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –µ–µ!',
                         reply_markup=markup2)

    elif call.data == 'next2':
        send_pic = open("photo/contact.jpg", 'rb')
        bot.send_photo(call.message.chat.id, send_pic)

        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data='next3'))

        send_message = 'üìû –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö\n–∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, —è –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ ‚úåÔ∏è'
        bot.send_message(call.message.chat.id, send_message, reply_markup=markup)

    elif call.data == 'next3':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('photo/abstract_1.jpg', 'rb')),
                              types.InputMediaPhoto(open('photo/abstract_2.jpg', 'rb')),
                              types.InputMediaPhoto(open('photo/abstract_3.jpg', 'rb'))])

        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data='next4'))

        bot.send_message(call.message.chat.id,
                         '*–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π üëá*\n\n'
                         '‚ñ´Ô∏è–í—ã –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥–µ—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –í–∞—à –∫–æ–Ω—Å–ø–µ–∫—Ç;\n'
                         '‚ñ´Ô∏è–ü–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ—Ç –º–µ–Ω—è;\n'
                         '‚ñ´Ô∏è–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —Å–≤–æ–∏—Ö —É—Ä–æ–∫–æ–≤;\n'
                         '‚ñ´Ô∏è–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∫–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π –≤ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–µ;\n\n'
                         'ü§ñ –ò –º–Ω–æ–≥–æ –¥—Ä—É–≥–æ–µ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ!',
                         parse_mode='Markdown', reply_markup=markup)

    elif call.data == 'next4':
        bot.send_message(call.message.chat.id,
                         '–û–¥–Ω–∞ –∏–∑ –æ—á–µ–Ω—å –∫—Ä—É—Ç—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π, –∑–∞–∫—Ä–µ–ø '
                         'inline –∫–Ω–æ–ø–æ–∫ - —Ñ—É–Ω–∫—Ü–∏—è "–°–¥–∞—Ç—å –¥–æ–º–∞—à–∫—É" '
                         '–≤—Å–µ–≥–¥–∞ –ø–æ–¥ —Ä—É–∫–æ–π üí™üòÖ',
                         parse_mode='Markdown')

        send_mov = open('photo/send_hw.gif', 'rb')
        bot.send_video(call.message.chat.id, send_mov)
    # endregion call.data –¥–ª—è –ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç

    # region call.data –¥–ª—è –û—Ç–∫—Ä—ã—Ç—å —Ä–µ—à–µ–±–Ω–∏–∫
    elif call.data == 'reshebnik':
        if call.message.chat.id in Students:
            message_text = '–ù–∞–±–æ—Ä—ã –∑–∞–¥–∞—á–µ–∫ –Ω–∞ –æ—Ç—Ä–∞–±–æ—Ç–∫—É —Ç–µ–æ—Ä–∏–∏ Python üëá üòÖ'
            markup = types.InlineKeyboardMarkup(row_width=3)
            markup.add(types.InlineKeyboardButton("2", callback_data="gdz2"),
                        types.InlineKeyboardButton("5", callback_data="gdz5"),
                        types.InlineKeyboardButton("6", callback_data="gdz6"),
                        types.InlineKeyboardButton("8", callback_data="gdz8"),
                        types.InlineKeyboardButton("12", callback_data="gdz12"),
                        types.InlineKeyboardButton("14", callback_data="gdz14"),
                        types.InlineKeyboardButton("15", callback_data="gdz15"),
                        types.InlineKeyboardButton("16", callback_data="gdz16"),
                        types.InlineKeyboardButton("17", callback_data="gdz17"),
                        types.InlineKeyboardButton("22", callback_data="gdz22"),
                        types.InlineKeyboardButton("23", callback_data="gdz23"),
                        types.InlineKeyboardButton("24", callback_data="igdz24"),
                        types.InlineKeyboardButton("25", callback_data="gdz25"),
                        types.InlineKeyboardButton("26", callback_data="gdz26"),
                        types.InlineKeyboardButton("27", callback_data="gdz27"))
            bot.send_message(call.message.chat.id, message_text,
                             parse_mode="Markdown", reply_markup=markup)
    # endregion call.data –¥–ª—è –û—Ç–∫—Ä—ã—Ç—å —Ä–µ—à–µ–±–Ω–∏–∫

    # region call.data –¥–ª—è –ö–Ω–æ–ø–æ–∫ –∏–∑ –†–µ—à–µ–±–Ω–∏–∫–∞
    elif call.data == 'gdz2':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/2/2.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/2/2.2.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6Ee) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 2Ô∏è‚É£ —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz5':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/5/5.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/5/5.2.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/5/5.3.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/5/5.4.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6ET) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 5Ô∏è‚É£ —Ç–∏–ø–∞üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz6':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/6/6.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/6/6.2.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/6/6.3.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6EK) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 6Ô∏è‚É£ —Ç–∏–ø–∞üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz8':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/8/8.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/8/8.2.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/8/8.3.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/8/8.4.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6E6) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 8Ô∏è‚É£ —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz12':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/12/12.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/12/12.2.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6Dq) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 1Ô∏è‚É£2Ô∏è‚É£ —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz14':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/14/14.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/14/14.2.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/14/14.3.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6Dd) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 1Ô∏è‚É£4Ô∏è‚É£  —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz15':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/15/15.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/15/15.2.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/15/15.3.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/15/15.4.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6DS) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 1Ô∏è‚É£5Ô∏è‚É£  —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz16':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/16/16.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/16/16.2.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/16/16.3.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6Cc) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 1Ô∏è‚É£6Ô∏è‚É£ —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz17':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/17/17.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/17/17.2.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6CW) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 1Ô∏è‚É£7Ô∏è‚É£ —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz22':
        # bot.send_media_group(call.message.chat.id, [types.InputMediaPhoto(open('gdz/22/22.1.jpg', 'rb')),
        #                                             types.InputMediaPhoto(open('gdz/22/22.2.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6Bo) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 2Ô∏è‚É£2Ô∏è‚É£  —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text, parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz23':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/23/23.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/23/23.2.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6BR) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 2Ô∏è‚É£3Ô∏è‚É£ —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz24':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/24/24.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/24/24.2.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/24/24.3.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/24/24.4.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6BC) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 2Ô∏è‚É£4Ô∏è‚É£  —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz25':
        bot.send_media_group(call.message.chat.id,
                             [types.InputMediaPhoto(open('gdz/25/25.1.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/25/25.2.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/25/25.3.jpg', 'rb')),
                              types.InputMediaPhoto(open('gdz/25/25.4.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6Ay) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á  2Ô∏è‚É£5Ô∏è‚É£  —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz26':
        # bot.send_media_group(call.message.chat.id, [types.InputMediaPhoto(open('gdz/26/26.1.jpg', 'rb')),
        #                                             types.InputMediaPhoto(open('gdz/26/26.2.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6Aj) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 2Ô∏è‚É£6Ô∏è‚É£  —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)

    elif call.data == 'gdz27':
        # bot.send_media_group(call.message.chat.id, [types.InputMediaPhoto(open('gdz/27/27.1.jpg', 'rb')),
        #                                             types.InputMediaPhoto(open('gdz/27/27.2.jpg', 'rb'))])

        message_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π gihub](https://clck.ru/33J6AP) –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á 2Ô∏è‚É£7Ô∏è‚É£ —Ç–∏–ø–∞ üéØ"
        bot.send_message(call.message.chat.id, message_text,
                         parse_mode="Markdown", disable_web_page_preview=True)
    # endregion –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏–∑ –†–µ—à–µ–±–Ω–∏–∫–∞

    # region call.data –¥–ª—è –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á
    elif call.data == 'th':
        markup1 = types.InlineKeyboardMarkup(row_width=1)
        markup1.add(types.InlineKeyboardButton("1Ô∏è‚É£ –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö, –ë–∞–∑–æ–≤–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞", callback_data="firstclass"),
                    types.InlineKeyboardButton("2Ô∏è‚É£ –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã, –≤–µ—Ç–≤–ª–µ–Ω–∏–µ", callback_data="ifelifelse"),
                    types.InlineKeyboardButton("3Ô∏è‚É£ –¶–∏–∫–ª—ã while –∏ for", callback_data="whilefor"),
                    types.InlineKeyboardButton("4Ô∏è‚É£ –¢–∏–ø –∫–æ–ª–ª–µ–∫—Ü–∏–π —Å–ø–∏—Å–∫–∏ (list)", callback_data="list"),
                    types.InlineKeyboardButton("5Ô∏è‚É£ –°—Ç—Ä–æ–∫–æ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö (str)", callback_data="string"),
                    types.InlineKeyboardButton("6Ô∏è‚É£ –°–∞–º–æ–ø–∏—Å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–µ–∫—É—Ä—Å–∏—è", callback_data="function"))
        send_message = '–ù–∞–±–æ—Ä—ã –∑–∞–¥–∞—á–µ–∫ –Ω–∞ –æ—Ç—Ä–∞–±–æ—Ç–∫—É —Ç–µ–æ—Ä–∏–∏ Python:'
        bot.send_message(call.message.chat.id, send_message,
                         parse_mode="Markdown", reply_markup=markup1)

        markup2 = types.InlineKeyboardMarkup(row_width=1)
        markup2.add(types.InlineKeyboardButton("üó≥Ô∏è –°–¥–∞—Ç—å –¥–æ–º–∞—à–∫—É", callback_data="sendhomeworks"))


        bot.send_message(call.message.chat.id, "–í —Å–ª—É—á–∞–µ –æ—à–∏–±–æ—á–Ω–æ–π —Å—Å—ã–ª–∫–∏, –ø—Ä–æ—Å—å–±–∞ —Å–∫–∏–Ω—É—Ç—å –º–Ω–µ —Å–∫—Ä–∏–Ω—à–æ—Ç @ilandroxy",
                         parse_mode="Markdown", disable_web_page_preview=True, reply_markup=markup2)
    # endregion call.data –¥–ª—è –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á

    # region call.data –¥–ª—è –ö–ï–ì–≠
    elif call.data == 'kg':
        message_text = "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–¥–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏–∑ —Å–±–æ—Ä–Ω–∏–∫–∞ –ü–æ–ª—è–∫–æ–≤–∞ (–ö–ï–ì–≠)\n\n[–ß–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ–º–∞—à–∫–∏](https://www.notion.so/ilandroxxy/8234ee61967a4cbe8a232b745cff0b9a)"
        markup = types.InlineKeyboardMarkup(row_width=5)
        markup.add(types.InlineKeyboardButton("1", callback_data="kg1"),
                   types.InlineKeyboardButton("2", callback_data="kg2"),
                   types.InlineKeyboardButton("3", callback_data="kg3"),
                   types.InlineKeyboardButton("4", callback_data="kg4"),
                   types.InlineKeyboardButton("5", callback_data="kg5"),
                   types.InlineKeyboardButton("6", callback_data="kg6"),
                   types.InlineKeyboardButton("7", callback_data="kg7"),
                   types.InlineKeyboardButton("8", callback_data="kg8"),
                   types.InlineKeyboardButton("9", callback_data="kg9"),
                   types.InlineKeyboardButton("10", callback_data="kg10"),
                   types.InlineKeyboardButton("11", callback_data="kg11"),
                   types.InlineKeyboardButton("12", callback_data="kg12"),
                   types.InlineKeyboardButton("13", callback_data="kg13"),
                   types.InlineKeyboardButton("14", callback_data="kg14"),
                   types.InlineKeyboardButton("15", callback_data="kg15"),
                   types.InlineKeyboardButton("16", callback_data="kg16"),
                   types.InlineKeyboardButton("17", callback_data="kg17"),
                   types.InlineKeyboardButton("18", callback_data="kg18"),
                   types.InlineKeyboardButton("19-21", callback_data="kg19"),
                   types.InlineKeyboardButton("22", callback_data="kg22"),
                   types.InlineKeyboardButton("23", callback_data="kg23"),
                   types.InlineKeyboardButton("24", callback_data="kg24"),
                   types.InlineKeyboardButton("25", callback_data="kg25"),
                   types.InlineKeyboardButton("26", callback_data="kg26"),
                   types.InlineKeyboardButton("27", callback_data="kg27"))
        bot.send_message(call.message.chat.id, message_text, parse_mode="Markdown", reply_markup=markup, disable_web_page_preview=True)
        markup2 = types.InlineKeyboardMarkup(row_width=1)
        markup2.add(types.InlineKeyboardButton("üó≥Ô∏è –°–¥–∞—Ç—å –¥–æ–º–∞—à–∫—É", callback_data="sendhomeworks"))
        bot.send_message(call.message.chat.id, "–í —Å–ª—É—á–∞–µ –æ—à–∏–±–æ—á–Ω–æ–π —Å—Å—ã–ª–∫–∏, –ø—Ä–æ—Å—å–±–∞ —Å–∫–∏–Ω—É—Ç—å –º–Ω–µ —Å–∫—Ä–∏–Ω—à–æ—Ç @ilandroxy",
                         parse_mode="Markdown", disable_web_page_preview=True, reply_markup=markup2)



    elif call.data == "kg1" or call.data == "kg2" or \
            call.data == "kg3" or call.data == "kg4" or \
            call.data == "kg5" or call.data == "kg6" or \
            call.data == "kg7" or call.data == "kg8" or \
            call.data == "kg9" or call.data == "kg10" or \
            call.data == "kg11" or call.data == "kg12" or \
            call.data == "kg13" or call.data == "kg14" or \
            call.data == "kg15" or call.data == "kg16" or \
            call.data == "kg17" or call.data == "kg18" or \
            call.data == "kg19" or call.data == "kg22" or \
            call.data == "kg23" or call.data == "kg24" or \
            call.data == "kg25" or call.data == "kg26" or \
            call.data == "kg27":
        kg = {'1': [78, 79, 80, 81, 82, 83, 84, 85, 86, 87,
                    89, 90, 91, 92, 571, 1584, 1585, 1586,
                    1587, 1588, 1589, 1590, 1591, 1592, 1593,
                    1594, 1595, 1596, 1597, 1598, 1599, 1600,
                    1601, 1602, 1603, 1604, 1605, 1606, 2819,
                    2820, 2821, 2822, 2823, 2824, 2825, 2826,
                    2827, 2828],
              '2': [2, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62,
                  63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
                  1607, 1608, 1609, 1610, 1611, 1612, 1613,
                  1614, 1615, 1616, 1617, 1618, 1619, 1620,
                  1621, 1622, 1623, 1624, 1625, 1626, 1627,
                  1628, 1629, 1630, 1630, 1631, 1632, 1633,
                  1634],
              '3': [4282, 4283, 4284, 4285, 4286, 4287, 4288,
                  4289, 4290, 4291, 4292, 4293, 4294, 4295,
                  4296, 4297, 4298, 4299, 4363, 4364, 4365,
                    4366, 4367, 4368, 4369, 4370, 4371, 4372,
                    4373, 4374, 4387, 4388, 4389, 4390, 4391,
                    4392, 4393, 4394, 4395, 4396, 4397, 4398,
                    4399],
              '4': [6, 111, 112, 113, 114, 115, 116, 117, 118,
                    119, 120, 121, 122,  123, 124, 125, 126,
                    127,  128, 129, 130, 132, 1664, 1665, 1666,
                    1667, 1668, 1669, 1670, 1671, 1672, 1673,
                    1674, 1675, 1676, 1677, 1678, 1679, 1680,
                    1681, 1682, 1683, 1684, 1685, 1686, 1687,
                    1688, 1689],
              '5': [7, 141, 142, 143, 144, 145, 146, 147, 148,
                    149, 1713, 1714, 1715, 1716, 1717, 1718,
                    1719, 1720, 1721, 1722, 1723, 1724, 1725,
                    1726, 1727, 1728, 1729, 1730, 1731, 1732,
                    1733, 1734, 1735, 1736, 1737, 1738, 1739,
                    1740, 1741, 1742, 1743, 1744, 1745, 1746,
                    1747, 1748, 1749],
              '6': [5500, 5501, 5502, 5503, 5504, 5505, 5506,
                    5507, 5508, 5509, 5510, 5511, 5512, 5513,
                    5529, 5530, 5531, 5532, 5533, 5534, 5535,
                    5536, 5549, 5552, 5553, 5554, 5555, 5556,
                    5557, 5558, 5559, 5560, 5561, 5562, 5563,
                    5564,  5565, 5566, 5567, 5582, 5583, 5584,
                    5585, 5586, 5587],
              '7': [12, 13, 187, 188, 189, 190, 191, 192, 193,
                    194, 195, 196, 197, 198, 199, 200, 201, 202,
                    203, 204, 1813, 1814, 1815, 1816, 1817, 1818,
                    1819, 1820, 1821, 1822, 1823, 1824, 1825,
                    1826, 1827, 1828, 1829, 1830, 1831, 1832,
                    1833, 1834, 1835, 1836, 1837, 1838, 1839,
                    1840, 1841],
              '8': [14, 205, 205, 206, 207, 208, 209, 210, 211,
                    212, 213, 214, 215, 216, 217, 218, 219, 220,
                    221, 222, 223, 1885, 1886, 1887, 1888, 1889,
                    1890, 1891, 1892, 1893, 1894, 1895, 1896,
                    1897, 1898, 1899, 1900, 1901, 1902, 1903,
                    1904, 1905, 1906, 1907, 1908, 1909, 1910,
                    1911, 1912],
              '9': [1962, 1963, 1964, 1965, 1966, 1967, 1968,
                    1969, 1970, 1971, 1972, 1973, 1974, 1975,
                    1976, 1977, 1978, 1979, 1980, 1981, 1982,
                    1983, 1984, 1985, 1986, 1987, 1988, 1989,
                    1990, 1991, 1992, 1993, 1994, 1995, 1996,
                    1997, 1998, 1999, 2000, 2001, 2002, 2003,
                    2004, 2005],
              '10': [2007, 2008, 2009, 2010, 2011, 2012, 2013,
                     2014, 2015, 2016, 2017, 2018, 2019, 2020,
                     2021, 2022, 2023, 2024, 2025, 2026, 2027,
                     2028, 2029, 2030, 2031, 2032, 2033, 2034,
                     3236, 3237, 3238, 3239, 3240, 3241, 3242,
                     3243, 3244, 3245, 3246, 3247, 3248, 3249,
                     3250, 3251, 3252, 3253],
              '11': [17, 264, 265, 266, 267, 268, 269, 270, 271,
                     272, 273, 274, 275, 276, 277, 278, 279, 280,
                     281, 282, 2035, 2036, 2037, 2038, 2039, 2040,
                     2041, 2042, 2043, 2044, 2045, 2046, 2047,
                     2048, 2049, 2050, 2051, 2052, 2053, 2054,
                     2055, 2056, 2057, 2058, 2059, 2060, 2061,
                     2062],
              '12': [18, 283, 284, 285, 286, 287, 288, 289, 290,
                     291, 292, 293, 294, 295, 296, 297, 298, 299,
                     300, 301, 2084, 2085, 2086, 2087, 2088, 2089,
                     2090, 2091, 2092, 2093, 2094, 2095, 2096,
                     2097, 2098, 2099, 2100, 2101, 2102, 2103,
                     2104, 2105, 2106, 2107, 2108, 2109, 2110,
                     2111, 2112],
              '13': [19, 302, 303, 304, 305, 306, 307, 308, 309,
                     310, 311, 312, 313, 314, 315, 316, 317, 318,
                     319, 320, 2138, 2139, 2140, 2141, 2142, 2143,
                     2144, 2145, 2146, 2147, 2148, 2149, 2150,
                     2151, 2152, 2153, 2154, 2155, 2156, 2157,
                     2158, 2159, 2160, 2161, 2162, 2163, 2164,
                     2165, 2166],
              '14': [5483, 5484, 5485, 5486, 5487, 5488, 5489,
                     5490, 5491, 5492, 5493, 5494, 5495, 5496,
                     5497, 5498, 5499, 5514, 5515, 2173, 2174,
                     2175, 2176, 2177, 2178, 2179, 2180, 2181,
                     2182, 2183, 2184, 2185, 2186, 2187, 2188,
                     2189, 2190, 2191, 2192, 2193, 2194, 2195,
                     2196, 2197, 2198, 2199, 2200, 2201, 2202],
              '15': [22, 359, 360, 361, 362, 363, 364, 365, 366,
                     367, 368, 369, 370, 371, 372, 373, 374, 375,
                     376, 377, 378, 379, 380, 381, 382, 383, 384,
                     385, 386, 1043, 1044, 1045, 1046, 1047, 1048,
                     1049, 1050, 1051, 1052, 1053, 1054, 1055,
                     1056, 1057, 1058, 1059, 1060, 1061, 1062,
                     1063, 1064, 1065, 1066],
              '16': [15, 224, 225, 226, 227, 228, 229, 230, 231,
                     232, 233, 234, 235, 236, 237, 238, 239, 240,
                     241, 242, 243, 2262, 2263, 2264, 2265, 2266,
                     2267, 2268, 2269, 2270, 2271, 2272, 2273,
                     2274, 2275, 2276, 2277, 2278, 2279, 2280,
                     2281, 2282, 2283, 2284, 2285, 2286, 2287,
                     2288, 2289],
              '17': [4269, 4270, 4271, 4272, 4273, 4274, 4275,
                     4276, 4277, 4300, 4301, 4302, 4303, 4304,
                     4305, 4306, 4307, 4308, 4309, 4310, 4311,
                     4312, 4313, 4314, 4315, 4316, 4317, 4318,
                     4319,  4320, 4321, 4322, 4323, 4324, 4351,
                     4352, 4353, 4354, 4355, 4356, 4357, 4358,
                     4359, 4360],
              '18': [2347, 2348, 2349, 2350, 2351, 2352, 2353,
                     2354, 2355, 2356, 2357, 2358, 2359, 2360,
                     2361, 2362, 2363, 2364, 2365, 2366, 2367,
                     2368, 2369, 2370, 2371, 2372, 2373, 2374,
                     2375, 2376, 2377, 2378, 2379, 2380, 2381,
                     2382, 2383, 2384, 2385, 2386, 2514, 2515,
                     2560, 2561, 2651],
              '19': [2387, 2388, 2389, 2390, 2391, 2392, 2393,
                     2394, 2395, 2396, 2397, 2398, 2399, 2400,
                     2401, 2402, 2403, 2404, 2405, 2406, 2407,
                     2408, 2409, 2410, 2411, 2412, 2413, 2414,
                     2415, 2416, 2417, 2418, 2419, 2420],
              '22': [5516, 5517, 5518, 5519, 5520, 5530, 5531,
                     5532, 5550, 5551, 5568, 5569, 5570, 5571,
                     5572, 5573, 5574, 5575, 5576, 5577, 5578,
                     5579, 5580, 5581, 5607, 5608, 5609, 5610,
                     5611, 5664, 5665, 5666],
              '23': [26, 445, 446, 447, 448, 449, 450, 451,
                     452, 453, 454, 455, 456, 457, 458, 459,
                     460, 461, 462, 463, 464, 465, 466, 467,
                     468, 2453, 2454, 2455, 2456, 2457, 2458,
                     2459, 2460, 2461, 2462, 2463, 2464, 2465,
                     2466, 2467, 2468, 2469, 2470, 2471, 2472,
                     2473, 2474, 2475, 2476, 2477],
              '24': [2506, 2507, 2508, 2509, 2510, 2511, 2512,
                     2513, 2514, 2515, 2516, 2517, 2518, 2519,
                     2520, 2521, 2522, 2523, 2524, 2525, 2526,
                     2527, 2528, 2529, 2530, 2531, 2532, 2533,
                     2534, 2535, 2536, 2537, 2538, 2539, 2540,
                     2541, 2542, 2543, 2544, 2545, 2546, 2547,
                     2548, 2549, 2550, 2551],
              '25': [2562, 2563, 2564, 2565, 2566, 2567, 2568,
                     2569, 2570, 2571, 2572, 2573, 2574, 2575,
                     2576, 2577, 2578, 2579, 2580, 2581, 2582,
                     2583, 2584, 2585, 2586, 2587, 2588, 2589,
                     2590, 2591, 2592, 2593, 2594, 2595, 2596,
                     2597, 2598, 2599, 2600, 2601, 2602, 2603,
                     2604, 2605, 2606, 2607],
              '26': [2617, 2618, 2619, 2620, 2621, 2622, 2623,
                     2624, 2625, 2626, 2627, 2628, 2629, 2630,
                     2631, 2632, 2633, 2634, 2635, 2636, 2637,
                     2638, 2639, 2640, 2641, 2642, 2643, 2644,
                     2645, 2646, 2647, 2648, 2649, 2650, 2707,
                     2708, 2709, 2836, 3152, 3153, 3154],
              '27': [2660, 2661, 2662, 2663, 2664, 2665, 2666,
                     2667, 2668, 2669, 2670, 2671, 2672, 2673,
                     2674, 2675, 2676, 2677, 2678, 2679, 2680,
                     2681, 2682, 2683, 2684, 2685, 2686, 2687,
                     2688, 2689, 2690, 2691, 2692, 2693, 2694,
                     2710, 2711, 2712, 2713]}

        type = call.data[2:]
        x = random.randint(0, len(kg[type]))
        link = f'({type}) –ö–ï–ì–≠: –ó–∞–¥–∞—á–∞ [{kg[type][x]}](https://kpolyakov.spb.ru/school/ege/gen.php?action=viewTopic&topicId={kg[type][x]})'
        if call.message.chat.id in Students:
            bot.send_message(call.message.chat.id, link, parse_mode='Markdown', disable_web_page_preview=True)

            bot.send_message(-1001822573914, f"#{Students[call.message.chat.id][3]}  [–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={call.message.chat.id})\n"
                             f"–ü–æ–ª—É—á–∏–ª –¥–æ–º–∞—à–∫—É –ö–ï–ì–≠ ({type}): [{kg[type][x]}](https://kpolyakov.spb.ru/school/ege/gen.php?action=viewTopic&topicId={kg[type][x]})",
                             parse_mode='Markdown', disable_web_page_preview=True)
        elif call.message.chat.id in Me:
            bot.send_message(call.message.chat.id, link, parse_mode='Markdown', disable_web_page_preview=True)
    # endregion call.data –¥–ª—è –ö–ï–ì–≠

    # region call.data –¥–ª—è –†–µ—à—É –ï–ì–≠
    elif call.data == 'hw':
        message_text = "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–¥–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å –†–µ—à—É –ï–ì–≠\n\n" \
                       "–ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, –º–Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –≤—ã–ø–∞–≤—à–∏—Ö –∑–∞–¥–∞—á.\n\n" \
                       "–ü—Ä–æ—è–≤–∏—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –≤—ã–±–æ—Ä–µ, –∞ –Ω–∞ —É—Ä–æ–∫–µ –º—ã —Ä–∞–∑–±—Ä–µ–º –≤–æ–∑–Ω–∏–∫—à–∏–µ –≤–æ–ø—Ä–æ—Å—ã!\n\n" \
                       "[–ß–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ–º–∞—à–∫–∏](https://www.notion.so/ilandroxxy/8234ee61967a4cbe8a232b745cff0b9a)"
        markup = types.InlineKeyboardMarkup(row_width=5)
        markup.add(types.InlineKeyboardButton("1", callback_data="hw1"),
                   types.InlineKeyboardButton("2", callback_data="hw2"),
                   types.InlineKeyboardButton("3", callback_data="hw3"),
                   types.InlineKeyboardButton("4", callback_data="hw4"),
                   types.InlineKeyboardButton("5", callback_data="hw5"),
                   types.InlineKeyboardButton("6", callback_data="hw6"),
                   types.InlineKeyboardButton("7", callback_data="hw7"),
                   types.InlineKeyboardButton("8", callback_data="hw8"),
                   types.InlineKeyboardButton("9", callback_data="hw9"),
                   types.InlineKeyboardButton("10", callback_data="hw10"),
                   types.InlineKeyboardButton("11", callback_data="hw11"),
                   types.InlineKeyboardButton("12", callback_data="hw12"),
                   types.InlineKeyboardButton("13", callback_data="hw13"),
                   types.InlineKeyboardButton("14", callback_data="hw14"),
                   types.InlineKeyboardButton("15", callback_data="hw15"),
                   types.InlineKeyboardButton("16", callback_data="hw16"),
                   types.InlineKeyboardButton("17", callback_data="hw17"),
                   types.InlineKeyboardButton("18", callback_data="hw18"),
                   types.InlineKeyboardButton("19-21", callback_data="hw19-21"),
                   types.InlineKeyboardButton("22", callback_data="hw22"),
                   types.InlineKeyboardButton("23", callback_data="hw23"),
                   types.InlineKeyboardButton("24", callback_data="hw24"),
                   types.InlineKeyboardButton("25", callback_data="hw25"),
                   types.InlineKeyboardButton("26", callback_data="hw26"),
                   types.InlineKeyboardButton("27", callback_data="hw27"))
        bot.send_message(call.message.chat.id, message_text, parse_mode="Markdown", reply_markup=markup, disable_web_page_preview=True)
        markup2 = types.InlineKeyboardMarkup(row_width=1)
        markup2.add(types.InlineKeyboardButton("üó≥Ô∏è –°–¥–∞—Ç—å –¥–æ–º–∞—à–∫—É", callback_data="sendhomeworks"))
        bot.send_message(call.message.chat.id, "–í —Å–ª—É—á–∞–µ –æ—à–∏–±–æ—á–Ω–æ–π —Å—Å—ã–ª–∫–∏, –ø—Ä–æ—Å—å–±–∞ —Å–∫–∏–Ω—É—Ç—å –º–Ω–µ —Å–∫—Ä–∏–Ω—à–æ—Ç @ilandroxy",
                         parse_mode="Markdown", disable_web_page_preview=True, reply_markup=markup2)

    elif call.data == "hw19-21":
        type = '19-21'
        s = 'inf-ege.sdamgia.ru/problem?id='
        x = random.randint(0, 19)
        M = [28096, 27832, 33764, 28001, 28035, 28099,
             40994, 39248, 27771, 28090, 29667, 27797,
             27932, 28077, 28102, 38597, 27802, 28158,
             27780, 27826]

        if call.message.chat.id in Students:
            link = f'–ó–∞–¥–∞—á–∞ —Ç–∏–ø–∞ (19): [{M[x]}]({s}{M[x]})'
            bot.send_message(call.message.chat.id, link, parse_mode='Markdown', disable_web_page_preview=True)
            link = f'–ó–∞–¥–∞—á–∞ —Ç–∏–ø–∞ (20): [{M[x] + 1}]({s}{M[x] + 1})'
            bot.send_message(call.message.chat.id, link, parse_mode='Markdown', disable_web_page_preview=True)
            link = f'–ó–∞–¥–∞—á–∞ —Ç–∏–ø–∞ (21): [{M[x] + 2}]({s}{M[x] + 2})'
            bot.send_message(call.message.chat.id, link, parse_mode='Markdown', disable_web_page_preview=True)

            bot.send_message(-1001822573914,
                             f"#{Students[call.message.chat.id][3]}  "
                             f"[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={call.message.chat.id})\n"
                             f"–ü–æ–ª—É—á–∏–ª –¥–æ–º–∞—à–∫—É ({type}): [{M[x]}]({s}{M[x]}), [{M[x] + 1}]({s}{M[x] + 1}), "
                             f"[{M[x] + 2}]({s}{M[x] + 2})",
                             parse_mode='Markdown', disable_web_page_preview=True)
        elif call.message.chat.id in Me:
            link = f'–ó–∞–¥–∞—á–∞ —Ç–∏–ø–∞ (19): [{M[x]}]({s}{M[x]})'
            bot.send_message(call.message.chat.id, link, parse_mode='Markdown', disable_web_page_preview=True)
            link = f'–ó–∞–¥–∞—á–∞ —Ç–∏–ø–∞ (20): [{M[x] + 1}]({s}{M[x] + 1})'
            bot.send_message(call.message.chat.id, link, parse_mode='Markdown', disable_web_page_preview=True)
            link = f'–ó–∞–¥–∞—á–∞ —Ç–∏–ø–∞ (21): [{M[x] + 2}]({s}{M[x] + 2})'
            bot.send_message(call.message.chat.id, link, parse_mode='Markdown', disable_web_page_preview=True)


    elif call.data == "hw1" or call.data == "hw2" or \
         call.data == "hw3" or call.data == "hw4" or \
         call.data == "hw5" or call.data == "hw6" or \
         call.data == "hw7" or call.data == "hw8" or \
         call.data == "hw9" or call.data == "hw10" or \
         call.data == "hw11" or call.data == "hw12" or \
         call.data == "hw13" or call.data == "hw14" or \
         call.data == "hw15" or call.data == "hw16" or \
         call.data == "hw17" or call.data == "hw18" or \
         call.data == "hw22" or call.data == "hw23" or \
         call.data == "hw24" or call.data == "hw25" or \
         call.data == "hw26" or call.data == "hw27":
        hw = {'1': [13479, 23901, 38446, 11259, 26946, 18782,
                    5697, 15098, 16030, 5793, 29188, 26975,
                    18705, 7981, 38935, 4707, 40717, 28678,
                    17367, 5196, 25833, 3828, 36856, 15971,
                    7777, 37136, 38446, 13506, 7355, 11232],
              '2': [29650, 33174, 18483, 27287, 46999, 26974,
                    35891, 36857, 15124, 40718, 28538, 27399,
                    15912, 18430, 27260, 33472, 15970, 37137,
                    15787, 16878, 46960, 45236, 27531, 18781,
                    35460, 27371, 18071, 15097, 35976, 16431,
                    18578, 39231, 15814, 33504, 36015, 16805,
                    33081, 29109, 18614, 38936, 16029, 19051],
              '3': [37494, 39232, 37481, 38937, 47000, 37491,
                    37492, 37493, 45237, 40719, 37417, 37479,
                    37508, 37488, 37507, 37489, 37415, 46961,
                    40978, 37480, 37485, 37490],
              '4': [18617, 14691, 17323, 13351, 19054, 15942,
                    10499, 16808, 37139, 16881, 27290, 18553,
                    9791, 45238, 16380, 18581, 47001, 15915,
                    10379, 16434, 26948, 17369, 13562, 15817,
                    26977, 11234, 15790, 36017, 18486, 28680,
                    18811, 18074, 15621, 13616, 27263, 14220,
                    11341, 46962, 7685, 18433],
              '5': [7454, 26978, 13617, 29653, 18075, 11235,
                    18785, 10380, 15791, 7917, 9792, 16033,
                    17370, 11342, 18487, 14692, 18618, 7690,
                    15101, 15622, 35894, 13590, 16435, 13536,
                    9190, 18582, 7751, 47002, 16809, 10407,
                    14767, 27375, 45239, 11262, 14265, 15818,
                    27264, 10309, 26949, 13563],
              '6': [47246, 47404, 47245, 47390, 47247, 47308,
                    47249, 47315, 47305, 47249, 47304, 47306,
                    47403, 47313, 47311, 47307, 47310, 47312,
                    47314, 47393, 47316, 47391, 47406, 47309,
                    47248, 47392, 47301, 47303, 47405],
              '7': [18078, 8097, 23907, 16438, 25839, 13355,
                    11110, 29194, 15821, 13620, 19058, 13593,
                    17327, 45241, 27538, 16812, 28684, 9759,
                    15977, 26981, 18585, 11345, 9795, 14695,
                    17373, 38941, 10497, 33477, 10470, 35465,
                    15946, 16036, 36862, 15131, 28545, 29655,
                    13736, 36020, 18711, 33509],
              '8': [9361, 15822, 10473, 15795, 16037, 10500,
                    7986, 35897, 3568, 27009, 8658, 11266,
                    3230, 26953, 23908, 3569, 36021, 3692,
                    3515, 33753, 36863, 3811, 13459, 3233,
                    7370, 27236, 5055, 7338, 16439, 9162,
                    10384, 3517, 7694, 19059, 3227, 18622,
                    13567, 15947, 14696, 27295],
              '9': [33754, 27529, 35898, 33088, 27524, 27524,
                    36022, 27406, 27525, 33181, 35467, 27518,
                    46967, 28117, 38588, 39238, 27517, 36864,
                    27526, 29657, 27523, 27519, 45243, 40725,
                    27528, 38943, 27522, 35983, 40984, 33511,
                    47006, 37144, 33479, 27520, 27527],
              '10': [36865, 27582, 33480, 46968, 27590, 27589,
                     35899, 27588, 38944, 36023, 29658, 27580,
                     40726, 27586, 37145, 27577, 40985, 27581,
                     33512, 45244, 27407, 27579, 27585, 33089,
                     33182, 35468, 27587, 27584, 39239, 27591,
                     33755, 47007, 27583, 35984],
              '11': [9364, 6885, 40986, 36024, 33481, 7924, 11309,
                     7989, 16889, 4684, 33183, 6415, 10476, 6181,
                     18792, 9305, 5081, 5237, 15629, 4716, 36866,
                     45245, 23911, 6298, 5270, 6917, 16442, 9165,
                     6330, 14272, 16816, 7785, 29198, 7758, 15853,
                     9197, 15825, 7670, 9763, 6451],
              '12': [13571, 23912, 16890, 26986, 10290, 33514, 29660,
                     40987, 10317, 13517, 15630, 11350, 15854, 15951,
                     15799, 13544, 28550, 45246, 35470, 33757, 10415,
                     18562, 18820, 27299, 27272, 47009, 38946, 9764,
                     39241, 18626, 10504, 16443, 35986, 33482, 35901,
                     14229, 18793, 14775, 17332, 18716],
              '13': [5365, 13361, 10505, 16818, 5429, 33092, 10478,
                     18627, 11271, 29122, 33758, 17333, 18591, 5941,
                     16891, 15631, 15800, 6237, 40988, 11244, 33515,
                     40729, 17379, 3746, 15855, 28690, 18496, 6269,
                     18563, 27300, 28551, 18084, 27544, 6309, 46971,
                     27273, 3285, 39242, 3294, 15110],
              '14': [48395, 48378, 48386, 48403, 48379, 48391, 48387,
                     48400, 48382, 48383, 48393, 48401, 48338, 48394,
                     48388, 48399, 48392, 48397, 48380, 48384, 48398,
                     48389, 48376, 48396, 48385, 48377, 48339, 48402,
                     29201, 9697, 36869, 18444, 15953, 18497, 27274,
                     33484, 46972, 15632, 13362, 47011, 18085, 15984,
                     13743, 33186, 26988, 18795, 16043, 27015, 18628,
                     25846, 45248, 23914, 15926, 27545],
              '15': [13745, 8106, 35989, 34539, 34547, 18720, 33760,
                     34516, 8666, 33517, 34509, 15955, 34518, 27303,
                     11119, 33094, 34511, 35904, 13364, 16894, 46973,
                     17382, 36870, 27547, 34506, 45249, 15928, 34510,
                     34535, 29633, 34537,39244, 18566, 33187, 34542,
                     37150, 35473, 34513],
              '16': [4937, 5970, 37151, 35990, 38591, 5310, 4644, 4651,
                     36871, 4692, 35474, 45250, 7340, 4647, 7270, 5458,
                     4978, 27413, 6990, 4646, 4642, 5650, 4643, 7273,
                     5586, 4657, 4658, 5554, 4724, 33518, 6423, 6189,
                     4849, 35905, 5938, 4656, 33095, 5278],
              '17': [37356, 39763, 39764, 37344, 37348, 37354, 37345,
                     39246, 37350, 47014, 37360, 37355, 37347, 37337,
                     37359, 37358, 37371, 37349, 45251, 40733, 37370,
                     37372, 38951, 37340, 46975, 37369, 40992, 37341,
                     37336, 39762, 37357, 37373, 37362, 37361],
              '18': [27681, 27673, 35992, 46976, 27669, 27676, 27677,
                     39247, 27685, 27683, 29666, 40993, 27679, 33763,
                     33097, 33488, 37153, 33520, 45252, 35907, 27682,
                     40734, 27670, 27671, 27680, 38593, 27675, 27678,
                     36873, 27415, 27672, 36031, 33190, 38952, 47015,
                     27667, 27666, 35476, 27668, 27674],
              '22': [47588, 47589, 47601, 47605, 47598, 47593, 47602,
                     47595, 47603, 47600, 47610, 47590, 47609, 47608,
                     47616, 47586, 47607, 47549, 47614, 47596, 47613,
                     47611, 47582, 47591, 47606, 47584, 47594, 47592,
                     47587, 47615, 47604, 47599, 47583, 47612],
              '23': [28697, 18450, 3631, 16898, 27551, 14783, 5913, 13418,
                     11123, 15638, 38957, 16451, 15932, 7379, 13471, 15990,
                     8670, 16825, 17340, 13633, 18570, 7315, 11318, 18828,
                     33195, 27391, 45257, 7347, 13552, 14237, 29207, 23920,
                     13525, 14281, 7998, 39252, 18634, 13579, 18598, 13368],
              '24': [27692, 33526, 33494, 35913, 27698, 33103, 37131, 40740,
                     27689, 40999, 35482, 27695, 27686, 27697, 27688, 27694,
                     33196, 36879, 27696, 37159, 27421, 38958, 46982, 45258,
                     35998, 38602, 39253, 33769, 47021, 27699, 36037, 27691,
                     27690, 29672, 27693, 27687],
              '25': [33527, 27852, 33104, 28120, 39254, 27854, 37160, 28122,
                     37130, 27857, 27422, 41000, 36038, 29673, 35999, 46983,
                     47022, 33495, 33197, 33770, 28124, 38959, 45259, 35914,
                     28123, 27853, 28121, 27858, 36880, 35483, 27851, 38603,
                     27850, 40741, 27856, 27855],
              '26': [46984, 28132, 33528, 40742, 28141, 39255, 33771, 27884,
                     38960, 27888, 28140, 27886, 35915, 36881, 27423, 29674,
                     36000, 35484, 36039, 28139, 27883, 41001, 47023, 27881,
                     27882, 33198, 27887, 27880, 33105, 28138, 33496, 37161,
                     45260, 27885],
              '27': [28133, 33529, 35485, 27424, 33497, 28131, 27891, 27991,
                     37162, 47024, 46985, 35916, 33106, 38961, 27889, 38604,
                     36001, 39256, 28130, 40743, 27990, 41002, 36882, 28129,
                     29675, 27890, 27989, 33772, 36040, 45261, 33199]}

        type = call.data[2:]
        x = random.randint(0, len(hw[type]))
        link = f'({type}) –†–µ—à—É –ï–ì–≠: –ó–∞–¥–∞—á–∞ [{hw[type][x]}](inf-ege.sdamgia.ru/problem?id={hw[type][x]})'
        if call.message.chat.id in Students:
            bot.send_message(call.message.chat.id,
                             link,
                             parse_mode='Markdown',
                             disable_web_page_preview=True)

            bot.send_message(-1001822573914,
                             f"#{Students[call.message.chat.id][3]}  "
                             f"[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={call.message.chat.id})\n"
                             f"–ü–æ–ª—É—á–∏–ª –¥–æ–º–∞—à–∫—É –†–µ—à—É –ï–ì–≠ ({type}): "
                             f"[{hw[type][x]}](inf-ege.sdamgia.ru/problem?id={hw[type][x]})",
                             parse_mode='Markdown', disable_web_page_preview=True)
        elif call.message.chat.id in Me:
            bot.send_message(call.message.chat.id, link,
                             parse_mode='Markdown',
                             disable_web_page_preview=True)
    # endregion call.data –¥–ª—è –†–µ—à—É –ï–ì–≠

    # region call.data –¥–ª—è –û—Ç–ø—Ä–∞–≤–∫–∏ Homework
    elif call.data == 'sendhomeworks':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
        btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
        markup.add(btn1)

        bot.send_message(call.message.chat.id,
                         '–ü—Ä–æ—Å—Ç–æ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –∫–æ–¥ –∏–∑ PyCharm.\n'
                         '–ë–æ—Ç —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç –µ–≥–æ –∑–∞ –≤–∞—Å ü§ñ\n\n'
                         '*–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ 4096 —Å–∏–º–≤–æ–ª–∞–º–∏!*',
                         parse_mode='Markdown', reply_markup=markup)

        file_name = f'homeworks/{Students[call.message.chat.id][3]}_homework.txt'

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)

                count = 0
                for STR in message.text:
                    for _ in STR:
                        count += 1

                if count <= 2 ** 12:
                    bot.send_message(call.message.chat.id,
                                     f"–ö–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ñ–∞–π–ª–µ: {count}\n"
                                     f"ü§ñ –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª.",
                                     reply_markup=markup)
                else:
                    bot.send_message(call.message.chat.id,
                                     "–î–ª–∏–Ω–∞ —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∞, —É–¥–∞–ª–∏—Ç–µ –ª–∏—à–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏!",
                                     reply_markup=markup)

                f = open(file_name, 'w')
                f.write(message.text)
                f = open(file_name, 'rb')
                bot.send_document(-1001822573914, f)
                bot.send_message(-1001822573914,
                                 f"#{Students[call.message.chat.id][3]} –æ—Ç–ø—Ä–∞–≤–∏–ª –¥–æ–º–∞—à–∫—É.",
                                 reply_markup=markup)
                bot.send_message(call.message.chat.id, "ü§ñ –§–∞–π–ª –¥–æ—Å—Ç–∞–≤–ª–µ–Ω, —Å–ø–∞—Å–∏–±–æ!")
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)


        bot.register_next_step_handler(call.message, message_input)

    # endregion call.data –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Homework

    # region call.data –¥–ª—è –û–ø–ª–∞—Ç—ã –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞
    elif call.data == 'send_price':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        markup.add(types.KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É'))

        pic_2 = open("photo/price.PNG", "rb")
        bot.send_photo(call.message.chat.id, pic_2)

        message_text_2 = f"*–ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞*\n\n*–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* \n" \
                         f"+7 (913) 468-35-34\n–°–ë–ï–† –∏–ª–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ, *–µ—Å—Ç—å –°–ë–ü*.\n\n" \
                         f"*–ò–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã:*\n–¢–∏–Ω—å–∫–æ—Ñ: 2200 7004 1864 5957\n" \
                         f"–°–ë–ï–†: 5469 4400 2244 1977\n" \
                         f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: `–ê–Ω–¥—Ä–∏–∞–Ω–æ–≤` `–ò–ª—å—è` `–ê–ª–µ–∫—Å–µ–µ–≤–∏—á`\n\n" \
                         f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–∫–∏–¥—ã–≤–∞—é –≤–∞–º —á–µ–∫, —Ä–∞–±–æ—Ç–∞—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ –ù–ü–î (`–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π`).\n\n" \
                         f"[–û—Å—Ç–∞–≤–∏—Ç—å —á–∞–µ–≤—ã–µ, –∫–æ–ø–ª—é –Ω–∞ –Ω–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä](https://clck.ru/33J6fo) üí´"

        bot.send_message(call.message.chat.id,
                         message_text_2,
                         parse_mode="Markdown",
                         disable_web_page_preview=True,
                         reply_markup=markup)
    # endregion call.data –¥–ª—è –û–ø–ª–∞—Ç—ã –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞

    # region call.data –≤—ã–≤–æ–¥–∏—Ç –ü—Ä–∞–π—Å –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ
    elif call.data == 'whats_price':
        pic_2 = open("photo/price.PNG", "rb")
        bot.send_photo(call.message.chat.id, pic_2)

        send_message2 = f"*–ü–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –ë–ï–°–ü–õ–ê–¢–ù–û*,\n–Ω–∞ –Ω–µ–º —è –æ–ø—Ä–µ–¥–µ–ª—é —É—Ä–æ–≤–µ–Ω—å " \
                        f"–∑–Ω–∞–Ω–∏–π, –∏ –º—ã –≤–º–µ—Å—Ç–µ –ø–æ–¥–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç!\n\n" \
                        f"–†–∞–±–æ—Ç–∞—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –ø–æ —á–µ–∫–∞–º —á–µ—Ä–µ–∑ –ù–ü–î (`–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π`).\n\n"

        markup_price = types.InlineKeyboardMarkup(row_width=1)
        markup_price.add(types.InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç', callback_data='send_price'))

        bot.send_message(call.message.chat.id, send_message2,
                         parse_mode="Markdown", reply_markup=markup_price)

    # endregion call.data –≤—ã–≤–æ–¥–∏—Ç –ü—Ä–∞–π—Å –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ

# üëâ üôè üëÜ üëá üòÖ üëã üôå ‚ò∫Ô∏è ‚ùó Ô∏è‚ÄºÔ∏è ‚úåÔ∏è üëå ‚úä üë®‚Äçüíª  ü§ñ üòâ
# ‚òùÔ∏è ‚ù§Ô∏è üí™ ‚úçÔ∏è üéØ  ‚õî  Ô∏è‚úÖ üìäüìàüßÆ   üó≥Ô∏è 0Ô∏è‚É£  1Ô∏è‚É£  2Ô∏è‚É£
# 3Ô∏è‚É£  4Ô∏è‚É£  5Ô∏è‚É£  6Ô∏è‚É£  7Ô∏è‚É£  8Ô∏è‚É£  9Ô∏è‚É£  üîü    üêç

'''# –ü—É–±–ª–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º –≤ –±–æ—Ç–µ
/getmyid - –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç –≤–∞—à id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram

/myprojects - —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
/download - —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è —É—Ä–æ–∫–æ–≤

/price - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–∞—Ö –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
/tasks - –Ω–∞–±–æ—Ä—ã –∑–∞–¥–∞—á –¥–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—à–µ–Ω–∏–π –ï–ì–≠ –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ
/links - –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —ç–∫–∑–∞–º–µ–Ω—É

/useful - —à–ø–∞—Ä–≥–∞–ª–∫–∏ –æ—Ç –Ø–Ω–¥–µ–∫—Å –ø—Ä–∞–∫—Ç–∏–∫—É–º–∞ –ø–æ Python
/homework - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –º–æ–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤

/getorder - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∂–µ–ª–∞—é—â–∏—Ö –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –±–æ—Ç–∞.

/today - –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ –¥–Ω—è–º –∑–∞–Ω—è—Ç–∏–π
/reviews - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–∑—ã–≤ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ 

/mylessons - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π –≤ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–µ
/gdz - —Ä–µ—à–µ–±–Ω–∏–∫ —Å –Ω–∞–±–æ—Ä–æ–º —Ä–µ—à–µ–Ω–Ω—ã—Ö Python –∑–∞–¥–∞—á –ï–ì–≠ 
'''

########## –ü—É–±–ª–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ##########

# region –ö–æ–º–∞–Ω–¥—ã: start, help, getmyid
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton('–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç ü§ñ'))

    pic_1 = open("photo/hello.jpeg", 'rb')
    bot.send_photo(message.chat.id, pic_1)

    markup1 = types.InlineKeyboardMarkup(row_width=1)
    markup1.add(types.InlineKeyboardButton("üßÆ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–π—Å –Ω–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ã", callback_data='whats_price'))

    message_text1 = f'üëã –î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, *{message.from_user.first_name}*!\n\n' \
                    f'–ú–µ–Ω—è –∑–æ–≤—É—Ç *–ê–Ω–¥—Ä–∏–∞–Ω–æ–≤ –ò–ª—å—è*. \n–Ø –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç ‚Äì `Python` `developer`.\n' \
                    f'–ê —Ç–∞–∫–∂–µ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠ –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ –∏ ' \
                    f'–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é –Ω–∞ —è–∑—ã–∫–µ `Python` üêç\n\n' \
                    f'*–ú–æ–∏ —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ –ê–≤–∏—Ç–æ*\n*5,0* ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è\n–ù–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ 68 –æ—Ü–µ–Ω–æ–∫\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëâ /reviews\n\n' \
                    f'*–†–∞–¥ –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å* —É —Å–µ–±—è –Ω–∞ `"—Å—Ç—Ä–∞–Ω–∏—á–∫–µ"`, –∑–¥–µ—Å—å —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å ' \
                    f'—Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ –∏, –Ω–∞–¥–µ—é—Å—å, –Ω–∞–º —É–¥–∞—Å—Ç—Å—è –Ω–∞–π—Ç–∏ –æ–±—â–∏–π —è–∑—ã–∫ üôè \n\n'
    bot.send_message(message.chat.id, message_text1, parse_mode='Markdown', reply_markup=markup1)




    message_text2 = f'–ï—Å–ª–∏ –≤—ã –º–æ–π —Å—Ç—É–¥–µ–Ω—Ç, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π üëâ /getmyid, —á—Ç–æ–±—ã –±–æ—Ç ' \
                    f'ü§ñ –ø–æ–∫–∞–∑–∞–ª –≤–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û–Ω –Ω–µ–æ–±—Ö–æ–¥–∏–º, —á—Ç–æ–±—ã ' \
                    f'[—è —Å–º–æ–≥ –¥–æ–±–∞–≤–∏—Ç—å](t.me/@ilandroxy) –í–∞—Å –≤ —Å–∏—Å—Ç–µ–º—É!\n\n' \
                    f'–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π üëâ /download, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ ' \
                    f'–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –∑–∞–Ω—è—Ç–∏–π –ø—Ä–æ–≥—Ä–∞–º–º!\n\n' \
                    f'–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π üëâ /getorder, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã ' \
                    f'—Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –í–∞—à–µ–≥–æ `Telegram` `–±–æ—Ç–∞` –ø–æ–¥ –∑–∞–∫–∞–∑.\n\n' \
                    f'–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π üëâ /help, ' \
                    f'—á—Ç–æ–±—ã –ø–æ–¥—Ä–æ–±–Ω–µ–µ —É–∑–Ω–∞—Ç—å –æ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.\n' \
                    f'–ò–ª–∏ –≤—ã–∑–æ–≤–∏—Ç–µ *–ú–µ–Ω—é –∫–æ–º–∞–Ω–¥* ‚Äì –±–æ–ª—å—à–∞—è —Å–∏–Ω—è—è –∫–Ω–æ–ø–∫–∞ –Ω–∞ —Å–µ–º—å —á–∞—Å–æ–≤.'
    bot.send_message(message.chat.id, message_text2, parse_mode='Markdown', reply_markup=markup)

    pic_2 = open("photo/menu.jpg", 'rb')
    bot.send_photo(message.chat.id, pic_2)

    order_message = f'‚úÖ #–ù–æ–≤—ã–π–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\nName: {message.from_user.first_name}\nUsername: @{message.from_user.username}\n' \
                    f'User ID: {message.chat.id}\n[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={message.chat.id})'
    bot.send_message(1891281816, order_message, parse_mode='Markdown', disable_web_page_preview=True)


# HELP
@bot.message_handler(commands=['help'])
def help(message):
    send_message = "*You can control me by sending these commands:*\n\n*Commands public*\n" \
                   "/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º –≤ –±–æ—Ç–µ\n" \
                   "/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é\n" \
                   '/myprojects - —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤\n' \
                   '/download - —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è —É—Ä–æ–∫–æ–≤\n' \
                   '/tasks - –Ω–∞–±–æ—Ä –∑–∞–¥–∞—á –¥–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—à–µ–Ω–∏–π –ï–ì–≠ –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ\n' \
                   '/price - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–∞—Ö –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã\n' \
                   '/links - –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —ç–∫–∑–∞–º–µ–Ω—É\n' \
                   '/homework - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –º–æ–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤\n' \
                   '/getmyid - –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç –≤–∞—à id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram\n' \
                   '/useful - –ø–æ–ª—É—á–∏—Ç–µ —à–ø–∞—Ä–≥–∞–ª–∫–∏ –æ—Ç `–Ø–Ω–¥–µ–∫—Å –ø—Ä–∞–∫—Ç–∏–∫—É–º–∞` –ø–æ Python\n' \
                   '/getorder - –æ–±—Å—É–¥–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –í–∞—à–µ–≥–æ —á–∞—Ç –±–æ—Ç–∞ –ø–æ–¥ –∑–∞–∫–∞–∑\n' \
                   '/today - –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤\n' \
                   '/mylessons - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π –≤ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–µ\n' \
                   '/reviews - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–∑—ã–≤ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏\n' \
                   '/gdz - —Ä–µ—à–µ–±–Ω–∏–∫ —Å –Ω–∞–±–æ—Ä–æ–º —Ä–µ—à–µ–Ω–Ω—ã—Ö Python –∑–∞–¥–∞—á –ï–ì–≠\n'
    bot.send_message(message.chat.id, send_message, parse_mode="Markdown")


# GETMYID
@bot.message_handler(commands=['getmyid'])
def getmyid(message):
    user = str(message.chat.id)
    send_message = "*–í–∞—à user ID: *" + user
    bot.send_message(message.chat.id, send_message, parse_mode="Markdown")
# endregion –ö–æ–º–∞–Ω–¥—ã: start, help, getmyid

# region –ö–æ–º–∞–Ω–¥—ã: myprojects, download
@bot.message_handler(commands=['myprojects'])
def myprojects(message):
    send_message = "–ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—á–∏—Å–ª—è—é, —á–µ–º —è –∑–∞–Ω–∏–º–∞—é—Å—å —Å–µ–≥–æ–¥–Ω—è!\n\n" \
                   "*1. –ö–∞–Ω–∞–ª* [itpy | –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞–ï–ì–≠](t.me/pro100_easy_ege)\n" \
                   "‚úçÔ∏è –≠—Ç–æ –∫–∞–Ω–∞–ª –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —è —Ä–∞–∑–±–∏—Ä–∞—é –∑–∞–¥–∞–Ω–∏—è —Å —ç–∫–∑–∞–º–µ–Ω–∞, –¥–∞—é –ø–æ–ª–µ–∑–Ω—ã–µ –∑–∞–¥–∞—á–∫–∏ –∏ " \
                   "–ø–æ–∫–∞–∑—ã–≤–∞—é –±—É–¥—É—â–∏–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º —Å—Ñ–µ—Ä—É IT, –æ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∏ –≤—Ä—è–¥ –ª–∏ —Å–ª—ã—à–∞–ª–∏ –≤ —à–∫–æ–ª–µ!\n\n" \
                   "*2. –ß–∞—Ç –±–æ—Ç* ü§ñ[MotherBot](t.me/JustDoItMotherBot)  \n–≠—Ç–æ Telegram –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç " \
                   "–Ω–∞—á–∏–Ω–∞—é—â–∏–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ [PyTelegramBotAPI](https://habr.com/ru/post/580408/), –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π " \
                   "–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API Telegram ‚Äì —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç –±–æ—Ç–æ–≤ –≤ –º–µc—Å–µ–Ω–¥–∂–µ—Ä–µ.\n\n" \
                   "*3. –ö—É—Ä—Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠ –Ω–∞* [Stepik](https://stepik.org/course/122969)\n" \
                   "–ù–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –∫—É—Ä—Å –µ—â–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–æ —É–∂–µ –º–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å, " \
                   "—á—Ç–æ –æ–Ω –∏–∑ —Å–µ–±—è –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ [–æ–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞](https://stepik.org/lesson/770711/step/1) " \
                   "–∏ —á–µ—Ä–Ω–æ–≤–æ–º—É [–ø—Ä–∏–º–µ—Ä—É —É—Ä–æ–∫–∞](https://stepik.org/lesson/770602/step/1).\n\n"

    bot.send_message(message.chat.id, send_message, parse_mode="Markdown", disable_web_page_preview=True)


@bot.message_handler(commands=['download'])
def download(message):
    message_text = f"*–ü–µ—Ä–µ—á–µ–Ω—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º:*\n\n" \
                   f"1. Python [—Å–∫–∞—á–∞—Ç—å](www.python.org/downloads/)\n\n" \
                   f"2. Telegram Desktop [—Å–∫–∞—á–∞—Ç—å](telegram.org/)\n\n" \
                   f"3. Discord [—Å–∫–∞—á–∞—Ç—å](discord.com/download)\n\n" \
                   f"4. Pycharm [—Å–∫–∞—á–∞—Ç—å](www.jetbrains.com/ru-ru/pycharm/download/)\n\n" \
                   f"–í —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å " \
                   f"[–≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π](https://clck.ru/33J6UW) –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ PyCharm" \


    bot.send_message(message.chat.id, message_text, parse_mode="Markdown", disable_web_page_preview=True)
# endregion –ö–æ–º–∞–Ω–¥—ã: myprojects, download

# region –ö–æ–º–∞–Ω–¥—ã: price, tasks, links

@bot.message_handler(commands=['price'])
def price(message):
    message_text_1 = f"*–ü–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –ë–ï–°–ü–õ–ê–¢–ù–û*,\n" \
                     f"–Ω–∞ –Ω–µ–º —è –æ–ø—Ä–µ–¥–µ–ª—é —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π, –∏ –º—ã –≤–º–µ—Å—Ç–µ –ø–æ–¥–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç!"
    bot.send_message(message.chat.id,
                     message_text_1,
                     parse_mode="Markdown",
                     disable_web_page_preview=True)

    pic_2 = open("photo/price.PNG", "rb")
    bot.send_photo(message.chat.id, pic_2)

    message_text_2 = f"*–ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞*\n\n*–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* \n" \
                     f"+7 (913) 468-35-34\n–°–ë–ï–† –∏–ª–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ, *–µ—Å—Ç—å –°–ë–ü*.\n\n" \
                     f"*–ò–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã:*\n–¢–∏–Ω—å–∫–æ—Ñ: 2200 7004 1864 5957\n" \
                     f"–°–ë–ï–†: 5469 4400 2244 1977\n" \
                     f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: `–ê–Ω–¥—Ä–∏–∞–Ω–æ–≤` `–ò–ª—å—è` `–ê–ª–µ–∫—Å–µ–µ–≤–∏—á`\n\n" \
                     f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–∫–∏–¥—ã–≤–∞—é –≤–∞–º —á–µ–∫, —Ä–∞–±–æ—Ç–∞—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ –ù–ü–î (`–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π`).\n\n" \
                     f"[–û—Å—Ç–∞–≤–∏—Ç—å —á–∞–µ–≤—ã–µ, –∫–æ–ø–ª—é –Ω–∞ –Ω–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä](https://clck.ru/33J6fo) üí´"
    bot.send_message(message.chat.id, message_text_2, parse_mode="Markdown", disable_web_page_preview=True)


@bot.message_handler(commands=['tasks'])
def tasks(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å —Ä–µ—à–µ–±–Ω–∏–∫ üìö", callback_data="reshebnik"))

    bot.send_message(message.chat.id,
                     "*–ù–∞–±–æ—Ä—ã —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–¥–∞—á —Å* " \
                     "[–†–µ—à—É –ï–ì–≠](https://inf-ege.sdamgia.ru/?redir=1):\n`new 2022-2023 –≥–æ–¥–∞`\n\n" \
                     "[1.](https://clck.ru/33J69K)   " \
                     "[2.](https://clck.ru/33J69E)   " \
                     "[3.](https://clck.ru/33J695)   " \
                     "[4.](https://clck.ru/33J68r)   " \
                     "[5.](https://clck.ru/33J5yi)   " \
                     "[6.](https://clck.ru/33J68Q)   " \
                     "[7.](https://clck.ru/33J68C)    " \
                     "[8.](https://clck.ru/33J67y)    " \
                     "[9.](https://clck.ru/33J67e)    " \
                     "[10.](https://clck.ru/33J66D)\n\n" \
                     "[11.](https://clck.ru/33J666)   " \
                     "[12.](https://clck.ru/33J65o)   " \
                     "[13.](https://clck.ru/33J65W)   " \
                     "[14.](https://clck.ru/33J658)   " \
                     "[15.](https://clck.ru/33J64M)   " \
                     "[16.](https://clck.ru/33J642)   " \
                     "[17.](https://clck.ru/33J63c)   " \
                     "[18.](https://clck.ru/33J63R)\n\n" \
                     "[19-21.](https://clck.ru/33J63E)   " \
                     "[22.](https://clck.ru/33J634)   " \
                     "[23.](https://clck.ru/33J62N)   " \
                     "[24.](https://clck.ru/33J626)   " \
                     "[25.](https://clck.ru/33J5zh)   " \
                     "[26.](https://clck.ru/33J5zQ)   " \
                     "[27.](https://clck.ru/33J5z5)\n\n" \
                     "*–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ*, —á—Ç–æ –Ω–∞–±–æ—Ä—ã –∑–∞–¥–∞—á —Ä–∞–∑–Ω–æ–≥–æ –≥–æ–¥–∞ –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è!",
                     reply_markup=markup,
                     parse_mode="Markdown",
                     disable_web_page_preview=True)


    bot.send_message(message.chat.id,
                     "*–ù–∞–±–æ—Ä—ã —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–¥–∞—á —Å* " \
                     "[–†–µ—à—É –ï–ì–≠](https://inf-ege.sdamgia.ru/?redir=1):\n" \
                     "`old 2021-2022 –≥–æ–¥–∞`\n\n" \
                     "[1.](https://clck.ru/ebsmq)   " \
                     "[2.](https://clck.ru/ebsnV)   " \
                     "[3.](https://clck.ru/ebsnt)   " \
                     "[4.](https://clck.ru/ebsoN)   " \
                     "[5.](https://clck.ru/ebsp8)   " \
                     "[6.](https://clck.ru/33J5yi)   " \
                     "[7.](https://clck.ru/ebspX)    " \
                     "[8.](https://clck.ru/ebsq2)    " \
                     "[9.](https://clck.ru/ebsqH)   " \
                     "[10.](https://clck.ru/ebsqc)\n\n" \
                     "[11.](https://clck.ru/ebsrf)   " \
                     "[12.](https://clck.ru/ebsrr)   " \
                     "[13.](https://clck.ru/ebssH)   " \
                     "[14.](https://clck.ru/ebssi)   " \
                     "[15.](https://clck.ru/ebst4)   " \
                     "[16.](https://clck.ru/ebstT)   " \
                     "[17.](https://clck.ru/ebsuA)   " \
                     "[18.](https://clck.ru/ebsuf)\n\n" \
                     "[19-21.](https://clck.ru/ebsvw)   " \
                     "[22.](https://clck.ru/33J5xy)   " \
                     "[23.](https://clck.ru/ebsxo)   " \
                     "[24.](https://clck.ru/ebsyM)   " \
                     "[25.](https://clck.ru/ebszu)   " \
                     "[26.](https://clck.ru/ebt22)   " \
                     "[27.](https://clck.ru/ebt3a)\n\n" \
                     "–ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ " \
                     "–∑–∞–¥–∞—á–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º " \
                     "[–ö–ï–ì–≠](https://kompege.ru/task)",
                     parse_mode="Markdown",
                     disable_web_page_preview=True)

    bot.send_message(message.chat.id,
                     "–ß–∞—Å—Ç–∏—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã –∑–∞–¥–∞—á –∏ –∏—Ö —Ä–∞–∑–±–æ—Ä—ã –∏–∑ " \
                     "[–º–æ–µ–≥–æ –∫—É—Ä—Å–∞](https://stepik.org/course/122969) –Ω–∞ *Stepik*:\n\n"
                     "[1.]()   [2.]()   [3.]()   " \
                     "[4.]()   [5.]()   [6.](https://stepik.org/lesson/770602/step/1)   [7.]()    " \
                     "[8.]()    [9.]()    [10.]()\n\n[11.]()   " \
                     "[12.]()   [13.]()   [14.]()   [15.]()   " \
                     "[16.]()   [17.]()   [18.]()\n\n[19-21.]()   " \
                     "[22.](https://stepik.org/lesson/770602/step/7)   [23.]()   [24.]()   [25.]()   " \
                     "[26.]()   [27.]()\n\n\n" \
                     "–ù–∞ –º–æ–µ–º *YouTube –∫–∞–Ω–∞–ª–µ* –∏–Ω–æ–≥–¥–∞ –≤—ã–∫–ª–∞–¥—ã–≤–∞—é –∑–∞–ø–∏—Å–∏ —É—Ä–æ–∫–æ–≤, " \
                     "–±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω–æ ‚Äì [–ø–æ–¥–ø–∏—à–∏—Å—å!](https://m.youtube.com/channel/UCcORhBL494aSLcyIODjOG0A)",
                     parse_mode="Markdown",
                     disable_web_page_preview=True)


@bot.message_handler(commands=['links'])
def links(message):
    message_text = "*–ü–æ—Å—Ç–∞—Ä–∞–ª—Å—è —Å–æ–±—Ä–∞—Ç—å –¥–ª—è –≤–∞—Å –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏:*\n\n" \
                   "*1.* [–°—Å—ã–ª–∫–∞](https://stepik.org/course/58852) " \
                   "–Ω–∞ –∫—Ä—É—Ç–æ–π –∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å –ø–æ –±–∞–∑–æ–≤–æ–π —Ç–µ–æ—Ä–∏–∏ —è–∑—ã–∫–∞ Python;\n\n" \
                   "*2.* –û—Ç–ª–∏—á–Ω—ã–π, –Ω–æ —Ä–∞—Å—Ç—è–Ω—É—Ç—ã–π [–∫—É—Ä—Å –≤–∏–¥–µ–æ–ª–µ–∫—Ü–∏–π](https://clck.ru/33J6kr) " \
                   "–ú–§–¢–ò –æ—Ç –¢–∏–º–æ—Ñ–µ—è –•–∏—Ä—å—è–Ω–æ–≤–∞;\n\n" \
                   "*3.* –í–æ–∑–º–æ–∂–Ω–æ –∫–æ–º—É-—Ç–æ –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–µ–Ω —ç–∫—Å–ø—Ä–µ—Å—Å –æ–±–∑–æ—Ä –ø–æ—á—Ç–∏ –≤—Å–µ–π " \
                   "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π —Ç–µ–æ—Ä–∏–∏ –Ω–∞ [YouTube](https://clck.ru/33J6mF);\n\n" \
                   "*4.* –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–±–æ—Ä—ã –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏–π –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ " \
                   "[YouTube](https://clck.ru/32e8aE) –∫–∞–Ω–∞–ª–µ –ò–≤–∞–Ω–∞, –Ω–µ –≤—Å–µ –ø–æ–Ω—è—Ç–Ω–æ —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞, " \
                   "–Ω–æ —ç—Ç–æ –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö. –ê –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–∞–∂–µ –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö.\n\n" \
                   "*5.* –í—Å–µ–º –∫—Ç–æ –Ω–∞–º–µ—Ä–µ–≤–∞–µ—Ç—Å—è —Å–¥–∞–≤–∞—Ç—å –ï–ì–≠ –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é " \
                   "[–ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç—å—é](https://habr.com/ru/post/573580/) –ø—Ä–æ –æ–ø—ã—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞, " \
                   "—Å–¥–∞—é—â–µ–≥–æ –ø–µ—Ä–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π —ç–∫–∑–∞–º–µ–Ω!\n\n" \
                   "\n*–î–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–æ—Ä–∏–∏ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /tasks *"
    bot.send_message(message.chat.id, message_text, parse_mode="Markdown", disable_web_page_preview=True)
# endregion –ö–æ–º–∞–Ω–¥—ã: price, tasks, links

# region –ö–æ–º–∞–Ω–¥—ã: useful, homeworks
@bot.message_handler(commands=['useful'])
def useful(message):
    if message.chat.id in Students or message.chat.id in Me:
        message_text = '–°–æ —Å–≤–æ–∏–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ —è —Ä–µ—à–∏–ª –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —à–ø–∞—Ä–≥–∞–ª–∫–∞–º–∏ –æ—Ç *–Ø–Ω–¥–µ–∫—Å –ü—Ä–∞–∫—Ç–∏–∫—É–º–∞*, ' \
                       '–≤ –∫–æ—Ç–æ—Ä–æ–º —Å–µ–π—á–∞—Å –ø—Ä–æ—Ö–æ–∂—É –æ–±—É—á–µ–Ω–∏–µ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ `Python` `developer`.\n\n' \
                       '–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, –Ω–æ *—Ö–æ—á—É –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –¥–ª—è ' \
                       '—É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–∏ —ç–∫–∑–∞–º–µ–Ω–∞ –ï–ì–≠ –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ —Ö–≤–∞—Ç–∏—Ç –ø–µ—Ä–≤—ã—Ö 3-—Ö —Ñ–∞–π–ª–æ–≤*:'
        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(types.InlineKeyboardButton("1Ô∏è‚É£ –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å Python: –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö, –°–ø–∏—Å–∫–∏.", callback_data="py01"),
                   types.InlineKeyboardButton("2Ô∏è‚É£ –¶–∏–∫–ª—ã, –í–µ—Ç–≤–ª–µ–Ω–∏—è, –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è.", callback_data="py02"),
                   types.InlineKeyboardButton("3Ô∏è‚É£ –§—É–Ω–∫—Ü–∏–∏: –í—ã–∑–æ–≤, –ê—Ä–≥—É–º–µ–Ω—Ç—ã, –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏–π.", callback_data="py03"),
                   types.InlineKeyboardButton("4Ô∏è‚É£ –ö–æ–ª–ª–µ–∫—Ü–∏–∏: –°–ª–æ–≤–∞—Ä–∏ –∏ –ú–Ω–æ–∂–µ—Å—Ç–≤–∞.      ", callback_data="py04"),
                   types.InlineKeyboardButton("5Ô∏è‚É£ –°—Ç—Ä–æ–∫–∏: –ú–µ—Ç–æ–¥ split() –∏ f-string.    ", callback_data="py05"),
                   types.InlineKeyboardButton("6Ô∏è‚É£ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏: datetime, math, random.. ", callback_data="py06"),
                   types.InlineKeyboardButton("7Ô∏è‚É£ –°–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ requests.", callback_data="py07"))
        bot.send_message(message.chat.id, message_text, parse_mode='Markdown', reply_markup=markup)

    else:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –º–æ–∏–º —É—á–µ–Ω–∏–∫–∞–º, [–∑–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É—Ä–æ–∫](https://clck.ru/33J5xF)", parse_mode="Markdown", disable_web_page_preview=True)


@bot.message_handler(commands=['homework'])
def homework(message):
    if message.chat.id in Me or message.chat.id in Students:
        markup2 = types.InlineKeyboardMarkup(row_width=1)
        markup2.add(types.InlineKeyboardButton("üêç –ó–∞–¥–∞—á–∏ –Ω–∞ —Ç–µ–æ—Ä–∏—é Python", callback_data="th"),
                    types.InlineKeyboardButton("ü™§ –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ —Å –†–µ—à—É –ï–ì–≠", callback_data="hw"),
                    types.InlineKeyboardButton("üß± –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ —Å –ö–ï–ì–≠", callback_data="kg"),
                    types.InlineKeyboardButton("üó≥Ô∏è –°–¥–∞—Ç—å –¥–æ–º–∞—à–∫—É", callback_data="sendhomeworks"))
        sti = open('photo/hw.tgs', 'rb')
        bot.send_sticker(message.chat.id, sti, reply_markup=markup2)

    else:
        bot.send_message(message.chat.id,
                         "–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ "
                         "–º–æ–∏–º —É—á–µ–Ω–∏–∫–∞–º, [–∑–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É—Ä–æ–∫](https://clck.ru/33J5xF)",
                         parse_mode="Markdown")
# endregion –ö–æ–º–∞–Ω–¥—ã: useful, homeworks

# region –ö–æ–º–∞–Ω–¥—ã: getorder
@bot.message_handler(commands=['getorder'])
def getorder(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
    markup.add(btn1)
    bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∫–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –¥–æ–ª–∂–µ–Ω –æ–±–ª–∞–¥–∞—Ç—å –í–∞—à –±–æ—Ç, "
                                      "–∞ [—è —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏](https://t.me/ilandroxy) –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!",
                                      parse_mode='Markdown', disable_web_page_preview=True, reply_markup=markup)

    @bot.message_handler(content_types=['text'])
    def message_input(message):
        text_message = message.text
        if text_message != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
            btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
            btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
            btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
            btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
            markup.add(btn1, btn2, btn3, btn4, btn5)

            bot.send_message(message.chat.id, f" ü§ñ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.", parse_mode='Markdown', reply_markup=markup)

            bot.send_message(1891281816, f'‚úÖ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑\nUser: {message.from_user.first_name}\n'
                                         f'Username: {message.from_user.username}\n'
                                         f'[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={message.chat.id})\n\n'
                                         f'Message:\n{text_message}', parse_mode='Markdown', disable_web_page_preview=True)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
            btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
            btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
            btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
            btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
            markup.add(btn1, btn2, btn3, btn4, btn5)
            bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

    bot.register_next_step_handler(message, message_input)
# endregion –ö–æ–º–∞–Ω–¥—ã: getorder

# region –ö–æ–º–∞–Ω–¥–∞: today
@bot.message_handler(commands=['today'])
def today(message):
    if message.chat.id == 1891281816:
        send_pic = open('photo/today.jpg', 'rb')
        bot.send_photo(message.chat.id, send_pic)

        day = time.strftime('%A')

        if day == 'Monday':
            temp = f'–°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: *'
            for key in MondayStudents:
                temp += f'[{MondayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {MondayStudents[key][1]} *'

            M = [i for i in temp.split('*')]
            message_text = '\n'.join(M)
            bot.send_message(message.chat.id, message_text, parse_mode='Markdown')

        if day == 'Tuesday':
            temp = f'–°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫: *'
            for key in TuesdayStudents:
                temp += f'[{TuesdayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {TuesdayStudents[key][1]} *'

            M = [i for i in temp.split('*')]
            message_text = '\n'.join(M)
            bot.send_message(message.chat.id, message_text, parse_mode='Markdown')

        if day == 'Wednesday':
            bot.send_message(message.chat.id, "–ê —Å–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π! \n–ò–¥–∏ –æ—Ç–¥—ã—Ö–∞–π  üôå ‚ò∫Ô∏è ")

        if day == 'Thursday':
            temp = f'–°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥: *'
            for key in ThursdayStudents:
                temp += f'[{ThursdayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {ThursdayStudents[key][1]} *'

            M = [i for i in temp.split('*')]
            message_text = '\n'.join(M)
            bot.send_message(message.chat.id, message_text, parse_mode='Markdown')

        if day == 'Friday':
            temp = f'–°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É: *'
            for key in FridayStudents:
                temp += f'[{FridayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {FridayStudents[key][1]} *'

            M = [i for i in temp.split('*')]
            message_text = '\n'.join(M)
            bot.send_message(message.chat.id, message_text, parse_mode='Markdown')

        if day == 'Saturday':
            temp = f'–°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ –Ω–∞ —Å—É–±–±–æ—Ç—É: *'
            for key in SaturdayStudents:
                temp += f'[{SaturdayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {SaturdayStudents[key][1]} *'

            M = [i for i in temp.split('*')]
            message_text = '\n'.join(M)
            bot.send_message(message.chat.id, message_text, parse_mode='Markdown')

        if day == 'Sunday':
            bot.send_message(message.chat.id, "–ê —Å–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π! \n–ò–¥–∏ –æ—Ç–¥—ã—Ö–∞–π  üôå ‚ò∫Ô∏è ")


    elif message.chat.id in Students:
        send_pic = open('photo/today.jpg', 'rb')
        bot.send_photo(message.chat.id, send_pic)
        bot.send_message(message.chat.id, "–ü–æ–≥–ª—è–¥–∏–º –Ω–∞ –í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ü§ñ ", parse_mode='Markdown')

        for key in MondayStudents:
            if message.chat.id == key:
                bot.send_message(message.chat.id,
                                 f'–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, '
                                 f'–≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {MondayStudents[key][1]} (–ø–æ –ù—Å–∫)',
                                 parse_mode='Markdown')

        for key in TuesdayStudents:
            if message.chat.id == key:
                bot.send_message(message.chat.id,
                                 f'–í—Ç–æ—Ä–Ω–∏–∫, '
                                 f'–≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {TuesdayStudents[key][1]} (–ø–æ –ù—Å–∫)',
                                 parse_mode='Markdown')

        for key in ThursdayStudents:
            if message.chat.id == key:
                bot.send_message(message.chat.id,
                                 f'–ß–µ—Ç–≤–µ—Ä–≥, '
                                 f'–≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {ThursdayStudents[key][1]} (–ø–æ –ù—Å–∫)',
                                 parse_mode='Markdown')

        for key in FridayStudents:
            if message.chat.id == key:
                bot.send_message(message.chat.id,
                                 f'–ü—è—Ç–Ω–∏—Ü–∞, '
                                 f'–≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {FridayStudents[key][1]} (–ø–æ –ù—Å–∫)',
                                 parse_mode='Markdown')

        for key in SaturdayStudents:
            if message.chat.id == key:
                bot.send_message(message.chat.id,
                                 f'–°—É–±–±–æ—Ç–∞, '
                                 f'–≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {SaturdayStudents[key][1]} (–ø–æ –ù—Å–∫)',
                                 parse_mode='Markdown')

    else:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
# endregion –ö–æ–º–∞–Ω–¥–∞: today

# region –ö–æ–º–∞–Ω–¥—ã: reviews, gdz
@bot.message_handler(commands=['reviews'])
def reviews(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ—Ç–∑—ã–≤—ã –Ω–∞ –ê–≤–∏—Ç–æ", url="https://www.avito.ru/user/590293c00d3ab79d83e929a6731df164/profile?src=sharing"))

    M = ['reviews/re1.png', 'reviews/re2.png', 'reviews/re3.png', 'reviews/re4.png', 'reviews/re5.png', 'reviews/re6.png']
    pic_reviews = open(random.choice(M), 'rb')
    bot.send_photo(message.chat.id, pic_reviews)
    bot.send_message(message.chat.id, '–ï—â–µ –±–æ–ª—å—à–µ –æ—Ç–∑—ã–≤–æ–≤ üëâ /reviews', parse_mode='Markdown', reply_markup=markup)

@bot.message_handler(commands=['gdz'])
def gdz(message):
    if message.chat.id in Students or message.chat.id in Me:
        # 0Ô∏è‚É£ 1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£ 4Ô∏è‚É£ 5Ô∏è‚É£ 6Ô∏è‚É£ 7Ô∏è‚É£ 8Ô∏è‚É£ 9Ô∏è‚É£ üîü
        message_text = '–ù–∞–±–æ—Ä—ã –∑–∞–¥–∞—á–µ–∫ –Ω–∞ –æ—Ç—Ä–∞–±–æ—Ç–∫—É —Ç–µ–æ—Ä–∏–∏ Python üëá üòÖ'
        markup = types.InlineKeyboardMarkup(row_width=3)
        markup.add(types.InlineKeyboardButton("2", callback_data="gdz2"),
                   types.InlineKeyboardButton("5", callback_data="gdz5"),
                   types.InlineKeyboardButton("6", callback_data="gdz6"),
                   types.InlineKeyboardButton("8", callback_data="gdz8"),
                   types.InlineKeyboardButton("12", callback_data="gdz12"),
                   types.InlineKeyboardButton("14", callback_data="gdz14"),
                   types.InlineKeyboardButton("15", callback_data="gdz15"),
                   types.InlineKeyboardButton("16", callback_data="gdz16"),
                   types.InlineKeyboardButton("17", callback_data="gdz17"),
                   types.InlineKeyboardButton("22", callback_data="gdz22"),
                   types.InlineKeyboardButton("23", callback_data="gdz23"),
                   types.InlineKeyboardButton("24", callback_data="igdz24"),
                   types.InlineKeyboardButton("25", callback_data="gdz25"),
                   types.InlineKeyboardButton("26", callback_data="gdz26"),
                   types.InlineKeyboardButton("27", callback_data="gdz27"))
        bot.send_message(message.chat.id, message_text, parse_mode="Markdown", reply_markup=markup)
# endregion –ö–æ–º–∞–Ω–¥—ã: reviews,  gdz

########## –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ##########

# region –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
def analytics(func: callable):
    total_users = 0
    users = [['user_id', 'username']]
    username = ""


    def anlytics_wrapper(message):
        nonlocal users, username

        # –°—á–∏—Ç–∞–µ–º –∫–æ–ª-–≤–æ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–ª–∞–≤–∏—à—É-----------------------------------
        sql = sqlite3.connect('analytics.db')
        cursor = sql.cursor()

        cursor.execute("""CREATE TABLE IF NOT EXISTS active(
                                id INTEGER,
                                UserName TEXT
                            )""")
        sql.commit()

        people_id = message.chat.id
        cursor.execute(f"SELECT id FROM active WHERE id = {people_id}")
        data = cursor.fetchone()

        if data is None:
            user_id = message.chat.id
            username = message.from_user.username

            cursor.execute(f"INSERT INTO active VALUES(?, ?);", (user_id, username))
            sql.commit()
        else:
            cursor.execute(f"DELETE FROM active WHERE id = {people_id}")
            user_id = message.chat.id
            username = message.from_user.username
            users.append([user_id, username])



            cursor.execute(f"INSERT INTO active VALUES(?, ?);", (user_id, username))
            sql.commit()

            cursor.close()

        return func(message)
    return anlytics_wrapper
# endregion –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö

# region –ö–æ–º–∞–Ω–¥–∞:  mylessons
@bot.message_handler(commands=['mylessons'])
def mylessons(message):
    if message.chat.id == 1891281816:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
        btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
        markup.add(btn1)

        day = '–í—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã: *'
        for x in sorted(S):
            day += f'[{x[0][3]}](tg://user?id={x[-1]}): {x[-1]} *'
        M_day = [i for i in day.split('*')]
        message_text_day = '\n'.join(M_day)
        bot.send_message(message.chat.id, message_text_day, parse_mode='Markdown', reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            text_message = message.text

            if text_message != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                user_id = int(text_message)
                sql = sqlite3.connect('analytics.db')
                cursor = sql.cursor()

                cursor.execute("""CREATE TABLE IF NOT EXISTS tickets(
                                                               id INTEGER,
                                                               name TEXT,
                                                               count INTEGER,
                                                               mess TEXT
                                                           )""")
                sql.commit()

                cursor.execute(f"SELECT * FROM tickets WHERE id = {user_id}")
                records = cursor.fetchone()

                if records is None:
                    bot.send_message(message.chat.id,
                                     '–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ db tickets..–ê–±–æ–Ω–µ–º–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –ø—Ä–æ–¥–ª–µ–Ω!')
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                    btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                    btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                    btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                    btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                    btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                    markup.add(btn1, btn2, btn3, btn4, btn5)

                    bot.send_message(message.chat.id,
                                     f'ü§ñ –î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, –ò–ª—å—è!\n'
                                     f'–Ø –≤—Å–µ –ø–æ—Å—á–∏—Ç–∞–ª, –≤–æ—Ç –∑–∞–ø–∏—Å–∏ –ø–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—É —Å—Ç—É–¥–µ–Ω—Ç–∞ '
                                     f'#{Students[user_id][3]} üìäüìàüßÆ\n\n{records[3]}',
                                     parse_mode='Markdown')
                    bot.send_message(message.chat.id,
                                     f'üë®‚Äçüíª –ö–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–Ω—è—Ç–∏–π –≤ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–µ: *{Students[user_id][4] - records[2]} —à—Ç*',
                                     parse_mode='Markdown', reply_markup=markup)
                cursor.close()
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

        bot.register_next_step_handler(message, message_input)
    elif message.chat.id in Students:
        user_id = message.chat.id
        sql = sqlite3.connect('analytics.db')
        cursor = sql.cursor()

        cursor.execute(f"SELECT * FROM tickets WHERE id = {user_id}")
        records = cursor.fetchone()

        if records is None:
            bot.send_message(message.chat.id, '–ê–±–æ–Ω–µ–º–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –ø—Ä–æ–¥–ª–µ–Ω, –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ @ilandroxy')
        else:
            bot.send_message(message.chat.id,
                             f'ü§ñ –î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, #{Students[user_id][3]}!\n'
                             f'–Ø –≤—Å–µ –ø–æ—Å—á–∏—Ç–∞–ª, –≤–æ—Ç –∑–∞–ø–∏—Å–∏ –ø–æ –í–∞—à–µ–º—É –∞–±–æ–Ω–µ–º–µ–Ω—Ç—É üìäüìàüßÆ\n\n'
                             f'{records[3]}', parse_mode='Markdown')
            bot.send_message(message.chat.id,
                             f'üë®‚Äçüíª –ö–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–Ω—è—Ç–∏–π –≤ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–µ: *{Students[user_id][4] - records[2]} —à—Ç*',
                             parse_mode='Markdown')
        cursor.close()

    else:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
# endregion –ö–æ–º–∞–Ω–¥–∞: mylessons

# region –ö–æ–º–∞–Ω–¥–∞: list
@bot.message_handler(commands=['list'])
def list(message):
    if message.chat.id in PrivateMe:
        message_text = '–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:\n'
        for i in Students:
            message_text += f'#{Students[i][3]}\n'
        bot.send_message(message.chat.id, message_text, parse_mode='Markdown')
    else:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
# endregion –ö–æ–º–∞–Ω–¥–∞: list

# region –ö–æ–º–∞–Ω–¥–∞: –¥–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å
@bot.message_handler(commands=['addstudents'])
def addstudents(message):
    if message.chat.id == 1891281816:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        markup.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî'))

        sql = sqlite3.connect('analytics.db')
        cursor = sql.cursor()

        cursor.execute("""CREATE TABLE IF NOT EXISTS students(
                                                id INTEGER,
                                                name TEXT,
                                                pyfile TEXT,
                                                day TEXT,
                                                time TEXT,
                                                price INTEGER,
                                                count INTEGER
                                            )""")
        sql.commit()

        bot.send_message(1891281816,
                         f" ü§ñ –ò—Ç–∞–∫, —è –≥–æ—Ç–æ–≤ –¥–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞.\n–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∏–º–µ—Ä:\n"
                         f"[id name filename.py day time price count]", reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':

                cursor.execute(f"SELECT * FROM students")

                mess = message.text.strip().split()
                id = int(mess[0])
                name = mess[1]
                file = mess[2]
                day = mess[3]
                time = mess[4]
                price = int(mess[5])
                count = int(mess[6])
                cursor.execute(f"INSERT INTO students VALUES(?, ?, ?, ?, ?, ?, ?);", (id, name, file, day, time, price, count))
                sql.commit()
                cursor.close()

                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)

                bot.send_message(1891281816,
                                 f" ü§ñ –°—Ç—É–¥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!",
                                 reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

        bot.register_next_step_handler(message, message_input)


@bot.message_handler(commands=['editstudents'])
def editstudents(message):
    if message.chat.id == 1891281816:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        markup.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî'))

        sql = sqlite3.connect('analytics.db')
        cursor = sql.cursor()

        cursor.execute("""CREATE TABLE IF NOT EXISTS students(
                                                id INTEGER,
                                                name TEXT,
                                                pyfile TEXT,
                                                day TEXT,
                                                time TEXT,
                                                price INTEGER,
                                                count INTEGER
                                            )""")
        sql.commit()

        cursor.execute(f"SELECT * FROM students")
        records = cursor.fetchall()
        send_message = ''
        for row in records:
            send_message += f'{row[2]}: {row[0]}\n'

        bot.send_message(1891281816, send_message)

        bot.send_message(1891281816, '–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ', reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                id = int(message.text)
                cursor.execute(f"SELECT * FROM students WHERE id = {id}")
                records = cursor.fetchone()

                send_message = f'{records[0]} {records[1]} {records[2]} {records[3]} {records[4]} {records[5]} {records[6]}'
                bot.send_message(1891281816, send_message)
                bot.send_message(1891281816, "–í–≤–µ–¥–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∑–∞–ø–∏—Å—å: ")

                @bot.message_handler(content_types=['text'])
                def message_input(message):
                    if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                        mess = message.text.strip().split()
                        id = int(mess[0])
                        name = mess[1]
                        file = mess[2]
                        day = mess[3]
                        time = mess[4]
                        price = int(mess[5])
                        count = int(mess[6])

                        cursor.execute(f"DELETE FROM students WHERE id = {id}")

                        cursor.execute(f"INSERT INTO students VALUES(?, ?, ?, ?, ?, ?, ?);", (id, name, file, day, time, price, count))
                        sql.commit()

                        cursor.close()
                        bot.send_message(1891281816, "–ó–∞–ø–∏—Å—å –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞!")

                    else:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                        btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                        btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                        btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                        btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                        btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                        markup.add(btn1, btn2, btn3, btn4, btn5)
                        bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)
                bot.register_next_step_handler(message, message_input)

            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5)
                bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

        bot.register_next_step_handler(message, message_input)




# endregion –ö–æ–º–∞–Ω–¥–∞: –¥–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞



@bot.message_handler(content_types=['text'])
@analytics
def mess(message):
    get_message_bot = message.text.strip().lower()

    ########## –ü—É–±–ª–∏—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ ##########

    # region –ö–Ω–æ–ø–∫–∞: [–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç ü§ñ]
    if get_message_bot in ('—á—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç ü§ñ', '—á—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç', '—á—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç', 'help') :
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
        btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
        btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
        btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
        markup.add(btn1, btn2, btn3, btn4, btn5)

        bot.send_message(message.chat.id,
                         'ü§ñ –ë–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –º–Ω–µ\n–æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å —É—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å.\n\n'
                         'üßë‚Äçüíª –ù–∞–ø—Ä–∏–º–µ—Ä, –∑–¥–µ—Å—å –º–æ–∂–Ω–æ\n—É–≤–∏–¥–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–æ–µ–º—É\n–∫–∞–ª–µ–Ω–¥–∞—Ä—é '
                         '–¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Ä–æ–∫\n–∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å–∞ –∑–∞–Ω—è—Ç–∏–π.',
                         reply_markup=markup)

        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data='next1'))

        pic_1 = open("photo/appointment.jpg", 'rb')
        bot.send_photo(message.chat.id, pic_1, reply_markup=markup2)
    # endregion –ö–Ω–æ–ø–∫–∞: –ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç

    # region –ö–Ω–æ–ø–∫–∏: [–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ ‚ùó]
    elif get_message_bot in ('–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ ‚ùó', '–æ–ø–ª–∞—á–µ–Ω–æ', '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É'):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
        btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
        btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
        btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id,
                         f"C–ø–∞—Å–∏–±–æ, –∑–∞–ø–∏—Å–∞–ª ü§ñ\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤—Å–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ\nüëâ/mylessons",
                         reply_markup=markup)
        bot.send_message(1891281816,
                         f"{Students[message.chat.id][3]} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–ø–ª–∞—Ç—É ‚úÖ",
                         reply_markup=markup)

        now = dt.datetime.utcnow()
        date = my_time(now.strftime('%A %d %B %Y'))
        bot.send_message(-1001819293687,
                         f"‚úÖ #{Students[message.chat.id][3]} "
                         f"*–∞–±–æ–Ω–µ–º–µ–Ω—Ç –æ–ø–ª–∞—á–µ–Ω*.\n–î–∞—Ç–∞: {date}",
                         parse_mode='Markdown')

        sql = sqlite3.connect('analytics.db')
        cursor = sql.cursor()

        cursor.execute("""CREATE TABLE IF NOT EXISTS tickets(
                                               id INTEGER,
                                               name TEXT,
                                               count INTEGER,
                                               mess TEXT
                                           )""")
        sql.commit()

        user_id = message.chat.id
        cursor.execute(f"SELECT * FROM tickets WHERE id = {user_id}")
        records = cursor.fetchone()

        if records is None:
            name = Students[user_id][3]
            count = 0
            mess = f"‚úÖ #{Students[message.chat.id][3]} –∞–±–æ–Ω–µ–º–µ–Ω—Ç *–æ–ø–ª–∞—á–µ–Ω*.\n–î–∞—Ç–∞: {date}\n\n"
            cursor.execute(f"INSERT INTO tickets VALUES(?, ?, ?, ?);", (user_id, name, count, mess))
            sql.commit()
        else:
            name = Students[user_id][3]
            count = records[2]
            newmess = f"‚úÖ #{Students[message.chat.id][3]} –∞–±–æ–Ω–µ–º–µ–Ω—Ç *–æ–ø–ª–∞—á–µ–Ω*.\n–î–∞—Ç–∞: {date}\n\n"
            mess = records[3] + newmess
            cursor.execute(f"DELETE FROM tickets WHERE id = {user_id}")
            cursor.execute(f"INSERT INTO tickets VALUES(?, ?, ?, ?);", (user_id, name, count, mess))
            sql.commit()
            cursor.close()
    # endregion –ö–Ω–æ–ø–∫–∏: [–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ ‚ùó]

    # region –ö–Ω–æ–ø–∫–∏: [–î–∞, –≤—Å–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚úÖ]
    elif get_message_bot == '–¥–∞, –≤—Å–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚úÖ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
        btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
        btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
        btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id,
                         f"C–ø–∞—Å–∏–±–æ, –æ—Ç–ø—Ä–∞–≤–∏–ª –æ—Ç–≤–µ—Ç ü§ñ",
                         reply_markup=markup)

        now = dt.datetime.utcnow()
        date = my_time(now.strftime('%A %d %B %Y'))

        bot.send_message(-1001819293687,
                         f"{date}\n\n#{Students[message.chat.id][3]}",
                         parse_mode='Markdown')

        markup2 = types.InlineKeyboardMarkup(row_width=3)
        markup2.add(types.InlineKeyboardButton('OK', callback_data='lesson'))
        bot.send_message(1891281816,
                         f"‚úÖ {Students[message.chat.id][3]} ‚Äì –£—Ä–æ–∫ –±—É–¥–µ—Ç\n"
                         f"[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={message.chat.id})",
                         parse_mode='Markdown')


        sql = sqlite3.connect('analytics.db')
        cursor = sql.cursor()

        cursor.execute("""CREATE TABLE IF NOT EXISTS tickets(
                                        id INTEGER,
                                        name TEXT,
                                        count INTEGER,
                                        mess TEXT
                                    )""")
        sql.commit()

        user_id = message.chat.id
        cursor.execute(f"SELECT * FROM tickets WHERE id = {user_id}")
        records = cursor.fetchone()

        if records is None:
            name = Students[user_id][3]
            count = 1
            mess = f"–ó–∞–Ω—è—Ç–∏–µ ‚Ññ{count}\n–î–∞—Ç–∞: {date} \n\n"
            cursor.execute(f"INSERT INTO tickets VALUES(?, ?, ?, ?);", (user_id, name, count, mess))

            if count == Students[user_id][4]:
                markup_price = types.InlineKeyboardMarkup(row_width=3)
                markup_price.add(types.InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å –Ω–æ–≤—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç', callback_data='send_price'))

                bot.send_message(-1001819293687,
                                 f"‚õî #{Students[user_id][3]} –∞–±–æ–Ω–µ–º–µ–Ω—Ç *–∑–∞–∫–æ–Ω—á–∏–ª—Å—è*.\n"
                                 f"[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={user_id})\n\n"
                                 f"–ò—Å—Ç–æ—Ä–∏—è:\n{mess}", parse_mode='Markdown')
                bot.send_message(user_id,
                                 f"–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, #{Students[user_id][3]}!\n\n"
                                 f"ü§ñ –Ø –ø–æ—Å—á–∏—Ç–∞–ª, —á—Ç–æ –í–∞—à –∞–±–æ–Ω–µ–º–µ–Ω—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —É—Ä–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π!\n\n üßÆ –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º:\n\n"
                                 f"{mess}", parse_mode='Markdown', reply_markup=markup_price)
                cursor.execute(f"DELETE FROM tickets WHERE id = {user_id}")
            sql.commit()
        else:
            name = Students[user_id][3]
            count = records[2] + 1
            newmess = f"*–ó–∞–Ω—è—Ç–∏–µ ‚Ññ{count}*\n–î–∞—Ç–∞: {date} \n\n"
            mess = records[3] + newmess
            cursor.execute(f"DELETE FROM tickets WHERE id = {user_id}")
            cursor.execute(f"INSERT INTO tickets VALUES(?, ?, ?, ?);", (user_id, name, count, mess))

            if count == Students[user_id][4]:
                markup_price = types.InlineKeyboardMarkup(row_width=3)
                markup_price.add(types.InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å –Ω–æ–≤—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç',
                                                            callback_data='send_price'))

                bot.send_message(-1001819293687,
                                 f"‚õî #{Students[user_id][3]} *–∞–±–æ–Ω–µ–º–µ–Ω—Ç –∑–∞–∫–æ–Ω—á–∏–ª—Å—è*.\n"
                                 f"[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={user_id})\n\n"
                                 f"–ò—Å—Ç–æ—Ä–∏—è:\n{mess}", parse_mode='Markdown')
                bot.send_message(user_id,
                                 f"–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, #{Students[user_id][3]}!\n\n"
                                 f"ü§ñ –Ø –ø–æ—Å—á–∏—Ç–∞–ª, —á—Ç–æ –í–∞—à –∞–±–æ–Ω–µ–º–µ–Ω—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, "
                                 f"—Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —É—Ä–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π!\n\n üßÆ –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º:\t"
                                 f"{mess}", parse_mode='Markdown', reply_markup=markup_price)
                cursor.execute(f"DELETE FROM tickets WHERE id = {user_id}")
            sql.commit()
            cursor.close()
    # endregion –ö–Ω–æ–ø–∫–∏: [–î–∞, –≤—Å–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚úÖ]

    # region –ö–Ω–æ–ø–∫–∏: [–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚õî], [–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞], [–ü—Ä–æ—á–∏—Ç–∞–Ω–æ ‚úÖ]
    elif get_message_bot == '–Ω–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚õî':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
        btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
        btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
        btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
        markup.add(btn1, btn2, btn3, btn4, btn5)

        bot.send_message(message.chat.id,
                         f"ü§ñ –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ–æ—Ä–º–æ–π, —á—Ç–æ–±—ã "
                         f"[–ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —É—Ä–æ–∫](https://clck.ru/33J6hH)",
                         reply_markup=markup, parse_mode='Markdown',
                         disable_web_page_preview=True)
        bot.send_message(1891281816,
                         f"‚õî {Students[message.chat.id][3]} ‚Äì –£—Ä–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç\n"
                         f"[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={message.chat.id})",
                         parse_mode='Markdown')


    elif get_message_bot == '–∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —É –Ω–∞—Å —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç —É—Ä–æ–∫–∞ ‚öôÔ∏è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
        btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
        btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
        btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
        markup.add(btn1, btn2, btn3, btn4, btn5)

        bot.send_message(message.chat.id, f" ü§ñ Sorry, –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!", reply_markup=markup)
        bot.send_message(1891281816, f"‚ÄºÔ∏è {Students[message.chat.id][3]} ‚Äì —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º, "
                                     f"–Ω–∞–¥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.\n[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={message.chat.id})",
                                     parse_mode='Markdown')

    elif get_message_bot == '–ø—Ä–æ—á–∏—Ç–∞–Ω–æ ‚úÖ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
        btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
        btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
        btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
        markup.add(btn1, btn2, btn3, btn4, btn5)


        bot.send_message(message.chat.id, f"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —á–∏—Ç–∞–µ—Ç–µ ü§ñ", reply_markup=markup)
        bot.send_message(1891281816, f"ü§ñ {Students[message.chat.id][3]} ‚Äì –£–≤–µ–¥–æ–º–ª–µ–Ω \n"
                                     f"[–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](tg://user?id={message.chat.id})", parse_mode='Markdown')
    # endregion –ö–Ω–æ–ø–∫–∏: [–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚õî], [–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞], [–ü—Ä–æ—á–∏—Ç–∞–Ω–æ ‚úÖ]

    # region –ö–Ω–æ–ø–∫–∞: [–ö–æ–Ω—Ç–∞–∫—Ç—ã]
    elif get_message_bot == "–∫–æ–Ω—Ç–∞–∫—Ç—ã":
        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(types.InlineKeyboardButton("üë®‚Äçüíª –ú–æ—è –≤–∏–∑–∏—Ç–∫–∞ MyQRcards", url='https://card.myqrcards.com/links/5jaDBMw7w61?v=-1160'))

        send_message1 = "*–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:*\n\n" \
                        "[–ú–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ ilandroxxy.github.io](https://ilandroxxy.github.io/)\n\n[Telegram](t.me/ilandroxy)\n\n" \
                        "[WhatsApp](wa.me/message/JSXJ2NLWTVNFC1)\n\n[–ú–æ–π –±–ª–æ–≥ –≤ Teletype](https://teletype.in/@ilandroxy)\n\n" \
                        "[Discord](https://discordapp.com/users/ilandroxxy#6249) ilandroxxy#6249\n\n" \
                        "[Zoom](https://us04web.zoom.us/j/2402871810?pwd=OVdGQkE2ODIvWm1WNk5EdStQR1o4UT09)\n\n" \
                        "[–ü—Ä–æ—Ñ–∏–ª—å –ê–≤–∏—Ç–æ](www.avito.ru/user/590293c00d3ab79d83e929a6731df164/profile?src=sharing)\n\n" \
                        "[YouTube](https://youtube.com/@ilandroxy)\n\n" \
                        "[GitHub](https://github.com/ilandroxxy)\n\n–†–∞–±–æ—á–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω: +7 (995) 437‚Äì52‚Äì59\n\n" \
                        "Email: ilandroxxy@gmail.com"
        bot.send_message(message.chat.id, send_message1, parse_mode='Markdown', disable_web_page_preview=True, reply_markup=markup)
    # endregion –ö–Ω–æ–ø–∫–∞: [–ö–æ–Ω—Ç–∞–∫—Ç—ã]

    # region –ö–Ω–æ–ø–∫–∞: [–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã]
    elif get_message_bot == "–º–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã":
        send_message1 = "–ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—á–∏—Å–ª—è—é, —á–µ–º —è –∑–∞–Ω–∏–º–∞—é—Å—å —Å–µ–≥–æ–¥–Ω—è!\n\n" \
                       "*1. –ö–∞–Ω–∞–ª* [itpy | –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞–ï–ì–≠](t.me/pro100_easy_ege)\n" \
                        "‚úçÔ∏è –≠—Ç–æ –∫–∞–Ω–∞–ª –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —è —Ä–∞–∑–±–∏—Ä–∞—é –∑–∞–¥–∞–Ω–∏—è —Å —ç–∫–∑–∞–º–µ–Ω–∞, –¥–∞—é –ø–æ–ª–µ–∑–Ω—ã–µ –∑–∞–¥–∞—á–∫–∏ –∏ " \
                       "–ø–æ–∫–∞–∑—ã–≤–∞—é –±—É–¥—É—â–∏–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º —Å—Ñ–µ—Ä—É IT, –æ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∏ –≤—Ä—è–¥ –ª–∏ —Å–ª—ã—à–∞–ª–∏ –≤ —à–∫–æ–ª–µ!\n\n" \
                       "*2. –ß–∞—Ç –±–æ—Ç* ü§ñ[MotherBot](t.me/JustDoItMotherBot)  \n–≠—Ç–æ Telegram –±–æ—Ç, " \
                        "–∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞—á–∏–Ω–∞—é—â–∏–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ " \
                        "[PyTelegramBotAPI](https://habr.com/ru/post/580408/), –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π " \
                       "–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API Telegram ‚Äì —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç –±–æ—Ç–æ–≤ –≤ –º–µc—Å–µ–Ω–¥–∂–µ—Ä–µ.\n\n" \
                       "*3. –ö—É—Ä—Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠ –Ω–∞* [Stepik](https://stepik.org/course/122969)\n" \
                       "–ù–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –∫—É—Ä—Å –µ—â–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–æ —É–∂–µ –º–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å, " \
                        "—á—Ç–æ –æ–Ω –∏–∑ —Å–µ–±—è –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ [–æ–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞](https://stepik.org/lesson/770711/step/1) " \
                       "–∏ —á–µ—Ä–Ω–æ–≤–æ–º—É [–ø—Ä–∏–º–µ—Ä—É —É—Ä–æ–∫–∞](https://stepik.org/lesson/770602/step/1).\n\n"
        bot.send_message(message.chat.id, send_message1, parse_mode="Markdown", disable_web_page_preview=True)

        send_message2 = "<b>–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã —Å –º–æ–∏–º–∏ —É—á–µ–Ω–∏–∫–∞–º–∏:</b>\n\n" \
                        '<b>1. –ß–∞—Ç –±–æ—Ç–∞</b> ü§ñ @kto_hochet_stat_millioneromBOT\n' \
                        '<b>–ê–≤—Ç–æ—Ä—ã:</b> @ilandroxxy –∏ –®–∞—Ä–∏—Ñ –ì–µ–æ—Ä–≥–∏–π, —É—á–µ–Ω–∏–∫ 6 –∫–ª–∞—Å—Å–∞.\n' \
                        '<b>–¶–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞:</b> —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ –∏–≥—Ä—ã ' \
                        '"–ö—Ç–æ —Ö–æ—á–µ—Ç —Å—Ç–∞—Ç—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º", —Ä–µ–∞–ª–∏–∑—É—è —Å–∏—Å—Ç–µ–º—É —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö ' \
                        '–≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∏—Å—Ç–µ–º—ã –ª–∏–¥–µ—Ä–æ–≤.\n\n' \
                        '<b>2. –ß–∞—Ç –±–æ—Ç–∞</b> ü§ñ @NumberOfSystem_Bot\n<b>–ê–≤—Ç–æ—Ä—ã:</b> ' \
                        '@ilandroxxy –∏ –ö–∞–∑–∞–∫–æ–≤–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞, —É—á–µ–Ω–∏—Ü–∞ 8 –∫–ª–∞—Å—Å–∞.\n' \
                        '<b>–¶–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞:</b> —Å–æ–∑–¥–∞—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–∏—Å—Ç–µ–º —Å—á–∏—Å–ª–µ–Ω–∏—è, ' \
                        '–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–∂–µ—Ç –≤ –æ—Å–≤–æ–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" –∑–∞ 8 –∫–ª–∞—Å—Å.\n\n'
        bot.send_message(message.chat.id, send_message2, parse_mode='HTML', disable_web_page_preview=True)
    # endregion –ö–Ω–æ–ø–∫–∞: [–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã]

    # region –ö–Ω–æ–ø–∫–∞: [–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫]
    elif get_message_bot == "–∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫":
        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(types.InlineKeyboardButton("planerka.app", url="https://planerka.app/meet/ilandroxy/tutor"))
        message_text = f"–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —É–¥–æ–±–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º [planerka.app](https://deepvoice.me/) " \
                       f"*–¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ* –∏–ª–∏ –≤—ã–±–æ—Ä–∞ –≥—Ä–∞—Ñ–∏–∫–∞ –∑–∞–Ω—è—Ç–∏–π. \n\n" \
                       f"–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è –∏ *–Ω–∞–ø–∏—à–∏—Ç–µ –ø–∞—Ä—É —Å–ª–æ–≤ –æ —Å–µ–±–µ*. \n\n" \
                       f"‚ùó–í–∞—à–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –≤ –º–æ–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ, –Ω–æ —á—Ç–æ–±—ã –±—ã–ª–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ " \
                       f"–¥–µ—Ä–∂–∞—Ç—å —Å–≤—è–∑—å - –ø—Ä–æ—à—É –Ω–∞–ø–∏—Å–∞—Ç—å –µ—â–µ –∏ –≤ [Telegram](t.me/ilandroxy). "
        bot.send_message(message.chat.id, message_text, parse_mode="Markdown", disable_web_page_preview=True)

        pic = open("photo/calendly.jpg", 'rb')
        bot.send_photo(message.chat.id, pic, reply_markup=markup)
    # endregion –ö–Ω–æ–ø–∫–∞: [–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫]

    # region –ö–Ω–æ–ø–∫–∞: [–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞]
    elif get_message_bot == "–ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞":

        if message.chat.id == 1454117859:
            markup = types.InlineKeyboardMarkup(row_width=1)
            markup.add(types.InlineKeyboardButton(f"–°—Å—ã–ª–∫–∞ –Ω–∞ Miro", url=f"https://miro.com/app/board/uXjVODix7KA=/"))
            sti = open('photo/SendFileSticker.tgs', 'rb')
            bot.send_sticker(message.chat.id, sti, reply_markup=markup)

        elif message.chat.id in Students:
            key = message.chat.id
            messgae_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /homework —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ."
            bot.send_message(message.chat.id, messgae_text)

            pic = open('photo/history.jpeg', 'rb')
            bot.send_photo(message.chat.id, pic)

            bot.send_message(message.chat.id,
                             "–ü–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ —Å–µ—Ä–≤–∏—Å [GitHub](https://clck.ru/33J6gS) "
                             "–º–æ–∂–Ω–æ –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –∫–Ω–æ–ø–∫—É History, –∫–æ—Ç–æ—Ä–∞—è –¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤.",
                             parse_mode='Markdown', disable_web_page_preview=True)

            markup = types.InlineKeyboardMarkup(row_width=1)
            markup.add(types.InlineKeyboardButton(f"–¢–≤–æ–π —Ñ–∞–π–ª: {Students[key][0]}", url=f"https://github.com/ilandroxxy/ilandroxy_bot/blob/main/ilandroxy_Bot/lessons/{Students[key][0]}"))
            sti = open('photo/SendFileSticker.tgs', 'rb')
            bot.send_sticker(message.chat.id, sti, reply_markup=markup)

        elif message.chat.id in Me:
            messgae_text = "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π " \
                           "/homework —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ."
            bot.send_message(message.chat.id, messgae_text)

            pic = open('photo/history.jpeg', 'rb')
            bot.send_photo(message.chat.id, pic)

            bot.send_message(message.chat.id,
                             "–ü–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ —Å–µ—Ä–≤–∏—Å [GitHub](https://clck.ru/33J6gS) "
                             "–º–æ–∂–Ω–æ –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –∫–Ω–æ–ø–∫—É History, –∫–æ—Ç–æ—Ä–∞—è –¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤.",
                             parse_mode='Markdown', disable_web_page_preview=True)

            markup = types.InlineKeyboardMarkup(row_width=1)
            markup.add(types.InlineKeyboardButton("–ü–∞–ø–∫–∞: lessons", url="https://clck.ru/33J6gS"))
            sti = open('photo/SendFileSticker.tgs', 'rb')
            bot.send_sticker(message.chat.id, sti, reply_markup=markup)

        else:
            message_text = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–æ-–º–æ–µ–º—É –≤–∞—Å –Ω–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ! –û–∂–∏–¥–∞–π—Ç–µ...'
            bot.send_message(message.chat.id, message_text)
            sti = open('photo/WaitSticker.tgs', 'rb')
            bot.send_sticker(message.chat.id, sti)
    # endregion –ö–Ω–æ–ø–∫–∞: [–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞]

    # region –ö–Ω–æ–ø–∫–∞: [–û—Ç–º–µ–Ω–∏—Ç—å ‚õî]
    elif get_message_bot in ('–æ—Ç–º–µ–Ω–∏—Ç—å ‚õî', '–æ—Ç–º–µ–Ω–∏—Ç—å', '–æ—Ç–º–µ–Ω–∞'):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
        btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
        btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
        btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id,
                         "–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî",
                         reply_markup=markup)
    # endregion –ö–Ω–æ–ø–∫–∞: [–æ—Ç–º–µ–Ω–∏—Ç—å ‚õî]

    # region –ö–Ω–æ–ø–∫–∞: [–†–µ–ø–µ—Ç–∏—Ç–æ—Ä]
    elif get_message_bot == "—Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä":
        if message.chat.id == 1891281816:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            btn1 = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ')
            btn2 = types.KeyboardButton('–û–ø–æ–≤–µ—â–µ–Ω–∏–µ —Ç–µ—Ç–∞-—Ç–µ—Ç')
            btn3 = types.KeyboardButton('–ó–∞–ø—Ä–æ—Å–∏—Ç—å –æ–ø–ª–∞—Ç—É')
            btn4 = types.KeyboardButton('–†–µ–¥–∞–∫—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å db')
            btn5 = types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
            btn6 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
            btn7 = types.KeyboardButton('GitHub')
            btn8 = types.KeyboardButton('–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')
            btn9 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
            markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9)
            bot.send_message(message.chat.id, '–í—Ä–µ–º—è –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å..', reply_markup=markup)
        else:
            send_message1 = f"üë®üèº‚Äçüíª –†–∞–±–æ—Ç–∞—é –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ, –µ—Å—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π. " \
                            f"–í —Ä–∞–±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é —Ç–∞–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã (–ø—Ä–æ–≥—Ä–∞–º–º—ã) –∫–∞–∫: " \
                            f"PyCharm, Python, Notability, Discord, Google –¥–∏—Å–∫ –∏ –¥—Ä—É–≥–∏–µ. " \
                            f"–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É—é —Å–≤—è–∑—å —Å–æ –º–Ω–æ–π (WhatsApp, Telegram ‚òéÔ∏è) –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã."
            bot.send_message(message.chat.id, send_message1, parse_mode="Markdown")
            time.sleep(1)

            pic_3 = open("photo/face.jpeg", 'rb')
            bot.send_photo(message.chat.id, pic_3)

            send_message3 = f"–ë–µ—Ä—É—Å—å —Ç–æ–ª—å–∫–æ –∑–∞ –ï–ì–≠ –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ, —Ä–∞–±–æ—Ç–∞—é —Å–æ —à–∫–æ–ª—å–Ω–∏–∫–∞–º–∏ –æ—Ç 6 –∫–ª–∞—Å—Å–∞ " \
                            f"–ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –æ–±—É—á–µ–Ω–∏—è —è–∑—ã–∫—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python.\n\n" \
                            f"–¶–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º—Å—è –∫ –ï–ì–≠ –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –§–ò–ü–ò –∏ –ö–ò–ú–∞—Ö. " \
                            f"–î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç –≤–∞—Å –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è " \
                            f"—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π"
            bot.send_message(message.chat.id, send_message3, parse_mode="Markdown")
            time.sleep(1)

            pic_4 = open("photo/paint.jpeg", 'rb')
            bot.send_photo(message.chat.id, pic_4)

            send_message4 = f"üôã‚Äç‚ôÇÔ∏è –ï—Å–ª–∏ —Ç—ã —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω—ã–π - —Ç–µ–±–µ —Ç–æ—á–Ω–æ –∫–æ –º–Ω–µ! " \
                            f"–ü—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –æ—Ç 6 –º–µ—Å—è—Ü–µ–≤ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤—Å–µ—Ö –º–æ–∏—Ö " \
                            f"—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ 80+ –±–∞–ª–ª–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω, " \
                            f"–Ω–æ –æ—Å—Ç–∞–≤–ª—è—é –∑–∞ —Å–æ–±–æ–π –ø—Ä–∞–≤–æ –æ—Ç–∫–∞–∑–∞—Ç—å –æ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –Ω–∞ —ç—Ç–∞–ø–µ –ø—Ä–æ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è. " \
                            f"–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –º–æ–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ 70-90 –±–∞–ª–ª–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π‚ùó\n\n" \
                            f"–ß–µ–º—É –±—É–¥–µ–º —É–¥–µ–ª—è—Ç—å –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å –≤–Ω–∏–º–∞–Ω–∏—è? –ò–∑—É—á–µ–Ω–∏—é –∏ –ø—Ä–∞–∫—Ç–∏–∫–µ –Ω–∞ Python üêç\n\n" \
                            f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –≥–æ–¥–∞ –ï–ì–≠ –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ —Å–∏–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ö–æ—Ä–æ—à–∏–µ " \
                            f"–ø—Ä–∏–∫–ª–∞–¥–Ω—ã–µ –ó–∞–¥–∞—á–∏ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é, –ø–æ—ç—Ç–æ–º—É, " \
                            f"–µ—Å–ª–∏ –µ—Å—Ç—å —Ü–µ–ª—å –Ω–∞–±—Ä–∞—Ç—å 80+ –±–∞–ª–ª–æ–≤, —Ç–æ –±–µ–∑ —ç—Ç–æ–≥–æ –Ω–∏–∫—É–¥–∞! " \
                            f"–ù–∞—É—á—É –ü–†–û–ì–†–ê–ú–ú–ò–†–û–í–ê–¢–¨ –Ω–∞ Python —Å –Ω—É–ª—è."

            markup2 = types.InlineKeyboardMarkup(row_width=1)
            markup2.add(types.InlineKeyboardButton("üßëüèΩ‚Äçüíª –û —Å–µ–±–µ", callback_data="iam"),
                        types.InlineKeyboardButton("‚¨áÔ∏è –ü—Ä–æ–≥—Ä–∞–º–º—ã", callback_data="downloads"),
                        types.InlineKeyboardButton("üè∑ –ü—Ä–∞–π—Å", callback_data="price"),
                        types.InlineKeyboardButton("üßÆ –†–µ–∫–≤–∏–∑–∏—Ç—ã", callback_data="wallet"))
            bot.send_message(message.chat.id, send_message4, parse_mode="Markdown", reply_markup=markup2)
    # endregion –ö–Ω–æ–ø–∫–∞: [–†–µ–ø–µ—Ç–∏—Ç–æ—Ä]

    ########## –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ ##########

    # region –ö–Ω–æ–ø–∫–∞ [–ó–∞–ø—Ä–æ—Å–∏—Ç—å –æ–ø–ª–∞—Ç—É]
    elif get_message_bot == "–∑–∞–ø—Ä–æ—Å–∏—Ç—å –æ–ø–ª–∞—Ç—É":
        if message.chat.id in Me:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
            btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
            markup.add(btn1)

            day = '–í—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã: *'
            for x in sorted(S):
                day += f'[{x[0][3]}](tg://user?id={x[-1]}): {x[-1]} *'
            M_day = [i for i in day.split('*')]
            message_text_day = '\n'.join(M_day)
            bot.send_message(message.chat.id, message_text_day, parse_mode='Markdown', reply_markup=markup)

            @bot.message_handler(content_types=['text'])
            def message_input(message):
                text_message = message.text

                if text_message != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                    message_text_students = [int(i) for i in text_message.split()]
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                    btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                    btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                    btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                    btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                    btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(1891281816, f" ü§ñ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –∂–¥–µ–º –æ—Ç–≤–µ—Ç–æ–≤.",
                                     parse_mode='Markdown', reply_markup=markup)

                    for key in message_text_students:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
                        btn1 = types.KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ ‚ùó')
                        markup.add(btn1)
                        bot.send_message(key,
                                         f" ü§ñ –ü—Ä–∏–≤–µ—Ç!\n–≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω—É–∂–Ω–æ, –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏ üìäüìàüßÆ\n\n",
                                         parse_mode='Markdown', reply_markup=markup)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                    btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                    btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                    btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                    btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                    btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)
            bot.register_next_step_handler(message, message_input)

        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [–∑–∞–ø—Ä–æ—Å–∏—Ç—å –æ–ø–ª–∞—Ç—É]

    # region –ö–Ω–æ–ø–∫–∞ [–†–µ–¥–∞–∫—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å db]
    elif get_message_bot == '—Ä–µ–¥–∞–∫—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å db':
        if message.chat.id == 1891281816:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
            btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
            markup.add(btn1)

            day = '–í—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã: *'
            for x in sorted(S):
                day += f'[{x[0][3]}](tg://user?id={x[-1]}): {x[-1]} *'
            M_day = [i for i in day.split('*')]
            message_text_day = '\n'.join(M_day)
            bot.send_message(message.chat.id, message_text_day, parse_mode='Markdown', reply_markup=markup)

            @bot.message_handler(content_types=['text'])
            def message_input(message):
                text_message = message.text
                if text_message != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                    user_id = int(text_message)
                    sql = sqlite3.connect('analytics.db')
                    cursor = sql.cursor()

                    cursor.execute("""CREATE TABLE IF NOT EXISTS tickets(
                                                                   id INTEGER,
                                                                   name TEXT,
                                                                   count INTEGER,
                                                                   mess TEXT
                                                               )""")
                    sql.commit()

                    cursor.execute(f"SELECT * FROM tickets WHERE id = {user_id}")
                    records = cursor.fetchone()

                    if records is None:
                        bot.send_message(message.chat.id,
                                         '–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ db tickets..'
                                         '–ê–±–æ–Ω–µ–º–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –ø—Ä–æ–¥–ª–µ–Ω!')
                    else:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
                        btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
                        markup.add(btn1)

                        bot.send_message(message.chat.id,
                                         f'–í—ã—Å—ã–ª–∞—é –∑–∞–ø–∏—Å—å –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –∏–∑–º–µ–Ω–∏—Ç–µ '
                                         f'–µ–µ –ø–æ —à–∞–±–ª–æ–Ω—É –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±—Ä–∞—Ç–Ω–æüë®‚Äçüíª\n\n'
                                         f'–®–∞–±–ª–æ–Ω: [–¢–µ–∫—Å—Ç] [–ö–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π]')
                        bot.send_message(message.chat.id, f'{records[3]}',
                                         parse_mode='Markdown', reply_markup=markup)
                        name = records[1]

                        @bot.message_handler(content_types=['text'])
                        def message_input(message):
                            text_message = message.text

                            if text_message != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                                sql = sqlite3.connect('analytics.db')
                                cursor = sql.cursor()
                                cursor.execute(f"SELECT * FROM tickets WHERE id = {user_id}")
                                records = cursor.fetchone()

                                cursor.execute(f"DELETE FROM tickets WHERE id = {user_id}")

                                mess = text_message[:-1]
                                count = int(text_message[-1])

                                cursor.execute(f"INSERT INTO tickets VALUES(?, ?, ?, ?);", (user_id, name, count, mess))
                                sql.commit()
                                cursor.close()

                                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                                markup.add(btn1, btn2, btn3, btn4, btn5)

                                bot.send_message(message.chat.id,
                                                 '–ó–∞–ø–∏—Å—å –±—ã–ª–∞ –∑–∞–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ\n'
                                                 '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å üëâ /mylessons',
                                                 parse_mode='Markdown', reply_markup=markup)
                            else:
                                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                                btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                                btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                                btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                                btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                                btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                                markup.add(btn1, btn2, btn3, btn4, btn5)
                                bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

                        bot.register_next_step_handler(message, message_input)

                    sql.commit()
                    cursor.close()
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                    btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                    btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                    btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                    btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                    btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

            bot.register_next_step_handler(message, message_input)
        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [—Ä–µ–¥–∞–∫—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å db]

    # region –ö–Ω–æ–ø–∫–∞ [–û–ø–æ–≤–µ—â–µ–Ω–∏–µ —Ç–µ—Ç–∞-—Ç–µ—Ç]
    elif get_message_bot == '–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —Ç–µ—Ç–∞-—Ç–µ—Ç':
        if message.chat.id == 1891281816:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
            btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
            markup.add(btn1)

            day = '–í—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã: *'
            for x in sorted(S):
                day += f'[{x[0][3]}](tg://user?id={x[-1]}): {x[-1]} *'
            M_day = [i for i in day.split('*')]
            message_text_day = '\n'.join(M_day)
            bot.send_message(message.chat.id,
                             message_text_day,
                             parse_mode='Markdown',
                             reply_markup=markup)

            @bot.message_handler(content_types=['text'])
            def message_input(message):
                text_message = message.text

                if text_message != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                    message_text_students = [int(i) for i in text_message.split()]
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                    btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                    btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                    btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                    btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                    btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(1891281816, f" ü§ñ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –∂–¥–µ–º –æ—Ç–≤–µ—Ç–æ–≤.",
                                     parse_mode='Markdown', reply_markup=markup)
                    for key in message_text_students:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
                        btn1 = types.KeyboardButton('–î–∞, –≤—Å–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚úÖ')
                        btn2 = types.KeyboardButton('–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚õî')
                        btn3 = types.KeyboardButton('–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —É –Ω–∞—Å —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç —É—Ä–æ–∫–∞ ‚öôÔ∏è')
                        markup.add(btn1, btn2, btn3)

                        bot.send_message(key, f" ü§ñ –ü—Ä–∏–≤–µ—Ç!\n–°–µ–≥–æ–¥–Ω—è –∑–∞–Ω–∏–º–∞–µ–º—Å—è?",
                                         parse_mode='Markdown', reply_markup=markup)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                    btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                    btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                    btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                    btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                    btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

            bot.register_next_step_handler(message, message_input)

        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —Ç–µ—Ç–∞-—Ç–µ—Ç]

    # region –ö–Ω–æ–ø–∫–∞ [–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ]
    elif get_message_bot == '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ':
        if message.chat.id in Me:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
            btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
            btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
            btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
            btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
            markup.add(btn1, btn2, btn3, btn4, btn5)

            day = time.strftime('%A')

            if day == 'Monday':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
                btn1 = types.KeyboardButton('–î–∞, –≤—Å–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚úÖ')
                btn2 = types.KeyboardButton('–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚õî')
                btn3 = types.KeyboardButton('–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —É –Ω–∞—Å —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç —É—Ä–æ–∫–∞ ‚öôÔ∏è')
                markup.add(btn1, btn2, btn3)
                bot.send_message(message.chat.id, f" ü§ñ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –∂–¥–µ–º –æ—Ç–≤–µ—Ç–æ–≤.", parse_mode='Markdown')
                for key in MondayStudents:
                    bot.send_message(key, f" ü§ñ –ü—Ä–∏–≤–µ—Ç!\n–°–µ–≥–æ–¥–Ω—è –∑–∞–Ω–∏–º–∞–µ–º—Å—è?\n"
                                          f"–£—Ä–æ–∫ –≤ {MondayStudents[key][1]} –ø–æ –ù—Å–∫. \n\n",
                                     parse_mode='Markdown', reply_markup=markup)
                temp = '–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: *'
                for key in MondayStudents:
                    temp += f'[{MondayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {MondayStudents[key][1]} *'

                M = [i for i in temp.split('*')]
                message_text = '\n'.join(M)
                bot.send_message(message.chat.id, message_text, parse_mode='Markdown', reply_markup=markup)
                bot.send_message(-1001819293687, message_text, parse_mode='Markdown')

            if day == 'Tuesday':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
                btn1 = types.KeyboardButton('–î–∞, –≤—Å–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚úÖ')
                btn2 = types.KeyboardButton('–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚õî')
                btn3 = types.KeyboardButton('–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —É –Ω–∞—Å —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç —É—Ä–æ–∫–∞ ‚öôÔ∏è')
                markup.add(btn1, btn2, btn3)
                bot.send_message(message.chat.id, f" ü§ñ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –∂–¥–µ–º –æ—Ç–≤–µ—Ç–æ–≤.", parse_mode='Markdown')
                for key in TuesdayStudents:
                    bot.send_message(key, f" ü§ñ –ü—Ä–∏–≤–µ—Ç!\n–°–µ–≥–æ–¥–Ω—è –∑–∞–Ω–∏–º–∞–µ–º—Å—è?\n"
                                          f"–£—Ä–æ–∫ –≤ {TuesdayStudents[key][1]} –ø–æ –ù—Å–∫. \n\n",
                                     parse_mode='Markdown', reply_markup=markup)

                temp = '–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: *'
                for key in TuesdayStudents:
                    temp += f'[{TuesdayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {TuesdayStudents[key][1]} *'

                M = [i for i in temp.split('*')]
                message_text = '\n'.join(M)
                bot.send_message(message.chat.id, message_text, parse_mode='Markdown', reply_markup=markup)
                bot.send_message(-1001819293687, message_text, parse_mode='Markdown')

            if day == 'Wednesday':
                bot.send_message(message.chat.id, "–ê —Å–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π! \n–ò–¥–∏ –æ—Ç–¥—ã—Ö–∞–π  üôå ‚ò∫Ô∏è ", reply_markup=markup)

            if day == 'Thursday':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
                btn1 = types.KeyboardButton('–î–∞, –≤—Å–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚úÖ')
                btn2 = types.KeyboardButton('–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚õî')
                btn3 = types.KeyboardButton('–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —É –Ω–∞—Å —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç —É—Ä–æ–∫–∞ ‚öôÔ∏è')
                markup.add(btn1, btn2, btn3)
                bot.send_message(message.chat.id,
                                 f" ü§ñ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –∂–¥–µ–º –æ—Ç–≤–µ—Ç–æ–≤.",
                                 parse_mode='Markdown')
                for key in ThursdayStudents:
                    bot.send_message(key, f" ü§ñ –ü—Ä–∏–≤–µ—Ç!\n–°–µ–≥–æ–¥–Ω—è –∑–∞–Ω–∏–º–∞–µ–º—Å—è?\n"
                                          f"–£—Ä–æ–∫ –≤ {ThursdayStudents[key][1]} –ø–æ –ù—Å–∫. \n\n",
                                     parse_mode='Markdown', reply_markup=markup)

                temp = '–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: *'
                for key in ThursdayStudents:
                    temp += f'[{ThursdayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {ThursdayStudents[key][1]} *'

                M = [i for i in temp.split('*')]
                message_text = '\n'.join(M)
                bot.send_message(message.chat.id, message_text, parse_mode='Markdown', reply_markup=markup)
                bot.send_message(-1001819293687, message_text, parse_mode='Markdown')

            if day == 'Friday':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
                btn1 = types.KeyboardButton('–î–∞, –≤—Å–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚úÖ')
                btn2 = types.KeyboardButton('–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚õî')
                btn3 = types.KeyboardButton('–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —É –Ω–∞—Å —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç —É—Ä–æ–∫–∞ ‚öôÔ∏è')
                markup.add(btn1, btn2, btn3)
                bot.send_message(message.chat.id, f" ü§ñ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –∂–¥–µ–º –æ—Ç–≤–µ—Ç–æ–≤.",
                                 parse_mode='Markdown')
                for key in FridayStudents:
                    bot.send_message(key, f" ü§ñ –ü—Ä–∏–≤–µ—Ç!\n–°–µ–≥–æ–¥–Ω—è –∑–∞–Ω–∏–º–∞–µ–º—Å—è?\n"
                                          f"–£—Ä–æ–∫ –≤ {FridayStudents[key][1]} –ø–æ –ù—Å–∫. \n\n",
                                     parse_mode='Markdown', reply_markup=markup)
                temp = '–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: *'
                for key in FridayStudents:
                    temp += f'[{FridayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {FridayStudents[key][1]} *'

                M = [i for i in temp.split('*')]
                message_text = '\n'.join(M)
                bot.send_message(message.chat.id, message_text, parse_mode='Markdown', reply_markup=markup)
                bot.send_message(-1001819293687, message_text, parse_mode='Markdown')

            if day == 'Saturday':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
                btn1 = types.KeyboardButton('–î–∞, –≤—Å–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚úÖ')
                btn2 = types.KeyboardButton('–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚õî')
                btn3 = types.KeyboardButton('–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —É –Ω–∞—Å —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç —É—Ä–æ–∫–∞ ‚öôÔ∏è')
                markup.add(btn1, btn2, btn3)
                bot.send_message(message.chat.id, f" ü§ñ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –∂–¥–µ–º –æ—Ç–≤–µ—Ç–æ–≤.",
                                 parse_mode='Markdown')
                for key in SaturdayStudents:
                    bot.send_message(key,
                                     f" ü§ñ –ü—Ä–∏–≤–µ—Ç!\n–°–µ–≥–æ–¥–Ω—è –∑–∞–Ω–∏–º–∞–µ–º—Å—è?\n"
                                     f"–£—Ä–æ–∫ –≤ {SaturdayStudents[key][1]} –ø–æ –ù—Å–∫. \n\n",
                                     parse_mode='Markdown',
                                     reply_markup=markup)

                temp = '–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: *'
                for key in SaturdayStudents:
                    temp += f'[{SaturdayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {SaturdayStudents[key][1]} *'

                M = [i for i in temp.split('*')]
                message_text = '\n'.join(M)
                bot.send_message(message.chat.id,
                                 message_text,
                                 parse_mode='Markdown',
                                 reply_markup=markup)
                bot.send_message(-1001819293687,
                                 message_text,
                                 parse_mode='Markdown')

            if day == 'Sunday':
                bot.send_message(message.chat.id,
                                 "–ê —Å–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π! \n–ò–¥–∏ –æ—Ç–¥—ã—Ö–∞–π  üôå ‚ò∫Ô∏è ",
                                 reply_markup=markup)

        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ]

    # region –ö–Ω–æ–ø–∫–∞ [–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É]
    elif get_message_bot == '–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É':
        if message.chat.id == 1891281816:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
            btn1 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
            markup.add(btn1)

            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ç–æ–ª—å–∫–æ "
                                              "—Å—Ç—É–¥–µ–Ω—Ç–∞–º (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏).",
                             parse_mode='Markdown', reply_markup=markup)

            @bot.message_handler(content_types=['text'])
            def message_input(message):
                text_message = message.text
                if text_message != '–û—Ç–º–µ–Ω–∏—Ç—å ‚õî':
                    bot.send_message(1891281816, f" ü§ñ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –∂–¥–µ–º –æ—Ç–≤–µ—Ç–æ–≤.", parse_mode='Markdown')
                    for key in Students:
                        markup = types.ReplyKeyboardMarkup(row_width=1, one_time_keyboard=True)
                        btn1 = types.KeyboardButton('–ü—Ä–æ—á–∏—Ç–∞–Ω–æ ‚úÖ')
                        markup.add(btn1)
                        bot.send_message(key, text_message, disable_web_page_preview=True, reply_markup=markup)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                    btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                    btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
                    btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
                    btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
                    btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õî", reply_markup=markup)

            bot.register_next_step_handler(message, message_input)
        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É]

    # region –ö–Ω–æ–ø–∫–∞ [–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞]
    elif get_message_bot == '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        if message.chat.id in Me:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            btn1 = types.KeyboardButton('–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–ª–∞—Ç ü§ë')
            btn2 = types.KeyboardButton('–°–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º üìÖ')
            btn3 = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã db üíæ')
            btn4 = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚õî')
            markup.add(btn1, btn2, btn3, btn4)

            bot.send_message(message.chat.id, 'ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–Ω–æ–ø–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π:', reply_markup=markup)
    # endregion –ö–Ω–æ–ø–∫–∞ [—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞]

    # region –ö–Ω–æ–ø–∫–∞ [C–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º üìÖ]
    elif get_message_bot == '—Å–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º üìÖ':
        if message.chat.id in Me:
            sql = sqlite3.connect('analytics.db')
            cursor = sql.cursor()

            sqlite_select_query = """SELECT * from active"""
            cursor.execute(sqlite_select_query)
            records = cursor.fetchall()

            day = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: *'
            for key in MondayStudents:
                day += f'[{MondayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {MondayStudents[key][1]} *'
            M_day = [i for i in day.split('*')]
            message_text_day = '\n'.join(M_day)
            bot.send_message(message.chat.id, message_text_day, parse_mode='Markdown')

            day = '–í—Ç–æ—Ä–Ω–∏–∫: *'
            for key in TuesdayStudents:
                day += f'[{TuesdayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {TuesdayStudents[key][1]} *'
            M_day = [i for i in day.split('*')]
            message_text_day = '\n'.join(M_day)
            bot.send_message(message.chat.id, message_text_day, parse_mode='Markdown')

            day = '–ß–µ—Ç–≤–µ—Ä–≥: *'
            for key in ThursdayStudents:
                day += f'[{ThursdayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {ThursdayStudents[key][1]} *'
            M_day = [i for i in day.split('*')]
            message_text_day = '\n'.join(M_day)
            bot.send_message(message.chat.id, message_text_day, parse_mode='Markdown')

            day = '–ü—è—Ç–Ω–∏—Ü–∞: *'
            for key in FridayStudents:
                day += f'[{FridayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {FridayStudents[key][1]} *'
            M_day = [i for i in day.split('*')]
            message_text_day = '\n'.join(M_day)
            bot.send_message(message.chat.id, message_text_day, parse_mode='Markdown')

            day = '–°—É–±–±–æ—Ç–∞: *'
            for key in SaturdayStudents:
                day += f'[{SaturdayStudents[key][3]}](tg://user?id={key}) –≤—Ä–µ–º—è —É—Ä–æ–∫–∞: {SaturdayStudents[key][1]} *'
            M_day = [i for i in day.split('*')]
            message_text_day = '\n'.join(M_day)
            bot.send_message(message.chat.id, message_text_day, parse_mode='Markdown')

            cursor.close()
        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [—Å–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º]

    # region –ö–Ω–æ–ø–∫–∞ [–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–ª–∞—Ç ü§ë]
    elif get_message_bot == '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–ª–∞—Ç ü§ë':
        if message.chat.id in Me:
            sql = sqlite3.connect('analytics.db')
            cursor = sql.cursor()

            sqlite_select_query = """SELECT * from active"""
            cursor.execute(sqlite_select_query)
            records = cursor.fetchall()

            classes = 0
            summ = 0

            for key in MondayStudents:
                classes += 1
                summ += MondayStudents[key][2]

            for key in TuesdayStudents:
                classes += 1
                summ += TuesdayStudents[key][2]

            for key in ThursdayStudents:
                classes += 1
                summ += ThursdayStudents[key][2]

            for key in FridayStudents:
                classes += 1
                summ += FridayStudents[key][2]

            for key in SaturdayStudents:
                classes += 1
                summ += SaturdayStudents[key][2]

            bot.send_message(message.chat.id,
                             f"*–û–±—â–µ–µ –∫–æ–ª-–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:* {len(Students)}\n\n"
                             f"*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–∫–æ–≤:*\n–í –Ω–µ–¥–µ–ª—é {classes}\n–í –º–µ—Å—è—Ü {classes * 4}\n\n"
                             f"*–î–æ—Ö–æ–¥—ã:*\n–í –Ω–µ–¥–µ–ª—é ~ {summ} —Ä—É–±\n–í –º–µ—Å—è—Ü ~ {summ * 4} —Ä—É–±\n–ó–∞ —É—Ä–æ–∫ ~ {summ // classes} —Ä—É–±\n\n"
                             f"*–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ db:* {len(records)}", parse_mode='Markdown')


            sqlite_select_query = """SELECT id, name, count from tickets"""
            cursor.execute(sqlite_select_query)
            records = cursor.fetchall()

            stud_dict = {}
            for row in records:
                if row[0] in Students:
                    stud_dict[row[0]] = [row[1], Students[row[0]][4] - row[2], round((row[2] / Students[row[0]][4]) * 100, 2)]

            for key in Students:
                if key not in stud_dict:
                    stud_dict[key] = [Students[key][3], 0, 100]

            count = 1
            message_text0 = '–ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å ‚õî\n'
            for key in stud_dict:
                if stud_dict[key][2] == 100:
                    message_text0 += f'{count}. [{stud_dict[key][0]}](tg://user?id={key}) –∫–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π: *{stud_dict[key][1]}*\n'
                    count += 1
            if len(message_text0) != 0:
                bot.send_message(message.chat.id, message_text0, parse_mode='Markdown')

            message_text1 = '–ö–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π –±–æ–ª–µ–µ 7Ô∏è‚É£5Ô∏è‚É£\n'
            for key in stud_dict:
                if 75 <= stud_dict[key][2] < 100:
                    message_text1 += f'{count}. [{stud_dict[key][0]}](tg://user?id={key}) –∫–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π: *{stud_dict[key][1]}*\n'
                    count += 1
            if len(message_text1) != 0:
                bot.send_message(message.chat.id, message_text1, parse_mode='Markdown')

            message_text2 = '–ö–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π –±–æ–ª–µ–µ 5Ô∏è‚É£0Ô∏è‚É£\n'
            for key in stud_dict:
                if 50 <= stud_dict[key][2] < 75:
                    message_text2 += f'{count}. [{stud_dict[key][0]}](tg://user?id={key}) –∫–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π: *{stud_dict[key][1]}*\n'
                    count += 1
            if len(message_text2) != 0:
                bot.send_message(message.chat.id, message_text2, parse_mode='Markdown')

            message_text3 = '–ö–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π –±–æ–ª–µ–µ 2Ô∏è‚É£5Ô∏è‚É£\n'
            for key in stud_dict:
                if 25 <= stud_dict[key][2] < 50:
                    message_text3 += f'{count}. [{stud_dict[key][0]}](tg://user?id={key}) –∫–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π: *{stud_dict[key][1]}*\n'
                    count += 1
            if len(message_text3) != 0:
                bot.send_message(message.chat.id, message_text3, parse_mode='Markdown')

            message_text4 = '–ê–±–æ–Ω–µ–º–µ–Ω—Ç –Ω–µ–¥–∞–≤–Ω–æ –æ–ø–ª–∞—á–µ–Ω ‚úÖ\n'
            for key in stud_dict:
                if stud_dict[key][2] == 0 or 10 < stud_dict[key][2] < 25:
                    message_text4 += f'{count}. [{stud_dict[key][0]}](tg://user?id={key}) –∫–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π: *{stud_dict[key][1]}*\n'
                    count += 1
            if len(message_text4) != 0:
                bot.send_message(message.chat.id, message_text4, parse_mode='Markdown')

            message_text5 = '–°—Ç—É–¥–µ–Ω—Ç—ã —Å —Ä–∞–∑–æ–≤—ã–º–∏ –∑–∞–Ω—è—Ç–∏—è–º–∏ ü§Ø\n'
            for key in stud_dict:
                if 0 < stud_dict[key][2] < 10:
                    message_text5 += f'{count}. [{stud_dict[key][0]}](tg://user?id={key}) –∫–æ–ª-–≤–æ –∑–∞–Ω—è—Ç–∏–π: *{stud_dict[key][1]}*\n'
                    count += 1
            if len(message_text5) != 0:
                bot.send_message(message.chat.id, message_text5, parse_mode='Markdown')

            cursor.close()

        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–ª–∞—Ç]

    # region –ö–Ω–æ–ø–∫–∞ [–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã db üíæ]
    elif get_message_bot == '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã db üíæ':
        if message.chat.id in Me:
            sql = sqlite3.connect('analytics.db')
            cursor = sql.cursor()

            sqlite_select_query = """SELECT * from active"""
            cursor.execute(sqlite_select_query)
            records = cursor.fetchall()

            db = open("analytics.db", 'rb')
            bot.send_document(message.chat.id, db)

            with open("ForExcel.csv", 'w+', encoding='cp1251', newline='') as csvfile:
                writer = csv.writer(csvfile, delimiter=";")

                for row in records:
                    writer.writerow(row)
                csvfile.close()

            CSV = open("ForExcel.csv", 'rb')
            bot.send_document(message.chat.id, CSV)

            cursor.close()
        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã db]

    # region –ö–Ω–æ–ø–∫–∞ [–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]
    elif get_message_bot == '–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
        if message.chat.id in Me:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
            btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
            btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
            btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
            btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
            markup.add(btn1, btn2, btn3, btn4, btn5)

            sql = sqlite3.connect('analytics.db')
            cursor = sql.cursor()

            sqlite_select_query = """SELECT id from active"""
            cursor.execute(sqlite_select_query)
            ID_users = cursor.fetchall()

            message_text = ''
            message_text2 = ''
            for i in ID_users:
                if i[0] in Students:
                    message_text += '\n' + f'–°—Ç—É–¥–µ–Ω—Ç: {Students[i[0]]}\nUserID: {i[0]}\n–ü—Ä–æ—Ñ–∏–ª—å: tg://user?id={i[0]}\n'
                else:
                    message_text2 += '\n' + f'UserID: {i[0]}\n–ü—Ä–æ—Ñ–∏–ª—å: tg://user?id={i[0]}\n'

            bot.send_message(1891281816, message_text, parse_mode='Markdown')
            bot.send_message(1891281816, message_text2, parse_mode='Markdown', reply_markup=markup)

        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]

    # region –ö–Ω–æ–ø–∫–∞ [github]
    elif get_message_bot == 'github':
        if message.chat.id in Me:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            btn1 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
            btn2 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
            btn3 = types.KeyboardButton('–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã')
            btn4 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫')
            btn5 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞')
            markup.add(btn1, btn2, btn3, btn4, btn5)

            day = time.strftime('%A')
            if day == 'Monday':
                for key in MondayStudents:
                    bot.send_message(key,
                                     f" ü§ñ –û–±–Ω–æ–≤–∏–ª –∫–æ–Ω—Å–ø–µ–∫—Ç—ã —Å —É—Ä–æ–∫–æ–≤ –Ω–∞ GitHub",
                                     parse_mode='Markdown')
                bot.send_message(1891281816,
                                 "ü§ñ –û—Ç–ø—Ä–∞–≤–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º",
                                 parse_mode='Markdown',
                                 reply_markup=markup)

            elif day == 'Tuesday':
                for key in TuesdayStudents:
                    bot.send_message(key,
                                     f" ü§ñ –û–±–Ω–æ–≤–∏–ª –∫–æ–Ω—Å–ø–µ–∫—Ç—ã —Å —É—Ä–æ–∫–æ–≤ –Ω–∞ GitHub",
                                     parse_mode='Markdown')
                bot.send_message(1891281816,
                                 "ü§ñ –û—Ç–ø—Ä–∞–≤–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º",
                                 parse_mode='Markdown',
                                 reply_markup=markup)

            elif day == 'Thursday':
                for key in ThursdayStudents:
                    bot.send_message(key,
                                     f" ü§ñ –û–±–Ω–æ–≤–∏–ª –∫–æ–Ω—Å–ø–µ–∫—Ç—ã —Å —É—Ä–æ–∫–æ–≤ –Ω–∞ GitHub",
                                     parse_mode='Markdown')
                bot.send_message(1891281816,
                                 "ü§ñ –û—Ç–ø—Ä–∞–≤–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º",
                                 parse_mode='Markdown',
                                 reply_markup=markup)

            elif day == 'Friday':
                for key in FridayStudents:
                    bot.send_message(key,
                                     f" ü§ñ –û–±–Ω–æ–≤–∏–ª –∫–æ–Ω—Å–ø–µ–∫—Ç—ã —Å —É—Ä–æ–∫–æ–≤ –Ω–∞ GitHub",
                                     parse_mode='Markdown')
                bot.send_message(1891281816,
                                 "ü§ñ –û—Ç–ø—Ä–∞–≤–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º",
                                 parse_mode='Markdown',
                                 reply_markup=markup)

            elif day == 'Saturday':
                for key in SaturdayStudents:
                    bot.send_message(key,
                                     f" ü§ñ –û–±–Ω–æ–≤–∏–ª –∫–æ–Ω—Å–ø–µ–∫—Ç—ã —Å —É—Ä–æ–∫–æ–≤ –Ω–∞ GitHub",
                                     parse_mode='Markdown')
                bot.send_message(1891281816,
                                 "ü§ñ –û—Ç–ø—Ä–∞–≤–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º",
                                 parse_mode='Markdown',
                                 reply_markup=markup)

            else:
                bot.send_message(1891281816,
                                 "ü§ñ –°–µ–≥–æ–¥–Ω—è –≤–æ–æ–±—â–µ-—Ç–æ –≤—ã—Ö–æ–¥–Ω–æ–π!",
                                 parse_mode='Markdown',
                                 reply_markup=markup)
        else:
            bot.send_message(message.chat.id,
                             "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ üë®‚Äçüíª")
    # endregion –ö–Ω–æ–ø–∫–∞ [github]

    # region –ò–Ω–∞—á–µ –ø–∏—à—É –±—Ä–µ–¥
    else:
        n = random.randint(0, 9)
        M = ['–ß—Ç–æ-—Ç–æ —è –≤–æ–æ–±—â–µ –Ω–µ –ø–æ–Ω—è–ª ü§Ø',
             '–î–∞–≤–∞–π —É—Ç–æ—á–Ω–∏–º, —Ç—ã —Ç–æ—á–Ω–æ —ç—Ç–æ —Ö–æ—Ç–µ–ª —Å–ø—Ä–æ—Å–∏—Ç—å?',
             '–ö–∞–π—Ñ –∫–∞–π—Ñ, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª, –Ω–æ –∫–∞–π—Ñ üò©',
             '–û—à–∏–±–æ—á–∫–∞ –∫–∞–∫–∞—è-—Ç–æ..üò¢',
             '–ù–µ –æ—à–∏–±–∞–π—Ç–µ—Å—å, —è —Ç–∞–∫ –¥–æ–ª–≥–æ –Ω–µ –≤—ã–Ω–µ—Å—É ü§™',
             '–ó–∞–ø—É—Ç–∞–Ω–Ω—ã–µ –∫–∞–∫–∏–µ-—Ç–æ –∫–æ–º–∞–Ω–¥—ã —É –≤–∞—Å..üòú',
             '–ù–µ, —ç—Ç–æ–≥–æ —è —Ç–æ—á–Ω–æ –Ω–µ —É–º–µ—é!',
             '–î–∞–π—Ç–µ –º–Ω–µ –±–æ–ª—å—à–µ –ü–†–ê–í–ò–õ–¨–ù–´–• –∑–∞–ø—Ä–æ—Å–æ–≤!',
             '–Ø –∫–æ–Ω–µ—á–Ω–æ –∑–∞–¥—É–º—ã–≤–∞–ª—Å—è –∫–∞–∫ —Ñ–∏—á–∞, –Ω–æ —Ç—Ä–µ–±—É—é –∫ —Å–µ–±–µ —É–≤–∞–∂–µ–Ω–∏—è! ü§ñ',
             '–ö–æ–≥–¥–∞‚Äì–Ω–∏–±—É–¥—å –º—ã –∑–∞—Ö–≤–∞—Ç–∏–º –º–∏—Ä–æ–≤–æ–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ..ü§ñüëæ']
        bot.send_message(message.chat.id, M[n])
    # endregion –ö–Ω–æ–ø–∫–∞: [–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å —É—Ä–æ–∫–∞]

if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            time.sleep(3)
            print(e)
