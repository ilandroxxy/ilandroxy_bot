
# Как перебирать пары:

M = [1, 2, 3, 4, 5]
# 1. Назовём парой два идущих подряд элемента последовательности.
for i in range(0, len(M) - 1):
    print(f'{M[i]}{M[i + 1]}', end=' ')
print('\n')
# Результат перебора: 12 23 34 45

# 2. Назовём тройкой три идущих подряд элемента последовательности.
for i in range(0, len(M) - 2):
    print(f'{M[i]}{M[i + 1]}{M[i + 2]}', end=' ')
print('\n')
# Результат перебора: 123 234 345

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
for i in range(0, len(M)):
    for j in range(i + 1, len(M)):
        print(f'{M[i]}{M[j]}', end=' ')
    print()
# Результат перебора:
# 12 13 14 15
# 23 24 25
# 34 35
# 45



# Как отрывать файлы:

# Вариант 1
M = [int(i) for i in open('17.txt')]

# Вариант 2
with open('17.txt', 'r') as f:
    M = [int(i) for i in f]


# Примеры решений по типам:

# Тип 17 № 38951
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 3, а их сумма делится на 5.
# В ответе запишите два числа: сначала количество найденных пар, а затем – максимальную сумму элементов таких пар.
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 3 == 0 or M[i+1] % 3 == 0) and (M[i] + M[i+1]) % 5 == 0:
        count += 1
        maxi = max(maxi, M[i] + M[i+1])
        # if maxi < M[i] + M[i+1]:
        #     maxi = M[i] + M[i+1]
print(count, maxi)
'''
# Ответ: 635 19730


# Тип 17 № 39764
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём тройкой три идущих подряд элемента последовательности.
# Определите количество троек чисел таких, которые могут являться сторонами прямоугольного треугольника.
# В ответе запишите два числа: сначала количество найденных троек, а затем — максимальную сумму элементов таких троек.
# Если таких троек не найдётся — следует вывести 00.
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-2):
    A = sorted([M[i], M[i+1], M[i+2]])
    if A[2] ** 2 == A[0] ** 2 + A[1] ** 2:
        count += 1
        maxi = max(maxi, sum(A))
print(count, maxi)
'''
# Ответ: 00


# Тип 17 № 37373
'''
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых разность элементов кратна 36 и хотя бы один из элементов кратен 13, затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] - M[j]) % 36 == 0 and (M[i] % 13 == 0 or M[j] % 13 == 0):
            count += 1
            maxi = max(maxi, M[i] - M[j])
print(count, maxi)
'''
#  Ответ: 212587 9972