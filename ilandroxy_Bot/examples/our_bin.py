

n = 1001
s = bin(n)[2:]  # встроенная функция перевода в 2-ную систему
print(s)  # Результат: 1111101001 в двоичной системе счисления

r = int(s, 2)  # встроенная функция перевода в 10-ную из любой системы
print(r)  # Результат: 1001 в десятичной системе счисления



def system(x, n):  # функция принимает два аргумента, число x для перевода в n-ую систему
	alphabet = '0123456789abcdefghijklmnopqrstuvwxyz'  # создается базовый алфавит, из него состоят наши системы счисления
	M = []
	while x > 0:  # пока x не "исчезнет" будем сохранять остатки от деления в список M
		M.append(alphabet[x % n])  # обратите внимание, что остатки отделения служат индексами для строки alphabet,
		# что позволяет нам использовать буквы для кодирования двузначных чисел
		x //= n
	M.reverse()  # обязательно разворачиваем список остатков

	result = ''.join(M)  # так как список состоит из строк, то мы можем "склеить" его обратно в строку
	return result  # функция возвращает итоговую строку в качестве результата


n = 1001
s = system(n, 16)
print(s)  # Результат: 3e9 в шестнадцатеричной системе счисления

r = int(s, 16)
print(r)  # Результат: 1001 в десятичной системе счисления