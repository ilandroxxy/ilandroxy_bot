

'''
Не забудьте скачать .txt файл!
'''

# Тип 24 № 27687
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Y. Хотя бы один символ Y находится в последовательности.
#
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# Вариант 1
s = open('24.txt').readline()  # считываем данные из файла в одну строку
count = 1  # создаем два счетчика для поиска условий (промежуточная длина, максимальная длина)
maxcount = 0
for i in range(len(s)-1):  # пробегаем цикл по индексам, за исключением последнего символа (чтобы не выйти за диапазон)
    if s[i] == 'Y' and s[i+1] == 'Y':  # если два рядом стоящих по индексу элемента равны "Y"
        count += 1  # то считаем кол-во элементов в последовательности
        maxcount = max(maxcount, count)  # сравниваем длину с максимальной и меняе в случае необходимости
    else:
	        count = 1  # иначе откатываемся до "заводских" значений (по поводу count = 1 напишу ниже)
print(maxcount)  # выводим длину максимальной последовательности
# Ответ: 10

# Вариант 2
s = open('24.txt').readline()  # считываем данные из файла в одну строку
s = s.replace('X', ' ').replace('Z', ' ')  # убираем ненужные нам буквы, заменой их на "пробелы"
M = [len(i) for i in s.split()]  # разделив строку на список строк, складываем в список М длины всех строк

# заменять на пробелы это важно, потому что split() убирает именно их
# хотя конечно же никто не мешает вам заменять на любой другой символ и затем сплитить по нему

print(max(M))  # выводдим максимальную длину из списка M
# Ответ: 10

# Вариант 3
print(max([len(i) for i in open('24.txt').readline().replace('X', ' ').replace('Z', ' ').split()]))
# Ответ: 10