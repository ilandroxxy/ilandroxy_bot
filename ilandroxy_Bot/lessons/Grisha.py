
# region Домашка

# endregion Домашка


# region Урок

# Тип 1: Назовём парой два идущих подряд элемента последовательности.

M = [1, 2, 3, 4, 5]
# 12 23 34 45
'''
for i in range(0, len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')
'''


# Тип 2: В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45


# Тип 17 № 46975
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых один из двух элементов делится на 3, а другой меньше среднего арифметического всех чётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.
'''
f = open('17.txt')
A = [int(x) for x in f if int(x) % 2 == 0]
sred1 = sum(A)/len(A)
print(sred1)
'''

'''
f = open('17.txt')
M = [int(x) for x in f]

summ = 0
kol = 0
for i in range(0, len(M)):
    if M[i] % 2 == 0:
        summ += M[i]
        kol += 1
sred2 = summ / kol
print(sred2)


count = 0
maxSum = 0
for i in range(0, len(M)-1):
    if (M[i] % 3 == 0 and M[i+1] < sred2) or (M[i+1] % 3 == 0 and M[i] < sred2):
        count += 1
        maxSum = max(maxSum, M[i] + M[i+1])
print(count, maxSum)
'''
# Ответ: 1711 14666


# (№ 5804) (П. Финкель)
'''
# В файле 17-346.txt содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от 1 до 200 000 включительно.
# Определите количество троек последовательности, для которых произведение всех чётных цифр трёх чисел не превосходит 2*10**9 и удовлетворяет маске «11*6*».
# В качестве ответа укажите количество таких троек и наибольшее произведение их цифр.
# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.

f = open('17.txt')
M = [int(x) for x in f]

count = 0
maxi = -99999
for i in range(0, len(M)-2):
    s = str(M[i]) + str(M[i+1]) + str(M[i+2])
    pr = 1
    for x in s:
        if int(x) % 2 == 0:
            pr *= int(x)
    if pr < 2*10**9:
        if str(pr)[:2] == '11':
            if '6' in str(pr):
            # if '6' in str(pr)[3:-2]:
                print(pr)
                count += 1
                maxi = max(maxi, pr)
print(count, maxi)
'''
# Ответ: 37 113246208



# (№ 5437) (Л. Малинов) В файле 17-343.txt содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от 0 до 10 000 включительно.
# Определите количество троек, в которых для каждого числа тройки сумма цифр в нечётных разрядах нацело делится на сумму цифр в чётных разрядах.
# Разряды нумеруются с нуля справа налево. В ответе запишите два числа: сначала количество найденных троек, а затем – минимальную сумму элементов таких троек.
# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.

def F(s):
    s = s[::-1]
    x, y = 0, 0
    for i in range(0, len(s)):
        if i % 2 == 0:
            x += int(s[i])
        else:
            y += int(s[i])

    if x != 0:
        if y % x == 0:
            return True
        else:
            return False
    else:
        return False

f = open('17.txt')
M = [int(x) for x in f]

count = 0
for i in range(0, len(M)-2):
    A = [M[i], M[i+1], M[i+2]]
    flag = True
    for x in A:
        if F(str(x)) == False:
            flag = False
    if flag == True:
        count += 1
print(count)




# REVERESE()
'''
M = [1, 4, 5, 6, 7, 43, 2]

M.reverse()
print(M)

M = M[::-1]
print(M)

s = '12378213'
s = s[::-1]
print(s)

# M.sort()  # метод списков
# print(M)

M = sorted(M, reverse=True)
print(M)

A = {1, 3, 4, 32, 3, 42, 34, 24}
A = sorted(A, reverse=True)  # функция sorted - возвращает список 
print(A)
'''














# endregion Урок


# todo:  Гриша = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], на следующем уроке: