'''
print('hello, world!')
M = [1, 1, 2, 3, 2, 5]
print(M.count(1))

print(M.count.__doc__)

print(help(M.count))
'''

# Номера которые решаются
'''
import random
M = [random.randint(0, 100) for _ in range(10)]
print(M)
'''

'''
s = input()
print(s, type(s))  # <class 'str'>

n = int(input())
print(n, type(n))  # <class 'int'>
'''

# Ввод списка с клавиатуры
'''
n = int(input('Введите длину списка: '))
M = []
for i in range(n):  # range(START=0, STOP=n-1, STEP=1)
    x = int(input(f'x{i+1}: '))
    M.append(x)
    print(M)
'''
'''
M = [int(x) for x in input().split() if x.isdigit()]
print(M)
'''
# ValueError: invalid literal for int() with base 10: 'i'


# № 10106 Демоверсия 2024 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

# Среди натуральных чисел, не превышающих 10**10, найдите все числа,
# соответствующие маске 1?2157*4, делящиеся на 2024 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце – соответствующие им результаты деления этих чисел на 2024.
# Количество строк в таблице для ответа избыточно.
'''
from fnmatch import *
for x in range(2024, 10**10, 2024):
    if fnmatch(str(x), '1?2157*4'):
        print(x, x//2024)
'''


# Тип 14 №9651
# Сколько единиц содержится в двоичной записи значения выражения:
# 4**2018 + 2**2017 − 5?
'''
print(bin(4**2018 + 2**2017 - 5).count('1'))
'''
# Ответ: 2017
