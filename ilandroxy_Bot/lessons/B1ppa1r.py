# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# todo Поразбираться
# Тип 7 №61387
# Аудиопоток кодируется в режиме стерео (2 канала) с частотой дискретизации 32 кГц
# и передаётся по каналу с пропускной способностью 40 Кбайт/сек.
# При этом используются методы сжатия, которые позволяют сократить объём передаваемой информации на 68%.
# С какой максимальной глубиной кодирования можно вести запись?
#
# В ответе укажите только целое число — максимально возможную глубину кодирования в битах.
'''
x = (40*2**13) / (2*32000*(1-0.68))
print(x)
'''


# Тип 8 №46966
# Светлана составляет коды из букв слова РОСОМАХА. Код должен состоять из 8 букв,
# и каждая буква в нём должна встречаться столько же раз, сколько в заданном слове.
# Кроме того, в коде не должны стоять рядом две гласные и две согласные буквы.
# Сколько кодов может составить Светлана?
'''
count = set()
s1 = 'РСМХ'
s2 = 'ОА'
for a in s1:
    for b in s2:
        for c in s1:
            for d in s2:
                for e in s1:
                    for f in s2:
                        for g in s1:
                            for h in s2:
                                slovo = a + b + c + d + e + f + g + h
                                if len(set(slovo)) == 6 and slovo.count('О') == 2 and slovo.count('А') == 2:
                                    count.add(slovo)
print(len(count)*2)
'''


# Тип 8 №46966
'''
count = set()
from itertools import permutations
for s in permutations('РОСОМАХА'):
    slovo = ''.join(s)
    s1, s2 = 'РСМХ', 'ОА'
    if all((slovo[i] in s1 and slovo[i+1] in s2) for i in range(0,  len(slovo)-1, 2)):
        count.add(slovo)
print(len(count)*2)
'''
# Ответ: 288


# 0. Как правильно прочитать содержимое файла 17.txt:

'''
file = open('17.txt')
print(file)  # <_io.TextIOWrapper name='17.txt' mode='r' encoding='UTF-8'>

for s in file:
    print(s, end='')

file.close()    
'''

'''
with open('17.txt', 'r') as file:
    for s in file:
        print(s, type(s))
'''

'''
M = [int(x) for x in open('17.txt')]
'''


# Разберем три основных типа задач на примере.
# Представим, что наш файл содержал такие значения:
"""
M = [1, 2, 3, 4, 5]

# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности:
# 12 23 34 45

for i in range(0, len(M)-1):
    x, y = M[i], M[i+1]
    print(f"{x}{y}", end=' ')
print()

# '''
# Если написать: for i in range(0, len(M)):
# То получим ошибку: IndexError: list index out of range
# '''


# 2. В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности:
# 123 234 345

for i in range(0, len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f"{x}{y}{z}", end=' ')
print()


# 3. В данной задаче под парой подразумевается два различных элемента последовательности:
# 12 13 14 15
# 23 24 25
# 34 35
# 45

for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f"{x}{y}", end=' ')
    print()
"""


# Тип 17 №37372
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых разность элементов кратна 45 и хотя бы один из элементов кратен 18,
# затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
cnt = 0
maxi = 0  # mini = 999999999
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if abs(x - y) % 45 == 0 and (x % 18 == 0 or y % 18 == 0):
            cnt += 1
            maxi = max(maxi, abs(x - y))
            # if maxi < abs(x - y):
            #     maxi = abs(x - y)
            #     print(maxi)

print(cnt, maxi)
'''
# Ответ: 92471 9945.


# Тип 17 №55813
# Элементы последовательности могут принимать целые значения от 1 до 100000 включительно.
# Определите количество пар последовательности, в которых только одно число трехзначное,
# и сумма элементов пары кратна минимальному трехзначному значению последовательности,
# оканчивающемуся на 5. В ответе запишите два числа: сначала количество найденных пар,
# затем минимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.

'''
print(len('100'))  # 3
print(len('-100'))  # 4
'''

'''
M = [int(x) for x in open('17.txt')]
A = min([x for x in M if len(str(x)) == 3 and str(x)[-1] == '5'])
cnt = 0
mini = 9999999
for i in range(0, len(M)-1):
    x, y = M[i], M[i+1]
    if (len(str(abs(x))) == 3) ^ (len(str(abs(y))) == 3):  # в которых только одно число трехзначное
        if (x + y) % A == 0:
            cnt += 1
            mini = min(mini, x + y)
print(cnt, mini)
'''
# Ответ: 2 33120


# Тип 15 №34541
# На числовой прямой даны два отрезка: Р = [3, 38] и Q = [21, 57].
# Какова наибольшая возможная длина интервала A, что логическое выражение
# ((х ∈ Q) → (х ∈ Р)) → ¬(х ∈ A)
# тождественно истинно, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    P = 3 <= x <= 38
    Q = 21 <= x <= 57
    A = a1 <= x <= a2
    return (Q <= P) <= (not A)


R = []
M = [i/5 for i in range(60*5)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(max(R))   # 18.75  # 18.799999999999997
'''
# Ответ: 19

# endregion Урок: ******************************************************************

# Никита = [5.1, 7.1, 8.1, 12.1, 13.1, 14.1, 15.1, 16.1, 17.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
