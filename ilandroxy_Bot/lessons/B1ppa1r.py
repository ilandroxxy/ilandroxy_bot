# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 9 №59687
# Откройте файл электронной таблицы, содержащей в каждой строке семь натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для чисел которых выполнены оба условия:
# — в строке есть одно число, которое повторяется трижды, остальные четыре числа различны;
# — среднее арифметическое неповторяющихся чисел строки не больше повторяющегося числа.
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]  # [44, 12, 98, 69, 69, 99, 90]
    if len(set(M)) == 5 and any(M.count(x) == 3 for x in M):
        copied = (sum(M) - sum(set(M))) / 2
        if (sum(set(M)) - copied) / 4 <= copied:
            count += 1
print(count)
'''
# Ответ: 36


# Тип 9 №61389
# В каждой строке электронной таблицы записаны шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых одновременно выполнены все следующие условия:
# — все числа в строке различны;
# — среднее арифметическое наибольшего и наименьшего чисел в строке меньше
# среднего арифметического всех остальных чисел.
'''
cnt = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if len(set(M)) == len(M):
        if ((M[0] + M[-1]) / 2) < (sum(M[1:-1]) / 4):
            cnt += 1
print(cnt)
'''
# Ответ: 6724


# Тип 9 №58322
# Откройте файл электронной таблицы, содержащей в каждой строке четыре натуральных числа.
# Определите количество строк таблицы, содержащих числа, для которых выполнено хотя бы одно из условий:
# — квадрат наибольшего из четырёх чисел больше произведения трёх других;
# — будучи упорядоченными, четыре числа образуют арифметическую прогрессию.
'''
cnt = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if M[-1] ** 2 > (M[0] * M[1] * M[2]) or all(M[1] - M[0] == M[i+1] - M[i] for i in range(len(M)-1)):
        cnt += 1
print(cnt)
'''
# Ответ: 61

# todo Добить задачку 55596
# Тип 9 №55596
# В каждой строке электронной таблицы записаны шесть натуральных чисел.
# Назовём ячейку таблицы хорошей, если для неё выполняются следующие условия:
# — число в данной ячейке не встречается в других ячейках этой же строки;
# — число в данной ячейке ровно 45 раз встречается в других строках таблицы.
#
# Определите количество строк таблицы, содержащих хотя бы одну хорошую ячейку.
'''
A = []
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    A.append(set(M))

cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]

    if any(M.count(x) == 1 and len([a for a in A if x in a]) == 46 for x in M):
        cnt += 1
print(cnt)
'''

# Тип 9 №51978
# В каждой строке электронной таблицы записаны пять целых положительных чисел.
# Определите, сколько в таблице строк, для которых выполнены следующие условия:
#
# — все числа в строке различны;
# — нечётных чисел больше, чем чётных;
# — сумма нечётных чисел меньше суммы чётных.
#
# В ответе запишите число — количество строк, для которых выполнены эти условия.
'''
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(set(M)) == len(M):
        chet = [x for x in M if x % 2 == 0]
        nechet = [x for x in M if x % 2 != 0]
        if len(nechet) > len(chet):
            if sum(nechet) < sum(chet):
                cnt += 1
print(cnt)
'''
# Ответ: 303


# Тип 24 №27697
# Текстовый файл состоит не более чем из 10**6 символов L, D и R.
# Определите длину самой длинной последовательности, состоящей из символов D.
'''
s = open('24.txt').readline()
maxi = 0
count = 1
for i in range(len(s)-1):
    # if s[i] == 'D' and s[i+1] == 'D':
    if s[i:i+2] == 'DD':
        count += 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)


# Вариант 2
s = open('24.txt').readline()
s = s.replace('L', ' ').replace('R', ' ')
print(max([len(i) for i in s.split()]))

print(max([len(i) for i in open('24.txt').readline().replace('L', ' ').replace('R', ' ').split()]))


# Вариант 3
s = open('24.txt').readline()
print(s)
print(len('DDDDDDDDDDD'))
'''
# Ответ: 11


# Тип 24 №47228
# Текстовый файл состоит из символов A, C, D, F и O.
# Определите максимальное количество идущих подряд пар символов вида
# согласная + гласная.
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
s = s.replace('O', 'A').replace('C', 'D').replace('F', 'D')
print(s)
print(len('DADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADA') / 2)


s = open('24.txt').readline()
s = s.replace('O', 'A').replace('C', 'D').replace('F', 'D')
s = s.replace('DA', '*').replace('D', ' ').replace('A', ' ')
print(max([len(i) for i in s.split()]))
'''


# Тип 24 №36037
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд символов, среди которых нет подстроки XZZY.
'''
s = open('24.txt').readline()
s = s.replace('XZZY', '*** ***')
print(max([len(i) for i in s.split()]))
'''
# Ответ: 1713

# Тип 24 №37131
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите наибольшую длину цепочки символов, среди которых нет символов K и L, стоящих рядом.
'''
s = open('24.txt').readline()
s = s.replace('KL', '* *').replace('LK', '* *')
print(max([len(i) for i in s.split()]))
'''
# Ответ: 2796

# Тип 24 №59702
# Текстовый файл состоит из символов T, U, V, W, X, Y и Z.
#
# Определите в прилагаемом файле максимальное количество идущих подряд символов
# (длину непрерывной подпоследовательности), среди которых символ Y встречается не более 150 раз.
#
# Для выполнения этого задания следует написать программу.

# endregion Урок: ******************************************************************

# Никита = [5.1, 7.1, 8.1, 12.1, 13.1, 14.1, 15.1, 16.1, 17.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
