# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# Тип 12 №10477
# Какая строка получится в результате применения приведённой ниже программы к строке,
# состоящей из 1000 идущих подряд цифр 8? В ответе запишите полученную строку.
#
# ПОКА нашлось (999) ИЛИ нашлось (888)
#   ЕСЛИ нашлось (888)
#       ТО заменить (888, 9)
#   ИНАЧЕ заменить (999, 8)
'''
s = '8' * 1000

while '999' in s or '888' in s:
    if '888' in s:
        s = s.replace('888', '9', 1)
    else:
        s = s.replace('999', '8', 1)

print(s)
'''
# Ответ: 8998


# Тип 12 №60254
# Дана программа для Редактора:
# ПОКА нашлось (52) ИЛИ нашлось (2222) ИЛИ нашлось (1122)
#     ЕСЛИ нашлось (52)
#         ТО заменить (52, 11)
#     ЕСЛИ нашлось (2222)
#         ТО заменить (2222, 5)
#     ЕСЛИ нашлось (1122)
#         ТО заменить (1122, 25)
#
# На вход приведённой выше программе поступает строка, начинающаяся с цифры «5»,
# а затем содержащая n цифр «2» (3 < n < 10000).
#
# Определите наибольшее значение n, при котором сумма цифр в строке, получившейся
# в результате выполнения программы, равна 64.
'''
for n in range(4, 10000):
    s = '5' + '2' * n

    while '52' in s or '2222' in s or '1122' in s:
        if '52' in s:
            s = s.replace('52', '11', 1)
        if '2222' in s:
            s = s.replace('2222', '5', 1)
        if '1122' in s:
            s = s.replace('1122', '25', 1)

    if sum([int(x) for x in s if x.isdigit()]) == 64:
        print(n)
'''
# Ответ: 156


# Тип 12 №25844
# На вход приведённой ниже программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 11 цифр 1, 12 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.
#
# Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.
#
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)
#     ЕСЛИ нашлось (>1)
#         ТО заменить (>1, 22>)
#     ЕСЛИ нашлось (>2)
#         ТО заменить (>2, 2>)
#     ЕСЛИ нашлось (>3)
#         ТО заменить (>3, 1>)
'''
s = '>' + '1' * 11 + '2' * 12 + '3' * 30  # расположенных в произвольном порядке

while '>1' in s or '>2' in s or '>3' in s:
    if '>1' in s:
        s = s.replace('>1', '22>', 1)
    if '>2' in s:
        s = s.replace('>2', '2>', 1)
    if '>3' in s:
        s = s.replace('>3', '1>', 1)

print(sum([int(x) for x in s if x.isdigit()]))

'''


# Тип 12 №47216
# Дана программа для Редактора:
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>0)
#     ЕСЛИ нашлось (>1)
#         ТО заменить (>1, 22>)
#     ЕСЛИ нашлось (>2)
#         ТО заменить (>2, 2>)
#     ЕСЛИ нашлось (>0)
#         ТО заменить (>0, 1>)
#
# На вход приведённой выше программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 39 цифр «0», n цифр «1» и 39 цифр «2», расположенных в произвольном порядке.
#
# Определите наименьшее значение n, при котором сумма числовых значений цифр строки, получившейся
# в результате выполнения программы, является простым числом.
'''
def is_prime(x):
    if x == 1:
        return False
    for j in range(2, x):
        if x % j == 0:
            return False
    return True


for n in range(0, 100):
    s = '>' + 39 * '0' + '1' * n + '2' * 39

    while '>1' in s or '>2' in s or '>0' in s:
        if '>1' in s:
            s = s.replace('>1', '22>', 1)
        if '>2' in s:
            s = s.replace('>2', '2>', 1)
        if '>0' in s:
            s = s.replace('>0', '1>', 1)

    summ = sum([int(x) for x in s if x.isdigit()])
    if is_prime(summ):
        print(n)
        break
'''
# Ответ: 5


# Тип 12 №33514
# Дана программа для редактора:
#     ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#         заменить (01, 30)
#         заменить (02, 101)
#         заменить (03, 202)
#
# Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 15 единиц, 10 двоек и 60 троек.
# Сколько единиц было в исходной строке?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z

            while '01' in s or '02' in s or '03' in s:
                s = s.replace('01', '30', 1)
                s = s.replace('02', '101', 1)
                s = s.replace('03', '202', 1)

            if s.count('1') == 15 and s.count('2') == 10 and s.count('3') == 60:
                print(x)
                exit()
'''
# Ответ: 45


# Тип 12 №28550
# Дана программа для Редактора:
#
# ПОКА нашлось (21)
#   заменить (21, 5)
#
# Исходная строка содержит десять единиц и некоторое количество двоек, других цифр нет,
# точный порядок расположения единиц и двоек неизвестен.
# После выполнения программы получилась строка с суммой цифр 34.
# Какое наименьшее количество двоек могло быть в исходной строке?
'''
from itertools import product
for n in range(0, 10):
    for x in product('12', repeat=10+n):
        if x.count('1') == 10:
            s = ''.join(x)

            while '21' in s:
                s = s.replace('21', '5', 1)

            if sum([int(x) for x in s]) == 34:
                print(n)
                exit()
 '''
# Ответ: 6


# Тип 8 №10500
# Шифр кодового замка представляет собой последовательность из пяти символов, каждый из которых является цифрой от 1 до 5.
# Сколько различных вариантов шифра можно задать, если известно, что цифра 1 встречается ровно три раза,
# а каждая из других допустимых цифр может встречаться в шифре любое количество раз или не встречаться совсем?
'''
s = '12345'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    num = a + b + c + d + e
                    if num[0] != '0':
                        if num.count('1') == 3:
                            count += 1
print(count)

# Вариант 2
from itertools import product
count = 0
for num in product('12345', repeat=5):
    if num.count('1') == 3:
        count += 1
print(count)
'''
# Ответ: 160


# Тип 8 №47212
# Определите количество пятизначных чисел, записанных в восьмеричной системе
# счисления, в записи которых только одна цифра 6,
# при этом никакая нечётная цифра не стоит рядом с цифрой 6.
'''
from itertools import product
count = 0
for num in product('01234567', repeat=5):
    s = ''.join(num)
    if s[0] != '0':
        if s.count('6') == 1:
            if all(pair not in s for pair in '16 61 36 63 56 65 76 67'.split()):
                count += 1
print(count)
'''
# Ответ: 2961


# Тип 8 №58237
# Сколько существует различных четырёхзначных чисел, записанных в семеричной системе счисления,
# в записи которых цифры следуют слева направо в строго убывающем порядке?
'''
from itertools import product
count = 0
for num in product('0123456', repeat=4):
    if num[0] != '0':
        if list(num) == sorted(num, reverse=True):
            if len(set(num)) == len(num):
                count += 1
print(count)


from itertools import permutations
count = 0
for num in permutations('0123456', 4):
    if num[0] != '0':
        if list(num) == sorted(num)[::-1]:
            count += 1
print(count)
'''
# Ответ: 35


# endregion Урок: ******************************************************************

# Никита = [5.1, 12.1, 14.1]
# КЕГЭ  = []
# на следующем уроке: Продолжаем разбирать 8-ой номер
