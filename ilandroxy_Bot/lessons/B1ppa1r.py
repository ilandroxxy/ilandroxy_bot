# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# № 12254 ЕГКР 16.12.23 (Уровень: Базовый)
# Текстовый файл состоит из символов R, S и Q. В прилагаемом файле определите максимальное количество
# символов в непрерывной подпоследовательности, состоящей из идущих подряд групп символов RSQ в указанном порядке.
# При этом в начале и в конце искомой последовательности группа символов RSQ может быть неполной.
# Например, условию задачи удовлетворяют: SQRSQRSQR; QRSQRS и т.п.
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
count = 2
maxi = 0
for i in range(len(s)-2):
    if s[i:i+3] == 'RSQ' or s[i:i+3] == 'SQR' or s[i:i+3] == 'QRS':
        count += 1
        maxi = max(maxi, count)
    else:
        count = 2
print(maxi)
'''
# Ответ: 54


# № 11241 (Уровень: Базовый)
# (М. Ишимов) Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите в прилагаемом файле максимальное количество идущих подряд символов, среди
# которых нет ни одной буквы из набора букв A,B,C и D.
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
for a in 'ABCD':
    s = s.replace(a, ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 193


# todo № 10105 Демоверсия 2024 (Уровень: Средний)
# Текстовый файл состоит из символов T, U, V, W, X, Y и Z.
# Определите в прилагаемом файле максимальное количество идущих подряд символов
# (длину непрерывной подпоследовательности), среди которых символ T встречается ровно 100 раз.
# Для выполнения этого задания следует написать программу.

# *******T********T**********T********T****T******T*********T**********T**********T
'''
# s = open('24.txt').readline()
s = '***T********T**********T********T****T******T*********T**********T***'
maxi = 0
pos = [i for i in range(len(s)) if s[i] == 'T']
print(pos)
for i in range(len(pos)-4):
    if maxi < pos[i+4]-pos[i]:
        maxi = pos[i+4]-pos[i]
        print(i+4, i)
    # maxi = max(maxi, pos[i+4]-pos[i])
print(maxi)
'''


# № 9845 Основная волна 27.06.23 (Уровень: Базовый)
# Текстовый файл состоит из символов, обозначающих буквы латинского алфавита А, В и С и цифры 8 и 9.
#
# Определите в прилагаемом файле максимальное количество идущих подряд символов,
# среди которых ни одна буква не стоит рядом с буквой, а цифра — с цифрой.
#
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
s = s.replace('B', 'A').replace('C', 'A')
s = s.replace('8', '9')
s = s.replace('A9', '*+').replace('9A', '+*')
s = s.replace('A', ' ').replace('9', ' ')
s = s.replace('++', ' ').replace('**', ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 18


# № 9791 Основная волна 20.06.23 (Уровень: Средний)
# Текстовый файл состоит из символов, обозначающих заглавные буквы латинского алфавита и цифры от 1 до 9 включительно.
# Определите в прилагаемом файле максимальное количество идущих подряд символов,
# которые могут представлять запись числа в шестнадцатеричной системе счисления.
'''
s = open('24.txt').readline()
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
good = alphabet[:16]  # ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F']
bad = alphabet[16:]  # ['G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
for x in bad:
    s = s.replace(x, ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 21


# № 9075 Danov2306 (Уровень: Базовый)
# (А.Богданов) Текстовый файл состоит не более чем из 10**6 символов
# и содержит только буквы латинского алфавита и десятичные цифры.
# Определите максимальное количество идущих подряд символов, среди которых нет рядом стоящих четных и нечетных цифр.
'''
s = open('24.txt').readline()
alphabet = sorted('0123456789')
chet = alphabet[0::2]
nechet = alphabet[1::2]
for x in chet:
    s = s.replace(x, '2')
for x in nechet:
     s = s.replace(x, '1')
s = s.replace('12', ' ').replace('21', ' ')
print(max([len(x) for x in s.split()])+2)
'''
# Ответ: 263


# № 8654 (Уровень: Средний)
# (Л. Шастин) Текстовый файл состоит не более, чем из 1 200 000 прописных символов латинского алфавита.
# Назовём маской подстроки последовательность символов, в которой также может встречаться символ «?»,
# который означает ровно одну произвольную букву.
#
# Определите максимальное количество идущих подряд символов,
# среди которых нет ни одной подстроки, соответствующей маске ?B??D.
'''
s = open('24.txt').readline()
from itertools import product
for v in product('QWERTYUIOPASFGHJKLZXCVNMBD', repeat=5):
    slovo = ''.join(v)
    if slovo[1] == 'B' and slovo[-1] == 'D':
        s = s.replace(slovo, ' ')
print(max(len(x) for x in s.split()) + 4)
'''
# 4187  # 4179 + 8


# endregion Урок: ******************************************************************

# Никита = [5.1, 7.1, 8.1, 9.1, 12.1, 13.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1]
# КЕГЭ  = []
# на следующем уроке:
