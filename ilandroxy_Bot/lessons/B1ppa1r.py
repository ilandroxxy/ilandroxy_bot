# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# - однострочный комментарий

'''
"""
- многострочный комментарий
"""
'''

print('Я прочитал книгу "Война и мир"')


# Типы данных переменных
'''
a = 5  # int (integer)
print(type(3+4))  # <class 'int'> - функция type() определяет тип данных

b = 5.0  # float (число с плавающей точкой)
print(4 / 2)  # 2.0

c = '5'  # str (string) - все символы, слова, текст
print('a' * 5)  # aaaaa
print('helo, ' + 'world!')  # helo, world!

d1 = True
d2 = False  # bool (Boolean)
print(4 < 10)  # True
'''


# Типы данных коллекций
'''
A = [1, 2, 3]  # list() - списки
# Способны хранить неограниченное кол-во элементов
# Раличных типов данных
# Элементы списков упорядочены и имеют порядковые номера - индексы
# Счет индексов начинается с нуля или с -1 в обратную сторону
# Через индексы мы можем брать элементы списков или менять элементы списков

B = (1, 2, 3)  # tuple() - кортежи
# Все аналогично спискам, кроме: нельзя менять элементы

C = {1, 2, 3}  # set() - множества
# Не могут содержать копий числа, удаляют их

M = [1, 2, 1, 2, 3, 1, 3, 5]
print(M)  # [1, 2, 1, 2, 3, 1, 3, 5]
print(set(M))  # {1, 2, 3, 5}
print(len(set(M)))  # кол-во всех различных элементов


S = {1: 'one', 2: 'two', 3: 'three', 'список': [1, 2, 3]}  # dict()  - словари
# Элемент словаря бьется на две части: ключи и значение
# Доступ к значению элемента осуществляется через его ключ
# Ключи повторятсья не могут

print(S[1])
print(S['список'])  # [1, 2, 3]
S[4] = 'four'
print(S)  # {1: 'one', 2: 'two', 3: 'three', 'список': [1, 2, 3], 4: 'four'}
S[4] = '4'
print(S)  # {1: 'one', 2: 'two', 3: 'three', 'список': [1, 2, 3], 4: '4'}

print(S.keys())  # dict_keys([1, 2, 3, 'список', 4])
print(S.values())  # dict_values(['one', 'two', 'three', [1, 2, 3], '4'])
print(S.items())  # dict_items([(1, 'one'), (2, 'two'), (3, 'three'), ('список', [1, 2, 3]), (4, '4')])

for key, value in S.items():
    print(key, value)   
    # 1 one
    # 2 two
    # 3 three
    # список [1, 2, 3]
    # 4 4
'''

'''
M = [1, 3.0, '23', True, 1+4, 7/2, '3'*4, 4<10,
     [1, 2, 3], (1, 2, 3), {1, 2, 3},
     {1: 'one', 2: 'two', 3: 'three'}]

for elem in M:
    print(elem, type(elem))
    # 1 <class 'int'>
    # 3.0 <class 'float'>
    # 23 <class 'str'>
    # True <class 'bool'>
    # 5 <class 'int'>
    # 3.5 <class 'float'>
    # 3333 <class 'str'>
    # True <class 'bool'>
    # [1, 2, 3] <class 'list'>
    # (1, 2, 3) <class 'tuple'>
    # {1, 2, 3} <class 'set'>
    # {1: 'one', 2: 'two', 3: 'three'} <class 'dict'>
'''

# Конвертация типов данных
'''
a = 5
print(a, type(a))    # 5 <class 'int'>

a = str(a)  # 5 <class 'str'>
print(a, type(a))

a = float(a)  # 5.0 <class 'float'>
print(a, type(a))

a = int(a)  # 5 <class 'int'>
print(a, type(a))


A = [1, 2, 3, 2, 3]
print(A, type(A))  # [1, 2, 3, 2, 3] <class 'list'>

A = tuple(A)
print(A, type(A))  # (1, 2, 3, 2, 3) <class 'tuple'>

A = set(A)
print(A, type(A))  # {1, 2, 3} <class 'set'>

A = list(A)
print(A, type(A))  # [1, 2, 3] <class 'list'>
'''


# Ввода данных с клавиатуры:
'''
x = input('Введите символ: ')  # input() - ввод строки с клавиатуры
print(x, type(x))

x = int(input('Введите число: '))  # input() - ввод строки с клавиатуры
print(x, type(x))
'''

# А как ввести список с клавиатуры?
'''
n = int(input('Введите длину списка: '))
M = []
for i in range(n):
    M.append(int(input(f'x{i}: ')))
    print(M)
'''

# Аналогичное решение через генераторы списков:
'''
print([int(x) for x in input('Введите список: ').split() if x.isdigit()])
'''

# Работа с f-строкой
'''
weather = 'облачно'
temperature = int(input('Введите температуру: '))
# 'Сегодня облачно, а температура 24 градуса!'
print('Сегодня ', weather, ' , а температура ', temperature, ' градуса!')
print('Сегодня' + weather + ' , а температура ' + str(temperature) + ' градуса!')
print('Сегодня {} , а температура {} градуса!'.format(weather, temperature))
print(f'Сегодня {weather} , а температура {temperature} градуса!')
'''


# Базовая арифметика
'''
a = 7
b = 2

print(f'{a} + {b} = {a+b} \n'
      f'{a} - {b} = {a-b} \n'
      f'{a} * {b} = {a*b}')

print()  # в принте есть '\n'

print(f'{a} / {b} = {a/b} - вещественное деление \n'
      f'{a} // {b} = {a//b} - целочисленное деление \n'
      f'{a} % {b} = {a%b} - остаток от деления ')

print()
'''


'''
for i in range(10):
    print(i, end=' ')
'''

# Библиотеки в python: свои, встроенные и публичные (с инета)
'''
import useful
print(useful.Who_Is_Name())
'''

# Перечислим списко встроенных бибилотек, которые могут пригодиться на экзамене
'''
import math
import string
alphabet = string.digits + string.ascii_uppercase
print(alphabet)  # 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ

alphabet2 = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
print(alphabet2)  # ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']


import turtle  # для решения 6-го номера
import itertools  # может пригодиться в номерах: 8, 9, 12, 24
import fnmatch  # для решения 25-го номера с масками
import ipaddress  # для решения нового 13-го номера
import sys  # для решения 16-го номера 
sys.setrecursionlimit(10000)
'''




# Тип 14 №48385
# Операнды арифметического выражения записаны в системах
# счисления с основаниями 13 и 18:
#
# 8x78y_13 + 79xy7_18
#
# В записи чисел переменными x и y обозначены допустимые
# в данных системах счисления неизвестные цифры.
# Определите значения x и y, при которых значение данного арифметического
# выражения будет наименьшим и кратно 9.
# Для найденных значений x и y вычислите частное от деления значения
# арифметического выражения на 9 и укажите его в ответе
# в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
import string
alphabet = string.digits + string.ascii_uppercase
print(alphabet)  # 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ

for x in alphabet[:13]:
    for y in alphabet[:13]:
        A = int(f'8{x}78{y}', 13)
        B = int(f'79{x}{y}7', 18)
        if (A+B) % 9 == 0:
            print((A+B) // 9)
            exit()
'''
# Ответ: 113024



# endregion Урок: ******************************************************************


# todo: Никита = []
# todo: КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке:
