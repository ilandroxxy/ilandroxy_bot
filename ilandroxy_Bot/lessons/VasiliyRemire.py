
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************
'''
print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = 
                if not F == :
                    print(x, y, z, w, F)
'''

# Логическая функция F задаётся выражением: (w → (y ≡ z)) ∧ (y ≡ (z → x)).
# Дан частично заполненный фрагмент, содержащий неповторяющиеся строки таблицы истинности функции F.
# Определите, какому столбцу таблицы истинности соответствует каждая из переменных w, x, y, z.
'''
print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (w <= (y == z)) and (y == (z <= x))
                print(x, y, z, w, F)
  '''

# Тип 5 № 25836
# На вход алгоритма подаётся натуральное число N.
# Алгоритм строит по нему новое число следующим образом.
#
# 1) Строится двоичная запись числа N.
#
# 2) К этой записи дописываются справа ещё два разряда по следующему правилу:
# если N чётное, в конец числа (справа) дописываются два нуля,
# в противном случае справа дописываются две единицы.
# Например, двоичная запись 1001 числа 9 будет преобразована в 100111.
#
# Полученная таким образом запись (в ней на два разряда больше,
# чем в записи исходного числа N) является двоичной записью числа - результата работы данного алгоритма.
#
# Укажите максимальное число N, для которого результат работы алгоритма будет меньше 134.
# В ответе это число запишите в десятичной системе счисления.


#  Вариант 1
'''
for n in range(1, 10000+1):
    M = []
    temp = n
    while n > 0:
        M.append(n % 2)  # 1) Строится двоичная запись числа N.
        n //= 2  # n = n // 2
    M.reverse()

    if temp % 2 == 0:  # 2)
        M.append(0)
        M.append(0)
    else:
        M.append(1)
        M.append(1)

    r = 0
    M.reverse()  # перевод из 2-ной в 10-ную
    for i in range(0, len(M)):
        r += M[i] * 2 ** i

    if r < 134:
        print(temp)
'''

# Вариант 2
'''
for n in range(1, 10000+1):
    M = []
    temp = n
    while n > 0:
        M.append(n % 2)  # 1) Строится двоичная запись числа N.
        n //= 2  # n = n // 2
    M.reverse()

    if temp % 2 == 0:  # 2)
        M += [0, 0]
    else:
        M += [1, 1]  # M = M + [1, 1] 

    r = 0
    M.reverse()  # перевод из 2-ной в 10-ную
    for i in range(0, len(M)):
        r += M[i] * 2 ** i

    if r < 134:
        print(temp)
'''


# Вариант решения только для 2-ной
'''
for x in range(1, 10000):
    s = bin(x)[2:]

    if x % 2 == 0:
        s += '00'
    else:
        s += '11'

    r = int(s, 2)

    if r < 134:
        print(x)
'''

# СУПЕР УНИВЕРСАЛЬНЫЙ ВАРИАНТ РЕШЕНИЯ

'''
def calculate(x: int, n: int):
    """
    :param x: Число, которое будем переводить из 10-ной
    :param n: Число система счисления в которую будем переводить
    :return: Перевод числа в виде строки
    """
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')

    M = []
    while x > 0:
        M.append(alphabet[x % n])  # 1) Строится двоичная запись числа N.
        x //= n  # n = n // 2
    M.reverse()
    return ''.join(M)


# print(int('48756y348', 37))  # ValueError: int() base must be >= 2 and <= 36, or 0

for x in range(1, 10000+1):
    s = calculate(x, 2)

    if x % 2 == 0:  # 2)
        s += '00'
    else:
        s += '11'  # s = s + '11'

    r = int(s, 2)

    if r < 134:
        print(x)
'''

# Ответ: 32


# Тип 5 № 18812
# На вход алгоритма подаётся натуральное число N.
# Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
#
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу:
#
# а) в конец числа (справа) дописывается 1,
# если число единиц в двоичной записи числа чётно, и 0,
# если число единиц в двоичной записи числа нечётно;
#
# б)к этой записи справа дописывается 1,
# если остаток от деления количества единиц на 2 равен 0,
# и 0, если остаток от деления количества единиц на 2 равен 1.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
#
# Укажите минимальное число R, которое превышает 54 и может являться результатом работы алгоритма.
# В ответе это число запишите в десятичной системе.
'''
R = []
for x in range(1, 1000):
    s = bin(x)[2:]

    if s.count('1') % 2 == 0:
        s += '1'
    else:
        s += '0'

    if s.count('1') % 2 == 0:
        s += '1'
    else:
        s += '0'

    r = int(s, 2)

    if r > 54:
        R.append(r)

print(min(R))
'''
# Ответ: 56





# endregion Урок: ******************************************************************


# todo: Василий = [2, 5.1]
# todo:   КЕГЭ  = []
# на прошлом уроке: Решили 2 номер из домашки среднего уровня (на 16 строк). Разобрали 5-й номер пример с 2-ной и n-ной системами счисления.
# на следующем уроке:
