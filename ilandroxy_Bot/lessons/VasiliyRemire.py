
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# Функции, которые мы уже использовали:
'''
print()
range()
round()
max()
min()
sum()
int()
float()
list()
len()
'''

# Методы - это частный случай функций, но эти функции работают с одним типом данных
'''
M = []
M.append()
M.reverse()
M.remove()
'''


# Самописные функции
'''
def func_name():
    return 'hello', 'world'


h, w = func_name()
print(f'{h}, {w}!')


def func_name_2(a: int, M: list) -> list:
    M.append(a)
    return M

print(func_name_2(4, [1, 2, 3]))
'''

# Тип 25 №28123
# Напишите программу, которая ищет среди целых чисел,
# принадлежащих числовому отрезку [125256; 125330], числа,
# имеющие ровно шесть различных чётных натуральных делителей.

# Для каждого найденного числа запишите эти шесть делителей
# в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.
#
# Например, в диапазоне [2; 48] ровно шесть чётных различных
# натуральных делителей имеют числа 24, 36 и 40, поэтому для
# этого диапазона вывод на экране должна содержать следующие значения:


def Divisors(x: int) -> list:
    divisors = []
    for j in range(1, x+1):
        if x % j == 0:
            divisors.append(j)
    return divisors


def Divisors2(x: int) -> list:
    """
Это документация к функции
    :param x: Делает то-то
    :return: Возращает сето
    """
    divisors = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            divisors.add(j)
            divisors.add(x // j)
    return sorted(divisors)

print(Divisors2())

print(Divisors2.__doc__)
# Это документация к функции
#     :param x: Делает то-то
#     :return: Возращает сето
#
print(Divisors2(1000000000))
print(Divisors(1000000000))

'''
def Divisors(x: int) -> list:
    divisors = []
    for j in range(2, x+1, 2):
        if x % j == 0:
            divisors.append(j)
    return divisors
    
for x in range(125256, 125330+1):
    divisors = Divisors(x)
    if len(divisors) == 6:
        print(*divisors)
'''
# 2 6 18 13918 41754 125262
# 2 4 8 31322 62644 125288
# 2 6 18 13922 41766 125298





# endregion Урок: ******************************************************************


# todo: Василий = [2.1, 5.1, 8.1, 12.1, 14.1, 15.1]
# todo:   КЕГЭ  = []
# на прошлом уроке: Разобрали все 12-ые номера с РЕШУ ЕГЭ от и до.
# на следующем уроке: Повторяем и проверяем домашки по 5, 14, 8, 12 номерам!
