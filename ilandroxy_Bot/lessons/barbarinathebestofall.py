# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# Теория:

# Адрес сети = IP-адресу узла & Маска (побитовая конъюнкция)
# True and True == True

# IP-адрес это четыре числа разделенные точками, на каждое число выделено по 1 байту
# То есть на каждое число выделено по 8 бит (суммарно бит 32) и эти числа лежат в диапазоне от 0 до 255 (11111111)

# Маска числа имеет длину 32 бита и вид: 1111..000, например: 11111111.11111111.11111000.00000000

# Тип 13 №9647
# По заданным IP-адресу узла и маске определите адрес сети.
# IP-адрес: 240.144.182.134 Маска: 255.255.248.0
'''
knot = '.'.join([bin(int(x))[2:].zfill(8) for x in '240.144.182.134'.split('.')])
mask = '.'.join([bin(int(x))[2:].zfill(8) for x in '255.255.248.0'.split('.')])
print(knot, mask, sep='\n')
# 11110000.10010000.10110110.10000110
# 11111111.11111111.11111000.00000000
'''

# Вариант 2
'''
knot = [int(x) for x in '240.144.182.134'.split('.')]
mask = [int(x) for x in '255.255.248.0'.split('.')]
print([knot[i] & mask[i] for i in range(4)])
'''
# [240, 144, 176, 0]
# Ответ: FCDA


# Тип 13 №9647
# По заданным IP-адресу узла и маске определите адрес сети.
# IP-адрес: 240.144.182.134 Маска: 255.255.248.0
'''
from ipaddress import *
net = ip_network('240.144.182.134/255.255.248.0', 0)
print(net)  # 240.144.176.0/21, где 21 - это кол-во единиц в маске числа
print(net.netmask)  # 11111111.11111111.11111000.00000000
'''
# Ответ: FCDA


# Тип 13 №5495
# По заданным IP-адресу узла и маске определите адрес сети.
# IP-адрес узла: 130.131.132.128
# Маска: 255.255.192.0
'''
from ipaddress import *
net = ip_network('130.131.132.128/255.255.192.0', 0)
print(net)
'''
# Ответ: 130.131.128.0/18


# Тип 13 №16441
# Для узла с IP-адресом 98.162.71.94 адрес сети равен 98.162.71.64.
# Чему равно наибольшее возможное значение последнего (самого правого) байта маски?
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.94/{mask}', 0)
    print(net, mask, net.netmask)
    # 98.162.71.64/26 26 255.255.255.192
    # 98.162.71.64/27 27 255.255.255.224
'''
# Ответ: 224


# Тип 13 №18818
# Для узла с IP-адресом 15.51.208.15 адрес сети равен 15.51.192.0.
# Чему равно наибольшее возможное значение третьего слева байта маски?
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'15.51.208.15/{mask}', 0)
    print(net, mask, net.netmask)
    # 15.51.192.0/18 18 255.255.192.0
    # 15.51.192.0/19 19 255.255.224.0
'''
# Ответ: 224


# Тип 13 №18588
# Узлы с IP-адресами 98.162.71.151 и 98.162.71.155 находятся в разных сетях.
# Чему равно наименьшее количество возможных единиц в масках этих сетей?
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'98.162.71.151/{mask}', 0)
    net2 = ip_network(f'98.162.71.155/{mask}', 0)
    if net1 != net2:
        print(mask)
        break
'''
# Ответ: 29


# Тип 13 №63062
# IP- адресами 120.91.85.213 и 120.91.89.205 находятся в разных сетях.
# Укажите наименьшее возможное значение третьего слева байта маски этой сети.
# Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'120.91.85.213/{mask}', 0)
    net2 = ip_network(f'120.91.89.205/{mask}', 0)
    if net1 != net2:
        print(net1.netmask)
        # 255.255.248.0
        # 255.255.252.0
        # 255.255.254.0
'''
# Ответ: 248


# Тип 13 №15107
# Для узла с IP-адресом 93.138.164.49 адрес сети равен 93.138.160.0.
# Для скольких различных значений маски это возможно?
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'93.138.164.49/{mask}', 0)
    print(net, mask)
    # 93.138.160.0/19 19
    # 93.138.160.0/20 20
    # 93.138.160.0/21 21
'''
# Ответ: 3


# Тип 13 №14773
# Для узла с IP-адресом 93.138.161.94 адрес сети равен 93.138.160.0.
# Какое наименьшее количество нулей может быть в двоичной записи маски?
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'93.138.161.94/{mask}', 0)
    print(net, 32 - mask)
    # 93.138.160.0/19 13
    # 93.138.160.0/20 12
    # 93.138.160.0/21 11
    # 93.138.160.0/22 10
    # 93.138.160.0/23 9
'''
'''
from ipaddress import *
R = []
for mask in range(32+1):
    net = ip_network(f'93.138.161.94/{mask}', 0)
    if str(net) == f'93.138.160.0/{mask}':
        R.append(32 - mask)
print(min(R))
'''
# Ответ: 9


# Тип 13 №16815
# Для узла с IP-адресом 98.162.71.94 адрес сети равен 98.162.71.64.
# Чему равно наибольшее количество возможных адресов в этой сети?
#
# Примечание. Адрес сети и широковещательный адрес необходимо учитывать при подсчёте.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.94/{mask}', 0)
    print(net, net.num_addresses)
    # 98.162.71.64/26 64
    # 98.162.71.64/27 32 
'''
# Ответ: 64


# № 12947 (Уровень: Базовый)
# Сеть задана IP-адресом 203.111.195.0 и маской сети 255.255.240.0.
# Сколько в этой сети IP-адресов, в двоичной записи которых количество
# нулей кратно трём, а также содержатся три подряд идущие единицы
# и три подряд идущих нуля одновременно?
# В ответе укажите только число.
'''
from ipaddress import *
net = ip_network('203.111.195.0/255.255.240.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('0') % 3 == 0:
        if '000' in s and '111' in s:
            cnt += 1
print(cnt)
'''
# Ответ: 1043

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************


# Варя = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# КЕГЭ  = [5, 14]
# на следующем уроке: На следующем уроке отработать 8 номера КЕГЭ

