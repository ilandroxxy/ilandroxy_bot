
# region Домашка: ******************************************************************
'''
from itertools import product
num = 1
for s in product(sorted('ФЕВРАЛЬ'), repeat=6):
    slovo = ''.join(s)
    if 'Е' not in slovo and 'А' not in slovo:
        print(num)
        exit()
    num += 1
'''
# 19609 ВВВВВВ



# КЕГЭ № 1933 (Уровень: Базовый) (А. Куканова)
# Вероника составляет слова, меняя местами буквы в слове КЛАБХАУС
# так, что любые две соседние буквы различны между собой.
# Сколько слов, включая исходное, может составить Вероника?
'''
from itertools import permutations
count = set()
for s in permutations('КЛАБХАУС', 8):
    slovo = ''.join(s)
    if all(slovo[i] != slovo[i+1] for i in range(len(slovo)-1)):
        count.add(slovo)
print(len(count))
'''

# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# Мы можем создавать свои функции

# Создадим функцию поиска НОД для двух чисел
'''
import math
print(math.gcd(12, 24))


def NOD(x: int, y: int):
    """
    Функция поиска Наибольшего общего делителя чисел
    """
    nod = 1
    for j in range(1, min(x, y)+1):
        if x % j == 0 and y % j == 0:
            nod = j
    return nod


print(NOD(12, 24))  # 12
print(NOD.__doc__)
print(help(NOD))
# NOD(x: int, y: int)
#     Функция поиска Наибольшего общего делителя чисел
# None
'''

# Создадим функцию поиска простого числа
'''
# 2 3 5 7 11 13 17 19 ... - простые числа
# 4 6 8 10 12 14 15 16 ... - составные числа 
# 1 2 3 4 5 6 7 8 9 10 11 ... inf - натуральные числа 
# -inf,...,-1, 0, 1, ..., +inf - целые числа 
'''
'''
def Prime(x):
    for j in range(2, x):
        if x % j == 0:
            return False
    return True


for x in range(1, 1000):
    if Prime(x):
        print(x)
'''

# endregion Урок: ******************************************************************


# Варя = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1]
# КЕГЭ  = []
# на следующем уроке: 16, 23, 15
