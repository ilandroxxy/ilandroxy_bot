
# region Домашка: ******************************************************************
'''
def F(n) :
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) + 3*F(n-1)


def G(n) :
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) - 2*F(n-1)


x = F(18)
print(sum([int(i) for i in str(x)]))
'''
# 17179869184

# todo: Варя Разобраться с задачкой: КЕГЭ № 780 Джобс 30.11.2020 (Уровень: Сложный)
'''
def F(n):
    if n == 0:
        return 1
    if n > 0:
        return 2 * F(1 - n) + 3 * F(n - 1) + 2
    if n < 0:
        return -F(-n)


print(sum([int(x) for x in str(F(50))]))
'''

# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# todo: Разобрать с функтулс
# Тип 16 №48464
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
# F(0) = 0;
# F(n) = F(n − 1) + n.
#
# Укажите количество таких чисел n из интервала 765 432 010 ≤ n ≤ 1 542 613 234,
# для которых F(n) не делится без остатка на 3.
'''
import sys
sys.setrecursionlimit(100000000)

def F(n):
    if n == 0:
        return 0
    return F(n - 1) + n


cnt = 0
for n in range(765_432_010, 1_542_613_234+1):
    if F(n) % 3 != 0:
        cnt += 1
print(cnt)
'''
# RecursionError: maximum recursion depth exceeded


# todo Варя Разобрать задачу https://inf-ege.sdamgia.ru/problem?id=40732
'''
import sys
sys.setrecursionlimit(100000)
def F(n):
    if n == 0:
        return n
    if n > 0 and n % 3 == 2:
        return F((n - 1) + 1)
    if n > 0 and n % 3 < 2:
        return F((n - n % 3) / 3)
for n in range(1, 1000):
    if F(n) == 6:
        print(n)
        exit()
'''


# Тип 15 №33517
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наибольшего натурального числа А формула
# ДЕЛ(70, A) ∧ (ДЕЛ(x, 28) → (¬ДЕЛ(x, А) → ¬ДЕЛ(x, 21)))
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?
'''
def F(x, A):
    return (70 % A == 0) and ((x % 28 == 0) <= ((x % A != 0) <= (x % 21 != 0)))


for A in range(1, 1000):
    flag = True
    for x in range(1, 10000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
'''

# Вариант 2
'''
def F(x, A):
    return (70 % A == 0) and ((x % 28 == 0) <= ((x % A != 0) <= (x % 21 != 0)))


R = []
for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 10000)):
        R.append(A)
print(max(R))
'''

# Вариант 3
'''
print(max([A for A in range(1, 1000) if all(((70 % A == 0) and ((x % 28 == 0) <= ((x % A != 0) <= (x % 21 != 0)))) for x in range(1, 10000))]))
'''



# Тип 15 №28693
# Для какого наименьшего целого неотрицательного числа А выражение
#
# (2x + 3y < A) ∨ (x > y) ∨ (y > 24)
#
# тождественно истинно, т. е. принимает значение 1 при любых целых неотрицательных x и y?
'''
def F(x, y, A):
    return (2*x + 3*y < A) or (x > y) or (y > 24)


for A in range(0, 1000):
    if all(F(x, y, A) for x in range(100) for y in range(100)):
        print(A)
        break
'''
# Ответ: 121


# Тип 15 №34517
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Так, например, 12 & 6 = 1100_2 & 0110_2 = 0100_2 = 4.
# Для какого наибольшего целого числа А формула
# х&А → (x&10 = 0 → х&3)
# тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении переменной x)?
'''
print(12 & 6)  # Так, например, 12 & 6 = 1100_2 & 0110_2 = 0100_2 = 4


def F(x, A):
    return (x & A != 0) <= ((x & 10 == 0) <= (x & 3 != 0))


for A in range(0, 1000):
    if all(F(x, A) for x in range(10000)):
        print(A)
'''
# Ответ: 11


# Тип 15 №34544
# На числовой прямой даны два отрезка: P = [10, 39] и Q = [23, 58].
# Какова наименьшая возможная длина интервала A, что формула
# ((x ∈ P) ∧ (x ∈ Q)) → ((x ∈ Q) ∧ (x ∈ A ))
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    P = 10 <= x <= 39
    Q = 23 <= x <= 58
    A = a1 <= x <= a2
    return (P and Q) <= (Q and A)


R = []
M = [x / 4 for x in range(5*4, 65*4)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))  # 16.0
'''

# Тип 15 №13364
# На числовой прямой даны два отрезка: P = [130; 171] и Q = [150; 185].
# Укажите наименьшую возможную длину такого отрезка A, что формула
# (x ∈ P) → (((x ∈ Q) ∧ ¬(x ∈ A)) → ¬(x ∈ P))
# истинна при любом значении переменной х, т. е. принимает значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    P = 130 <= x <= 171
    Q = 150 <= x <= 185
    A = a1 <= x <= a2
    return P <= ((Q and (not A)) <= (not P))


R = []
M = [x / 4 for x in range(120*4, 190*4)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))  # 16.0
'''

# Тип 15 №36028
# На числовой прямой даны два отрезка: P = [17, 54] и Q = [37, 83].
# Какова наименьшая возможная длина интервала A, что формула
# (x ∈ P) → (((x ∈ Q) ∧ ¬(x ∈ A)) → ¬(x ∈ P))
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    P = 17 <= x <= 54
    Q = 37 <= x <= 83
    A = a1 <= x <= a2
    return P <= ((Q and (not A)) <= (not P))


R = []
M = [x / 4 for x in range(10*4, 90*4)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))  # 17.0
'''


# Тип 15 №46973
# На числовой прямой даны два отрезка: P = [69;91] и Q=[77;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
# (x∈Q)→(((x∈P)≡(x∈Q))∨(¬(x∈P)→(x∈A)))
#
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).
'''
def F(x, a1, a2):
    P = 69 <= x <= 91
    Q = 77 <= x <= 114
    A = a1 <= x <= a2
    return Q <= ((P == Q) or ((not P) <= A))


R = []
M = [x / 10 for x in range(60*10, 120*10)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))  # 22.75  22.799999999999997   22.900000000000006
'''
# Ответ: 23


# endregion Урок: ******************************************************************


# Варя = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1, 15.1, 16.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
