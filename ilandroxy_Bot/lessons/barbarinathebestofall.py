
# region Домашка: ******************************************************************

'''
def F(x, a1, a2):
    P = 10 <= x <= 45
    Q = 35 <= x <= 78
    A = a1 <= x <= a2
    return ((not P) <= Q) and (not A)
    # return (P and Q) <= (Q and A)

R = []
M = [x / 4 for x in range(5*4, 80*4)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) == False for x in M):
            R.append(a2-a1)
print(min(R))

'''


# КЕГЭ № 7897 (Уровень: Базовый) (Л. Шастин)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную нечётную цифру;
# – символ «*» означает любое чётное число;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123738465 и 123475.
#
# Среди натуральных чисел, не превышающих 10**10, найдите 5 наибольших чисел,
# соответствующих маске ?136*1, делящихся на 11071 без остатка.
#
# В ответе запишите в первом столбце таблицы найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 11071.
'''
from fnmatch import *

R = []
for x in range(11071, 10**10, 11071):
    if fnmatch(str(x), '?136*1'):
        if int(str(x)[0]) % 2 != 0:
            if int(str(x)[-2]) % 2 == 0:
                R.append([x, x // 11071])
print(*R[-5])
print(*R[-4])
print(*R[-3])
print(*R[-2])
print(*R[-1])
'''

# Ответ:
# 7136931221 644651
# 9136132401 825231
# 9136353821 825251
# 9136575241 825271
# 9136796661 825291


# КЕГЭ № 706 Джобс 16.11.2020 (Уровень: Базовый)
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [6638225; 6638322], простые числа.
# Выведите все найденные простые числа в порядке возрастания, слева от каждого числа выведите его номер по порядку.
'''
def divisors(x):
    div = []
    for j in range(1, int(x ** 0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


num = 1
for x in range(6638225, 6638322+1):
    d = divisors(x)
    if len(d) == 2:
        print(num, x)
        num += 1
'''


# КЕГЭ № 5477 (Уровень: Средний) (A. Бойко)
#
# Напишите программу, которая перебирает целые числа, большие 600 000,
# в порядке возрастания и ищет среди них такие, что они делятся на 6 без остатка и их соседи - простые числа.
# Для первых шести найденных чисел выведите соседей каждого найденного числа в порядке возрастания.
# Соседями числа называются числа, отличные от него на 1.
'''
def divisors(x):
    div = []
    for j in range(1, int(x ** 0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


k = 0
for x in range(600_000+1, 600_000_000):
    if x % 6 == 0:
        if len(divisors(x-1)) == 2 and len(divisors(x+1)) == 2:
            print(x-1, x+1)
            k += 1
            if k == 6:
                break
'''
# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# КЕГЭ № 2591 (Уровень: Средний)
# Среди целых чисел, принадлежащих числовому отрезку [125697; 125721], найдите числа,
# которые представляют собой произведение двух различных простых делителей.
# Для каждого найденного числа запишите эти два делителя в таблицу на экране
# с новой строки в порядке возрастания произведения этих двух делителей.
# Делители в строке таблицы также должны следовать в порядке возрастания.

'''
def prime(x):
    div = []
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))

def divisors(x):
    div = []
    for j in range(1, int(x ** 0.5)+1):
        if x % j == 0:
            if len(prime(j)) == 2 and len(prime(x // j)) == 2:
                div.append(j)
                div.append(x // j)
    return sorted(set(div))


for x in range(125697, 125721+1):
    d = divisors(x)
    if len(d) == 2:
        print(*d)
'''

# endregion Урок: ******************************************************************

# Варя = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1, 15.1, 16.1, 23.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
