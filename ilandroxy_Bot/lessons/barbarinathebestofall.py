
# region Домашка: ******************************************************************

# КЕГЭ № 8511 Апробация 17.05 (Уровень: Базовый)
#
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**8, найдите все числа,
# соответствующие маске 12??15*6, делящиеся на 253 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце –
# соответствующие им результаты деления этих чисел на 253.
'''
from fnmatch import fnmatch
for x in range(253, 10**8, 253):
    if fnmatch(str(x), '12??15*6'):
        print(x, x // 253)
'''
# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************


'''
s = open('17.txt').readlines()
print(s)  # <_io.TextIOWrapper name='17.txt' mode='r' encoding='UTF-8'>
'''

# Как читать файл для 17 номера
'''
M = [int(x) for x in open('17.txt')]
'''

# Типы задач 17 номера:
'''
M = [1, 2, 3, 4, 5]

# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(0, len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print('\n')

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(0, len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print('\n')

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''


# Тип 17 №37368
# В файле содержится последовательность из 10 000 целых положительных чисел.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых сумма элементов кратна 60 и хотя бы один элемент из пары делится на 40,
# затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 60 == 0 and (x % 40 == 0 or y % 40 == 0):
            count += 1
            # if maxi < x + y:
            #     maxi = x + y
            maxi = max(maxi, x + y)
print(count, maxi)
'''
# Ответ: 29278 19860


# Тип 17 №55604
# Файл содержит последовательность целых чисел, модуль которых находится в интервале от 100 до 10000.
# Назовём парой два идущих подряд элемента последовательности.

# Определите количество пар, для которых выполняются следующие условия:
# — последняя цифра записи одного из элементов пары совпадает с предпоследней цифрой записи другого элемента;
# — ровно один элемент из пары делится без остатка на 7;
# — сумма квадратов элементов пары не превышает квадрат наименьшего из элементов последовательности,
# две последние цифры в записи которого одинаковы.
#
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную
# величину суммы квадратов элементов этих пар.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-1] == str(x)[-2]]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    x, y = M[i], M[i+1]
    if (str(x)[-1] == str(y)[-2]) or (str(y)[-1] == str(x)[-2]):
        # if (x % 7 == 0 and y % 7 != 0) or (y % 7 == 0 and x % 7 != 0):
        if (abs(x) % 7 == 0) ^ ((abs(y)) % 7 == 0):  # только один элемент из пары делится без остатка на 7;
            if (x ** 2 + y ** 2) <= (min(A) ** 2):
                count += 1
                maxi = max(maxi, x ** 2 + y ** 2)
print(count, maxi)
'''
# Ответ: 205 99520570

'''
print(len('-345'))  # 4
print(345 % 7, -345 % 7)  # 2 5
'''


# Тип 17 №61363
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.

# Определите количество троек, для которых выполняются следующие условия:
# — ровно два числа в тройке четырёхзначные;
# — хотя бы одно число в тройке делится на 3;
# — сумма элементов тройки больше максимального элемента последовательности, запись которого заканчивается на 19.
# (Гарантируется, что в последовательности есть хотя бы один элемент, запись которого заканчивается на 19.)
#
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-2:] == '19']

count = 0
maxi = 0
for i in range(0, len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    # if sum([len(str(x)) == 4, len(str(y)) == 4, len(str(z)) == 4]) == 2:
    if sum([len(str(abs(j))) == 4 for j in [x, y, z]]) == 2:
        if sum([abs(j) % 3 == 0 for j in [x, y, z]]) >= 1:
            if sum([x, y, z]) > max(A):
                count += 1
                maxi = max(maxi, x + y + z)
print(count, maxi)
'''
# Ответ: 78 115709



# endregion Урок: ******************************************************************

# Варя = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
