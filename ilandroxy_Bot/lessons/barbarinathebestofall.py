
# region Домашка: ******************************************************************

# КЕГЭ № 6903 (Уровень: Базовый) (Д. Статный)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
#    а) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 00,
#    а затем два левых разряда заменяются на 11;
#    б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 11,
#    а затем два левых разряда заменяются на 10.
#
# 3. Пункт 2 повторяется ещё раз к записи, полученной после второго пункта.
#
# Найдите максимальное число R, которое получается при обработке N, меньших 100. В ответе укажите R.
'''
m = []
for n in range(1, 100):
    s = bin(n)[2:]
    for i in range(2):
        if s.count('1') % 2 == 0:
            s = '11' + s[2:] + '00'
        else:
            s = '10' + s[2:] + '11'
    r = int(s, 2)
    if n < 100:
        m.append(r)
print(max(m))
'''
# Ответ: 1584

# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# Тип 24 №46982
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество групп из идущих подряд не менее 12 символов, которые начинаются
# и заканчиваются буквой E и не содержат других букв E (кроме первой и последней) и букв F.
'''
s = open('24.txt').readline()
s = s.replace('E', '* *')
print(len([x for x in s.split() if len(x) >= 12 and 'F' not in x]))
'''
'''
s = open('24.txt').readline()
s = s.replace('E', '* *')
count = 0
for x in s.split():
    if len(x) >= 12 and 'F' not in x:
        count += 1
print(count)
'''
# Ответ: 9655


# Тип 24 №33103
# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество строк, в которых буква A встречается чаще, чем буква E.
'''
s = open('24.txt').readlines()
count = 0
for x in s:
    if x.count('A') > x.count('E'):
        count += 1
print(count)


s = open('24.txt').readlines()
print(len([x for x in s if x.count('A') > x.count('E')]))


print(len([x for x in open('24.txt').readlines() if x.count('A') > x.count('E')]))
'''
# Ответ: 485


# Тип 24 №59849
# Текстовый файл состоит не более чем из 10**6 символов латинского алфавита.
# Необходимо найти самую длинную подстроку, содержащую символы из алфавита 26 системы счисления.
# В ответ записать длину последовательности символов, которая может являться числом в 26 системе счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
good = alphabet[:26]
bad = alphabet[26:]  # их надо убрать
s = open('24.txt').readline()
for x in bad:
    s = s.replace(x, ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 41


# Тип 24 №27699
# Текстовый файл состоит не более чем из 10**6 символов L, D и R.
# Определите максимальную длину цепочки вида LDRLDRLDR...
# (составленной из фрагментов LDR, последний фрагмент может быть неполным).
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
# Вариант 1
s = open('24.txt').readline()
count = 2
count_max = 0
for i in range(len(s)-2):
    if s[i:i+3] == 'LDR' or s[i:i+3] == 'DRL' or s[i:i+3] == 'RLD':
        count += 1
        count_max = max(count, count_max)
    else:
        count = 2
print(count_max)


# # Вариант 2 Этот вариант решения неудачный
s = open('24.txt').readline()
s = s.replace('LDR', '***')
for x in 'LDR':
    s = s.replace(x, ' ')
print(max([len(x) for x in s.split()]))


# Вариант 3
s = open('24.txt').readline()
# print(s)
print(len('LDRLDRLDRLDRLDR'))  # достали из print(s) через ctrl + F
'''
# Ответ: 15


# Тип 24 №59817
# Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов, которых никакие две буквы
# из набора букв A, B и C (с учетом повторений) не записаны подряд.

s = open('24.txt').readline()
for x in 'AA BB CC AB AC BA BC CA CB'.split():
    s = s.replace(x, '* *')
print(max(len(x) for x in s.split()))

# Ответ: 49


# endregion Урок: ******************************************************************

# Варя = [2.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
