
# region Домашка: ******************************************************************
'''
print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = not(((x <= (y and w)) and (z <= (x or y))) == w)
                if F:
                    print(x, y, z, w, int(F))
'''
# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# Тип 6 №47316
# В начальный момент Черепаха находится в начале координат, её голова
# направлена вдоль положительного направления оси ординат, хвост опущен.

# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 5 [Вперёд 9 Направо 90 Вперёд 3 Направо 90]
#
# Определите количество точек с целочисленными координатами, лежащих внутри
# или на границе области, которую ограничивает заданная алгоритмом линия.
'''
import turtle as t
t.tracer(0)
# t.speed(100)
t.left(90)
l = 40

# Повтори 5 [Вперёд 9 Направо 90 Вперёд 3 Направо 90]
for i in range(5):
    t.forward(9 * l)
    t.right(90)
    t.forward(3 * l)
    t.right(90)

t.up()
for x in range(-20, 20):
    for y in range(-20, 20):
        t.goto(x * l, y * l)
        t.dot(2, 'red')

t.done()
'''
'''
import turtle
turtle.forward(100)
'''

# Тип 6 №55623
# В начальный момент Черепаха находится в начале координат
# и направлена вверх (вдоль положительного направления оси ординат).
# Черепаха выполнила следующую программу (x в тексте программы — некоторое натуральное число):
#
# Повтори 4 [Вперёд x Направо 90 Вперёд x Налево 90 Вперёд x Направо 90]
#
# Определите, при каком наименьшем натуральном x количество точек с целочисленными
# координатами внутри области, ограниченной линией, полученной при выполнении данной программы,
# окажется больше 1500. Точки, расположенные на линии, не учитывать.
'''
import turtle as t
t.left(90)
t.speed(100)
x = 18

t.begin_fill()
for i in range(4):
    t.forward(x)
    t.right(90)
    t.forward(x)
    t.left(90)
    t.forward(x)
    t.right(90)
t.end_fill()

count = 0
canvas = t.getcanvas()
for x in range(-100, 100):
    for y in range(-100, 100):
        z = canvas.find_overlapping(x, y, x, y)
        if len(z) == 1 and z[0] == 5:
            count += 1
print(count)

t.done()
'''
# Ответ: 18




# endregion Урок: ******************************************************************


# todo: Варя = [2.1, 6.1]
# todo: КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке:
