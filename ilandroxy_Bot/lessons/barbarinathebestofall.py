
# region Домашка: ******************************************************************


# todo: Варя Разобраться с задачкой: КЕГЭ № 780 Джобс 30.11.2020 (Уровень: Сложный)
'''
def F(n):
    if n == 0:
        return 1
    if n > 0:
        return 2 * F(1 - n) + 3 * F(n - 1) + 2
    if n < 0:
        return -F(-n)


print(sum([int(x) for x in str(F(50))]))
'''

# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# todo Варя Разобрать задачу https://inf-ege.sdamgia.ru/problem?id=40732
'''
import sys
sys.setrecursionlimit(100000)

def F(n):
    if n == 0:
        return n
    if n > 0 and n % 3 == 2:
        return F((n - 1) + 1)
    if n > 0 and n % 3 < 2:
        return F((n - n % 3) / 3)
for n in range(1, 1000):
    if F(n) == 6:
        print(n)
        exit()
'''



# todo: Варя Разобраться с задачкой: КЕГЭ № 780 Джобс 30.11.2020 (Уровень: Сложный)
# Задача максимально дурацкая:
'''
def F(n):
    if n == 0:
        return 1
    if n > 0:
        return 2 * F(1 - n) + 3 * F(n - 1) + 2
    if n < 0:
        return -F(-n)


for i in range(1, 50+1):
    print(i, F(i))  # тут надо заметить 5 + 2*n
'''


# № 12247 ЕГКР 16.12.23 (Уровень: Базовый)
# Обозначим через m & n поразрядную конъюнкцию неотрицательных целых чисел n и m.
# Так, например, 14 & 5 = 11102 & 01012 = 01002 = 4.
# Для какого наибольшего целого положительного числа А выражение
# (x&А=0)∨¬(x&37=0)∨¬(x&12=0) тождественно истинно, то есть принимает значение 1 при любых целых положительных х?
'''
def F(x, A):
    return (x & A == 0) or (x & 37 != 0) or (x & 12 != 0)


R = []
for A in range(0, 1000):
    if all(F(x, A) for x in range(0, 10000)):
        R.append(A)
print(max(R))
'''
# Ответ: 45


# № 7846 Danov2304 (Уровень: Базовый)
# (А.Богданов) На числовой прямой даны два отрезка: P = [13; 19] и Q = [17; 23].
# Укажите наибольшую возможную длину такого отрезка A, что формула
# ¬(¬(x ∈ P) → (x ∈ Q)) → ((x ∈ A) →(¬(x ∈ Q)→(x ∈ P)))
# тождественно истинна, то есть принимает значение 1 при любых x.
'''
def F(x, a1, a2):
    P = 13 <= x <= 19
    Q = 17 <= x <= 23
    A = a1 <= x <= a2
    return (not((not P) <= Q)) <= (A <= ((not Q) <= P))
# not > and > or > <= > ==
# (x and y <= z)  ->  ((x and y) <= z)
# (x <= y and z)  ->  (x <= (y and z)) 


R = []
M = [x / 4 for x in range(10*4, 30*4)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(max(R))
'''
# Ответ: 10.0 -> 10


# Тип 25 №59703
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# 1) символ «?» означает ровно одну произвольную цифру;
# 2) символ «*» означает любую последовательность — цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**8,
# найдите все числа, соответствующие маске 3?1*57, делящиеся на 2023 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце — соответствующие
# им результаты деления этих чисел на 2023.
#
# Количество строк в таблице для ответа избыточно.
'''
from fnmatch import *
for x in range(2023, 10**8, 2023):
    if fnmatch(str(x), '3?1*57'):
        print(x, x // 2023)
'''
# Ответ:
# 321657 159
# 34105757 16859
# 35117257 17359
# 36128757 17859
# 37140257 18359
# 38151757 18859
# 39163257 19359


# № 12255 ЕГКР 16.12.23 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**12, найдите все числа,
# соответствующие маске 12?3*456??9, делящиеся на 98591 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие результаты деления этих чисел на 98591.
'''
from fnmatch import *
for x in range(98591, 10**12, 98591):
    if fnmatch(str(x), '12?3*456??9'):
        print(x, x // 98591)
'''
# Ответ:
# 120313456439 1220329
# 120383456049 1221039
# 125351456539 1271429



# № 11256 (Уровень: Базовый)
# (М. Ишимов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#

# Среди натуральных чисел, не превышающих 10**9, найдите все числа,
# соответствующие маске ?2?5554*, делящиеся на 2476 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце – соответствующие
# им результаты деления этих чисел на 2476.

# print(10**9)
# print('?2?5554**')
'''
from itertools import product
for l in range(0, 2+1):
    for v in product('0123456789', repeat=l):
        z = "".join(v)
        for x in '0123456789':
            for y in '0123456789':
                s = int(f'{x}2{y}5554{z}')
                if s % 2476 == 0:
                    print(s, s // 2476)
'''
# 125555484 50709
# 524555456 211856
# 923555428 373003

from time import time
start = time()
def divisors(num):
    div = []
    for j in range(1, num+1):
        if num % j == 0:
            div.append(j)
    return div


print(divisors(1_000_000))

end = time()
print(end - start)


from time import time
start = time()
def divisors2(num):
    div = []
    for j in range(1, int(num**0.5)+1):
        if num % j == 0:
            div.append(j)
            div.append(num // j)
    return sorted(set(div))


print(divisors2(1_000_000_000))

end = time()
print(end - start)


# endregion Урок: ******************************************************************

# todo Разбирать 25 номера с делителями

# Варя = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1, 15.1, 16.1, 23.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
