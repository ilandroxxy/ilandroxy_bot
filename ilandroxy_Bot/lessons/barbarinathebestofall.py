
# region Домашка: ******************************************************************

# № 7026 Danov2303 (Уровень: Базовый) (А.Богданов)
#
# На вход алгоритма подается натуральное число N. Алгоритм строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа еще несколько разрядов по следующему правилу:
#    а) если N четное, то к нему справа приписываются два нуля, а слева единица;
#    б) если N нечетное, то к нему справа приписывается в двоичном виде сумма цифр его двоичной записи;
#
# Полученная таким образом запись (в ней как минимум на один разряд больше, чем в записи исходного числа N)
# является двоичной записью искомого числа R.
#
# Укажите такое число N большее 8, для которого число R является наименьшим среди чисел, превышающих 88.
# В ответе это число запишите в десятичной системе счисления.

R = []
for n in range(9, 1000):
    s = bin(n)[2:]
    if n % 2 == 0:
        s = '1' + s + '00'
    else:
        s = s + bin(s.count('1'))[2:]
    r = int(s, 2)
    if r > 88:
        R.append([r, n])
print(min(R)[1])  # [103, 25]



'''
# Поиск наименьшего эелмента происходит по первому элементу списка,
# если эти первые эелменты одинаковые, то сравниваются вторые и тд
# [[12, 5], [15, 3], [11, 5], [11, 3]]
M = [[12, 5], [15, 3], [11, 3], [11, 5]]
print(min(M))  # [11, 3]
'''
# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************





# endregion Урок: ******************************************************************


# Варя = [2.1, 6.1, 12.1]
# КЕГЭ  = []
# на следующем уроке:
