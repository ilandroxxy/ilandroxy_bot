# region Домашка: ******************************************************************************



# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 25 № 28122
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [489421; 489440],
# числа, имеющие ровно четыре различных натуральных делителя.
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

# Вариант 1 (плохой)
'''
for x in range(489421, 489440+1):
    dl = []
    for j in range(1, x+1):
        if x % j == 0:
            dl.append(j)
    if len(dl) == 4:
        print(*dl)
'''
# ВАариант 2 - правильный
'''
def F(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)

for x in range(489421, 489440+1):
    dl = F(x)
    if len(dl) == 4:
        print(*dl)
'''
# 1 19 25759 489421
# 1 2 244711 489422
# 1 13 37649 489437



# Тип 25 № 27850 i
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [245690; 245756] простые числа.
# Выведите на экран все найденные простые числа в порядке возрастания,
# слева от каждого числа выведите его порядковый номер в последовательности.
# Каждая пара чисел должна быть выведена в отдельной строке.
'''
def F(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):    # если начинаем перебор от 2, то избавляемся от 1 и х
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)

count = 1
for x in range(245690, 245756+1):
    dl = F(x)
    if len(dl) == 0:
        print(count, x)
    count += 1
'''
# 22 245711
# 30 245719
# 34 245723
# 52 245741
# 58 245747
# 64 245753  # ctrl + /


# Тип 25 № 27422 i
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [174457; 174505],
# числа, имеющие ровно два различных натуральных делителя, не считая единицы и самого числа.
# Для каждого найденного числа запишите эти два делителя в два соседних столбца на экране
# с новой строки в порядке возрастания произведения этих двух делителей.
# Делители в строке также должны следовать в порядке возрастания.
'''
def F(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)

for x in range(174457, 174505+1):
    dl = F(x)
    if len(dl) == 2:
        print(*dl)
'''
# 3 58153
# 7 24923
# 59 2957
# 13 13421
# 149 1171
# 5 34897
# 211 827
# 2 87251


# Тип 25 № 27854 i
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [110203; 110245],
# числа, имеющие ровно четыре различных чётных натуральных делителя (при этом количество нечётных делителей может быть любым).
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.
'''
def F(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (x // j) % 2 == 0:
                dl.add(x // j)
    return sorted(dl)

for x in range(110203, 110245+1):
    dl = F(x)
    if len(dl) == 4:
        print(*dl)
'''
# Ответ:
# 2 4 55102 110204
# 2 14 15746 110222
# 2 6 36742 110226
# 2 22 10022 110242


# Тип 25 № 38959
# Пусть M(N) — произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы.
# Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
#
# Найдите 5 наименьших натуральных чисел, превышающих 200_000_000, для которых 0<M(N)<N.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.
'''
def F(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):  # не считая единицы
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)

count = 0
for x in range(200_000_000+1, 200_000_000_000):
    dl = F(x)
    if len(dl) >= 5:
        M = dl[0] * dl[1] * dl[2] * dl[3] * dl[4]
        if 0 < M < x:
            print(M)
            count += 1
            if count == 5:
                break
'''
# 1728
# 21632
# 1260
# 1152
# 4127787






# endregion Урок: ******************************************************************************


# todo: Артем = [2, 5, 8, 12, 14, 15, 16, 23]
# на прошлом уроке: Разбирали 15 номера, всех типов.
# на следующем уроке:
