# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Типы 17 номеров:

M = [1, 2, 3, 4, 5]

# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
'''
for i in range(0, len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')
print('\n')
'''
# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
'''
for i in range(0, len(M)-2):
    print(f'{M[i]}{M[i+1]}{M[i+2]}', end=' ')
print('\n')
'''
# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
'''
for i in range(0, len(M)):
    for j in range(0, len(M)):
        if i < j:
            print(f'{M[i]}{M[j]}', end=' ')
    print()
'''
'''
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        print(f'{M[i]}{M[j]}', end=' ')
    print()
'''

# f = open('17.txt').readlines()
# print(f)

# with open("token.txt", 'r') as f:
#     M = [int(i) for i in open('17.txt')]

# M = [int(i) for i in open('17.txt')]



# Тип 17 № 40992
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём парой
# два идущих подряд элемента последовательности. Определите количество пар, в которых хотя бы один из двух элементов
# делится на 5 и хотя бы один из двух элементов меньше среднего арифметического всех элементов последовательности,
# значение которых нечетно. В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную
# сумму элементов таких пар.
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if i % 2 != 0]
sred = sum(A) / len(A)
count = 0
maxi_sum = 0
for i in range(0, len(M)-1):
    if M[i] % 5 == 0 or M[i+1] % 5 == 0:
        if M[i] < sred or M[i+1] < sred:
            count += 1
            maxi_sum = max(maxi_sum, M[i] + M[i+1])
print(count, maxi_sum)
'''
# Ответ: 1531 14932


# Тип 17 № 37349
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не
# превышает 10000. Определите и запишите в ответе сначала количество пар элементов последовательности, для которых
# произведение элементов кратно 26, затем максимальную из сумм элементов таких пар. В данной задаче под парой
# подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.
'''
M = [int(i) for i in open('17.txt')]
count = 0
maxi_sum = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] * M[j]) % 26 == 0:
            count += 1
            maxi_sum = max(maxi_sum, M[i] + M[j])
print(count, maxi_sum)
'''
# Ответ: 5678937 19984


# № 7619 Досрочная волна 2023 (Уровень: Базовый)
# В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от 1 до 10 000 включительно.
# Определите количество пар последовательности, в которых только одно число является двухзначным,
# а сумма элементов пары кратна максимальному двухзначному элементу последовательности.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
A = max([i for i in M if len(str(i)) == 2])  # максимальному двухзначному элементу последовательности
count = 0
maxi_sum = 0
for i in range(0, len(M)-1):
    if (len(str(M[i])) == 2 and len(str(M[i+1])) != 2) or (len(str(M[i])) != 2 and len(str(M[i+1])) == 2):
        if (M[i] + M[i+1]) % A == 0:
            count += 1
            maxi_sum = max(maxi_sum, M[i] + M[i+1])
print(count, maxi_sum)
'''
# Ответ: 1 2970


# Тип 9 № 35983
# Электронная таблица содержит результаты ежечасного измерения температуры воздуха на протяжении трёх
# месяцев. Определите, сколько раз за время измерений максимальная суточная температура оказывалась выше
# среднесуточной на 7 и более градусов.
'''
count = 0
for s in open('9.txt'):
    M = [float(i) for i in s.replace(',', '.').split()]  # ValueError: could not convert string to float: '13,7'
    if max(M) - (sum(M) / len(M)) >= 7:
        count += 1
print(count)
'''
# Ответ: 66


# Тип 9 № 48457
# В каждой строке электронной таблицы записаны шесть натуральных чисел.
# Определите, сколько в таблице строк, для которых выполнены следующие условия:
#
# — в строке встречается ровно четыре различных числа; два из них по два раза, два — по одному;
# — сумма повторяющихся чисел (без учёта повторений,
# то есть каждое число входит в сумму один раз) больше суммы неповторяющихся.
#
# В ответе запишите число — количество строк, для которых выполнены эти условия.

# 1 2 3 3 4 4
# [69, 64, 64, 46, 138, 64] - не подходит
'''
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    if len(set(M)) == 4 and all(M.count(i) <= 2 for i in M):
        # print(M)  # [1 2 3 3 4 4]
        # print(set(M))  # {1 2 3 4}
        copied = sum(M) - sum(set(M))  # сумма повторяющихся # [1 2 3 3 4 4] - {1 2 3 4} = 3 + 4 = 7
        if copied > sum(set(M)) - copied:  # {1 2 3 4} - (3 + 4) = 1 + 2 = 3  # сумма неповторяющихся
            count += 1
print(count)
'''
# Ответ: 456
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if abs(i) % 10 == 3]
count = 0
maxi_sum = 0
for i in range(0, len(M)-1):
    if ((abs(M[i]) % 10 == 3 and abs(M[i + 1]) % 10 != 3) or (abs(M[i]) % 10 != 3 and abs(M[i + 1]) % 10 == 3)):
        if (M[i]**2 + M[i+1]**2) >= max(A)**2:
            count += 1
            maxi_sum = max(maxi_sum, M[i] ** 2 + M[i + 1] ** 2)
print(count, maxi_sum)
'''

count = 0
maxi_sum = 0
M = [int(i) for i in open('17.txt')]
A = [i for i in M if abs(i) % 10 == 7]
for i in range(0, len(M)-1):
    if (M[i] % 7 == 0) + (M[i+1] % 7 == 0) == 1:
    # if (M[i] % 7 == 0 and M[i+1] % 7 != 0) or (M[i] % 7 != 0 and M[i+1] % 7 == 0):
        if abs(M[i]) % 10 == abs(M[i+1]) % 10:
            if (M[i]**2 + M[i+1]**2) <= min(A)**2:
                count += 1
                maxi_sum = max(maxi_sum, M[i] ** 2 + M[i + 1] ** 2)
print(count, maxi_sum)

# endregion Урок: ******************************************************************************


# todo: Артем = [2, 5, 8, 9, 12, 14, 15, 16, 17, 23, 25]
# на прошлом уроке: Разбирали задачки с домашки, номера: 9, 17
# на следующем уроке: Разбираем 17 и 9 номера
