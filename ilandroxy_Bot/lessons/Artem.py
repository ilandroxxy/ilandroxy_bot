# region Домашка: ******************************************************************************

#1. Тип 25 № 41000
#Пусть M(N)— сумма двух наибольших различных натуральных делителей натурального числа N,
#не считая самого числа и единицы. Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
#Найдите 5 наименьших натуральных чисел, превышающих 11000000, для которых 0<M(N)<10000.
#В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N
'''
def F(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):  # не считая единицы
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)

count = 0
for x in range(11000000+1, 1100000000):
    dl = F(x)
    if len(dl) >= 2:
        M = dl[-2] + dl[-1]
        if 0 < M < 10000:
            print(M)
            count += 1
            if count == 5:
                break
'''
# Ответ:
# 8672
# 8388
# 8532
# 7042
# 7364


#1. Тип 16 № 33188
#Обозначим через a mod b остаток от деления натурального числа a на натуральное число b.
#Алгоритм вычисления значения функции F(n), где n  — натуральное число, задан следующими соотношениями:
#F(0) = 0;
#F(n) = n + F(n − 3), если n mod 3=0, и n >0;
#F(n) = n + F(n − (n mod3)), если n mod 3>0.
#Чему равно значение функции F(22)?
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 3 == 0:
        return n + F(n - 3)
    if n % 3 > 0:
        return n + F(n -(n % 3))
print(F(22))
#Ответ: 106
'''


#2. Тип 16 № 35990
#Алгоритм вычисления значения функции F(n), где n  — целое неотрицательное число, задан следующими соотношениями:
#F(0) = 0;
#F(n) = F(n / 2), если n > 0 и при этом чётно;
#F(n) = 1 + F(n − 1), если n нечётно.
#Сколько существует таких чисел n, что 1 ≤ n ≤ 500 и F(n) = 3?
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n/2)
    if n % 2 != 0:
        return 1 + F(n-1)
counter = 0
for i in range(1, 501):
    if F(i) == 3:
        counter += 1
print(counter)
#Ответ 84
'''


#3. КЕГЭ № 6596 Пробник ИМЦ СПб (Уровень: Базовый)
#Алгоритм вычисления функции F(n), где n – натуральное число, задан следующими соотношениями:
#F(n) = 1, если n = 1
#F(n) = F(n – 1) · (2n – 3), если n > 1.
#Чему равно значение выражения F(516) / F(513)?
'''
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n - 1) * (2*n - 3)
print(F(516)/(F(513)))
#Ответ 1083202575.0
'''


# 4. КЕГЭ № 6088 /dev/inf 02.2023 (Уровень: Средний)
# (А. Рогов) Алгоритм вычисления значения функции F(n), где n – натуральное число,
# задан следующими соотношениями:

# F(n) = 1 при n > 3000;
# F(n) = F(n + 1) - n + 1, если n ≤ 3000 и при этом n чётно;
# F(n) = F(n + 2) - 2 * n + 2, если n ≤ 3000 и при этом n нечётно.
# Чему равно значение выражения 2 × F(39) — 2 × F(34)?
# 2 × ( F(39) — F(34) )

# F(34) = F(35) - 34 + 1
# F(35) = F(37) - 2 * 35 + 2
# F(37) = F(39) - 2 * 37 + 2
'''
print(2 * (((- 2 * 37 + 2) - 2 * 35 + 2) - 34 + 1))
'''
# Ответ: 346



# 5. КЕГЭ № 5152 (Уровень: Базовый)
# (К. Багдасарян) Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
# F(n) = 2, если n = 1,
# F(n) = 2 * F(n - 1), если n > 1.
# Чему равно значение выражения F(1900) / 2**1890? aka F(1890)

# F(1900) = 2 * F(1899)
# F(1899) = 2 * F(1898)
...
# F(1891) = 2 * F(1890)
# было 10 шагов, значит 2**10 = 1024
'''
# короче, эта шляпа решается через бумагу, нужно двойку возвести в степень 1900, и отнять (2**1900 - 2**1890)
# получим 2**10 а это 1024
# Ответ 1024
'''


#1. Тип 12 № 26986
#Дана программа для Редактора:
#НАЧАЛО
# ПОКА нашлось (49) ИЛИ нашлось (97) ИЛИ нашлось (47)
#    ЕСЛИ нашлось (47)
#    ТО заменить (47, 74)
#    КОНЕЦ ЕСЛИ
#    ЕСЛИ нашлось (97)
#    ТО заменить (97, 79)
#    КОНЕЦ ЕСЛИ
#    ЕСЛИ нашлось (49)
#    ТО заменить (49, 94)
#    КОНЕЦ ЕСЛИ
#КОНЕЦ ПОКА
#КОНЕЦ
# На вход приведённой ниже программе поступает строка, содержащая 40 цифр 7, 40 цифр 9 и 50 цифр 4,
# расположенных в произвольном порядке. Запишите без разделителей символы,
# которые имеют порядковые номера 25, 71 и 105 в получившейся строке.
'''
s = 40 * '7' + 40 * '9' + 50 * '4'
while '49' in s or '97' in s or '47' in s:  # ПОКА нашлось (49) ИЛИ нашлось (97) ИЛИ нашлось (47)
    if '47' in s:  # ЕСЛИ нашлось (47)
        s.replace('47', '74', 1)  # ТО заменить (47, 74)
    if '97' in s:
        s.replace('97', '79', 1)
    if '49' in s:
        s.replace('49', '94', 1)
print(s[25-1], s[71-1], s[105-1])
'''
# Ответ: 794


#2. Тип 12 № 27543
#Дана программа для Редактора:
#НАЧАЛО
#ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#    заменить (01, 103)
#    заменить (02, 10)
#    заменить (03, 210)
#КОНЕЦ ПОКА
#КОНЕЦ
#Известно, что исходная строка начинается с цифры 0, а далее содержит 12 цифр 1, 15 цифр 2 и 17 цифр 3,
#расположенных в произвольном порядке.
#Сколько цифр 2 будет в строке, которая получится после выполнения данной программы?

'''
s = '0' + '1' * 12 + '2' * 15 + '3' * 17
while '01' in s or '02' in s or '03' in s:
     s = s.replace('01', '103', 1)
     s = s.replace('02', '10', 1)
     s = s.replace('03', '210', 1)
print(s.count('2'))
'''
# Ответ: 29





#1. Тип 15 № 33187
#Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
#Для какого наибольшего натурального числа А формула
#ДЕЛ(90, A) ∧ (¬ДЕЛ(x, А) → (ДЕЛ(x, 15) → ¬ДЕЛ(x, 20)))
#тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?
'''
def F(x, A):
    return(90 % A == 0) and ((x % A != 0) <= ((x % 15 == 0) <= (x % 20 != 0)))

for A in range(1, 10000):
    if all(F(x, A) for x in range(1, 1000)):
        print(A)
#Ответ 30
'''

#2. Тип 15 № 34544
#На числовой прямой даны два отрезка: P = [10, 39] и Q = [23, 58].
#Какова наименьшая возможная длина интервала A, что формула
#((x ∈ P) ∧ (x ∈ Q)) → ((x ∈ Q) ∧ (x ∈ A ))
#тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    P = 10 <= x <= 39
    Q = 23 <= x <= 58
    A = a1 <= x <= a2
    return(P and Q) <= (Q and A)

R = []
M = [i/5 for i in range(0*5, 60*5)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2 - a1)
print(round(min(R)))
#Ответ 16
'''


#3. Тип 15 № 35989
#Для какого наименьшего неотрицательного целого числа А формула
#x & 73 = 0 → (x & 28 ≠ 0 → x & А ≠ 0)
#тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении переменной x)?
'''
def F(x, A):
    return(x & 73 == 0) <= ((x & 28 != 0) <= (x & A != 0))
for A in range(0, 1000):
    if all(F(x, A) for x in range(0, 1000)):
        print(A)
        break
#Ответ 20
'''


#4. Тип 15 № 18630
#Для какого наименьшего целого неотрицательного числа A выражение
#(3m + 4n > 63) ∨ ((m ≤ A) ∧ (n < A))
#тождественно истинно при любых целых неотрицательных m и n?
'''
def F(m, n, A):
    return(3*m + 4*n > 63) or ((m <= A) and (n < A))
for A in range(0, 1000):
    if all(F(m, n, A) for m in range(0, 100) for n in range(0, 100)):
        print(A)
        break
#Ответ 21
'''


# 5. КЕГЭ № 4770 (Уровень: Сложный)
# На числовой прямой даны два отрезка: P=[35,55] и Q=[45,65].
# Определите наименьшую возможную длину отрезка A, при котором формулы
# (x ∈ P) → (x ∈ А)
# (x ∉ A) → (x ∉ Q)
# тождественно истинны, то есть принимают значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    P = 35 <= x <= 55
    Q = 45 <= x <= 65
    A = a1 <= x <= a2
    return(P <= A) and ((not A) <= (not Q))

R = []
M = [i/5 for i in range(30*5, 70*5)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2 - a1)
print(round(min(R)))
'''
# Ответ: 30


#6. КЕГЭ № 4282 (Уровень: Средний)
#Для какого наибольшего целого неотрицательного числа А выражение
#(150 ≠  y + 2x + 2z) ∨ (A < x) ∨ (A < y) ∨ (A < z)
#истинно при любых целых положительных x, y, z?
'''
def F(x, z, y, A):
    return(150 != y + 2*x + 2*z) or (A < x) or (A < y) or (A < z)
for A in range(0, 1000):
    if all(F(x, z, y, A) for x in range(0, 100) for z in range(0, 100) for y in range(0, 100)):
        print(A)
#Ответ 29
'''


# 1. КЕГЭ № 6637 Пробник ИМЦ СПб (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
# Среди натуральных чисел, не превышающих 10**10, найдите все числа,
# соответствующие маске 1?2139*4, делящиеся на 3052 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 3052.

# print(10**10)
# print('1?2139***4')
'''
import itertools
M = []
for l in range(0, 3+1):  # длина *
    for s in itertools.product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)

R = []
for x in M:
    for y in '0123456789':
        A = int(f'1{y}2139{x}4')
        if A % 3052 == 0:
            R.append([A, A // 3052])

for x in sorted(R):
    print(*x)
'''
# Ответ:
# 1421398804 465727
# 1521397584 498492
# 1621396364 531257
# 1721395144 564022
# 1821393924 596787
# 1921392704 629552


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************





# endregion Урок: ******************************************************************************


# todo: Артем = [2, 5, 8, 12, 14, 15, 16, 23, 25]
# на прошлом уроке: Повторили 16 аналитические номера, 25 номера с масками, 15 номера с отрезками
# на следующем уроке: Разбираем 17 и 9 номера
