# region Домашка: ******************************************************************************



# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************


# 17.02.23

# Тип 8 № 3571 Добавить в вариант
# Все 5-буквенные слова, составленные из букв С, Л, О, Н записаны в алфавитном порядке и пронумерованы.
#
# Вот начало списка:
# 1.ЛЛЛЛЛ
# 2.ЛЛЛЛН
# 3.ЛЛЛЛО
# 4.ЛЛЛЛС
# 5.ЛЛЛНЛ
# ……
# Запишите слово, которое стоит под номером 1020.
'''
# s = sorted([i for i in 'СЛОН'])
s = 'ЛНОС'
k = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if k == 1020:
                        print(k, temp)
                    k += 1
'''
# Ответ: СССОС


# Тип 8 № 27236 i
# Андрей составляет 4-буквенные коды из букв А, Н, Д, Р, Е, Й.
# Каждую букву можно использовать любое количество раз, при этом код
# не может начинаться с буквы Й и должен содержать хотя бы одну гласную.
# Сколько различных кодов может составить Андрей?
'''
s = 'АНДРЕЙ'
count = 0
glas = 'АЕ'

for a in s:
    for b in s:
        for c in s:
            for d in s:
                temp = a + b + c + d
                if a != 'Й' and ('А' in temp or 'Е' in temp):
                    count += 1
print(count)
'''
# Ответ: 888



# Тип 8 № 33510 i
# Тимофей составляет 5-буквенные коды из букв Т, И, М, О, Ф, Е, Й.
# Буква Т должна входить в код не менее одного раза, а буква Й — не более одного раза.
# Сколько различных кодов может составить Тимофей?
'''
s = 'ТИМОФЕЙ'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('Т') >= 1 and temp.count('Й') <= 1:
                        count += 1
                        print(temp)
print(count)
'''
# Ответ: 8006


# Тип 8 № 27268 i
# Руслан составляет 6-буквенные коды из букв Р, У, С, Л, А, Н.
# Каждую букву нужно использовать ровно один раз, при этом нельзя ставить рядом две гласные.
# Сколько различных кодов может составить Руслан?
'''
s = 'РУСЛАН'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        M = [a, b, c, d, e, f]
                        if len(set(M)) == len(M):  # Каждую букву нужно использовать ровно один раз
                            if 'УА' not in temp and 'АУ' not in temp:
                                print(temp)
                                count += 1
print(count)
'''
# Ответ: 480


# Тип 8 № 26982 i
# Сколько существует шестизначных чисел, делящихся на 5,
# в которых каждая цифра может встречаться только один раз,
# при этом никакие две чётные и две нечётные цифры не стоят рядом.
'''
s = '0123456789'
s1 = '13579'
s2 = '02468'
count = 0
for a in s1:
    for b in s2:
        for c in s1:
            for d in s2:
                for e in s1:
                    for f in s2:
                        temp = a + b + c + d + e + f
                        M = [a, b, c, d, e, f]
                        if f == '0' or f == '5':  #  делящихся на 5
                            if len(set(M)) == len(M):  # # в которых каждая цифра может встречаться только один раз
                                print(temp)
                                count += 1

for a in '2468':
    for b in s1:
        for c in s2:
            for d in s1:
                for e in s2:
                    for f in s1:
                        temp = a + b + c + d + e + f
                        M = [a, b, c, d, e, f]
                        if f == '0' or f == '5':  #  делящихся на 5
                            if len(set(M)) == len(M):  # # в которых каждая цифра может встречаться только один раз
                                print(temp)
                                count += 1

print(count)
'''
# Ответ: 1296

# Тип 12 № 11270
# Ниже приведена программа для исполнителя Редактор.
#
# НАЧАЛО
#   ПОКА нашлось (19) ИЛИ нашлось (299) ИЛИ нашлось (3999)
#     заменить (19, 2)
#     заменить (299, 3)
#     заменить (3999, 1)
#   КОНЕЦ ПОКА
# КОНЕЦ
#
# На вход этой программе подаётся строка длины 101, состоящая из цифры 1, за которой следуют 100 идущих подряд цифр 9.
# Какая строка получится в результате применения программы к этой строке?
'''
s = '1' + '9' * 100

while '19' in s or '299' in s or '3999' in s:
    s = s.replace('19', '2', 1)
    s = s.replace('299', '3', 1)
    s = s.replace('3999', '1', 1)
print(s)
'''
# Ответ: 39


# Тип 12 № 29199
# Дана программа для Редактора:
# НАЧАЛО
# ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#     заменить (01, 20)
#     заменить (02, 120)
#     заменить (03, 302)
# КОНЕЦ ПОКА
# КОНЕЦ
#
# Известно, что исходная строка начинается с цифры 0, а далее содержит 12 цифр 1, 15 цифр 2 и 17 цифр 3, расположенных в произвольном порядке.
# Сколько цифр 1 будет в строке, которая получится после выполнения данной программы?
'''
s = '0' + '3' * 17 + '1' * 12 + '2' * 15

while '01' in s or '02' in s or '03' in s:
    s = s.replace('01', '20', 1)
    s = s.replace('02', '120', 1)
    s = s.replace('03', '302', 1)
print(s.count('1'))
'''
# Ответ: 32



# Тип 12 № 40728
# Дана программа для редактора:
#
# НАЧАЛО
#     ПОКА нашлось (1111)
#         заменить (1111, 22)
#         заменить (222, 1)
#     КОНЕЦ ПОКА
# КОНЕЦ
#
# Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр.
# При какой наименьшей длине исходной строки результат работы данной программы будет содержать наибольшее возможное число единиц?
'''
maxi = 0
for n in range(200+1, 1000):
    s = '1' * n

    while '1111' in s:
        s = s.replace('1111', '22', 1)
        s = s.replace('222', '1', 1)
    if maxi < s.count('1'):
        maxi = s.count('1')
        print(n, maxi)
'''
# Ответ: 201


# Тип 12 № 23912
# На вход приведённой ниже программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 10 цифр 1, 20 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.
# Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.

# НАЧАЛО
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)
#     ЕСЛИ нашлось (>1)
#         ТО заменить (>1, 22>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>2)
#         ТО заменить (>2, 2>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>3)
#         ТО заменить (>3, 1>)
#     КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
# КОНЕЦ
'''
s = '>' + '1' * 10 + '2' * 20 + '3' * 30
while ">1" in s or '>2' in s or '>3' in s:
    if '>1' in s:
        s = s.replace('>1', '22>', 1)
    if '>2' in s:
        s = s.replace('>2', '2>', 1)
    if '>3' in s:
        s = s.replace('>3', '1>', 1)

print(s)

# Вариант 1
summ1 = 0
for x in s[:-1]:
    summ1 += int(x)
print(summ1)

# Вариант 2
print(sum([int(x) for x in s[:-1]]))

# Вариант 3
print(s.count('1') + s.count('2') * 2)
'''
# Ответ: 110


# Тип 12 № 46970
# Дана программа для редактора:
#
# НАЧАЛО
#     ПОКА НЕ нашлось (00)
#         заменить (01, 210)
#         заменить (02, 3101)
#         заменить (03, 2012)
#     КОНЕЦ ПОКА
# КОНЕЦ
#
# Известно, что исходная строка начиналась с нуля и заканчивалась нулём, а между ними содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 70 единиц, 56 двоек и 23 тройки. Сколько цифр было в исходной строке?
'''
for x in range(0, 50):
    for y in range(0, 50):
        for z in range(0, 50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'

            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '3101', 1)
                s = s.replace('03', '2012', 1)
            if s.count('1') == 70 and s.count('2') == 56 and s.count('3') == 23:
                print(x + y + z + 2)  # потому что еще 2 нуля
                exit()
'''
# Ответ: 40






# endregion Урок: ******************************************************************************


# todo: Артем = [2, 5, 8, 12, 14]
# на прошлом уроке: Разобрали 8.2 номера и разобрали все 12 нмоера кроме itertools.
# на следующем уроке:
