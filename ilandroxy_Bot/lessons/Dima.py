
# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 6 № 47392
# В начальный момент Черепаха находится в начале координат,
# её голова направлена вдоль положительного направления оси ординат, хвост опущен.

# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 6 [Вперёд 10 Направо 60]
#
# Определите количество точек с целочисленными координатами,
# лежащих внутри или на границе области, которую ограничивает заданная алгоритмом линия.

'''
print(187 + 35*2+11)
# from turtle import *
import turtle as t
t.left(90)
t.speed(10)
l = 30
for _ in range(6):
    t.forward(10 * l)
    t.right(60)

t.up()
for x in range(0, 20):
    for y in range(-5, 16):
        t.goto(x * l, y * l)
        t.dot(1.5, 'red')
t.done()
'''

'''
import turtle as t
t.left(90)
t.speed(10)
l = 20

t.begin_fill()
for _ in range(6):
    t.forward(10 * l)
    t.right(60)
t.end_fill()

count = 0
canvas = t.getcanvas()
for x in range(-100*l, 100*l, l):
    for y in range(-100 * l, 100 * l, l):
        item = canvas.find_overlapping(x, y, x, y)
        if len(item) >= 1 and item[0] == 5:
            count += 1
print(count)
t.done()
'''


# Тип 6 № 47404
# В начальный момент Черепаха находится в начале координат, её голова направлена
# вдоль положительного направления оси ординат, хвост опущен.

# Черепахе был дан для исполнения следующий алгоритм:
#
# Повтори 4 [Вперёд 10 Направо 90]
# Направо 30
# Повтори 5 [Вперёд 6 Направо 60 Вперёд 6 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области,
# ограниченной линией, заданной данным алгоритмом: Повтори 4 [Вперёд 10 Направо 90]
# и находиться вне области, ограниченной линией, заданной данным алгоритмом:
# Повтори 5 [Вперёд 6 Направо 60 Вперёд 6 Направо 120].
# Точки на линии учитывать не следует.

'''
import turtle as t
t.left(90)
t.speed(10)
l = 30
for _ in range(4):
    t.forward(10 * l)
    t.right(90)
t.right(30)
t.color('blue')
for _ in range(2):
    t.forward(6 * l)
    t.right(60)
    t.forward(6 * l)
    t.right(120)

t.up()
for x in range(0, 20):
    for y in range(-5, 16):
        t.goto(x * l, y * l)
        t.dot(2, 'red')
t.done()
'''

'''
import turtle as t
t.left(90)
t.speed(10)
l = 30
t.begin_fill()
for _ in range(4):
    t.forward(10 * l)
    t.right(90)
t.end_fill()

t.right(30)
t.color('blue')

t.begin_fill()
for _ in range(2):
    t.forward(6 * l)
    t.right(60)
    t.forward(6 * l)
    t.right(120)
t.end_fill()

count = 0
canvas = t.getcanvas()
for x in range(-100*l, 100*l, l):
    for y in range(-100 * l, 100 * l, l):
        item = canvas.find_overlapping(x, y, x, y)
        if len(item) == 1 and item[0] == 5:
            count += 1
print(count)

t.done()
'''


# Михаилу был дан для исполнения следующий алгоритм:
#
# Повторить 20 раз
#  Круг (4)
#  Сместиться на (8, 0)
# Конец
# Сместиться на (0, -12)
# Повторить 10 раз
#  Круг (8)
#  Сместиться на (-16, 0)
# Конец
# Сместиться на (0, -14)
# Повторить 15 раз
#  Круг (6)
#  Сместиться на (12, 0)
# Конец

# Сколько раз в результате выполнения данного алгоритма встретится комбинация из трех окружностей,
# центры которых располагаются на одной вертикальной прямой линии?
'''
import turtle as t
x, y = 0, 0
t.speed(10)
l = 30
t.left(90)

for _ in range(20):
    t.circle(4 * l)
    t.dot(2, 'red')
    x += 8
    y += 0
    t.goto(x, y)

x += 0
y += -12
t.goto(x, y)

for _ in range(10):
    t.circle(8 * l)
    t.dot(2, 'blue')
    x += -16
    y += 0
    t.goto(x, y)

x += 0
y += -14
t.goto(x, y)

for _ in range(15):
    t.circle(6 * l)
    t.dot(2, 'green')
    x += 12
    y += 0
    t.goto(x, y)

t.done()
'''


# Чертёжнику был дан для исполнения следующий алгоритм:
#
# Повтори 10 раз
#  Сместиться на (15, 8)
#  Сместиться на (0, -2)
#  Сместиться на (-5, -12)
#  Сместиться на (-2, 0)
#  Сместиться на (-8, 6)
# конец

print((15 ** 2 + 8 ** 2) ** 0.5)
print((12 ** 2 + 5 ** 2) ** 0.5)
print((8 ** 2 + 6 ** 2) ** 0.5)
print(17 + 13 + 10 + 4)

import turtle as t
x, y = 0, 0
t.speed(1)
l = 30
t.left(90)

for _ in range(10):
    x += 15
    y += 8
    t.goto(x * l, y * l)

    x += 0
    y += -2
    t.goto(x * l, y * l)

    x += -5
    y += -12
    t.goto(x * l, y * l)

    x += -2
    y += 0
    t.goto(x * l, y * l)

    x += -8
    y += 6
    t.goto(x * l, y * l)
t.done()


# endregion Урок: ******************************************************************************


# todo: Дмитрий = [1, 2, 3, 4, 5, 8, 9.1, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# на прошлом уроке: Освежили в памяти решение 18 номер на столбец, разобрали 4 номер и 13 номер.
# на следующем уроке:
