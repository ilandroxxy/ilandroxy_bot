
# region Домашка: ******************************************************************************



# endregion Домашка: ******************************************************************************




# region Урок: ******************************************************************************

# Тип 25 № 27851
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [210_235;210_300],
# числа, имеющие ровно четыре различных натуральных делителя, не считая единицы и самого числа.
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.
'''
for x in range(210_235, 210_300+1):  # 100_000_000_000
    M = []
    for j in range(2, x):
        if x % j == 0:
            M.append(j)
    if len(M) == 4:
        print(M)
'''

# Вариант 2
'''
def D(x):
    """
    Вот моя документация
    """
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)

    return sorted(dl)

for x in range(210_235, 210_300+1):
    dl = D(x)
    if len(dl) == 4:
        print(*dl)
'''

# print(D(210_300))
#
# dl = set()
# print(dl.add.__doc__)
# print(range.__doc__)
# print(D.__doc__)

# Ответ:
# 2 4 52561 105122
# 2 4 52567 105134
# 2 4 52571 105142



# Тип 25 № 28123
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [125_256; 125_330],
# числа, имеющие ровно шесть различных чётных натуральных делителей.
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.



def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (x // j) % 2 == 0:
                dl.add(x//j)
    return sorted(dl)

for x in range(125_256, 125_330+1):
    dl = D(x)
    if len(dl) == 6:
        print(*dl)
'''
# Ответ:
# 2 6 18 13918 41754 125262
# 2 4 8 31322 62644 125288
# 2 6 18 13922 41766 125298



# Тип 25 № 38603
'''
# Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то значение M считается равным нулю.
#
# Напишите программу, которая перебирает целые числа, бо́льшие 700_000,
# в порядке возрастания и ищет среди них такие, для которых значение M оканчивается на 8.
# Выведите первые пять найденных чисел и соответствующие им значения M.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 2:
                return sorted(dl)
    return sorted(dl)

k = 0
for x in range(700_000+1, 125_330_000+1):
    dl = D(x)
    if len(dl) >= 2:
        M = dl[0] + dl[-1]
        if M % 10 == 8:
            print(x, M)
            k += 1
            if k == 5:
                break
'''
# Ответ:
# 700005 233338
# 700007 100008
# 700012 350008
# 700015 140008
# 700031 24168



# Тип 25 № 38959
'''
# Пусть M(N) — произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы.
# Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
#
# Найдите 5 наименьших натуральных чисел, превышающих 200_000_000, для которых 0<M(N)<N.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 10:
                return sorted(dl)
    return sorted(dl)

k = 0
for x in range(200_000_000+1, 400_000_000):
    dl = D(x)
    if len(dl) >= 5:
        M = dl[0] * dl[1] * dl[2] * dl[3] * dl[4]
        if 0 < M < x:
            print(M)
            k += 1
            if k == 5:
                break
'''
# Ответ:
# 1728
# 21632
# 1260
# 1152
# 4127787



# Тип 25 № 33495 i
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения
# двух натуральных чисел и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [2_000_000; 3_000_000],
# у которых составленное описанным способом множество разностей будет содержать не меньше трёх элементов, не превышающих 115.
# В ответе перечислите найденные числа в порядке возрастания.

# Вариант 1
'''
def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if (x // j) - j <= 115:
                dl.add((x // j) - j)
                if len(dl) > 2:
                    return sorted(dl)
    return sorted(dl)

for x in range(2_000_000, 3_000_000+1):
    dl = D(x)
    if len(dl) > 2:
        print(x)
'''

# Вариант 2
'''
for x in range(2_000_000, 3_000_000+1):
    dl = set()
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            if (x // j) - j <= 115:
                dl.add((x // j) - j)
                if len(dl) > 2:
                    print(x)
                    break
'''

# Вариант 3
'''
for x in range(2_000_000, 3_000_000+1):
    k = 0
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            if (x // j) - j <= 115:
                k += 1
                if k > 2:
                    print(x)
                    break
'''
# Ответ:
# 2053440
# 2098080
# 2328480
# 2638944



# Тип 25 № 45259
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**9, найдите все числа, соответствующие маске 12345?7?8, делящиеся на число 23 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце — соответствующие им результаты деления этих чисел на 23.

my_dict = {}  # dict()
for x in '0123456789':
    for y in '0123456789':
        A = int(f'12345{y}7{x}8')
        if A % 23 == 0:
            my_dict[A] = A // 23

for x in sorted(my_dict):
    print(x, my_dict[x])

for x in sorted(my_dict.items()):
    print(x)

print(sorted(my_dict))

print(max(my_dict.items()))  # приоритет сортировок по ключу (всегда)
'''
# Ответ:
# 123450798 5367426
# 123451718 5367466
# 123453788 5367556
# 123454708 5367596
# 123456778 5367686
# 123459768 5367816



# Тип 25 № 47229
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
#
# — символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 1010, найдите все числа, соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце — соответствующие им результаты деления этих чисел на 2023.

print(10**10)
print('1?2139***4')  # трехзначне звездочки
print(f'123{""}456')



M = [i for i in range(0, 1000)]
M.append('')

my_dict = {}  # dict()
for x in '0123456789':
    for y in M:
        A = int(f'1{x}2139{y}4')
        if A % 2023 == 0:
            my_dict[A] = A // 2023

for x in sorted(my_dict):
    print(x, my_dict[x])
'''
# Ответ:
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048




# endregion Урок: ******************************************************************************


# todo: Дмитрий = [2, 5, 8, 12, 14+, 15+, 16, 23, 25.1]
# на прошлом уроке: Разбирали 25 номера, делители, Мки, маски, сомножители
# на следующем уроке: Продолжаем 25 номер, на окончания, на простые числа