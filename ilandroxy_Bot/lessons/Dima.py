
# region Домашка: ******************************************************************************

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# № 6901 (Уровень: Средний)
# (Д. Статный) Все пятибуквенные слова, в составе которых могут быть только буквы слова БАРАШ,
# записаны в алфавитном порядке и пронумерованы начиная с 1.
#
# Ниже приведено начало списка.
# 1. ААААА
# 2. ААААБ
# 3. ААААР
# 4. ААААШ
# 5. АААБА
#
# Под каким последним номером идёт слово, в котором не более 3-х согласных
# и только одна буква повторяется дважды, а остальные не повторяются?

# Вариант 1
'''
s = sorted('БАРАШ')  # ['А', 'А', 'Б', 'Р', 'Ш']

my_set = set()
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    my_set.add(slovo)

print(sorted(my_set))  # ['ААААА', 'ААААБ', 'ААААР', 'ААААШ', 'АААБА', ....]
k = 1
for x in sorted(my_set):
    if len(set(x)) == len(x)-1:  # ШРШБА  БРБША  АБРШР
        if x.count('Ш') + x.count('Р') + x.count('Б') <= 3:
            print(k, x)
    k += 1
'''

# Вариант 2
'''
import itertools
my_set = set()
for s in itertools.product('БАРАШ', repeat=5):  # ('Ш', 'А', 'Б', 'Р', 'А')
    slovo = ''.join(s)
    my_set.add(slovo)

print(sorted(my_set))  # ['ААААА', 'ААААБ', 'ААААР', 'ААААШ', 'АААБА', ....]
k = 1
for x in sorted(my_set):
    if len(set(x)) == len(x)-1:  # ШРШБА  БРБША  АБРШР
        if x.count('Ш') + x.count('Р') + x.count('Б') <= 3:
            print(k, x)
    k += 1
'''
# 913 ШРБАА
# Показать ответ: 913



# № 6782 (Уровень: Средний) (PRO100 ЕГЭ) Определите количество шестизначных чисел, записанных в восьмеричной системе
# счисления, в записи которых есть ровно две цифры 6, при этом никакая нечётная цифра не стоит рядом с цифрой 6.
'''
my_list = []
import itertools as it
for s in it.product('01234567', repeat=6):  # 000011
    slovo = ''.join(s)
    if slovo[0] != '0':
        if slovo.count('6') == 2:
            if all(x not in slovo for x in '16 61 36 63 56 65 76 67'.split()):
                my_list.append(slovo)
print(len(my_list))
'''
# Показать ответ: 5229

# № 6588 Пробник ИМЦ СПб (Уровень: Средний)
# Автомат обрабатывает натуральное число N по следующему алгоритму.
#
# 1. Строится двоичная запись числа N.
# 2. Все значащие цифры инвертируются (‘0’ заменяется на ‘1’, а ‘1’ на ‘0’).
# 3. К полученному результату слева добавляется ‘1’.
# 4. К двоичной записи полученного числа справа дописывается бит четности: ‘1’,
# если количество единиц в двоичной записи нечетно, ‘0’ - если четно.
# 5. Полученное в результате этих операций число переводится в десятичную систему счисления.
#
# Полученная таким образом запись является результатом работы алгоритма: R.
#
# Укажите такое наименьшее число N, для которого результат работы данного алгоритма больше числа 180.
# В ответе это число запишите в десятичной системе счисления.
'''
for n in range(1000):
    s = bin(n)[2:]
    s = s.replace('0', '*')
    s = s.replace('1', '0')
    s = s.replace('*', '1')
    s = '1' + s
    if s.count('1') % 2 == 0:
        s = s + '0'
    else:
        s = s + '1'
    r = int(s, 2)
    if r > 180:
        print(n)
        break
'''
# Ответ: 32

#
# № 6077 /dev/inf 02.2023 (Уровень: Средний)
# (А. Рогов) По каналу связи передаются трехзначные числа.
# Для каждой пары таких чисел строится контрольная сумма,
# необходимая для обнаружения ошибок при передаче. Контрольная сумма строится следующим образом:
#
# 1. записывается сумма разрядов сотен исходных чисел
# 2. справа дописывается сумма разрядов десятков исходных чисел
# 3. слева дописывается сумма разрядов единиц исходных чисел
# 4. контрольная сумма — это три цифры полученного числа: число тысяч, сотен и десятков.
#
# Пример: передаются числа 473 и 934. Сумма разрядов сотен равна 13,
# сумма разрядов десятков равна 10, сумма разрядов единиц 7. Получаем число 71310, контрольная сумма 131.
#
# Определите, при каком наибольшем значении первого числа пары контрольная сумма будет равна 002?
'''
for n in range(100, 1000):
    for m in range(100, 1000):
        N = [int(i) for i in str(n)]
        M = [int(i) for i in str(m)]

        # R = ''.join([str(i) for i in [N[2] + M[2], N[0] + M[0], N[1] + M[1]]])
        # R = R[-4:-1]
        r = str(N[2] + M[2]) + str(N[0] + M[0]) + str(N[1] + M[1])
        r = r[-4:-1]

        if int(r) == 2:
            print(n)
'''
# Показать ответ: 190


# № 5899 (Уровень: Сложный)
# (Д. Тараскин) Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам:
#
# 1) Из цифр, образующих десятичную запись N, строятся все возможные двузначные числа(числа не могут начинаться с нуля).
# 2) Из получившихся двузначных чисел выбираются только те, которые являются простыми.
#
# Каждую цифру трехзначного числа можно использовать ровно столько раз, сколько она
# встречается в этом числе. К примеру, возьмем число 123. Из него можно составить числа: 12, 13, 21, 31, 23, 32.
#
# Для какого наибольшего N количество выбранных простых чисел будет максимальным?
'''
import itertools

def Prime(x):
    for j in range(2, x):
        if x % j == 0:
            return False
    return True

r = 0
maxi = 0
for n in range(100, 1000):
    my_set = set()
    for s in itertools.permutations(str(n), 2):
        if s[0] != '0':
            a = int(''.join(s))
            if Prime(a):
                my_set.add(a)
                if maxi <= len(my_set):
                    maxi = len(my_set)
                    r = n
                    print(r, maxi)
print(r)
'''
# Показать ответ: 731

# endregion Урок: ******************************************************************************


# todo: Дмитрий = [1, 2, 3, 4, 5+, 6, 7, 8+, 9.1, 11, 12, 13, 14+, 15+, 16+, 17, 18, 19-21, 22, 23, 24, 25.2]
# на прошлом уроке: Прорешивали 8 и 5 номера с КЕГЭ, сложные задачи с ловушками
# на следующем уроке:
