
# region Домашка: ******************************************************************************

# 5854
'''
def F(x, y):
    return ((x & a) > 5) <= ((x & 32) > 20) or ((y & 24) < 6)
for a in range(0, 101):
    if all(F(x, y) for x in range(0, 1000) for y in range(0, 1000)):
        print(a)
# 37
'''


# 5861
'''
def F(a, b):
    s = [i for i in range(5, 41, 5)]
    if a <= b or a in s:
        return a == b
    if a > b:
        return F(a - 1, b) + F(a - 2, b)
print(F(42, 1))
# Ответ: 6561
'''


#5862
'''
count = 0
m = open('24.txt').readline()
n = []
for i in range(len(m) - 5):
    if (int(m[i]) + int(m[i+1]) + int(m[i+2]) + int(m[i+3]) + int(m[i+4])) % 2 == 0:
        if (int(m[i]) + int(m[i+1]) + int(m[i+2]) + int(m[i+3]) + int(m[i+4])) == 44:
            count += 1
print(count)
# Ответ:5
'''


# № 5863 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
#
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, превышающих 10^7, но не превышающих 10^8,
# найдите все числа, десятичная запись которых соответствует маске 4*?9?*4, цифра 9 только одна,
# а само число делится на 1024. Выберите из них те, в которых равны суммы цифр до цифры 9 и после неё,
# а также, равны количества нулей до цифры 9 и после неё.
#

# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 1024.
#
# Количество строк в таблице для ответа избыточно.
'''
print(10**7)
print('4?9?**4')

import itertools
M = []
for l in range(0, 2+1):
    for s in itertools.product('0123456789', repeat=l):
        slovo = ''.join(s)
        M.append(slovo)
print(M)  # ['', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '00', '01', '02', '03', '04', '05', '06'

R = []
for x in '0123456789':
    for y in '0123456789':
        for z in M:
            for w in M:
                A = int(f'4{z}{x}9{y}{w}4')
                if 10**7 < A < 10**8:
                    if str(A).count('9') == 1:
                        if A % 1024 == 0:
                            s1, s2 = str(A).split('9')
                            if s1.count('0') == s2.count('0'):
                                if sum([int(i) for i in s1]) == sum([int(i) for i in s2]):
                                    R.append([A, A//1024])
for x in sorted(R):
    print(*x)
 '''
# Ответ:
# 41549824 40576
# 43029504 42021
# 44391424 43351
# 44893184 43841
# 45169664 44111
# 46239744 45156
# 47693824 46576
# 48697344 47556


# № 5856 (Уровень: Базовый)
# В файле 17.txt содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от 1 до 200 000 включительно.
# Определите число, сумма цифр которого максимальна.
# Определите те числа, количество единиц в двоичной записи которых является одним из делителей этой суммы цифр.
# В ответе запишите, сначала, количество таких чисел, а затем – наибольшее из них в десятичной системе счисления.
'''
M = [int(i) for i in open('17.txt')]
max_summ = 0
result = 0
for x in M:
    summ = sum([int(i) for i in str(x)])
    if max_summ < summ:
        max_summ = summ
        result = x
print(result, max_summ)  # # Определите число, сумма цифр которого максимальна.

count = 0
maxi = 0
for x in M:
    if max_summ % bin(x)[2:].count('1') == 0:
        count += 1
        maxi = max(maxi, x)
print(count, maxi)  # количество таких чисел, а затем – наибольшее из них.
'''
# Ответ: 1482 111093





# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************



# endregion Урок: ******************************************************************************


# todo:    Дмитрий   = [1, 2, 3, 4, 5+, 6, 7, 8+, 9.1, 11, 12, 13, 14+, 15+, 16+, 17, 18, 19-21, 22, 23, 24, 25.2]
# todo: Дмитрий КЕГЭ = [5, 14, 16, 25]
# на прошлом уроке: Посмотрели 17, 25 номер из домашки (вариант Якунина). Начали решать новый вариант Джобса от 21.12.2022
# на следующем уроке:
