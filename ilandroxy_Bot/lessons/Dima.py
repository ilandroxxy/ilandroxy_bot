
# region Домашка: ******************************************************************************


# Тип 9 № 27521
'''
# Откройте файл электронной таблицы, содержащей вещественные числа  — результаты ежечасного измерения 
# температуры воздуха на протяжении трёх месяцев.
# Сколько раз встречалась температура, которая равна минимальному значению?
m = []
for s in open('9.txt'):
    m += [float(i) for i in s.replace(',', '.').split()]
print(m.count(8.1))
# 1
'''

# Тип 9 № 40725
'''
# В каждой строке электронной таблицы записаны три натуральных числа, задающих длины трёх взаимно перпендикулярных 
# рёбер прямоугольного параллелепипеда. Определите, сколько в таблице троек, для которых у заданного ими 
# параллелепипеда можно так выбрать три грани с общей вершиной, что сумма площадей двух из них будет меньше площади третьей.
count = 0
for s in open('9.txt'):
    m = [int(i) for i in s.split()]
    p1 = m[0] * m[1]
    p2 = m[1] * m[2]
    p3 = m[0] * m[2]
    if (p1 + p2 < p3) or (p2 + p3 < p1) or (p1 + p3 < p2):
        count += 1
print(count)
# 3119
'''

# Тип 9 № 47213

# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# — в строке только одно число повторяется ровно два раза, остальные числа различны;
# — среднее арифметическое неповторяющихся чисел строки не больше суммы повторяющихся чисел.
'''
count = 0
for s in open('9.txt'):
    m = [int(i) for i in s.split()]
    n = set(m)
    if len(n) == 5:
        copy = sum(m) - sum(n)
        if ((sum(n) - copy) / 4) <= 2*copy:
            count += 1
print(count)
'''
# Ответ: 2241

# m = [43, 28, 36, 31, 129, 28]
# n = {43, 28, 36, 31, 129, 28}
# Как найти и положить в переменную повторяющееся число: sum(m) - sum(n) = 28
# суммы повторяющихся чисел: 28 * 2
# среднее арифметическое неповторяющихся чисел: (sum(n) - 28) / 4 или (sum(m) - 28*2) / 4

# Тип 9 № 33479
'''
# Электронная таблица содержит результаты ежечасного измерения температуры воздуха на протяжении трёх месяцев. 
# Определите, сколько раз за время наблюдений температура в 20:00 была ниже среднесуточной температуры того же дня.

count = 0
for s in open('9.txt'):
    m = [float(i) for i in s.replace(',', '.').split()]
    if m[20] < (sum(m)/len(m)):
        count += 1
print(count)
# 28
'''

# Тип 24 № 47228
'''
# Текстовый файл состоит из символов A, C, D, F и O.
# Определите максимальное количество идущих подряд пар символов вида
# согласная + гласная.

count = 0
m_count = 0
s = open('24.txt').readline()
for i in range(0, len(s)-1, 2):
    if (s[i] == 'C' or s[i] == 'D' or s[i] == 'F') and (s[i+1] == 'A' or s[i+1] == 'O'):
        count += 1
        i += 2
        m_count = max(m_count, count)
    else:
        count = 0
        i += 1
print(m_count)
# 95
'''

# Тип 24 № 33494
'''
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). 
# Определите символ, который чаще всего встречается в файле сразу после буквы E.

s = open('24.txt').readline()
alp = 'QWERTYUIOPASDFGHJKLZXCVBNM'
for x in alp:
    m = str(f'E{x}')
    print(x, s.count(m))
# Y
'''

# Тип 24 № 27689
'''
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z. Определите максимальную длину цепочки вида XYZXYZXYZ... 
# (составленной из фрагментов XYZ, последний фрагмент может быть неполным).

s = open('24.txt').readline()
print(s)
print(len('XYZXYZXYZXYZX'))
# 13
'''

# Тип 24 № 27692

# Текстовый файл состоит не более чем из 10**6 символов A, B и C. Определите максимальное количество идущих подряд символов B.
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# print(len('BBBBBBBBBBB'))

# 11

# endregion Домашка: ******************************************************************************



# region Урок: ******************************************************************************

# Тип 9 Статград Вариант 1 от 15.12.22
'''
# В каждой строке электронной таблицы записаны пять натуральных чисел.
# Определите, сколько в таблице строк, для которых выполнены следующие
# условия:
# – все числа в строке различны;
# – нечётных чисел больше, чем чётных;
# – сумма нечётных чисел меньше суммы чётных.
# В ответе запишите число – количество строк, для которых выполнены эти
# условия.

count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    N = set(M)
    if len(N) == len(M):
        nechet = [i for i in M if i % 2 != 0]
        chet = [i for i in M if i % 2 == 0]
        if len(nechet) > len(chet):
            if sum(nechet) < sum(chet):
                count += 1
print(count)
'''
# Ответ: 303


# Тип 24 № 33526
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите символ, который чаще всего встречается в файле между двумя одинаковыми символами.
'''
import string

s = open('24.txt').readline()
M = []
for i in range(0, len(s)-2):
    if s[i] == s[i+2]:
        M.append(s[i+1])

alphabet = string.ascii_uppercase
'''
# Вариант 1
'''
maxi = 0
for a in alphabet:
    if maxi < M.count(a):
        maxi = M.count(a)
        print(maxi, a)
'''

# Вариант 2
'''
mydict = {}
for a in alphabet:
    mydict[M.count(a)] = a

print(mydict[max(mydict)])
'''
# Ответ: D

# Тип 24 № 35998 i
# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# В строках, содержащих менее 25 букв A,
# нужно определить и вывести максимальное расстояние между одинаковыми буквами в одной строке.

# Вариант 1
'''
S = open('24.txt').readlines()
M = []
for x in S:
    if x.count('A') < 25:
        M.append(x)

alphabet = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])
maxi = 0
for x in M:
    for a in alphabet:
        maxi = max(maxi, x.rindex(a) - x.index(a))
print(maxi)
'''
#
# alphabet = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])  в алфавитном порядке

# Вариант 2
'''
S = open('24.txt').readlines()
alphabet = 'QWERTYUIOPASDFGHJKLZXCVBNM'
maxi = 0
for x in S:
    if x.count('A') < 25:
        for a in alphabet:
            maxi = max(maxi, x.rindex(a) - x.index(a))
print(maxi)
'''
# Ответ: 1004


# Тип 24 № 35482
# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# Необходимо найти строку, содержащую наименьшее количество букв G
# (если таких строк несколько, надо взять ту, которая находится в файле раньше),
# и определить, какая буква встречается в этой строке чаще всего.
# Если таких букв несколько, надо взять ту, которая позже стоит в алфавите.
'''
S = open('24.txt').readlines()
alphabet = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])
mini = 9999
my_string = ''
for x in S:
    if mini > x.count('G'):
        mini = x.count('G')
        my_string = x

maxi = -9999
result = ''
for a in alphabet:
    if maxi <= my_string.count(a):
        maxi = my_string.count(a)
        result = a
print(result)
'''
# Ответ: T


# Тип 24 № 29672
# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество строк, в которых буква E встречается чаще, чем буква A.
'''
S = open('24.txt').readlines()
count = 0
for x in S:
    if x.count('E') > x.count('A'):
        count += 1
print(count)
'''
# Ответ: 467

# Статград Вариант 1 от 15.13.22
# Текстовый файл содержит только буквы A, C, D, F, O. Определите длину самой
# длинной цепочки символов, которая начинается и заканчивается буквой F,
# а между двумя последовательными буквами F содержит не более двух букв A
# и произвольное количество других букв.
'''
s = open('24.txt').readline()
s = s.replace('F', ' ')
M = [len(i) for i in s.split() if i.count('A') <= 2]
print(max(M)+2)
'''
# Ответ: 35


# Напишем программу, для проверки ip адреса пользователя
'''
ip = '123.14.12.123'
M = ip.split('.')
print(M)  # ['123', '14', '12', '123']

r = '_'.join(M)  
print(r)  # 123_14_12_123

M = [int(i) for i in ip.split('.')]
print(M)  # [123, 14, 12, 123]
'''

# endregion Урок: ******************************************************************************


# todo: Дмитрий = [2, 5, 8, 9.1, 12, 14+, 15+, 16, 17, 23, 24, 25.2]
# на прошлом уроке: Доразобрали задачи 24 номера на строки
# на следующем уроке: ЭКСЕЛЬ задачи: 3, 9, 10, 18, 19-21, 22