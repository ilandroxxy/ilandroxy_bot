
# region Домашка:  **************************************************

# № 7357 (Уровень: Средний)
# (Л. Шастин) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную чётную цифру;
# – символ «*» означает любое нечётное число;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123737465 и 123485.
#
# Среди натуральных чисел, не превышающих 10**10 , найдите 5 наибольших чисел,
# соответствующих маске ?136*, делящихся на 53191 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 53191.
'''
print(10**10 % 53191)  # 38809
print(((10**10) - 38809) % 53191)
print(10**10)


R = []
for i in range(((10**10) - 38809), 0, -53191):  # уменьшаю диапазон, т.к. долго считается
    if i % 53191 == 0:
        r = str(i)
        if r[1] == '1' and r[2] == '3' and r[3] == '6':
            if r[0] in '2468' and r[-1] in '13579':
                R.append([i, i // 53191])
                if len(R) >= 5:
                    break

for x in sorted(R):
    print(*x)
'''
# Показать ответ:
# 8136574079 152969
# 8136680461 152971
# 8136786843 152973
# 8136893225 152975
# 8136999607 152977


# № 7345 (Уровень: Сложный)
# (Д. Статный) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Найдите все числа, не превышающие 10**10, которые соответствуют маске 8*80*06 и при этом без остатка делятся на 4546.
# В ответе запишите каждое 60-е число, считая от 1-го (61-е, 121-е и т.д.) в порядке возрастания,
# справа от каждого запишите частное от его деления на 4546.
'''
print(10**10)
print('880*****06')


import itertools
M = []
for l in range(0, 5+1):
    for s in itertools.product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)
print(len(M) * len(M))

c = 0
R = []
for x in M:
    for y in M:
        A = int(f'8{x}80{y}06')
        c += 1
        print(c)
        if A < 10**10 and A % 4546 == 0:
            R.append([A, A // 4546])

i = 1
for x in sorted(R):
    if i % 61 == 0:
        print(*x)
    i += 1
'''

'''
from fnmatch import fnmatch
i = 1
for x in range(0, 10**10, 4546):
    if fnmatch(str(x), '8*80*06'):
        if i % 60 == 1:
            print(x, x // 4546)
        i += 1
'''
# 81878006 18011
# 8185804906 1800661
# 8446518006 1858011
# 8780876306 1931561
# 8894980906 1956661



# № 7352 (Уровень: Базовый)
# (Л. Шастин) Алгоритм вычисления значения функции

# F(n), где  n – целое число, задан следующими соотношениями:
# F(n)=7, если  n<2,
# F(n)=7⋅F(n−2), если n>1.
#
# Чему равно значение выражения F(12950)/7 **(6473)
'''
def F(n):
    if n < 2:
        return 7
    if n > 1:
        return 7 * F(n-2)

'''
# print(F(12950) / 7 ** (6473))

# Сократим с шагом 2 (12950 /2) и сократим лишнее F - останется 7**3



# № 7074 (Уровень: Средний)
# (Д. Статный) Исполнитель Калькулятор имеет на экране натуральное число.
# У исполнителя есть две команды, которым присвоены номера:
#
# 1. Прибавить 1.
# 2. Вычесть 1.
#
# Сколько существует значений, в которые можно прийти не более чем за 12 команд из числа 1?


'''
def F(a: int, h: int):
    if h > 12:
        return set()
    else:
        return {a} | F(a+1, h+1) | F(a-1, h+1)

print(F(1, 0))
'''
# Показать ответ: 25



# endregion Урок:  **************************************************




# Татьяна решить номер 5672
# todo: Татьяна РЕШУ = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 10, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25]
# todo: Татьяна КЕГЭ = [5, 8, 24, 25]
# на прошлом уроке: Закрыли вопросы по задачкам: 7357,  7345 7352, 7074 после чего прорешивали вариант.
# на следующем уроке: #todo: разобрать 25 номер 5 варианта Шастина