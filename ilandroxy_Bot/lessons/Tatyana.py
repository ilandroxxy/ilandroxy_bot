
# region Домашка:  **************************************************

# Тип 7 № 27378
#  Для проведения эксперимента создаются изображения,
#  содержащие случайные наборы цветных пикселей. Размер изображения  — 640 x 480 пк,
#  при сохранении изображения каждый пиксель кодируется одинаковым числом битов, все коды пикселей записываются подряд,
#  методы сжатия не используются. Размер файла не должен превышать 280 Кбайт, при этом 40 Кбайт
#  необходимо выделить для служебной информации.
#  Какое максимальное количество различных цветов и оттенков можно использовать в изображении?
'''
pixels = 640 * 480
I = 280 # Kbyte >> bit
info = 40
x = I - info
bit = x * (2**13)
# i = bit / pixels
i = 6
N = 2 ** i
print(N)
# answer: 64
'''
# Тип 7 № 27538
#  Для проведения эксперимента записывается звуковой фрагмент в формате квадро (четырёхканальная запись)
#  с частотой дискретизации 32 кГц и 32-битным разрешением. Результаты записываются в файл, сжатие данных не производится;
#  дополнительно в файл записывается служебная информация, необходимая для эксперимента,
#  размер полученного файла 97 Мбайт. Затем производится повторная запись этого же фрагмента в формате моно
#  (одноканальная запись) с частотой дискретизации 16 кГц и 16-битным разрешением.
#  Результаты тоже записываются в файл без сжатия и со служебной информацией, размер полученного файла 7 Мбайт.
#  Объём служебной информации в обоих случаях одинаков. Укажите этот объём в мегабайтах.
#  В ответе укажите только число (количество Мбайт), единицу измерения указывать не надо.
'''
audio1 = 4 * 32 * 1000 * 32
audio2 = 1 * 16 * 1000 * 16
proportion = audio1 // audio2
print(proportion)
# Далее составляю систему уравнений и решаю. Искомое число обозначаю за x.
# Answer: 1
'''

# Тип 11 № 6330
# Для регистрации на сайте некоторой страны пользователю требуется придумать пароль.
# Длина пароля  — ровно 6 символов.
# В качестве символов могут быть использованы десятичные цифры и 27 различных букв местного алфавита,
# причём все буквы используются в двух начертаниях: как строчные, так и прописные (регистр буквы имеет значение!).
# Под хранение каждого такого пароля на компьютере отводится одинаковое и минимально возможное целое количество байтов.
# При этом используется посимвольное кодирование, и все символы кодируются одинаковым и минимально возможным количеством битов.
# Определите объём памяти, который используется для хранения 55 паролей. (Ответ дайте в байтах.)
'''
alphabet = 10 + 2 * 27 # 64
i = 6
password = 6 * i
#byte = password / 8
print(5*55)
#Answer: 275
'''

# Тип 11 № 33090
# При регистрации на сервере каждый пользователь получает уникальный персональный код, состоящий из 19 символов,
#  каждый из которых может быть одной из 26 заглавных латинских букв или одной из 10 цифр.
#  При этом в базе данных сервера формируется запись, содержащая этот код и дополнительную информацию о пользователе.
#  Для представления кода используют посимвольное кодирование, все символы кодируют
#  одинаковым минимально возможным количеством битов, а для кода в целом выделяется минимально возможное целое количество байт.
#
# Для хранения данных о 40 пользователях потребовалось 2800 байт.
# Сколько байт выделено для хранения дополнительной информации об одном пользователе?
# В ответе запишите только целое число  — количество байтов.
'''
symbols = 19
alphabet = 26 + 10
i = 6
code = 19 * i
#byte = code / 8
byte = 15
info = 2800 - byte * 40
print(info // 40)
# Answer: 55
'''

# endregion Домашка: **************************************************


# region Урок:  **************************************************

#
# № 6897 OpenFIPI (Уровень: Средний)
# Откройте файл электронной таблицы, содержащей в каждой строке четыре натуральных числа.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
#
# – наибольшее из четырёх чисел меньше суммы трёх других;
# – четыре числа нельзя разбить на две пары чисел с равными суммами.
'''
import itertools
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    if max(M) < sum(M) - max(M):
        # if all(A[0] + A[1] != A[2] + A[3] for A in itertools.permutations(M, 4)):
        # if all(sum(A[:2]) != sum(A[2:]) for A in itertools.permutations(M, 4)):
        if any(A[0] + A[1] == A[2] + A[3] for A in itertools.permutations(M, 4)) == False:
            count += 1
print(count)
'''
# Ответ: 2396


# № 7596 Досрочная волна 2023 (Уровень: Базовый)
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от 1 до 100 000 включительно.
# Определите количество пар последовательности, в которых только одно число трехзначное,
# и сумма элементов пары кратна минимальному трехзначному значению последовательности,
# оканчивающемуся на 5. В ответе запишите два числа: сначала количество найденных пар,
# затем минимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if len(str(i)) == 3 and str(i)[-1] == '5']
print(A)
count = 0
mini = 999999
for i in range(0, len(M)-1):
    if (len(str(M[i])) == 3 and len(str(M[i+1])) != 3) or (len(str(M[i])) != 3 and len(str(M[i+1])) == 3):
        if (M[i] + M[i+1]) % min(A) == 0:
            count += 1
            mini = min(mini, M[i] + M[i+1])
print(count, mini)
'''
# Ответ: 2 33120


# 24 № 7600 Досрочная волна 2023 (Уровень: Базовый)
# Текстовый файл состоит не более, чем из 1 200 000 прописных символов латинского алфавита.
# Определите максимальное количество идущих подряд символов,
# среди которых любые два символа из набора Q, R, S в различных комбинациях
# (с учётом повторений) не стоят рядом.
'''
import itertools
M = []
for s in itertools.product('QRS', repeat=2):
    s = ''.join(s)
    M.append(s)
print(M)

s = open('24.txt').readline()
for x in M:
    s = s.replace(x, ' ')
R = [len(i) for i in s.split()]
print(1+max(R)+1)
'''
# Ответ: 544


#
# № 6892 OpenFIPI (Уровень: Базовый)
# Определите количество шестизначных чисел, записанных в шестеричной системе счисления,
# в записи которых ровно одна цифра 2, при этом никакая нечётная цифра не стоит рядом с цифрой 2.
# Вариант 1
'''
s = '012345'
count = 0
for a in '12345':
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        if slovo.count('2') == 1:
                            if all(i not in slovo for i in '12 21 32 23 52 25'.split()):
                                count += 1
print(count)
'''


# Вариант 2
'''
import itertools
count = 0
for s in itertools.product('012345', repeat=6):
    slovo = ''.join(s)
    if slovo.count('2') == 1 and slovo[0] != '0':
        if all(i not in slovo for i in '12 21 32 23 52 25'.split()):
            count += 1
print(count)
'''
# Показать ответ: 3700




# endregion Урок:  **************************************************


# todo: Татьяна = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 10, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# на прошлом уроке: Посмотрели задачи 17, 24, 5, 12 с Досрочного экзамена 2023 года
# на следующем уроке: