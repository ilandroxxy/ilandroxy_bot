# region Домашка:  **************************************************

# Тип: 7016
"""
s = open('24.txt').readline()
for x in '0123456789QWERTYUIOPSFGHJKKLZXCVBNM':
    s = s.replace(x, '*')
M = [max(i.index('D'), len(i) - i.index('D')) for i in s.split('A') if 'D' in i]
print(max(M)+1)
"""


#
# № 8425 (Уровень: Средний)
# В системе счисления с основанием p выполняется равенство 32⋅14=xy2.
# Буквами x и y обозначены некоторые цифры из алфавита системы счисления с основанием p.
# Определите значение числа yx_p и запишите это значение в десятичной системе счисления.
'''
ALPHABET = sorted("0123456789QWERTYUIOPASDFGHJKLZXCVBNM")
for p in range(5, 36):
    for x in ALPHABET[:p]:
        for y in ALPHABET[:p]:
            if int("32", p) * int("14", p) == int(f"{x}{y}2", p):
                print(int(f"{y}{x}", p))
'''
# Ответ: 23


# № 5895 (Уровень: Сложный)
# (А. Игнатюк) Дано арифметическое выражение 5xyC_16 + 8xx7_y.
# Определите, сколько различных значений может принимать выражение при всех возможных x и y.
'''
my_set = set()
ALPHABET = sorted("0123456789QWERTYUIOPASDFGHJKLZXCVBNM")
for y in range(9, 16):
    for x in ALPHABET[:y]:
        A = int(f'5{x}{y}C', 16)
        B = int(f'8{x}{x}7', y)
        my_set.add(A+B)
print(len(my_set))
'''
# Показать ответ: 84


# № 8511 Апробация 17.05 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**8, найдите все числа,
# соответствующие маске 12??15*6, делящиеся на 253 без остатка.

# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 253.
# Количество строк в таблице для ответа избыточно.
'''
from fnmatch import *
for x in range(253, 10**8, 253):  #  не превышающих 10**8
    if fnmatch(str(x), '12??15*6'):
        print(x, x // 253)
'''
# Показать ответ
# 1278156 5052
# 12531596 49532
# 12741586 50362
# 12951576 51192


# 25 № 7724 (Уровень: Базовый)
# (Грачев Н.) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Найдите все натуральные числа, не превосходящие 10**9, для которых выполнены все условия:
#
# - соответствуют маске *18??18;
# - делятся на 18 и на 1018 без остатка;
#
# В ответе запишите в первом столбце таблицы первые пять найденных чисел в порядке возрастания,
# справа от каждого числа кол-во его делителей.
'''
from fnmatch import *

def Divisors(x):
    divisors = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            divisors.add(j)
            divisors.add(x // j)
    return sorted(divisors)

k = 0
for x in range(18, 10**9, 18):
    if fnmatch(str(x), '*18??18'):
        if x % 1018 == 0:
            print(x, len(Divisors(x)))
            k += 1
            if k == 5:
                break
'''
# Показать ответ
# 2189718 24
# 13184118 24
# 84189618 40
# 95184018 32
# 166189518 96



#
# № 7013 (Уровень: Средний)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Найдите все натуральные числа, не превосходящие 10**9, для которых выполнены все условия:
# - соответствуют маске *31*65?;
# - делятся на 31 и 2031 без остатка;
# - количество делителей числа является результатом любой степени двойки

# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# справа от каждого числа их частное от деления на 2031.
'''
from fnmatch import *

M = [2**i for i in range(1, 100)]

def Divisors(x):
    divisors = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            divisors.add(j)
            divisors.add(x // j)
    return sorted(divisors)


for x in range(31, 10**9, 31):
    if fnmatch(str(x), '*31*65?'):
        if x % 2031 == 0:
            ds = Divisors(x)
            if len(ds) in M:
                print(x, x // 2031)
'''
# Показать ответ
# 53831655 26505
# 333126651 164021
# 512313657 252247
# 647931651 319021
# 831966654 409634


# № 4643 (Уровень: Базовый)
# (А. Калинин)  Текстовый файл состоит из символов A, B и цифр 1, 2.
#
# Определите максимальное количество идущих подряд троек символов вида двузначное число + буква в прилагаемом файле.
#
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
s = s.replace('B', 'A').replace('2', '1')
s = s.replace('11A', '*').replace('A', ' ').replace('1', ' ')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 67


# № 6925 (Уровень: Сложный)
#
# (Д. Статный) Откройте файл электронной таблицы, содержащей в каждой строке шесть неотрицательных целых чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнено только одно из условий:
#
# – в строке только одно число повторяется дважды, а остальные не повторяются;
#
# – в строке среднее арифметическое чётных чисел отличается от среднего арифметического нечётных чисел более чем на 50.
#
# В ответе запишите только число. Среднее арифметическое для 0 чисел принять равным нулю.
#
# **Файлы к заданию:** [9.xlsx](https://kompege.ru/files/yC9HmESAU.xlsx)
'''
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    flag1, flag2 = False, False
    if len(set(M)) == len(M)-1:
        flag1 = True

    chet = [i for i in M if i % 2 == 0]
    nechet = [i for i in M if i % 2 != 0]

    try:
        if abs((sum(chet) / len(chet)) - (sum(nechet)/ len(nechet))) > 50:
            flag2 = True
    except ZeroDivisionError:
        if (sum(M) / len(M)) > 50:
            flag2 = True

    if flag1 + flag2 == 1:
        count += 1
print(count)
'''

'''
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    flag1, flag2 = False, False
    if len(set(M)) == len(M)-1:
        flag1 = True

    chet = [i for i in M if i % 2 == 0]
    nechet = [i for i in M if i % 2 != 0]

    if len(chet) == 0 or len(nechet) == 0:
        if (sum(M) / len(M)) > 50:
            flag2 = True
    else:
        sred_chet = sum(chet) / len(chet)
        sred_nechet = sum(nechet) / len(nechet)
        if abs(sred_chet - sred_nechet) > 50:
            flag2 = True

    if flag1 + flag2 == 1:
        count += 1
print(count)
'''
# endregion Урок:  **************************************************


# Татьяна решить номер 5672
# todo: Татьяна РЕШУ = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 10, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25]
# todo: Татьяна КЕГЭ = [5, 8, 24, 25]
# на прошлом уроке:
# на следующем уроке: #todo: разобрать 26 номер 5 варианта Шастина
