
# region Домашка:  **************************************************

# № 8954 02062023 (ключ неверный) (Уровень: Базовый)
# (Е. Джобс) В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от 1 до 10 000 включительно.
# Определите количество пар последовательности, в которых только одно число кратно 7, а сумма элементов пары кратна
# максимальному элементу последовательности, оканчивающемуся на 0F в шестнадцатеричной системе счисления.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
R = max([x for x in M if hex(x)[-2:] == '0f'])
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 7 == 0) and (M[i+1] % 7 != 0) or (M[i] % 7 != 0) and (M[i+1] % 7 == 0):
        if (M[i] + M[i+1]) % R == 0:
            count += 1
            maxi = max((M[i] + M[i+1]), maxi)
print(count, maxi)
'''
# 2 9487


# № 8959 (Уровень: Базовый)
# (Е. Джобс) В файле содержится строка длиной не более 10**6 из букв английского алфавита.
# Определите максимальную длину подпоследовательности, которая состоит только из пар символов EA,
# только из троек символов NPC, или из пар символов EA и троек символов NPC.
#
# Например, в строке FASEAEANPCVESEAEAEADDNPC есть три подходящие подпоследовательности EAEANPC,
# EAEAEA и NPC. Максимальная длина – 7.
'''
import string
ALPHABET = string.ascii_uppercase
s = open('24.txt').readline()
# s = 'FASEAEANPCVESEAEAEADDNPC'
s = s.replace('EA', '**').replace('NPC', '***')
for x in ALPHABET:
    s = s.replace(x, ' ')
M = [len(i) for i in s.split()]
print(max(M))
'''


'''
alphabet = 'QWERTYUIOPASDFGHJKLZXCVBNM'
s = open('files/24.txt').readline()
s = s.replace('NPC', '?')
s = s.replace('EA', '*')
for i in alphabet:
    s = s.replace(i, ' ')
s = s.split()
maxi = 0
#print(s)
for x in s:
    count = 0
    for l in range(0, len(x)):
        if x[l] == '*':
            count += 2
        else:
            count += 3
        if maxi < count:
            maxi = count
print(maxi)
'''


# № 8960 02062023 (ключ неверный) (Уровень: Базовый)
# (Е. Джобс) Назовём маской числа последовательность цифр,
# в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Найдите первые пять чисел, больших 500 000, сумма делителей которых соответствует маске *7?.
# Найденные числа выведите в порядке возрастания, справа от каждого запишите найденную сумму делителей.

def Divisors(x):
    divisors = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            divisors.add(j)
            divisors.add(x // j)
    return sorted(divisors)

count = 0
for x in range(500001, 1000000):
    divisors = Divisors(x)
    if str(sum(divisors))[-2] == '7':
        print(x, sum(divisors))
        count += 1
        if count == 5:
            break


# endregion Домашка: **************************************************


# region Урок:  **************************************************



# endregion Урок:  **************************************************

# Татьяна решить номер 5672
# todo: Татьяна РЕШУ = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 10, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25]
# todo: Татьяна КЕГЭ = [5, 8, 24, 25]
# на прошлом уроке: Взяли вариант Джобса от 03.06 и прорешали номера: 1, 2, 4, 5, 7, 8, 9
# на следующем уроке: