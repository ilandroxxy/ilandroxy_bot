
# region Домашка:  **************************************************


# endregion Домашка: **************************************************



# region Урок:  **************************************************

'''
x = int(input('x: '))
M = []
for j in range(1, x+1):
    if x % j == 0:
        M.append(j)
print(f'Делители числа {x}: {M} ')
'''


# Тип 25 № 28120
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [201455; 201470], числа,
# имеющие ровно 4 различных натуральных делителя. Выведите эти четыре делителя для каждого найденного числа в порядке возрастания.

# Вариант 1
for x in range(201455, 201470+1):
    M = []
    for j in range(1, x+1):
        if x % j == 0:
            M.append(j)
    if len(M) == 4:
        print(*M)

# Вариант 2
def D(x):
    dl = set()
    for j in range(1, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
    return sorted(dl)

for x in range(201455, 201470+1):
    dl = D(x)
    if len(dl) == 4:
        print(*dl)
'''
# Ответ:
# 1 3 67153 201459
# 1 13 15497 201461
# 1 29 6947 201463
# 1 2 100733 201466


# Тип 25 № 33197
'''
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами
# в виде произведения двух натуральных чисел и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [1_000_000; 2_000_000],
# у которых составленное описанным способом множество разностей будет содержать не меньше трёх элементов, не превышающих 100.
# В ответе перечислите найденные числа в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5) + 1):
        if x % j == 0 and (x//j) - j <= 100:  # не превышающих 100
            dl.add((x//j) - j)
            if len(dl) > 2:
                return sorted(dl)
    return sorted(dl)

for x in range(1_000_000, 2_000_000+1):
    dl = D(x)
    if len(dl) > 2:
        print(x)
'''
# Ответ:
# 1113840
# 1179360
# 1208844
# 1499400



# Тип 25 № 27858
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [120115;120200],
# число, имеющее максимальное количество различных натуральных делителей, если таких чисел несколько — найдите максимальное из них.
# Выведите на экран количество делителей такого числа и само число.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
    return sorted(dl)

maxi = 0
for x in range(120115, 120200+1):
    dl = D(x)
    if maxi < len(dl):
        maxi = len(dl)
        print(len(dl), x)
'''
# Ответ: 128 120120


# Тип 25 № 27422
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [174457; 174505],
# числа, имеющие ровно два различных натуральных делителя, не считая единицы и самого числа.
# Для каждого найденного числа запишите эти два делителя в два соседних столбца на экране
# с новой строки в порядке возрастания произведения этих двух делителей.
# Делители в строке также должны следовать в порядке возрастания.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
    return sorted(dl)

for x in range(174457, 174505+1):
    dl = D(x)
    if len(dl) == 2:
        print(*dl)
'''
# Ответ:
# 3 58153
# 7 24923
# 59 2957
# 13 13421
# 149 1171
# 5 34897
# 211 827
# 2 87251

# Тип 25 № 35914 # минут за 5 посчитается
'''
# Найдите все натуральные числа, принадлежащие отрезку [45_000_000;50_000_000],
# у которых ровно пять различных нечётных делителей (количество чётных делителей может быть любым).
# В ответе перечислите найденные числа в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5) + 1):
        if x % j == 0:
            if j % 2 != 0:
                dl.add(j)
            if (x//j) % 2 != 0:
                dl.add(x//j)
            if len(dl) > 5:
                return sorted(dl)
    return sorted(dl)

for x in range(45_000_000, 50_000_000+1):
    dl = D(x)
    if len(dl) == 5:
        print(x, dl)
'''
# Ответ:
# 45212176
# 45265984
# 47458321
# 48469444


# Тип 25 № 46983
'''
# Пусть M(N) — пятый по величине делитель натурального числа N без учёта самого числа и единицы.
#
# Если у числа N меньше 5 различных делителей, не считая единицы и самого числа, считаем, что M(N) = 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 460000000, для которых M(N)>0.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
    return sorted(dl)

count = 0
for x in range(460000000+1, 4600000000):
    dl = D(x)
    if len(dl) > 5:
        M = dl[-5]
        print(M)
        count += 1
        if count == 5:
            break
'''
# Ответ:
# 41818182
# 261959
# 5
# 271
# 57500001


# Тип 25 № 38603
'''
# Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то значение M считается равным нулю.
#
# Напишите программу, которая перебирает целые числа, бо́льшие 700 000, в порядке возрастания
# и ищет среди них такие, для которых значение M оканчивается на 8.
# Выведите первые пять найденных чисел и соответствующие им значения M.
#
# Формат вывода: для каждого из пяти таких найденных чисел в отдельной строке сначала выводится само число, затем — значение М.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
    return sorted(dl)

count = 0
for x in range(700000+1, 460000000):
    dl = D(x)
    if len(dl) > 2:
        M = dl[0] + dl[-1]
        if M % 10 == 8:
            count += 1
            print(x, M)
            if count == 5:
                break
'''
# 700005 233338
# 700007 100008
# 700012 350008
# 700015 140008
# 700031 24168


# Тип 25 № 27850
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [245690; 245756] простые числа.
# Выведите на экран все найденные простые числа в порядке возрастания, слева от каждого числа выведите его порядковый номер в последовательности.
# Каждая пара чисел должна быть выведена в отдельной строке.

def D(x):
    for j in range(2, int(x**0.5) + 1):
        if x % j == 0:
            return False
    return True


for x in range(245690, 245756+1):
    if D(x) == True:
        print(x)
'''
# Ответ:
# 245711
# 245719
# 245723
# 245741
# 245747
# 245753


# Тип 25 № 37130
'''
# Напишите программу, которая перебирает целые числа, большие 600000, в порядке возрастания и ищет среди них такие,
# среди делителей которых есть хотя бы одно число, оканчивающееся на 7, но не равное 7 и самому числу.
# Необходимо вывести первые 5 таких чисел, и наименьший делитель, оканчивающийся на 7, не равный 7 и самому числу.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число,
# затем — наименьший делитель, оканчивающийся на 7, не равный 7 и самому числу. Строки выводятся в порядке возрастания найденных чисел.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5) + 1):
        if x % j == 0:
            if j % 10 == 7 and j != 7:
                dl.add(j)
            if (x//j) % 10 == 7:
                dl.add(x//j)
    return sorted(dl)

count = 0
for x in range(600000+1, 6000000):
    dl = D(x)
    if len(dl) >= 1:
        print(x, dl[0])
        count += 1
        if count == 5:
            break
'''
# 600001 437
# 600002 47
# 600003 1227
# 600015 17
# 600021 27

# 600001 437
# 600002 47
# 600003 1227
# 600005 217
# 600012 16667


# Тип 25 № 47229
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце — соответствующие им результаты деления этих чисел на 2023.
# print(10**10)
# print('1?2139***4')
M = [i for i in range(0, 1000)]
M.append('')
# print(f'123{""}456')

my_dict = {}  # dict()
for x in '0123456789':
    for y in M:
        A = int(f'1{x}2139{y}4')
        if A % 2023 == 0:
            my_dict[A] = A//2023

for x in sorted(my_dict):
    print(x, my_dict[x])
'''
# Ответ:
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048


# endregion Урок:  **************************************************


# todo: Татьяна = [2, 5, 8, 12, 14+, 15+, 16, 23, 25.2]
# на прошлом уроке: Разбирали первую часть 25 номера
# на следующем уроке: Добить Маски на 25 номер, Прорешать ФИПИ ВАРИАНТ - проблемные задачи.