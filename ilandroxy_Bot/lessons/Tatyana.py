
# region Домашка:  **************************************************

# Task 8
# № 5663 Вариант 09.01.23 (Уровень: Сложный)
# (А. Игнатюк) Ученые хотят дать название своему новому изобретению,
# которое должно состоять из 10 различных строчных латинских букв,
# при этом в названии должно быть не менее двух гласных букв.
# Необходимо найти количество вариантов всевозможных названий.
# Примечание: в латинском алфавите 26 букв, из которых 5 - гласные.
# Показать ответ 12662222227200
'''
import itertools
count = 0
for i in itertools.permutations('QWERTYUIOPASDFGHJKLZXCVBNM', 10):
    slovo = ''.join(i)
    summ = sum([slovo.count(x) for x in 'EUIOA'])
    if summ >= 2:
        count += 1
        print(count)
'''
# Ответ: 12662222227200


# Task 9
#  В каждой строке электронной таблицы содержится 3 натуральных числа.
#  Необходимо найти количество строк, где хотя бы одно любое произведение двух чисел оканчивается на 4.
'''
count = 0
for s in open('files/9_5664.txt'):
    M = [int(i) for i in s.split()]
    for i in range(0, len(M)-2):
        a = int(M[i] * M[i+1])
        b = int(M[i] * M[i+2])
        c = int(M[i+1] * M[i+2])
        if a % 10 == 4 or b % 10 == 4 or c % 10 == 4:
            count += 1
print(count)'''


# Task 17
# № 5672 Вариант 09.01.23 (Уровень: Базовый)
# (М. Ишимов) В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от 1 до 10 000 включительно.
# Определите количество пар последовательности,
# в которых оба числа не меньше всех чисел последовательности, которые кратны 73.
# Гарантируется, что такой элемент в последовательности есть.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if i % 73 == 0]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if all(M[i] > x for x in A) and all(M[i+1] > x for x in A):  # больше всех чисел из А 
        count += 1
        maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# 161 19678
# endregion Домашка: **************************************************


# region Урок:  **************************************************


# Task 5
# № 5623 (Уровень: Базовый)
# (М. Ишимов) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
#
# 2. Далее эта запись обрабатывается по следующему правилу:
#
# а) если сумма цифр двоичной записи числа чётная, то к этой записи слева дописывается 1,
# а затем два правых разряда заменяются на 10;
#
# б) если сумма цифр двоичной записи числа нечётная, то к этой записи справа дописывается 1,
# а затем два левых разряда заменяются на 10.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
#
# Например, для исходного числа 410 = 1002 результатом будет являться число 910 = 10012,
# а для исходного числа 510 = 1012 результатом будет являться число 1410 = 11102.
#
# Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число R,
# большее, чем 202. В ответе запишите это число в десятичной системе счисления.
#
# Показать ответ 77
'''
for n in range(1, 1000):
    s = bin(n)[2:]
    if s.count('1') % 2 == 0:
        s = '1' + s
        s = s[:-2] + '10'
    #if s.count('1') % 2 != 0:
    else:
        s = s + '1'
        s = '10' + s[2:]
    r = int(s, 2)
    if r > 202:
        print(n)
        break'''

# Task 7
# № 5625 (Уровень: Базовый)
# (М. Ишимов) Для хранения произвольного растрового изображения размером 512 на 240 пикселей отведено 270 Кбайт
# памяти без учёта размера заголовка файла. При кодировании каждого пикселя используется 5 бит для определения
# степени прозрачности и одинаковое количество бит для указания его цвета.
# Коды пикселей записываются в файл один за другим без промежутков.
# Какое максимальное количество цветов можно использовать в изображении (без учёта степени прозрачности)?
#
# Показать ответ 8192
'''
pixels = 512 * 240
Kbyte = 270
bit = 270 * (2**13)
i = bit / pixels
#i = i1 + 5
i2 = i - 5
N = 2 ** i2
print(N)'''

# Task 8
# № 5626 (Уровень: Базовый)
# (М. Ишимов) Определите количество пятизначных чисел, записанных в восьмеричной системе счисления,
# запись которых не начинается с нечётных цифр, не оканчивается цифрами 2 или 6, а также не содержит более двух цифр 7.
#
# Показать ответ 9135
'''
import itertools
count = 0
for i in itertools.product('01234567', repeat = 5):
    s = ''.join(i)
    if s[0] not in '0':
        if s[0] not in '1357':
            if s[-1] not in '26':
                if s.count('7') <= 2:
                    count += 1
print(count)'''

#
# № 5627 (Уровень: Средний)
# (М. Ишимов) Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнено хотя бы одно из условий:
#
# –   в строке есть хотя бы одно повторяющееся число;
#
# –   будучи упорядоченными, все числа строки образуют арифметическую прогрессию.
#
# В ответе запишите только число.
# Показать ответ 525
'''
count = 0
for s in open('files/9.txt'):
    M = [int(i) for i in s.split()]
    M = sorted(M)
    if len(set(M)) <= 5 or all(M[i+1] - M[i] == M[1] - M[0] for i in range(0, len(M)-1)):
        count += 1
print(count)'''

# Task 11
# № 5629 (Уровень: Базовый)
# (М. Ишимов) При регистрации в компьютерной системе каждому объекту присваивается идентификатор, состоящий из 1112 символов
# и содержащий только десятичные цифры и символы из 5750-символьного специального алфавита.
# В базе данных для хранения каждого идентификатора отведено одинаковое и минимально возможное целое число байт.
# При этом используется посимвольное кодирование идентификаторов,
# все символы кодируются одинаковым и минимально возможным количеством бит.
#
# Определите объём памяти (в Кбайт), необходимый для хранения 16 384 идентификаторов.
# В ответе запишите только целое число – количество Кбайт.
# Показать ответ 28912
'''
symbols = 1112
alphabet = 5760
#print(2**13)
i = 13
bit = symbols * i
byte = bit / (2**3)
#print(byte)
Kbyte = (byte * 16384) / (2**10)
print(Kbyte)
'''


# Task 14
# № 5632 (Уровень: Средний)
# (М. Ишимов) Операнды арифметического выражения записаны в системе счисления с основанием 21.
# 32yxA 21 + 16y18 21
# В записи чисел переменными х и у обозначены две неизвестные цифры из алфавита 21-ричной системы счисления.
# Определите наименьшее значение х, при котором значение данного арифметического выражения кратно 12 10
# при любом нечётном значении у. Для найденного значения х вычислите частное от деления значения арифметического
# выражения на 12 10 при у = 7 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
#
# Показать ответ 71524
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')

for x in alphabet[:21]:
#print(alphabet[:21])
    for y in alphabet[:21]:
    summa = int(f'32{y}{x}A') + int(f'16{y}18')
    if summa % 12 == 0:
        if all(summa % 12 == 0 and int(y, 21) % 2 != 0 for y alphabet[:21])

# endregion Урок:  **************************************************

# Татьяна решить номер 5672
# todo: Татьяна РЕШУ = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 10, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25]
# todo: Татьяна КЕГЭ = [5, 8, 24, 25]
# на прошлом уроке: Весь урок разбирали 24 номера с КЕГЭ среднего и сложного уровня
# на следующем уроке: