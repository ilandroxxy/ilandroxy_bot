
# region Домашка:  **************************************************

# Тип 8 № 19059
'''
s = 'ИКНОТ'
i = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                temp = a + b + c + d
                if a == 'О':
                    print(i, temp)
                    exit()
                i += 1
# Ответ: 376
'''

# Тип 12 № 16443
'''
s = '1' * 84
while '11111' in s:
    s = s.replace('222', '1', 1)
    s = s.replace('111', '2', 1)
print(s)
# Ответ: 222111
'''

# Тип 5 № 17370

# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится двоичная запись числа N.
# 2. Удаляется первая слева единица и все следующие непосредственно за ней нули. Если после этого в числе не остаётся цифр, результат этого действия считается равным нулю.
# 3. Полученное число переводится в десятичную запись.
# 4. Новое число вычитается из исходного, полученная разность выводится на экран.

# Сколько разных значений будет показано на экране автомата при последовательном вводе всех натуральных чисел от 100 до 3000?

'''
M = []
for n in range(100, 3001):
    s = bin(n)[3:]
    r = int(s, 2)
    if n - r not in M:
        M.append(n - r)
print(len(M))
# Ответ: 6
'''

# Вариант 2
'''
M = set()
for n in range(100, 3001):
    s = bin(n)[3:]
    r = int(s, 2)
    M.add(n - r)
print(len(M))
'''


# № 16435
'''
for n in range(1, 10000):
    s = bin(n)[2:]
    s = str(s)
    s = s[:-1]
    if n % 2 != 0:
        s += '10'
    else:
        s += '01'
    r = int(s, 2)
    if r == 2017:
        print(n)
# Ответ: 1008
'''

# Конвертер километров
'''
print(10 * 0.6214)
def convert_to_miles(km):
    miles = km * 0.6214
    return round(miles, 4)
km = float(input('Введите количество километров: '))
print(convert_to_miles(km))
'''

# Good password
'''
import string
print(string.digits)
print(string.ascii_uppercase)
print(string.ascii_lowercase)
print(string.punctuation)
print(string.hexdigits)


def is_password_good(password):
    if len(password) < 8 or password.upper() == password or password.lower() == password:
        return False
    else:
        for x in string.digits:
            if x in password:
                return True
        return False

password = str(input('Введите пароль: '))
print(is_password_good(password))
'''


# endregion Домашка: **************************************************



# region Урок:  **************************************************

# Тип 15 № 34512
'''
# Обозначим через m & n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Например, 14 & 5 = 11102 & 01012 = 01002 = 4.
# Для какого наименьшего неотрицательного целого числа А формула
# x&77 ≠ 0 → (x&12 = 0 → x&А ≠ 0)
# тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении переменной х)?

# Вариант 1
def F(x, A):
    Q = x & 77 == 0
    W = x & 12 == 0
    R = x & A == 0
    return (not Q) <= (W <= (not R))

for A in range(0, 1000):
    flag = True
    for x in range(0, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break

# Вариант 2
def F(x):
    Q = x & 77 == 0
    W = x & 12 == 0
    R = x & A == 0
    return (not Q) <= (W <= (not R))

for A in range(1, 1000):
    if all(F(x) for x in range(1, 1000)) == True:
        print(A)
        break
'''


# Тип 15 № 35473
'''
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наименьшего натурального числа А формула
# ДЕЛ(A, 45) ∧ (ДЕЛ(750, x) → (¬ДЕЛ(A, x) → ¬ДЕЛ(120, x)))
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?

def F(x):
    return (A % 45 == 0) and ((750 % x == 0) <= ((A % x != 0) <= (120 % x != 0)))

M = [i for i in range(1, 1000)]
for A in M:
    if all(F(x) for x in M):
        print(A)
        break
'''



# Тип 15 № 46973
'''
# На числовой прямой даны два отрезка: P=[69;91] и Q=[77;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
#
# (x∈Q)→(((x∈P)≡(x∈Q))∨(¬(x∈P)→(x∈A)))
#
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).

def F(x):
    P = 69 <= x <= 91
    Q = 77 <= x <= 114
    A = a1 <= x <= a2
    return (Q) <= ((P == Q) or ((not P) <= A))

M = [i/4 for i in range(1*60, 120*4)]
print(M)

R = []
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 23 округлили вверх



# Тип 15 № 34535
'''
# На числовой прямой даны три отрезка: P = [10, 40], Q = [5, 15] и R = [35, 50].
# Какова наименьшая возможная длина промежутка A, что формула
#
# ( (x ∈ А) ∨ (x ∈ P) ) ∨ ((x ∈ Q)→ (x ∈ R))
#
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.

def F(x):
    P = 10 <= x <= 40
    Q = 5 <= x <= 15
    R = 35 <= x <= 50
    A = a1 <= x <= a2
    return (A or P) or (Q <= R)

M = [i/4 for i in range(1*4, 100*4)]

R = []
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2 - a1)
print(min(R))
'''
# Ответ: 5 округляем вверх




# № 4283
'''
# Элементами множеств А, P, Q являются натуральные числа, причём P={1,3,4,9,11,13,15,17,19,21},
# Q={3,6,9,12,15,18,21,24,27,30}. Известно, что выражение
#
# ((x ∈ P) → (x ∈ A)) ∨ ((x ∉ A) → (x ∉ Q))
#
# истинно (т.е. принимает значение 1 при любом значении переменной х.
# Определите наименьшее возможное произведение элементов в множестве A.

a = set()

def F(x):
    P = x in {1,3,4,9,11,13,15,17,19,21}
    Q = x in {3,6,9,12,15,18,21,24,27,30}
    A = x in a
    return (P <= A) or ((not A) <= (not Q))

for x in range(1, 1000):
    if F(x) == False:
        a.add(x)
print(a)  # {9, 3, 21, 15}
print(9 * 3 * 21 * 15)
'''
# Answer: 8505




# № 3156
'''
# Элементами множеств А, P и Q являются натуральные числа, причём P = { 2, 4, 6, 8, 10, 12, 14, 16, 18, 20}
# и Q = { 5, 10, 15, 20, 25, 30, 35, 40, 45, 50}. Известно, что выражение
#
# ((x ∈ A) → (x ∈ P)) ∧ ((x ∈ Q) → ¬(x ∈ A))
#
# истинно (т. е. принимает значение 1) при любом значении переменной х.
# Определите наибольшее возможное количество элементов множества A.

a = set(range(1, 1000))

def F(x):
    P = x in {2, 4, 6, 8, 10, 12, 14, 16, 18, 20}
    Q = x in {5, 10, 15, 20, 25, 30, 35, 40, 45, 50}
    A = x in a
    return (A <= P) and (Q <= (not A))

for x in range(1, 1000):
    if F(x) == False:
        a.remove(x)
print(a, len(a))
'''
# Ответ: 8



# № 5155
'''
#  Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
#
# F(n) = 1 при n = 1;
#
# F(n) = n**2 + F(n − 1), если n > 1.
#
#  Чему равно значение выражения F(1000) - F(997)?

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n**2 + F(n - 1)

print(F(1000) - F(997))
'''
# Превышена глубина рекурсии, идем решать руками.
# RecursionError: maximum recursion depth exceeded in comparison

print(1000**2 + 999 ** 2 + 998 ** 2)  # 2994005

# 5156
print(10000**2 + 2*9999 + 2*9997)  # 100039992


# № 4739
# (А. Куканова) Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:

# F(n) = n − 10000 при n > 10000;
# F(n) = F(n + 1) + F(n + 2), если 1 ≤ n ≤ 10000.
#
# Чему равно значение выражения F(12345) × (F(10) − F(12)) / F(11) + F(10101)?

def F(n):
    if n > 10000:
        return n - 10000
    if 1 <= n <= 10000:
        return F(n + 1) + F(n + 2)

print(F(12345))  # 2345
print(F(10101)) #  101


#
# № 3369, Джобс 22.04.2022
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
#
# G(n) = F(n) = 1, при n < 3
#
# F(n) = G(n) + F(n-1), при n > 2 и n - четно
#
# F(n) = F(n-2) – 2*G(n+1), при n > 2 и n - нечетно
#
# G(n) = F(n-3) + F(n-2), при n > 2 и n - четно
#
# G(n) = F(n+1) – G(n-1), при n > 2 и n - нечетно
#
# Чему равно значение функции G(120)? В ответе запишите только целое число.

'''
def F(n):
    if n < 3:
        return 1
    if n > 2 and n % 2 == 0:
        return G(n) + F(n-1)
    if n > 2 and n % 2 != 0:
        return F(n-2) - 2 * G(n+1)


def G(n):
    if n < 3:
        return 1
    if n > 2 and n % 2 == 0:
        return F(n-3) + F(n-2)
    if n > 2 and n % 2 != 0:
        return F(n+1) - G(n-1)

print(F(120))
'''

# endregion Урок:  **************************************************


# todo: Татьяна = [2, 5, 8, 12, 14+, 15+, 16, 23], на следующем уроке: Переходим к 25