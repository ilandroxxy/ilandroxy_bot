
# region Домашка:  **************************************************

# № 27422
'''
def D(x):
    dl = set()
    for j in range (2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)
for x in range(174457, 174505 + 1):
    dl = D(x)
    if len(dl) == 2:
        print(*dl)
'''

# № 27852
'''
def D(x):
    dl = set()
    for j in range (1, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)
for x in range(185311, 185330 + 1):
    dl = D(x)
    if len(dl) == 4:
        print(*dl)
# Answer:
# 1 2 92657 185314
# 1 47 3943 185321
# 1 241 769 185329
'''

# № 35999
'''
#print (2  28)
#print(3**18)

M = []
for m in range(0, 29, 2):
    for n in range(1, 19, 2):
        if 200000000 <= 2 ** m * 3 **n <= 400000000:
            mn = 2 ** m * 3 ** n
            M.append(mn)

for x in sorted(M):
    print(x)
# Answer:
#229582512
#322486272
#254803968
#201326592
'''

# № 27851
'''
def D(x):
    dl = set()
    for j in range (2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)
for x in range(210235, 210300 + 1):
    dl = D(x)
    if len(dl) == 4:
        print(*dl)
# Answer: 
# 2 4 52561 105122
# 2 4 52567 105134
# 2 4 52571 105142
'''

# 28124
'''
def D(x):
    dl = set()
    for j in range (1, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)
maxi = 0
for x in range(568023, 569230+1):
    dl = D(x)
    if maxi < len(dl):
        maxi = len(dl)
        print(len(dl), x)
# Answer:  144 568260    
'''

# № 47022
'''
def D(x):
    dl = set()
    for j in range (2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)
count = 0
for x in range(300000000 + 1, 350000000):
    dl = D(x)
    if len(dl) > 5:
        M = dl[-5]
        print(M)
        count += 1
        if count == 5:
            break
# Answer: 
# 17
# 1119403
# 151
# 16666667
# 27272728
'''

# endregion Домашка: **************************************************



# region Урок:  **************************************************

# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.

# Задача 25
# Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 2023.
# Количество строк в таблице для ответа избыточно.
'''
print(10**10)
print('1?2139***4')
my_dict = {}
M = [i for i in range(0, 1000)]
M.append('')

for x in M:
    for y in '0123456789':
        A = int(f'1{y}2139{x}4')
        if A % 2023 == 0:
            my_dict[A] = A // 2023

for x in sorted(my_dict):
    print(x, my_dict[x])
'''
# Ответ:
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048

'''
my_dict = {1: 'один', 2: 'два', 1: 'one'}
print(my_dict)

print(my_dict[1])

my_dict[3] = 'три'
print(my_dict)

print(my_dict.keys())
print(my_dict.values())
print(my_dict.items())

for x in my_dict.items():
    print(x)

print(min(my_dict))

for x in sorted(my_dict):
    print(x, my_dict[x])


A = [1, 2, 3, 4]
B = [1, 2, 3, 5]
print(max(A, B))
'''

'''
f = open('17.txt')
print(f)  # <_io.TextIOWrapper name='17.txt' mode='r' encoding='UTF-8'>
f.close()

# Самый правильный способ открытия файла:
with open('17.txt', 'r') as f:
    print(f)

f = open('17.txt')
M = [int(i) for i in f]


M = [int(i) for i in open('17.txt')]
'''



# Типы заданий 17

M = [65,34,23,12,32]
# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(0, len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')
print('\n')

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(0, len(M)-2):
    print(f'{M[i]}{M[i+1]}{M[i+2]}', end=' ')
print('\n')

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        print(f'{M[i]}{M[j]}', end=' ')
    print()


# Тип 17 № 39762
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар чисел, произведение которых кратно 15, а их сумма делится на 7.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] * M[i+1]) % 15 == 0 and (M[i] + M[i+1]) % 7 == 0:
        count += 1
        # maxi = max(maxi, M[i] + M[i+1])
        if maxi < M[i] + M[i+1]:
            maxi = M[i] + M[i+1]
print(count, maxi)
'''
# Ответ: 170 18662


# Тип 17 № 37373
'''
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000. Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых разность элементов кратна 36 и хотя бы один из элементов кратен 13, затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.

M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] - M[j]) % 36 == 0:
            if M[i] % 13 == 0 or M[j] % 13 == 0:
                count += 1
                maxi = max(maxi, M[i] - M[j])
print(count, maxi)
'''
# Ответ: 212587 9972




# endregion Урок:  **************************************************


# todo: Татьяна = [2, 5, 8, 12, 14+, 15+, 16, 17, 23, 25.2]
# на прошлом уроке: Решили задачку на маски, проговорили что есть такое словари.  Разбирали 17 номер все задачи.
# на следующем уроке: Плюс 10 минут долг. Повторить 17 номера, Разбираем 24 номера.