# region Домашка: ************************************************************


# endregion Домашка: ************************************************************

# region Урок: ************************************************************

# Тип 24 №27686
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов X.
# Хотя бы один символ X находится в последовательности.

# Вариант 1
'''
s = open('24.txt').readline()
count = 1  # счетчик для промежуточных последовательностей
maxi = 1  # счетчик для максимальной последовательности
for i in range(len(s)-1):
    # if s[i] == 'X' and s[i+1] == 'X':
    if s[i:i+2] == 'XX':
        count += 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)
'''
# Ответ: 19


# Вариант 2
'''
s = open('24.txt').readline()
s = s.replace('Y', ' ').replace('Z', ' ')
print(max([len(x) for x in s.split()]))
'''


# Вариант 3
'''
print(open('24.txt').readline())
print(len('XXXXXXXXXXXXXXXXXXX'))
'''

# Ответ: 19


# Тип 24 №58327
# Текстовый файл состоит не более чем из 10**6 символов арабских цифр (0, 1, ..., 9).
# Определите максимальное количество идущих подряд цифр, расположенных в невозрастающем порядке.
'''
s = open('24.txt').readline()
count = 1
maxi = 1
for i in range(len(s)-1):
    if int(s[i]) >= int(s[i+1]):
        count += 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)
'''
# Ответ: 11


# Тип 24 №37131
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите наибольшую длину цепочки символов, среди которых нет символов K и L, стоящих рядом.
'''
s = open('24.txt').readline()
s = s.replace('KL', 'K L').replace('LK', 'L K')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 2796


# Тип 24 №59848
# Текстовый файл состоит не более чем из 10**6 символов латинского алфавита.
# Необходимо найти самую длинную подстроку, которая может являться числом в 24 системе счисления.
# В ответ записать длину последовательности символов, которая может являться числом в 24 системе счисления.
'''
from string import *
alphabet = digits + ascii_uppercase
# 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ

alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNBM')
# ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']

s = open('24.txt').readline()
for a in alphabet[24:]:
    s = s.replace(a, ' ')
print(max([len(x) for x in s.split()])
'''
# Ответ: 40


# Тип 24 №39253
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите максимальное количество идущих подряд символов, среди которых не более одной буквы D.
'''
s = open('24.txt').readline().split('D')
maxi = 0
for i in range(len(s)-1):
    maxi = max(maxi, len(s[i] + 'D' + s[i+1]))
print(maxi)
'''
# Ответ: 354


# Тип 24 №46982
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество групп из идущих подряд не менее 12 символов,
# которые начинаются и заканчиваются буквой E и не содержат других букв E (кроме первой и последней) и букв F.
'''
s = open('24.txt').readline()
s = s.replace('E', 'E E')
print(len([x for x in s.split() if 'F' not in x and len(x) >= 12]))
'''
# Ответ: 9655


# Тип 24 №51993
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите длину самой длинной цепочки символов, которая начинается и заканчивается буквой F,
# а между двумя последовательными буквами F содержит не более двух букв A и произвольное количество других букв.
'''
s = open('24.txt').readline().split('F')
count = 1
maxi = 0
for i in range(len(s)):
    if s[i].count('A') <= 2:
        count += len(s[i]) + 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)
'''
# Ответ: 266


# Тип 24 №27699
# Текстовый файл состоит не более чем из 106 символов L, D и R.
# Определите максимальную длину цепочки вида LDRLDRLDR...
# (составленной из фрагментов LDR, последний фрагмент может быть неполным).
'''
print(open('24.txt').readline())
print(len('LDRLDRLDRLDRLDR'))
'''
# Ответ: 15


# Тип 24 №57431
# Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов, среди которых никакие
# две буквы из набора букв A, B и C (с учетом повторений) не записаны подряд.
'''
s = open('24.txt').readline()
for a in 'AB BA BC CB AC CA AA BB CC'.split():
    s = s.replace(a, '* *')
print(max([len(x) for x in s.split()]))

# Вариант 2
s = open('24.txt').readline()
s = s.replace('A', '*').replace('B', '*').replace('C', '*')
while '**' in s:
    s = s.replace('**', '* *')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 84


# Тип 24 №58329
# Текстовый файл состоит не более чем из 106 символов арабских цифр (0, 1, ..., 9).
# Определите максимальное количество идущих подряд цифр, среди которых сумма двух идущих подряд чисел
# больше числа следующего за ними. Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
count = 2
maxi = 0
for i in range(len(s)-2):
    if int(s[i]) + int(s[i+1]) > int(s[i+2]):
        count += 1
        maxi = max(maxi, count)
    else:
        count = 2
print(maxi)
'''
# Ответ: 33


# Тип 24 №48472
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите максимальное количество идущих подряд групп символов вида
# гласная + гласная + согласная.
'''
s = open('24.txt').readline()
s = s.replace('O', 'A').replace('C', 'D').replace('F', 'D')
s = s.replace('AAD', '*')
s = s.replace('A', ' ').replace('D', ' ').replace('C', ' ')
print(max([len(x) for x in s.split()]))


# Вариант 2
from itertools import product
R = []
for v in product('ACDFO', repeat=3):
    slovo = ''.join(v)
    if slovo[0] in 'AO' and slovo[1] in 'AO' and slovo[2] in 'CDF':
        R.append(slovo)

s = open('24.txt').readline()
print(R)
for a in R:
    s = s.replace(a, '*')
for a in 'ACDFO':
    s = s.replace(a, ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 4

# endregion Урок: ************************************************************


# region Разобрать: *************************************************************

# todo разобрать Тип 24 №63073 Олеся
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите максимальное количество идущих подряд символов, среди которых каждая из букв C и D встречается
# не более двух раз.
'''
s = open('24-181.txt').readline()

l = 0 # левый указатель подстроки
m = 0 # максимальная длина последовательности
k = 0 # количество " . "

for r in range(len(s)):
    if s[r] == '.' : 
        k += 1
    while k > 4:
        if s[l] == '.' :
            k -= 1
        l += 1
    m = max(m, r - l + 1)
print(m)
'''

# todo разобрать Тип 24 №63040 Олеся
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите максимальное количество идущих подряд символов, среди которых каждая из букв A и B
# встречается не более двух раз.


# todo разобрать  Тип 24 №61370 Олеся
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите максимальное количество идущих подряд символов, среди которых ровно по одному разу встречаются буквы A и B.


# endregion Разобрать: *************************************************************


# Олеся = [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19-21 (кодом), 24, 25]
# КЕГЭ = []
# на следующем уроке: Разбираем сложыне 24 номера на строки и кол-во
