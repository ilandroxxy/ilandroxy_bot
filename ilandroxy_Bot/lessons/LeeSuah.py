# region –î–æ–º–∞—à–∫–∞: ************************************************************


# endregion –î–æ–º–∞—à–∫–∞: ************************************************************

# region –£—Ä–æ–∫: ************************************************************

# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1
'''
print(f'–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ M: {M[0]} \n'
      f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ M: {M[-1]}')
'''
# –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ M: a
# –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ M: e

# –°–≤–æ–π—Å—Ç–≤–∞ —Å–ø–∏—Å–∫–æ–≤ list
# - –ú–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–µ–±–µ, —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
# - –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –∏–º–µ–µ—Ç –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä - –∏–Ω–¥–µ–∫—Å (—á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å—ã –º—ã –º–æ–∂–µ–º –±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞)
# - –ò–Ω–¥–µ–∫—Å—ã –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å 0 –∏–ª–∏ —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å -1
# - –ì–ª–∞–≤–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ —Å–ø–∏—Å–∫–æ–≤ (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ—Ä—Ç–µ–∂–µ–π tuple) —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å

# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

# –°—Ä–µ–∑—ã —Å–ø–∏—Å–∫–æ–≤ - —Å–ø–æ—Å–æ–± –≤–∑—è—Ç—å —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ —Å–ø–∏c–∫–∞ –∏–ª–∏ –µ–≥–æ —á–∞—Å—Ç—å
"""
print(M[1:3])  # ['b', 'c']  - stop –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ä–µ–∑
print(M[:3])  # ['a', 'b', 'c'] - –≤—Å–µ —á—Ç–æ —Å–ª–µ–≤–∞
print(M[3:])  # ['d', 'e'] - –≤—Å–µ —á—Ç–æ —Å–ø—Ä–∞–≤–∞
'''
L = [213, 234, -123, 2342, 1231, 234, 313, 4513]
for x in L:
    # if abs(x) % 10 == 3:
    if str(x)[-1] == '3':
        print(x, end=' ')  # 213 -123


L = [213, 234, -123, 2342, 1231, 234, 313, 4513]
for x in L:
    # if abs(x) % 100 == 13:
    if str(x)[-2:] == '13':
        print(x, end=' ')  # 213 313 4513
'''
print(M[:])  # ['a', 'b', 'c', 'd', 'e']
print(M[::])  # ['a', 'b', 'c', 'd', 'e']
print(M[::2])  # ['a', 'c', 'e'] - –≤—Å–µ —á–µ—Ç–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
print(M[1::2])  # ['b', 'd'] - –≤—Å–µ –Ω–µ—á–µ—Ç–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
print(M[::-1])  # ['e', 'd', 'c', 'b', 'a'] - –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Å–ø–∏—Å–æ–∫ (–≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ)
"""

# –§—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤
"""
M = [5, 7, 3, 21, 8, 3, 3, 5]
print(len(M))  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–µ–º)
print(sum(M))  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ (–ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞)
print(max(M))
print(min(M))
print(set(M))  # {3, 5, 7, 8, 21}
# if len(M) == len(set(M)): - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã
print(sorted(M))  # [3, 3, 3, 5, 5, 7, 8, 21] - –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
print(sorted(M, reverse=True))  # [21, 8, 7, 5, 5, 3, 3, 3] - –ø–æ —É–±—ã–≤–∞–Ω–∏—é
print(sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM'))  # - –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫
# ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
"""

# –ú–µ—Ç–æ–¥—ã —Å–ø–∏—Å–∫–æ–≤ - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏, —Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Ç–æ–ª—å–∫ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö
# üñ•  –í—Å–µ –º–µ—Ç–æ–¥—ã —Å–ø–∏—Å–∫–æ–≤ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠  #tpy #useful
"""
# üö© .APPEND()
# –ú–µ—Ç–æ–¥ .append() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3]
my_list.append(4)
my_list.append(5)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

# –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é (—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ) —Å–ø–∏—Å–∫–æ–≤:
my_list = [1, 2, 3]
my_list += [4, 5]
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]


# üö© .REVERSE()
# –ú–µ—Ç–æ–¥ .reverse() –∏–∑–º–µ–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3, 4]
my_list.reverse()
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É —á–µ—Ä–µ–∑ —Å—Ä–µ–∑:
my_list = [1, 2, 3, 4]
my_list = my_list[::-1]
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

my_str = '1234'
my_str = my_str[::-1]
print(my_str)  # –í—ã–≤–æ–¥: 4321


# üö© .COUNT()
# –ú–µ—Ç–æ–¥ .count() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 2, 3, 4, 2]
count_of_twos = my_list.count(2)
print(count_of_twos)  # –í—ã–≤–æ–¥: 3


my_list = [1, 2, 2, 3, 4, '2']
print(my_list.count(2))  # –í—ã–≤–æ–¥: 2
print(my_list.count('2'))  # –í—ã–≤–æ–¥: 1


# üö© .REMOVE()
# –ú–µ—Ç–æ–¥ .remove() —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3, 2, 4]
my_list.remove(2)  # –ø–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –¥–≤–æ–π–∫–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]

# –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –µ–≥–æ –∏–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É—è del:
my_list = [1, 2, 3, 2, 4]
del my_list[1]  # –∏–Ω–¥–µ–∫—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]


# üö© .INDEX()
# –ú–µ—Ç–æ–¥ .index() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3, 2, 4]
index_of_two = my_list.index(2)
print(index_of_two)  # –í—ã–≤–æ–¥: 1


# üö© .SORT()
# –ú–µ—Ç–æ–¥ .sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç reverse=True. –ü—Ä–∏–º–µ—Ä:
my_list = [4, 1, 3, 2]
my_list.sort()
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list.sort(reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –°–∫–∞–∂—É —á–µ—Å—Ç–Ω–æ —è –Ω–µ –ª—é–±–∏—Ç–µ–ª—å —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, —Å—á–∏—Ç–∞—é, —á—Ç–æ —É–¥–æ–±–Ω–µ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é sorted():
my_list = [4, 1, 3, 2]
my_list = sorted(my_list)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list = sorted(my_list, reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
"""
# –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –ï–ì–≠ | itpy (https://t.me/informatika_kege_itpy) üë®‚Äçüíª


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ø–∏—Å–∫–æ–≤ (—Å–ø–∏—Å–æ—á–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è)
'''
# –°–∏–Ω—Ç–∞–∫—Å–∏—Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–ø–∏—Å–∫–∞ –≤–∫–ª—é—á–∞–µ—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, —Ü–∏–∫–ª –∏ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏) —É—Å–ª–æ–≤–∏–µ.
# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 0 –¥–æ 9
even_squares = [x ** 2 for x in range(10) if x % 2 == 0]
# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
print(even_squares)
'''
# –î–ª—è 9 –Ω–æ–º–µ—Ä–∞
'''
import random
M = [random.randint(0, 100) for i in range(10)]
print(M)  # [4, 5, 37, 42, 55, 47, 45, 30, 7, 94]
chet = [x for x in M if x % 2 == 0]
nechet = [x for x in M if x % 2 != 0]
print(M, chet, nechet)
# [4, 5, 37, 42, 55, 47, 45, 30, 7, 94] [4, 42, 30, 94] [5, 37, 55, 47, 45, 7]
'''

# –î–ª—è 17 –Ω–æ–º–µ—Ä–∞
'''
M = [int(x) for x in open('17.txt')]
# –ù–∞–π–¥–∏—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –æ–∫–∞–Ω—á–∏–≤–∞—é—â–µ–≥–æ—Å—è –Ω–∞ 19
A = max([x for x in M if str(x)[-2:] == '19']) ** 2
print(A)
'''

# –î–ª—è 24 –Ω–æ–º–µ—Ä–∞
'''
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–¥—É—â–∏—Ö –ø–æ–¥—Ä—è–¥ —Å–∏–º–≤–æ–ª–æ–≤ C.
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Z', ' ')
print(max([len(x) for x in s.split()]))


print(max([len(x) for x in open('24.txt').readline().replace('X', ' ').replace('Z', ' ').split()]))
'''


# –î–ª—è 15 –Ω–æ–º–µ—Ä–∞
# –¢–∏–ø 15 ‚Ññ48436
# –û–±–æ–∑–Ω–∞—á–∏–º —á–µ—Ä–µ–∑ –î–ï–õ(n,m) —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ¬´–Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n –¥–µ–ª–∏—Ç—Å—è –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ m¬ª.
# –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∏–º–µ–Ω—å—à–µ–µ —Ü–µ–ª–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ A, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ñ–æ—Ä–º—É–ª–∞
# (–î–ï–õ(72,x)‚Üí¬¨–î–ï–õ(120,x))‚à®(A‚àíx>100)
# —Ç–æ–∂–¥–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏—Å—Ç–∏–Ω–Ω–∞ –ø—Ä–∏ –ª—é–±–æ–º –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π x.
'''
def F(x, A):
    return ((72 % x == 0) <= (120 % x != 0)) or (A - x > 100)


R = []
for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 10000)):
        R.append(A)
print(min(R))

# –í–∞—Ä–∏–∞–Ω—Ç 2
print(min([A for A in range(1, 1000) if all((((72 % x == 0) <= (120 % x != 0)) or (A - x > 100)) for x in range(1, 10000))]))
'''
# endregion –£—Ä–æ–∫: ************************************************************


# –û–ª–µ—Å—è = [1.1, 2.1, 4.1, 5.1, 7.1, 10.1, 11.1, 12.1, 14.1-, 16.1, 17.1, 18.1, 19-21 (–∫–æ–¥–æ–º)]
# –ö–ï–ì–≠ = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
