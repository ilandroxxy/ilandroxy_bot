
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 15 №
# 46973
# На числовой прямой даны два отрезка: P=[69; 91] и Q=[77;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
#
# (x∈Q)→(((x∈P)≡(x∈Q))∨(¬(x∈P)→(x∈A)))
#
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).
'''
def F(x, a1, a2):
    P = 69 <= x <= 91
    Q = 77 <= x <= 114
    A = a1 <= x <= a2
    return Q <= ((P == Q) or ((not P) <= A))

M = [i/4 for i in range(60*4, 120*4)]
R = []
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 23 (22.75)


# Тип 15 № 36870
# Обозначим через m & n поразрядную конъюнкцию неотрицательных целых чисел m и n.
#
# Так, например, 14 & 5 = 11102 & 01012 = 01002 = 4. Для какого наименьшего неотрицательного целого числа А формула
#
# x & 49 = 0 → (x & 28 ≠ 0 → x & А ≠ 0)
#
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной x)?
'''
# Вариант 1
def F(x, A):
    B = x & 49 == 0
    C = x & 28 != 0
    D = x & A != 0
    return B <= (C <= D)

for A in range(0, 1000):
    if all(F(x, A) for x in range(0, 1000)):
        print(A)
        break

# Вариант 2
def F(x, A):
    return (x & 49 == 0) <= ((x & 28 != 0) <= (x & A != 0))

for A in range(0, 1000):
    if all(F(x, A) for x in range(0, 1000)):
        print(A)
        break

# Вариант 3
for A in range(0, 1000):
    if all(((x & 49 == 0) <= ((x & 28 != 0) <= (x & A != 0))) for x in range(0, 1000)):
        print(A)
        break

# Вариант 4
R = []
for A in range(0, 1000):
    if all(((x & 49 == 0) <= ((x & 28 != 0) <= (x & A != 0))) for x in range(0, 1000)):
        R.append(A)
print(min(R))

# Вариант 5
print(min([A for A in range(0, 1000) if all(((x & 49 == 0) <= ((x & 28 != 0) <= (x & A != 0))) for x in range(0, 1000))]))
'''


# № 8510 Апробация 17.05 (Уровень: Средний)
# Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов, среди которых никакие две буквы из набора букв N, O и P
# (с учетом повторений) не записаны подряд. Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
for x in 'NN NO ON NP PN OP PO OO PP'.split():
    s = s.replace(x, ' ')
M = [len(i) for i in s.split()]
print(max(M) + 2)


s = open('24.txt').readline()
for x in 'NN NO ON NP PN OP PO OO PP'.split():
    s = s.replace(x, '* *')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 57


'''
s = open('24.txt').readline()
s = s.replace('B', 'A').replace('C', 'A')
s = s.replace('AA', '*')
for x in 'QWERTYUIOPASDFGHJKLZXCVBNM':
    s = s.replace(x, ' ')
print(s)
M = [len(i) for i in s.split()]
print(M)
print(max(M))
'''

# endregion Урок: ******************************************************************


# todo: Сергей = [1, 2, 3, 5, 8, 7, 9, 11, 13, 12, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# на прошлом уроке: Повторяли номера 15 с отрезками и конъюнкцией. Разобрали подробнее по номеру: 4, 13 и повторили разные 24 номера.
# на следующем уроке:  #todo: 4, 15 (отрезки), 24, 26
