
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# № 8511 Апробация 17.05 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

# Среди натуральных чисел, не превышающих 10**8, найдите все числа, соответствующие маске 12??15*6,
# делящиеся на 253 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 253.
# Количество строк в таблице для ответа избыточно.

# print(10**8)
# print('12??15*6')

# 100000000
# 12??15*6
'''
from itertools import *
M = []
for l in range(0, 1+1):  # длина звездочки '*'
    for s in product('0123456789', repeat=l):
        temp = ''.join(s)
        M.append(temp)

R = []
for x in '0123456789':
    for y in '0123456789':
        for z in M:
            A = int(f'12{x}{y}15{z}6')
            if A % 253 == 0 and A < 10**8:
                R.append([A, A//253])

for x in sorted(R):
    print(*x)
'''


'''
from fnmatch import *
for x in range(253, 10**8, 253):  # не превышающих 10**8 and делящиеся на 253 без остатка
    if fnmatch(str(x), '12??15*6'):  # соответствующие маске 12??15*6
        print(x, x//253)
'''
# Показать ответ:
# 1278156 5052
# 12531596 49532
# 12741586 50362
# 12951576 51192


# № 8481 (Уровень: Базовый)
# (В. Рыбальченко) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Найдите все натуральные числа меньшие 10**8, которые кратны 237,
# соответствуют маске «81?2*80», но не соответствуют маске «*9*».
# В ответ в первом столбике перечислите все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 237.
'''
from fnmatch import *
for x in range(237, 10**8, 237):
    if fnmatch(str(x), '81?2*80'):
        if not fnmatch(str(x), '*9*'):
            print(x, x//237)
'''
# Показать ответ:
# 815280 3440
# 8162280 34440
# 81324180 343140
# 81727080 344840
# 81821880 345240

#
# № 7724 (Уровень: Базовый)
# (Грачев Н.) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#

# Найдите все натуральные числа, не превосходящие 10**9, для которых выполнены все условия:
# - соответствуют маске *18??18;
# - делятся на 18 и на 1018 без остатка;
#
# В ответе запишите в первом столбце таблицы первые пять
# найденных чисел в порядке возрастания, справа от каждого числа кол-во его делителей.
'''
from fnmatch import *
for x in range(1018, 10**9, 1018):
    if fnmatch(str(x), '*18??18'):
        if x % 18 == 0:
            divisors = set()
            for j in range(1, int(x**0.5)+1):
                if x % j == 0:
                    divisors.add(j)
                    divisors.add(x // j)
            print(x, len(divisors))
'''
# Показать ответ:
# 2189718 24
# 13184118 24
# 84189618 40
# 95184018 32
# 166189518 96

M = [2**i for i in range(1, 100)]

# № 6276 Danov2302 (Уровень: Средний)
# (А.Богданов) Найдите все натуральные числа, не превышающие 10**10,
# которые соответствуют маске 1?1?1?1*1 и при этом без остатка делятся на 2023,
# а сумма цифр числа равна 22. В ответе запишите все найденные числа в порядке возрастания.
'''
from fnmatch import *
for x in range(2023, 10**10, 2023):
    if fnmatch(str(x), '1?1?1?1*1'):
        if sum([int(i) for i in str(x)]) == 22:
            print(x)
'''
# Показать ответ:
# 19131511
# 1012141291
# 1319111311
# 1516111051


# № 6210 (Уровень: Средний)
# (Н. Сафронов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Найдите все натуральные числа, не превосходящие 10**7, для которых выполняются одновременно все условия:
#
# • соответствуют маске *2?2*;
# • являются палиндромами;
# • делятся на число 53 без остатка;
# • количество делителей больше 30.
#
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце — сумму делителей.
'''
from fnmatch import *
for x in range(53, 10**7, 53):
    if fnmatch(str(x), '*2?2*'):
        if str(x) == str(x)[::-1]:  # • являются палиндромами;
            divisors = set()
            for j in range(1, int(x**0.5)+1):
                if x % j == 0:
                    divisors.add(j)
                    divisors.add(x // j)
            if len(divisors) > 30:
                print(x, sum(divisors))
'''
# Показать ответ:
# 212212 508032
# 2527252 5588352
# 4282824 13789440
# 4626264 11787120
# 8125218 19595520
# 8824288 19908504


#
# № 7016 (Уровень: Базовый)
# (Д. Статный)  Текстовый файл состоит из букв латинского алфавита и десятичных цифр.
# Определите максимальную длину подстроки, которая ограничена с одной стороны буквой A,
# а с другой - D и не содержит других букв A и D внутри.
'''
s = open('24.txt').readline()
for x in '0123456789QWERTYUIOPSFGHJKLZXCVBNM':
    s = s.replace(x, '*')

M = [max(i.index('D')+1, 1+len(i)-i.index('D')) for i in s.split('A') if 'D' in i]
print(max(M))
'''
'''
s = open('24.txt').readline()
s = s.replace('A', 'A A').replace('D', 'D D')
M = [len(i) for i in s.split() if 'A' in i and 'D' in i]
print(max(M))
'''
# Ответ: 273


# № 4643 (Уровень: Базовый)
# (А. Калинин)  Текстовый файл состоит из символов A, B и цифр 1, 2.
# Определите максимальное количество идущих подряд троек символов вида двузначное число + буква в прилагаемом файле.
'''
s = open('24.txt').readline()
s = s.replace('B', 'A').replace('2', '1')
s = s.replace('11A', '*').replace('A', ' ').replace('1', ' ')
M = [len(i) for i in s.split() ]
print(max(M))
'''
# Ответ: 67


# Тип 12 № 35470
# Дана программа для редактора:
# ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#       заменить (01, 2302)
#       заменить (02, 10)
#       заменить (03, 201)

# Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 40 единиц, 10 двоек и 8 троек.
# Сколько единиц было в исходной строке?

for n in range(0, 50):
    for m in range(0, 50):
        for t in range(0, 50):
            s = '0' + '1' * n + '2' * m + '3' * t

            while '01' in s or '02' in s or '03' in s:
                s = s.replace('01', '2302', 1)
                s = s.replace('02', '10', 1)
                s = s.replace('03', '201', 1)

            if s.count('1') == 40 and s.count('2') == 10 and s.count('3') == 8:
                print(n)
                exit()



# endregion Урок: ******************************************************************


# todo: Сергей = [1, 2, 3, 5, 8, 7, 9, 11, 13, 12, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# на прошлом уроке: Прорешали задачи с домашки: номера: 9, 24. Повторили и разобрали 6 номер с turtle. Порешали 26 и Серегй решил два номера сам.
# на следующем уроке: #todo 5136
