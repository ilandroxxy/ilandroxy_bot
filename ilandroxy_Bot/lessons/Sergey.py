
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************

# 16.02.23

# Чуть-чуть говорили про функции, разбираем задачи 16, 23 и тд


# ''' Тип 12 № 18793
# inp = '3' * 68
# while '999' in inp or '333' in inp:
#     if '333' in inp:
#         inp = inp.replace('333', '9', 1)
#     else:
#         inp = inp.replace('999', '3', 1)
# print(inp)
# '''


# '''Тип 12 № 13544
# inp = '3' + '9' * 93
# while '19' in inp or '299' in inp or '3999' in inp:
#     inp = inp.replace('19', '2', 1)
#     inp = inp.replace('299', '3', 1)
#     inp = inp.replace('3999', '1', 1)
# print(inp)
# '''


# '''Тип 12 № 15924
# inp = '1' * 101
# while '1111' in inp:
#     inp = inp.replace('1111', '22', 1)
#     inp = inp.replace('222', '1', 1)
# print(inp)
# '''

# Тип 12 № 29199
# Дана программа для Редактора:
# НАЧАЛО
# ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#     заменить (01, 20)
#     заменить (02, 120)
#     заменить (03, 302)
# КОНЕЦ ПОКА
# КОНЕЦ
#
# Известно, что исходная строка начинается с цифры 0, а далее содержит 12 цифр 1, 15 цифр 2 и 17 цифр 3,
# расположенных в произвольном порядке. Сколько цифр 1 будет в строке, которая получится после выполнения данной программы?
'''
s = '0' + '2' * 15 + '3' * 17 + '1' * 12
while '01' in s or '02' in s or '03' in s:
    s = s.replace('01', '20', 1)
    s = s.replace('02', '120', 1)
    s = s.replace('03', '302', 1)
print(s.count('1'))
'''
# Ответ: 32



# Известно, что исходная строка содержала более 100 единиц и не содержала других цифр.
# Укажите минимально возможную длину исходной строки, при которой в результате работы этой программы получится строка, содержащая минимально возможное количество единиц.
'''
# Тип 12 № 33184
for i in range(101, 100000):
    s = '1' * i
    while '111' in s:
        s = s.replace('111', '22', 1)
        s = s.replace('222', '11', 1)
    # print(s.count('1'))
    if s.count('1') == 1:
        print(i)
        break
'''

# #поиск НОД
'''
def NOD(x, y):
    dele = []
    for i in range(1, min(x, y) + 1):
        if x % i == 0 and y % i == 0:
            dele.append(i)
    return max(dele)
'''

# '''
# #поиск НОК
# def NOK(x, y):
#     kr = []
#     new = x * y
#     for i in range(1, new + 1):
#         if i % x == 0 and i % y == 0:
#             kr.append(i)
#     return min(kr)
# print(NOK(16, 38))
# '''



# Тип 15 № 33187 i
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наибольшего натурального числа А формула
# ДЕЛ(90, A) ∧ (¬ДЕЛ(x, А) → (ДЕЛ(x, 15) → ¬ДЕЛ(x, 20)))
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?

# Вариант 1
'''
def F(x, A):
    return (90 % A == 0) and ((x % A != 0) <= ((x % 15 == 0) <= (x % 20 != 0)))

for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
'''

# Вариант 2
'''
def F(x):
    return (90 % A == 0) and ((x % A != 0) <= ((x % 15 == 0) <= (x % 20 != 0)))

for A in range(1, 1000):
    if all(F(x) for x in range(1, 1000)):
        print(A)
'''

# Вариант 3
'''
def F(x):
    return (90 % A == 0) and ((x % A != 0) <= ((x % 15 == 0) <= (x % 20 != 0)))

for A in range(1000, 1-1, -1):
    if all(F(x) for x in range(1, 1000)):
        print(A)
        break


def F(x):
    return (90 % A == 0) and ((x % A != 0) <= ((x % 15 == 0) <= (x % 20 != 0)))
R = []
for A in range(1, 1000):
    if all(F(x) for x in range(1, 1000)):
        R.append(A)
print(max(R))
'''

# Вариант 4
'''
R = []
for A in range(1, 1000):
    if all(((90 % A == 0) and ((x % A != 0) <= ((x % 15 == 0) <= (x % 20 != 0)))) for x in range(1, 1000)):
        R.append(A)
print(max(R))
'''


# Вариант 5
'''
print(max([A for A in range(1, 1000) if all(((90 % A == 0) and ((x % A != 0) <= ((x % 15 == 0) <= (x % 20 != 0)))) for x in range(1, 1000))]))
'''


# Тип 15 № 16447 i
# Для какого наибольшего целого неотрицательного числа A выражение
# (2x + 3y < 30) ∨ (x + y ≥ A)
#
# тождественно истинно при любых целых неотрицательных x и y?
'''
def F(x, y):
    return (2*x + 3*y < 30) or (x + y >= A)

for A in range(0, 1000):
    if all(F(x, y) for x in range(0, 100) for y in range(0, 100)):
        print(A)


# Вариант 2
print(max([A for A in range(0, 1000) if all( ((2*x + 3*y < 30) or (x + y >= A)) for x in range(0, 100) for y in range(0,100))]))
'''
# Ответ: 10



# Тип 15 № 34519 i
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Например, 14&5 = 11102&01012 = 01002 = 4.
# Для какого наименьшего неотрицательного целого числа А формула
# x&9 = 0 → (x&19 ≠ 0 → x&А ≠ 0)
# тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении переменной х)?
'''
print(14 & 5)

def F(x):
    # return (x & 9 == 0) <= ((x & 19 != 0) <= (x & A != 0))
    Q = x & 9 == 0
    W = x & 19 != 0
    E = x & A != 0
    return Q <= (W <= E)

for A in range(0, 1000):
    if all(F(x) for x in range(0, 100)):
        print(A)
        break
'''
# Ответ: 18



# Тип 15 № 11119 Добавить в вариант
# На числовой прямой даны два отрезка: P = [20, 50] и Q = [30,65].
# Отрезок A таков, что формул ¬(x ∈ A) → ((x ∈ P) →¬ (x ∈ Q))
# истинна при любом значении переменной x. Какова наименьшая возможная длина отрезка A?

def F(x):
    P = 20 <= x <= 50
    Q = 30 <= x <= 65
    A = a1 <= x <= a2
    return (not A) <= (P <= (not Q))

M  = [i/4 for i in range(10*4, 70*4)]
print(M)
R = []
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(min(R))

# Ответ: 20



# endregion Урок: ******************************************************************


# todo: Сергей = [2, 5, 8, 12, 14, 15]
# на прошлом уроке: Разобрали все номера 15 номера. На все 5ть типов решений.
# на следующем уроке:
