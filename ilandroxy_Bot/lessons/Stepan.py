# region Домашка: ******************************************************************************

# Тип 11 № 6298
# Для регистрации на сайте некоторой страны пользователю требуется придумать пароль. Длина пароля  — ровно 9 символов.
# В качестве символов могут быть использованы десятичные цифры и 29 различных букв местного алфавита,
# причём все буквы используются в двух начертаниях: как строчные, так и прописные (регистр буквы имеет значение!).
# Под хранение каждого такого пароля на компьютере отводится одинаковое и минимально возможное целое количество байтов.
# При этом используется посимвольное кодирование, и все символы кодируются одинаковым и минимально возможным количеством битов.
# Определите объём памяти, который используется для хранения 20 паролей. (Ответ дайте в байтах.)
'''
symbols = 9
alphabet = 68
i = 7
bit = symbols * i
print(bit)
byte = int(bit / 8) + 1
print(byte)
iskomoe = 20 * 8
print(iskomoe)
'''
# Ответ: 160 байт

# Тип 11 № 15108
# При регистрации в компьютерной системе для каждого пользователя формируется индивидуальный идентификатор, состоящий из 14 символов.
# Для построения идентификатора используют только строчные латинские буквы (26 букв).
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое минимально возможное целое число байт.
# При этом используют посимвольное кодирование идентификаторов, все символы кодируют одинаковым минимально возможным количеством бит.
# Кроме идентификатора для каждого пользователя в системе хранятся дополнительные сведения, для чего выделено одинаковое целое количество байт на каждого пользователя.
# Для хранения информации о 25 пользователях потребовалось 600 байт.
# Сколько байт выделено для хранения дополнительных сведений об одном пользователе? В ответе запишите только целое число  — количество байт.
'''
symbols = 14
alphabet = 26
i = 5
bit = symbols * i
print(bit)
byte = int(bit / 8) + 1
print(byte)
print(25 * 9)
print(600 - 225)
print(375 / 25)
'''
# Ответ: 15

# Тип 11 № 18561
# Каждый сотрудник предприятия получает электронный пропуск, на котором записаны личный код сотрудника, код подразделения и некоторая дополнительная информация.
# Личный код состоит из 13 символов, каждый из которых может быть одной из 12 допустимых заглавных букв или одной из 10 цифр.
# Для записи личного кода используют посимвольное кодирование, все символы кодируют одинаковым минимально возможным количеством бит.
# Код подразделения состоит из двух натуральных чисел, не превышающих 1000, каждое из которых кодируется как двоичное число и занимает минимально возможное целое число бит.
# Личный код и код подразделения записываются подряд и вместе занимают минимально возможное целое число байт. Всего на пропуске хранится 32 байт данных.
# Сколько байт выделено для хранения дополнительных сведений об одном сотруднике? В ответе запишите только целое число  — количество байт.

symbols = 13
alphabet = 22
i = 5
bit = symbols * i
print(bit)
byte = int(bit / 8) + 1
print(byte)
print(32 - 9)
# Не додумался до решения

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Миша заполнял таблицу истинности логической функции
# F=¬(z→x)∨(y≡w)∨w,
# но успел заполнить лишь фрагмент из трёх различных её строк,
# даже не указав, какому столбцу таблицы соответствует каждая из переменных
'''
print('x y z w')
for x in range(2):
    for y in range(2):
        for z in [0, 1]:
            for w in range(2):
                F = (not(z <= x)) or (y == w) or w
                # if F == False:
                if not(F):
                    print(x, y, z, w)
'''

# Взять сумму цифр строки
'''
s = '123.214123541'
# summ = s.count('1') + s.count('2') * 2 + s.count('3') * 3 + ....
# summ = sum([int(i) for i in s])  # ValueError: invalid literal for int() with base 10: '.'
summ = sum([int(i) for i in s if i.isdigit()])
# Если надо взять сумму цифр от n-ной системы счисления
#  index    0123456789
ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
s = '12asbf12FA34'.upper()
summ = sum([ALPHABET.index(i) for i in s])
print(summ)
'''


# № 5623 (Уровень: Базовый)
# (М. Ишимов) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если сумма цифр двоичной записи числа чётная, то к этой записи слева дописывается 1,
# а затем два правых разряда заменяются на 10;
# б) если сумма цифр двоичной записи числа нечётная, то к этой записи справа дописывается 1,
# а затем два левых разряда заменяются на 10.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
# Например, для исходного числа 410 = 1002 результатом будет являться число 910 = 10012,
# а для исходного числа 510 = 1012 результатом будет являться число 1410 = 11102.
#
# Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число R,
# большее, чем 202. В ответе запишите это число в десятичной системе счисления.
'''
for n in range(1, 10000):
    s = bin(n)[2:]
    # summ = sum([int(i) for i in s])
    summ = s.count('1')
    if summ % 2 == 0:
        s = '1' + s[:-2] + '10'
    else:
        s = '10' + s[2:] + '1'

    r = int(s, 2)

    if r > 202:
        print(n)
        break
'''
# Показать ответ: 77


# № 5624 (Уровень: Базовый)
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 16 [Вперёд 10 Направо 120 Вперёд 10 Направо 60]
'''
import turtle as t
t.left(90)
t.speed(10)
l = 20

for _ in range(16):
    t.forward(10 * l)
    t.right(120)
    t.forward(10 * l)
    t.right(60)

t.up()
for x in range(0, 12):
    for y in range(-5, 12):
        t.goto(x * l, y * l)
        t.dot(2, 'red')

t.done()
'''
# Ответ: 80


# № 5625 (Уровень: Базовый)
# (М. Ишимов) Для хранения произвольного растрового изображения размером 512 на 240 пикселей отведено 270 Кбайт
# памяти без учёта размера заголовка файла. При кодировании каждого пикселя используется 5 бит
# для определения степени прозрачности и одинаковое количество бит для указания его цвета.
# Коды пикселей записываются в файл один за другим без промежутков.
# Какое максимальное количество цветов можно использовать в изображении (без учёта степени прозрачности)?
'''
# I = pixels * i
# Colors = 2 ** i
I = 270 * 2 ** 13
pixels = 512 * 240
print(I / pixels)
# i = i1 + i2
i = 18  # общее кол-во бит на 1 пиксель
i2 = 5  # используется 5 бит для определения степени прозрачности
i1 = i - i2  # используется для кодирования палитры цветов
print(2 ** i1)
'''
# Показать ответ: 8192


# № 5626 (Уровень: Базовый)
# (М. Ишимов) Определите количество пятизначных чисел, записанных в восьмеричной системе счисления,
# запись которых не начинается с нечётных цифр, не оканчивается цифрами 2 или 6, а также не содержит более двух цифр 7.
'''
import itertools
count = 0
for s in itertools.product('01234567', repeat=5):
    slovo = ''.join(s)
    if slovo[0] != '0':
        if slovo[0] not in '1357':
            if slovo[-1] not in '26':
                if slovo.count('7') <= 2:
                    count += 1
print(count)
'''
# Показать ответ: 9135

# if len(set(M)) != len(M) or all(M[i + 1] - M[i] == M[1] - M[0] for i in range(len(M) - 1)):

# № 5627 (Уровень: Средний)
# (М. Ишимов) Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнено хотя бы одно из условий:
# – в строке есть хотя бы одно повторяющееся число;
# – будучи упорядоченными, все числа строки образуют арифметическую прогрессию.
# В ответе запишите только число.

# для которых выполнено хотя бы одно из условий:
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()]) 
    if len(set(M)) != len(M) or all(M[i + 1] - M[i] == M[1] - M[0] for i in range(len(M) - 1)):
        print(M)
        count += 1
print(count)
'''
# Ответ: 525


# № 5629 (Уровень: Базовый)
# (М. Ишимов) При регистрации в компьютерной системе каждому объекту присваивается идентификатор,
# состоящий из 1112 символов и содержащий только десятичные цифры и символы из 5750-символьного специального алфавита.
# В базе данных для хранения каждого идентификатора отведено одинаковое и минимально возможное целое число байт.
# При этом используется посимвольное кодирование идентификаторов, все символы кодируются одинаковым
# и минимально возможным количеством бит.
# Определите объём памяти (в Кбайт), необходимый для хранения 16 384 идентификаторов.
# В ответе запишите только целое число – количество Кбайт.
'''
symbols = 1112
alphabet = 5750 + 10
i = 13
bit = symbols * i
id = (16384 * bit) / 2 ** 13  # лучше делать все в битах и только потом переводить в ту единицу измерения, которую требуют в ответе
print(id)
'''
# Ответ: 28912


# Тип 11 № 18561
# Каждый сотрудник предприятия получает электронный пропуск, на котором записаны личный код сотрудника,
# код подразделения и некоторая дополнительная информация. Личный код состоит из 13 символов,
# каждый из которых может быть одной из 12 допустимых заглавных букв или одной из 10 цифр.
# Для записи личного кода используют посимвольное кодирование,
# все символы кодируют одинаковым минимально возможным количеством бит.
# Код подразделения состоит из двух натуральных чисел, не превышающих 1000,
# каждое из которых кодируется как двоичное число и занимает минимально возможное целое число бит.
# Личный код и код подразделения записываются подряд и вместе занимают минимально возможное целое число байт.
# Всего на пропуске хранится 32 байт данных. Сколько байт выделено для
# хранения дополнительных сведений об одном сотруднике? В ответе запишите только целое число — количество байт.
'''
symbols = 13  # код подразделения
symbols2 = 1  # личный код
alphabet = 12 + 10  
alphabet2 = 1000  
i = 5  
i2 = 10  
bit = symbols * i  
bit2 = symbols2 * i2  

byte1 = int(bit / 8) + 1  
byte2 = int(bit2 / 8) + 1  

dop_inf = 32 - (byte1 + byte2)
print(dop_inf)
'''
# Ответ: 21

# 15№ 5633 (Уровень: Базовый)
# (М. Ишимов) Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наименьшего натурального числа А формула
# (ДЕЛ(x, 3) → ¬ДЕЛ(x, 17)) \/ ¬(A < 190 - x)
# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?
'''
def F(x, A):
    return (x % 3 == 0) <= (not(x % 17 == 0)) or (not(A < 190 - x))
for A in range(1, 10000):
    if all(F(x, A) for x in range(1, 10000)):
        break
print(A)
'''
# Ответ: 139


# 17№ 5635 (Уровень: Средний)
# (М. Ишимов) В файле содержится последовательность натуральных чисел. Элементы последовательности могут принимать целые значения от -100 000 до 100 000 включительно.
# Определите количество пар последовательности, в которых нет чисел, не превосходящих абсолютного значения суммы максимального и минимального из чисел
# последовательности, оканчивающихся на 31. В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# Ответ: 966 97346
'''
M = [int(i) for i in open('17_5635.txt')]
A = [i for i in M if str(i)[-2:] == '31']
count = 0
maxi = 0
abbs = abs(max(A) + min(A))
for i in range(0, len(M)-1):
    if M[i] > abbs and M[i+1] > abbs:
        count += 1
        maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''


# endregion Урок: ******************************************************************************

import useful

print(useful.Who_Is_Name())

# todo:    Степан   = [1, 2, 3, 4, 5, 7, 8, 9, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# todo: Степан КЕГЭ = []
# на прошлом уроке: Провели совместный двухчасовой урок, разбирали вариант Ишимов 1. Номера: 2, 3, 5, 6, 7, 8, 9, 11, 15, 17
# на следующем уроке:
