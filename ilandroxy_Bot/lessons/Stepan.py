# region Домашка: ******************************************************************************



# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************
'''
print(2047 + 2 * 2047 - 2)


r = 1
for i in range(13, 39, 4):
    r *= i
    print(i)
print(r)
'''

# № 4739 (Уровень: Базовый)
# (А. Куканова) Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
#
# F(n) = n − 10000 при n > 10000;
# F(n) = F(n + 1) + F(n + 2), если 1 ≤ n ≤ 10000.
#
# Чему равно значение выражения F(12345) × (F(10) − F(12)) / F(11) + F(10101)?
'''
def F(n):
    if n > 10000:
        return n - 10000
    if 1 <= n <= 10000:
        return F(n+1) + F(n+2)

print(F(12345))  # 2345
print(F(10101))  # 101
'''


# Теория 17 номер
M = [1, 2, 3, 4, 5]

# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(0, len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')
print('\n')


# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(0, len(M)-2):
    print(f'{M[i]}{M[i+1]}{M[i+2]}', end=' ')
print('\n')


# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        print(f'{M[i]}{M[j]}', end=' ')
    print()


# Тип 17 № 38951
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 3, а их сумма делится на 5.
# В ответе запишите два числа: сначала количество найденных пар, а затем – максимальную сумму элементов таких пар.

M = [int(i) for i in open('17.txt')]

count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 3 == 0 or M[i+1] % 3 == 0) and ((M[i] + M[i+1]) % 5 == 0):
        count += 1
        maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# Ответ: 635 19730


# Тип 17 № 39764
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём тройкой три идущих подряд элемента последовательности.
# Определите количество троек чисел таких, которые могут являться сторонами прямоугольного треугольника.
# В ответе запишите два числа: сначала количество найденных троек, а затем — максимальную сумму элементов таких троек.
# Если таких троек не найдётся — следует вывести 00.

M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0

for i in range(0, len(M)-2):
    A = sorted([M[i], M[i+1], M[i+2]])
    if A[2] ** 2 == A[0] ** 2 + A[1] ** 2:
        count += 1
        maxi = max(maxi, count)
print(count, maxi)
'''
# Ответ: 0 0



# Тип 17 № 37362
'''
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых сумма элементов кратна 80 и хотя бы один элемент из пары делится на 50,
# затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.


M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] + M[j]) % 80 == 0:
            if M[i] % 50 == 0 or M[j] % 50 == 0:
                count += 1
                maxi = max(maxi, M[i] + M[j])
print(count, maxi)
'''
# Ответ: 21648 19760


# Тип 17 № 46975
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых один из двух элементов делится на 3,
# а другой меньше среднего арифметического всех чётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.

M = [int(i) for i in open('17.txt')]

# Вариант 1 подсчета среднего арифм
summ = 0
k = 0
for x in M:
    if x % 2 == 0:
        summ += x
        k += 1
sred = summ / k

# Вариант 2 подсчета среднего арифм
A = [int(i) for i in open('17.txt') if int(i) % 2 == 0]
sred_A = sum(A) / len(A)


count = 0
maxi = 0
for i in range(0, len(M)-1):
        if (M[i] % 3 == 0 and M[i+1] < sred_A) or ((M[i+1] % 3 == 0 and M[i] < sred_A)):
            count += 1
            maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# Ответ: 1711 14666


# endregion Урок: ******************************************************************************


# todo: Степан = [2, 5, 8, 14+, 15+, 16, 19, 20, 21, 23, 25.2]
# на прошлом уроке: 16 на глубину рекурсии, 17 номер
# на следующем уроке: