# region Домашка: ******************************************************************************

# Тип 14 № 48391
# Операнды арифметического выражения записаны в системах счисления с основаниями 12 и 14:
# yAAx_12 + x02y_14
# Определите наименьшие значения x и y, при которых значение данного арифметического выражения кратно 80.
'''
for x in '0123456789AB':
    for y in '0123456789AB':
        a = int(f'{y}AA{x}', 12)
        b = int(f'{x}02{y}', 14)
        s = a + b
        if s % 80 == 0:
            print(s // 80)
            exit()
# Ответ: 119.
'''

# Тип 14 № 48392
# Операнды арифметического выражения записаны в системах счисления с основаниями 9 и 12:
# 2y66x_9 + x0y1_12
# Определите наименьшие значения x и y, при которых значение данного арифметического выражения кратно 170.
'''
for x in '012345678':
    for y in '012345678':
        a = int(f'2{y}66{x}', 9)
        b = int(f'{x}0{y}1', 12)
        s = a + b
        if s % 170 == 0:
            print(s // 170)
            exit()
# Ответ: 169.
'''

# Тип 14 № 48393
# Операнды арифметического выражения записаны в системах счисления с основаниями 8 и 11:
# y04x5_11 + 253xy_8
# Определите наименьшие значения x и y, при которых значение данного арифметического выражения кратно 117.
'''
for x in '01234567':
    for y in '01234567':
        a = int(f'{y}04{x}5', 11)
        b = int(f'253{x}{y}', 8)
        s = a + b
        if s % 117 == 0:
            print(s // 117)
            exit()
# Ответ: 224.
'''

# Тип 6 № 47303
# Исполнитель Черепаха действует на плоскости с декартовой системой координат.
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 5 Направо 90 Вперёд 10 Направо 90]
# Определите количество точек с целочисленными координатами, лежащих внутри или на границе области, которую ограничивает заданная алгоритмом линия.
'''
import turtle as t
t.left(90)
t.speed(10)
l = 20
for _ in range(4):
    t.forward(5 * l)
    t.right(90)
    t.forward(10 * l)
    t.right(90)
t.color('red')
t.pu()
for x in range(0, 13):
    for y in range(0, 13):
        t.goto(x * l, y * l)
        t.dot(10)
t.done()
# Ответ: 66.
'''

# Тип 6 № 47304
'''
# Исполнитель Черепаха действует на плоскости с декартовой системой координат. В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 7 Направо 90 Вперёд 8 Направо 90]
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом. Точки на линии учитывать не следует.

import turtle as t
t.left(90)
# t.speed(15)
l = 40
for _ in range(4):
    t.forward(7 * l)
    t.right(90)
    t.forward(8 * l)
    t.right(90)
t.color('red')
t.pu()
for x in range(0, 9):
    for y in range(0, 8):
        t.goto(x * l, y * l)
        t.dot(2)
t.done()
# Ответ: 42.
'''

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Теория строк
'''
s = 'name'
print(s, type(s))

s1 = ' Stepan'
print(s + s1)  # конкатенация строк - склеивание нескольких строк в одну

print(s * 4)  # при умножении на целое число - строка дублируется

M = [1, 2, 0, 3]
# i  0  1  2  3

s = '12 3'
# i  0123

print(len(M), len(s))


for x in s:
    print(x, end=' ')
print()

for i in range(0, len(s)):
    print(s[i], end=' ')
print()
'''
# Отличие строк от списка - нельзя поменять элемент строки через индекс



# Срезы строк (списков)
'''
s = '123456789'
print(s[::-1])  # по факту перевернет строку аля reverse()

# Хочу поменять 5 на *
s = s[:4] + '*' + s[5:]
print(s)


# Хочу поменять 4 на $
s = s.replace('4', '$')
print(s)
'''
# Если хотим внести изменения в строку, то нужно создать новую строку с изменением данных старой


# Методы строк
'''
s = '123123123123'

print(s.count('1'))
print(s.index('1'), s.rindex('1'))  # способ взять наибольшую длину между двумя одинаковыми символами строки (пригодится в 24 номере)
s = s.replace('1', '*')  # заменили все "1" на *
print(s)

s = s.replace('2', '$', 2)  # заменили первые две "2" на $
print(s)

a = '    Hello 23 How ARE you ПрИвЕт?   '
a = a.lower()
print(a)

a = a.upper()
print(a)

a = a.strip()  # удаляет пробелы слева и справа от ближайшего символа
print(a)


# Проверка ip адреса на правильность
ip = '124.34.9.222'
M = ip.split('.')
print(M)

A = [int(i) for i in ip.split('.')]
print(A)

flag = True
for x in A:
    if not(0 < x < 256):
        flag = False
        break

if flag == True:
    print('Корректный ip адрес')
else:
    print("Не корректный")


ip = '124.34.9.222'

A = [int(i) for i in ip.split('.') if 0 < int(i) < 256]
if len(A) == 4:
    print('YES')
else:
    print('NO')


ip = '124.34.9.222'
M = ip.split('.')

# Заменить точки на запятую
s = ','.join(M)
print(s)
'''

# Интересный момент:
'''
M = [1, 2, 3, 1, 2, 3]
print(sum(M))

s = '123123'
A = [int(i) for i in s]
print(sum(A))

print(s.count('1') + s.count('2') * 2 + s.count('3') * 3)
'''

# Тип 8 № 3208
'''
# Все 5-буквенные слова, составленные из букв К, О, Р, записаны в алфавитном порядке и пронумерованы.
# Вот начало списка:
# 1.ККККК
# 2.ККККО
# 3.ККККР
# 4.КККОК
#
# Запишите слово, которое стоит под номером 182.

s = 'КОР'
M = [0]
count = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    M.append(temp)
                    if count == 182:
                        print(count, temp)
                    count += 1

print(M[182])
'''
# Ответ: 182 РКРКО



# Тип 8 № 35897
'''
# Валерия составляет 3-буквенные коды из букв В, А, Л, Е, Р, И, Я, причём буква В должна входить в код ровно один раз.
# Все полученные коды Валерия записала в алфавитном порядке и пронумеровала.
# Начало списка выглядит так:
# 1.ААВ
# 2.АВА
# 3.АВЕ
#
# На каком месте будет записан первый код, не содержащий ни одной буквы А?

s = 'АВЕИЛРЯ'
M = ['0']
for a in s:
    for b in s:
        for c in s:
            temp = a + b + c
            if temp.count('В') == 1:
                M.append(temp)

for i in range(1, len(M)):
    if M[i].count('А') == 0:
        print(i, M[i])
        break
'''
# Ответ: 20.


# Тип 8 № 14269
'''
# Олег составляет таблицу кодовых слов для передачи сообщений, каждому сообщению соответствует своё кодовое слово.
# В качестве кодовых слов Олег использует 4-буквенные слова, в которых есть только буквы A, B, C, D, X, Y, Z,
# причём буквы X, Y и Z встречаются только на двух первых позициях, а буквы A, B, C, D — только на двух последних.
# Сколько различных кодовых слов может использовать Олег?

count = 0
for a in 'XYZ':
    for b in 'XYZ':
        for c in 'ABCD':
            for d in 'ABCD':
                count += 1
print(count)
'''
# Ответ: 144.


# endregion Урок: ******************************************************************************




# todo: Степан = [2, 5, 8, 14+], на следующем уроке: Разбираем 12 номера, добить 8 номера, если нужно будет