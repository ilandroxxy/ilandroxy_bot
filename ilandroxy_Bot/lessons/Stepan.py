# region Домашка: ******************************************************************************

# № 7089 OpenFIPI (Уровень: Базовый)
# В файле содержится последовательность натуральных чисел. Элементы последовательности могут принимать целые значения от 1 до 100 000 включительно.
# Определите количество пар последовательности, в которых остаток от деления хотя бы одного из элементов на 111 равен минимальному элементу последовательности.
# В ответе запишите количество найденных пар, затем минимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# ответ: 185 7968
"""
count = 0
maxi = 100000
M = [int(i) for i in open('17_7089.txt')]
for i in range(0, len(M)-1):
    if M[i] % 111 == min(M) or M[i+1] % 111  == min(M):
        count += 1
        maxi = min(maxi, M[i] + M[i+1])
print(count, maxi)
"""

# № 6696 (Уровень: Базовый)
# (Д. Статный) В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от -100 000 до 100 000 включительно.
# Найдите такие тройки элементов, сумма которых кратна 2022 и хотя бы одно из чисел неотрицательно.
# В ответ запишите сначала количество таких троек, а затем – максимальную сумму элементов таких троек.
# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
# ответ: 7 76836
"""
count = 0
maxi = 0
M = [int(i) for i in open('17_6696.txt')]
for i in range(0, len(M)-2):
    if ((M[i] + M[i+1] + M[i+2]) % 2022 == 0) and (M[i] >= 0 or M[i+1] >= 0 or M[i+2] >= 0):
        count += 1
        maxi = max(maxi, M[i] + M[i+1] + M[i+2])
print(count, maxi)
"""

# Тип 24 № 36037
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд символов, среди которых нет подстроки XZZY.
"""
s = open('24.txt').readline()
s = s.replace('XZZY', ' ')
A = [len(i) for i in s.split()]
print(max(A) + (len('XZZY') - 1) * 2)
"""
# Ответ: 1713

# КЕГЭ тип 24 № 7094 OpenFIPI (Уровень: Базовый)
# Текстовый файл состоит из символов A, C, D, F и U.Определите максимальное количество идущих подряд пар символов вида
# согласная + гласная
"""
import itertools as it
count = 0
M = []
for s in it.product('ACDFU', repeat = 2):
    s = ''.join(s)
    if s[0] in 'CDF' and s[1] in 'AU':
        M.append(s)
print(M)
s = open('24_7094.txt').readline()
for x in M:
    s = s.replace(x, '1')
for y in 'ACDFU':
    s = s.replace(y, ' ')
A = [i for i in s.split()]
print(len(max(A)))
"""
# Ответ: 173

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# № 6049 ФИПИ 04.02.23 (Уровень: Базовый)
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от –100 000 до 100 000 включительно.
# Определите количество пар последовательности, в которых только один из элементов оканчивается на 9,
# а сумма квадратов элементов пары меньше квадрата максимального элемента последовательности, оканчивающегося на 9.
# В ответе запишите количество найденных пар, затем минимальную из сумм квадратов элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
"""
M = [int(i) for i in open('17.txt')]
A = [i for i in M if str(i)[-1] == '9']
count = 0
mini = 9999999999
for i in range(0, len(M)-1):
    flag1, flag2 = False, False
    if str(M[i])[-1] == '9':
        flag1 = True
    if abs(M[i+1]) % 10 == 9:
        flag2 = True
    if flag1 + flag2 == 1:
        if (M[i] ** 2 + M[i+1] ** 2) < max(A) ** 2:
            count += 1
            mini = min(mini, M[i] ** 2 + M[i+1] ** 2)
print(count, mini)
"""
# Показать ответ: 1428 356530


# Тип 26 № 36000
# В текстовом файле записан набор натуральных чисел, не превышающих 10**9.
# Гарантируется, что все числа различны. Необходимо определить, сколько в наборе таких пар чисел, что числа
# в паре имеют разную чётность, а их сумма тоже присутствует в файле, и чему равна наибольшая из сумм таких пар.
#
# Первая строка входного файла содержит целое число N — общее количество чисел в наборе.
# Каждая из следующих N строк содержит одно число.
#
# В ответе запишите два целых числа: сначала количество пар, затем наибольшую сумму.
'''
f = open('26.txt')
N = int(f.readline())  # Забрали 5000 чисел в файле
numbers = [int(i) for i in f]
count = 0
maxi = 0
k = 1
for i in range(0, len(numbers)):
    for j in range(i+1, len(numbers)):
        if numbers[i] % 2 != numbers[j] % 2:
            if (numbers[i] + numbers[j]) in numbers:
                count += 1
                maxi = max(maxi, numbers[i] + numbers[j])
                print(k, count, maxi)
        k += 1
'''
#  15 954387771.


# endregion Урок: ******************************************************************************

import useful

print(useful.Who_Is_Name())

# todo:    Степан   = [1, 2, 3, 4, 5, 7, 8, 9, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# todo: Степан КЕГЭ = []
# на прошлом уроке: Разбирали 26 номера
# на следующем уроке:
