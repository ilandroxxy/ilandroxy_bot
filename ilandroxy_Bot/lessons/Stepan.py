# region Домашка: ******************************************************************************

#Домашняя работа

# Тип 16 № 45250
'''
# Алгоритм вычисления значения функции F(n), где n— натуральное число, задан следующими соотношениями:
# F(n)=2 при n<3;
# F(n)=F(n−2)+F(n−1)−n, если n>2 и при этом n чётно,
# F(n)=F(n−1)−F(n−2)+2×n, если n>2 и при этом n нечётно.
# Чему равно значение функции F(32)?

def F(n):
    if n < 3:
        return 2
    if n % 2 == 0 and n > 2:
        return F(n - 2) + F(n - 1) - n
    if n > 2 and n % 2 != 0:
        return F(n - 1) - F(n - 2) + 2 * n
print(F(32))
'''

'''
#Тип 16 № 7273
#Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
#F(1) = 1
#F(n) = F(n–1) * (2*n + 1), при n > 1
#Чему равно значение функции F(4)? В ответе запишите только натуральное число.

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n - 1) * (2 * n + 1)
print(F(4))
'''
'''
#Тип 16 № 4658
#Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
#F(1) = 1
#F(2) = 1
#F(n) = F(n–1) * n − 2 * F(n–2), при n >2
#Чему равно значение функции F(6)?
#В ответе запишите только натуральное число.

def F(n):
    if n == 1:
        return 1
    if n == 2:
        return 1
    if n > 2:
        return F(n - 1) * n - 2 * F(n - 2)
print(F(6))
'''

'''
# Тип 23 № 18634
# У исполнителя есть три команды, которым присвоены номера:
# 1.Прибавить 1
# 2.Прибавить 2
# 3.Умножить на 3
# Сколько существует программ, которые преобразуют исходное число 1 в число 15, и при этом траектория вычислений содержит число 9
# и не содержит числа 13?

def F(a, b):
    if a > b or a == 13:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a + 2, b) + F(a * 3, b)
print(F(1, 9) * F(9, 15))
#Ответ: 159
'''


'''
# Тип 23 № 7315
# У исполнителя три команды, которым присвоены номера:
# 1.прибавь 1
# 2.сделай чётное
# 3.сделай нечётное.
# Сколько существует программ, которые число 1 преобразуют в число 15?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 2, b) + F(a * 2 + 1, b)
print(F(1,15))
#Ответ: 83
'''


'''
# Тип 23 № 23920
# Исполнитель Вычислитель преобразует число на экране. У исполнителя есть две команды, которым присвоены номера:
# 1.Прибавить 1
# 2.Умножить на 2
# Сколько существует программ, для которых при исходном числе 1 результатом является число 21
# и при этом траектория вычислений содержит число 10 и не содержит числа 18?

def F(a, b):
    if a > b or a == 18:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 2, b)
print(F(1,10) * F(10, 21))
# Ответ: 14
'''

'''
# Тип 12 № 25844
# На вход приведённой ниже программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 11 цифр 1, 12 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.
# Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.
# НАЧАЛО
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)
# ЕСЛИ нашлось (>1)
# ТО заменить (>1, 22>)
# КОНЕЦ ЕСЛИ
# ЕСЛИ нашлось (>2)
# ТО заменить (>2, 2>)
# КОНЕЦ ЕСЛИ
# ЕСЛИ нашлось (>3)
# ТО заменить (>3, 1>)
# КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
# КОНЕЦ

s = '>' + '1' * 11 + '2' * 12 + '3' * 30
while '>1' in s or '>2' in s or '>3' in s:
    if '>1' in s:
        s = s.replace('>1', '22>', 1)
    if '>2' in s:
        s = s.replace('>2', '2>', 1)
    if '>3' in s:
        s = s.replace('>3', '1>', 1)
print(s)
print(sum([int(i) for i in s[:-1]]))
'''


# Тип 8 № 27539
'''
# Борис составляет 6-буквенные коды из букв Б, О, Р, И, С.
# Буквы Б и Р нужно обязательно использовать ровно по одному разу, букву С можно использовать один раз или не использовать совсем,
# буквы О и И можно использовать произвольное количество раз или не использовать совсем.
# Сколько различных кодов может составить Борис?

s = 'БОРИС'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        if temp.count('Б') == 1 and temp.count('Р') == 1 and temp.count('С') <= 1:
                            count += 1
print(count)
'''
# Ответ: 1440



# Тип 8 № 38942
# Все четырёхбуквенные слова, в составе которых могут быть только буквы А, В, Т, О, Р, записаны в алфавитном порядке и пронумерованы, начиная с 1. Ниже приведено начало списка:
#
# 1. АААА
# 2. АААВ
# 3. АААО
# 4. АААР
# 5. АААТ
# 6. ААВА
#
# Под каким номером в списке идёт слово ВАТА?



# s = sorted(['А', 'В', 'Т', 'О', 'Р'])
# s = sorted([i for i in 'АВТОР'])
# print(s)



# Тип 8 № 35466
'''
# Вероника составляет 3-буквенные коды из букв В, Е, Р, О, Н, И, К, А, причём буква В должна входить в код ровно один раз.
# Все полученные коды Вероника записала в алфавитном порядке и пронумеровала. Начало списка выглядит так:
#
# 1. ААВ
# 2. АВА
# 3. АВЕ

# На каком месте будет записан первый код, не содержащий ни одной буквы А?

s = sorted([i for i in 'ВЕРОНИКА'])
k = 1
for a in s:
    for b in s:
        for c in s:
            temp = a + b + c
            if temp.count('В') == 1:
                if 'А' not in temp:
                    print(k, temp)
                    exit()
                k += 1
'''
# Ответ: 23

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 15 № 16045
'''
# Для какого наибольшего целого неотрицательного числа A выражение
#
# (y + 2x ≠ 48) ∨ (A < x) ∨ (A < y)
#
# тождественно истинно, то есть принимает значение 1 при любых целых неотрицательных x и y?

def F(x, y, A):
    return ((y + 2*x) != 48) or (A < x) or (A < y)

for A in range(0, 1000):
    flag = True
    for x in range(0, 100):
        for y in range(0, 100):
            if F(x, y, A) == False:
                flag = False
                break
        if flag == False:
            break
    if flag == True:
        print(A)
'''
# Ответ: 15


# Тип 15 № 33485
'''
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наибольшего натурального числа А формула
#
# ДЕЛ(120, A) ∧ (¬ДЕЛ(x, А) → (ДЕЛ(x, 18) → ¬ДЕЛ(x, 24)))
#
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?

def F(x, A):
    return ((120 % A == 0) and ((x % A != 0) <= ((x%18 == 0) <= (x % 24 != 0))))

M = []
for A in range(1, 10000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        M.append(A)
print('Ответ: ', max(M))
'''
# Ответ: 24


# Тип 15 № 34521
'''
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
#
# Так, например, 14 & 5 = 1110_2 & 0101_2 = 0100_2 = 4.
#
# Для какого наибольшего целого числа А формула
#
# (x&51 = 0 ∨ (x&41 = 0 → x&А = 0))
#
# тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении переменной x)?

# Вариант 2
def F(x, A):
    return ((x & 51 == 0) or ((x & 41 == 0) <= (x & A == 0)))

for A in range(0, 1000):
    flag = True
    for x in range(0, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
'''

# Вариант 2
'''
def F(x, A):
    P = x & 51 == 0
    C = x & 41 == 0
    D = x & A == 0
    return (P) or ((C) <= (D))

for A in range(0, 1000):
    flag = True
    for x in range(0, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
'''
# Ответ: 41


# Тип 15 № 46973
'''
# На числовой прямой даны два отрезка: P=[69;91] и Q=[77;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
#
# (x∈Q)→(((x∈P)≡(x∈Q))∨(¬(x∈P)→(x∈A)))
#
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).

def F(x, a1, a2):
    Q = 77 <= x <= 114
    P = 69 <= x <= 91
    A = a1 <= x <= a2
    return Q <= ((P == Q) or ((not P) <= A))

M = []
for a1 in range(1, 200):
    for a2 in range(1, 200):
        flag = True
        for x in range(1, 1000):
            if F(x, a1, a2) == False:
                flag = False
                break
        if flag == True:
            M.append(a2-a1)
print(min(M)+1)
'''
# Ответ: 23


# 14 & 5= 1110_2 & 0101_2 = 0100_2 = 4

def MyConc(a, b):
    pass


# Тип 7 № 13620
# Производится звукозапись музыкального фрагмента в формате стерео (двухканальная запись) с частотой дискретизации 32 кГц и 32-битным разрешением.
# Результаты записываются в файл, сжатие данных не производится; размер полученного файла – 64 Мбайт.
# Затем производится повторная запись этого же фрагмента в формате моно (одноканальная запись) с частотой дискретизации 16 кГц и 16-битным разрешением.
# Сжатие данных не производилось. Укажите размер файла в Мбайт, полученного при повторной записи.
# В ответе запишите только целое число, единицу измерения писать не нужно.

t = (64 * 2**23) / (2*32000*32)
print(t)
print((t * 1 * 16000*16) / (2**23))



# endregion Урок: ******************************************************************************


# todo: Степан = [2, 5, 8, 14+, 16, 19, 20, 21, 23], на следующем уроке: