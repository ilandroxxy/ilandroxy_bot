# region Домашка

#Домашняя работа

#  Тип 5 № 15101
# Автомат получает на вход четырёхзначное число (число не может начинаться с нуля). По этому числу строится новое число по следующим правилам.
# 1.Складываются отдельно первая и вторая, вторая и третья, третья и четвёртая цифры заданного числа.
# 2.Наименьшая из полученных трёх сумм удаляется.
# 3.Оставшиеся две суммы записываются друг за другом в порядке неубывания без разделителей.
# Пример.Исходное число: 1982. Суммы: 1 + 9 = 10, 9 + 8 = 17, 8 + 2 = 10. Удаляется 10. Результат: 1017.
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 1215.
'''
for n in range(1000, 10000):
    s = str(n)
    a = int(s[0]) + int(s[1])
    b = int(s[1]) + int(s[2])
    c = int(s[2]) + int(s[3])
    # Взял из решу ЕГЭ (не разобрался)
    # x1 = str(a + b + c - max(a, b, c) - min(a, b, c))
    # x2 = str(max(a, b, c))
    # s1 = x1 + x2
    # if s1 == '1215':
    #     print(n)
    #     break
# Ответ: 1396
'''

# Тип 5 № 14692
# Автомат получает на вход четырёхзначное число (число не может начинаться с нуля). По этому числу строится новое число по следующим правилам.
# 1.Складываются отдельно первая и вторая, вторая и третья, третья и четвёртая цифры заданного числа.
# 2.Наименьшая из полученных трёх сумм удаляется.
# 3.Оставшиеся две суммы записываются друг за другом в порядке неубывания без разделителей.
# Пример. Исходное число: 1984. Суммы: 1 + 9 = 10, 9 + 8 = 17, 8 + 4 = 12. Удаляется 10. Результат: 1217.
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 613.
# Примечание. Если меньшие из трех сумм равны, то отбрасывают одну из них.

# for n in range(10000-1, 1000-1, -1):
'''
for n in range(1000, 10000):
    s = str(n)
    a = int(s[0]) + int(s[1])
    b = int(s[1]) + int(s[2])
    c = int(s[2]) + int(s[3])

    r = str(a + b + c - max(a, b, c) - min(a, b, c)) + str(max(a, b, c))
    if r == '613':
        print(n)

# Ответ: 9424
'''

# Тип 5 № 10309
# Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам.
# 1.Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
# 2.Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
# Пример. Исходное число: 63 179. Суммы: 6 + 1 + 9 = 16; 3 + 7 = 10. Результат: 1016.
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 621.
'''
for n in range(10000, 100000):
    s = str(n)
    a = int(s[0]) + int(s[2]) + int(s[4])
    b = int(s[1]) + int(s[3])
    r = str(min(a, b)) + str(max(a, b))
    if r == '621':
        print(n)
        break
# Ответ: 30969
'''

# Тип 5 № 14265
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
# 1.Складываются отдельно первая и вторая цифры, а также вторая и третья цифры.
# 2.Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
# Пример. Исходное число: 872. Суммы: 8+7 = 15; 7+2 = 9. Результат: 915.
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 812.
'''
for n in range(100, 1000):
    s = str(n)
    a = int(s[0]) + int(s[1])
    b = int(s[1]) + int(s[2])
    r = str(min(a, b)) + str(max(a, b))
    if r == '812':
        print(n)
        break
# Ответ: 175
'''

# endregion Домашка


# region Урок

# Старое 17 задание с 2021 года
# Рассматривается множество целых чисел, принадлежащих числовому отрезку [4668; 10414], которые делятся на 4 и не делятся на 7, 17.
# Найдите количество таких чисел и максимальное из них.
# В ответе запишите два целых числа: сначала количество, затем максимальное число.

'''
count = 0
maxi = 0
summ = 0
mini = 0
M = []
flag = True
for x in range(4668, 10414+1):
    if x % 4 == 0:
        if x % 7 != 0 and x % 17 != 0:
            M.append(x)
            if flag == True:
                mini = x
                flag = False
            count += 1  # count = count + 1
            summ += x
            maxi = x
print(count, summ, maxi, mini)
print(min(M), max(M))
'''


# Тип 14 № 48401
# Операнды арифметического выражения записаны в системе счисления с основаниями 13 и 18:
#
# xA04_13 + 1Dx3_18
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита десятичной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 184.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 184 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.


'''
for x in range(0, 13):
    A = [x, 10, 0, 4]
    a = 0
    A.reverse()
    for i in range(0, len(A)):
        a += A[i] * 13 ** i

    B = [1, 13, x, 3]
    b = 0
    B.reverse()
    for i in range(0, len(B)):
        b += B[i] * 18 ** i

    if (a + b) % 184 == 0:
        print((a + b) // 184)
        break
'''

# Вариент 2
'''
Alphbaet = '0123456789abc'
for x in Alphbaet:
    A = f'{x}a04'
    B = f'1d{x}3'

    a = int(A, 13)
    b = int(B, 18)

    if (a + b) % 184 == 0:
        print((a + b) // 184)
        break


for x in '0123456789abcdefgh':
    a = int(f'{x}a04', 13)
    b = int(f'1d{x}3', 18)

    if (a + b) % 184 == 0:
        print((a + b) // 184)
        break
'''


# Тип 14 № 48384
'''
# Операнды арифметического выражения записаны в системах счисления с основаниями 9 и 11:
#
# 88x4y_9 + 7x44y_11
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите наименьшие значения x и y, при которых значение данного арифметического выражения кратно 61.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 61 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.


for x in '012345678':
    for y in '012345678':
        a = int(f'88{x}4{y}', 9)
        b = int(f'7{x}44{y}', 11)

        if (a + b) % 61 == 0:
            print((a + b) // 61)
            exit()
'''
# Ответ: 2715



# Тип 14 № 48380
'''
# Числа M и N записаны в системе счисления с основанием 12 соответственно.
#
# M = 49x26_12, N = 49x70_12
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита двенадцатеричной системы счисления.
# Определите наименьшее значение натурального числа A, при котором существует такой x, что M + A кратно N.

for A in range(1, 1000):
    for x in '0123456789ab':
        m = int(f'49{x}26', 12)
        n = int(f'49{x}70', 12)

        if (m + A) % n == 0:
            print(A)
            exit()
'''
# Ответ: 54.


# Задания Д14 № 9308
'''
# Решите уравнение:
#
# 103_x + 11 = 103_х+1

for x in range(4, 100):
    a = int(f'103', x)
    b = int(f'103', x+1)

    if a + 11 == b:
        print(x)
        break
'''
# Ответ: 5




import random
import math
import datetime
import time
import sqlite3

# import turtle
# turtle.forward(100)
# turtle.done()
#
# import turtle as t
# t.forward(100)
# t.done()
#
# from turtle import done, forward
# forward(100)
# done()
#
# from turtle import *
# forward(100)
# done()


# Тип 6 № 47406
'''
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 12 Направо 90]
# Повтори 3 [Вперёд 12 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом: Повтори 4 [Вперёд 12 Направо 90]
# и находиться вне области, ограниченной линией, заданной данным алгоритмом: Повтори 3 [Вперёд 12 Направо 120].
# Точки на линии учитывать не следует.

import turtle as t
t.left(90)
t.speed(10)
l = 20

for _ in range(4):
    t.forward(12 * l)
    t.right(90)

t.color('red')
for _ in range(4):
    t.forward(12 * l)
    t.right(120)

t.pu()
t.color('blue')
for x in range(0, 13):
    for y in range(0, 13):
        t.goto(x * l, y * l)
        t.dot(2)

t.done()
'''


# endregion Урок




# todo: Степан = [2, 5, 14], на следующем уроке: Добиваем 6 номер и теория строк