# region Домашка: ******************************************************************************

# Домашняя работа (Решение варианта с КЕГЭ /dev/inf #1)
# Номер 2
'''
print(f'x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (not(w <= x)) or (y <= z) or (not(y))
                if F == 0:
                    print(x, y, z, w, F)
# Ответ: zwyx
'''

# Номер 3
# Ответ: 9660

# Номер 4
# Ответ: 18

# Номер 5
'''
for N in range(0, 10000):
    s = bin(N)[2:]
    if s.count('1') % 2 == 0:
       s = '10' + s[2:] + '1'
    else:
       s = '1' + s[2:] + '11'
    R = int(s, 2)
    if R >= 100:
        print(N)
# Ответ: 41
'''

# Номер 6
# Черепахе был дан для исполнения следующий алгоритм:
#
# Повтори 10 [Вперёд 10 Повтори 2 [Вперёд 10 Направо 90]].
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области,
# ограниченной линией, заданной данным алгоритмом. Точки на линии учитывать не следует.
#
# Показать ответ: 171
'''
import turtle as t
t.left(90)
t.speed(10)
l = 15

for _ in range(10):
    t.forward(10 * l)
    for _ in range(2):
        t.forward(10 * l)
        t.right(90)

t.up()
for x in range(0, 11):
    for y in range(0, 21):
        t.goto(x*l, y*l)
        t.dot(2, 'red')

t.done()
'''


# № 5113 /dev/inf 11.22 (Уровень: Базовый)
# (А. Рогов) Для хранения сжатого произвольного растрового изображения размером 640 на 860 пикселей
# отведено 500 Кбайт памяти без учёта размера заголовка файла. Файл оригинального изображения больше сжатого на 23%.
# Для кодирования цвета каждого пикселя используется одинаковое количество бит,
# коды пикселей записываются в файл один за другим без промежутков.
# Какое максимальное количество цветов можно использовать в изображении?
'''
# I = px * i
px = 650 * 860
# 423808 - это 650 * 860 (23%)
i = (((500 * 2**13) * 1.23) / px)
print(i)
N = 2 ** int(i)
print(N)
'''
# Ответ: 512


# 8
# № 5114 /dev/inf 11.22 (Уровень: Базовый)
# (А. Рогов) Определите количество пятизначных чисел, записанных в семеричной системе счисления,
# в записи которых ровно одна цифра 5, при этом никакая четная цифра не стоит рядом с цифрой 5.

# 50 05 25 52 45 54 65 56
'''
count = 0
import itertools
for s in itertools.product('0123456', repeat=5):
    s = ''.join(s)
    if s.count('5') == 1 and s[0] != '0':
        # if '50' not in s and '05' not in s ..... ; костыль
        if all(i not in s for i in '50 05 25 52 45 54 65 56'.split()):
            count += 1
print(count)
'''
# Показать ответ: 1176


# Номер 9

# Номер 10
# Ответ: 12

# № 5128 /dev/inf 11.22 (Уровень: Базовый) (А. Рогов) При регистрации в компьютерной системе каждому объекту
# присваивается идентификатор, состоящий из 325 символов и содержащий только шестнадцатеричные цифры и символы из
# 2040-символьного специального алфавита. В базе данных для хранения каждого идентификатора отведено одинаковое и
# минимально возможное целое число байт. При этом используется посимвольное кодирование идентификаторов, все символы
# кодируются одинаковым и минимально возможным количеством бит.
#
# Определите объём памяти (в Кбайт), необходимый для хранения 8192 идентификаторов.
# В ответе запишите только целое число – количество Кбайт.
'''
symbols = 325
alphabet = 2040 + 16  # 2**11 < 2056 < 2**12
i = 12
bit = symbols * i
print(bit)
byte = int(bit / 8) + 1
print(byte)

print((8192 * byte / (2**10)))
'''
# # Показать ответ: 3904



# На вход приведённой ниже программы поступает строка, начинающаяся с символа «>»,
# а затем содержащая 15 цифр 1, n цифр 2 и 16 цифр 3, расположенных в произвольном порядке.
#
# Определите натуральное значение n, при котором в полученной в результате работы алгоритма строке сумма
# числовых значений цифр строки будет кратна длине этой строки.
#
# НАЧАЛО
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)
# ЕСЛИ нашлось (>1)
# ТО заменить (>1, 22>)
# КОНЕЦ ЕСЛИ
# ЕСЛИ нашлось (>3)
# ТО заменить (>3, 13>)
# КОНЕЦ ЕСЛИ
# ЕСЛИ нашлось (>2)
# ТО заменить (>2, 1000>3)
# КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
# КОНЕЦ
'''
for n in range(1, 100):
     s = '>' + '1' * 15 + '2' * n + '3' * 16
     while '>1' in s or '>2' in s or '>3' in s:
        if '>1' in s:
            s = s.replace('>1', '22>', 1)
        if '>3' in s:
            s = s.replace('>3', '13>', 1)
        if '>2' in s:
            s = s.replace('>2', '1000>3', 1)
     M = [int(i) for i in s[:-1]]
     if sum(M) % len(s) == 0:
        print(n)
'''
# Ответ: 61


# Номер 14
'''
for x in '0123456789ABCDEFG':
 a = int(f'149{x}3', 17)
 b = int(f'{x}612', 17)
 c = int(f'{x}54{x}', 17)
 s = a + b - c
 if s % 7 == 0:
  print(x)
  '''
# Ответ: 19

# Номер 15

# Номер 16
# № 5133 /dev/inf 11.22 (Уровень: Базовый)
# (А. Рогов) Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
#
# F(n) = 1 при n < 3;
# F(n) = F(n − 1) + n − 1, если n > 2 и при этом n чётно;
# F(n) = F(n − 2) + 2 × n − 2, если n > 2 и при этом n нечётно.
#
# Чему равно значение выражения F(2048) - F(2045)?
# F(2048) = F(2047) + 2047
# F(2047) = F(2045) + 2 * 2047 − 2      - F(2045)
print(2047 + (2 * 2047 - 2))
# Ответ: 6139
'''
def F(n):
 if n < 3:
  return 1
 if n > 2 and n % 2 == 0:
  return F((n - 1) + n - 1)
 if n > 2 and n % 2 != 0:
  return F((n - 2) + 2 * n - 2)
print(F(2048) - F(2045))
# Выдаёт ошибку что превышен лимит рекурсии
'''


# Номер 18
# Ответ: 748488

# Номер 22
# Ответ: 18

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************



# endregion Урок: ******************************************************************************


# todo: Степан = [2, 3, 4, 5, 7, 8, 9, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# на прошлом уроке: Разобрали большой пул задач с домашнего варианта: 1, 6, 7, 11, 12, 13, 16, 14
# на следующем уроке: