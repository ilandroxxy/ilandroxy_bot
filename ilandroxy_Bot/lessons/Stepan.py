# region Домашка: ******************************************************************************

# Тип 17 № 38951
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 3, а их сумма делится на 5.
# В ответе запишите два числа: сначала количество найденных пар, а затем – максимальную сумму элементов таких пар.
'''
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 3 == 0 or M[i+1] % 3 == 0) and ((M[i] + M[i+1]) % 5 == 0):
        count += 1
        maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# Тип 17 № 40992
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 5 и хотя бы один из двух элементов меньше среднего арифметического всех элементов последовательности,
# значение которых нечетно. В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.
'''
A = [int(i) for i in open('17.txt') if int(i) % 2 != 0]
sred = sum(A) / len(A)
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 5 == 0 or M[i+1] % 5 == 0) and (M[i] < sred or M[i+1] < sred):
        count += 1
        maxi = max(maxi, M[i] + M[i + 1])
print(count, maxi)
'''

# Тип 17 № 47221
# В файле содержится последовательность целых чисел. Элементы последовательности могут принимать целые значения от −10000 до 10000 включительно.
# Определите количество пар последовательности, в которых только одно число оканчивается на 3, а сумма квадратов элементов пары не меньше квадрата максимального
# элемента последовательности, оканчивающегося на 3. В ответе запишите два числа: сначала количество найденных пар, затем максимальную из сумм квадратов элементов
# таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
A = [int(i) for i in open('17.txt') if int(i) % 10 == 3]
maxA = max(A)
print(maxA)
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0

for i in range(0, len(M)-1):
    if (str(M[i])[-1] == '3' and str(M[i+1])[-1] != '3' and M[i]**2 + M[i+1]**2 >= maxA**2) or (str(M[i])[-1] != '3' and str(M[i+1])[-1] == '3' and M[i]**2 + M[i+1]**2 >= maxA**2):
        count += 1
        # print(M[i], M[i+1])
        maxi = max(maxi, M[i]**2 + M[i+1]**2)
print(count, maxi)
# 180 190360573
'''

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 24 № 27687
'''
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Y.
# Хотя бы один символ Y находится в последовательности.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# Вариант 1
s = open('24.txt').readline()
count = 1
max_count = 0
for i in range(0, len(s)-1):
    if s[i] == 'Y' and s[i+1] == 'Y':
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)

# Вариант 2
print(max([len(i) for i in open('24.txt').readline().replace('X', ' ').replace('Z', ' ').split()]))

# Вариант 3
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Z', ' ')
M = [len(i) for i in s.split()]
print(M)
print(max(M))
'''
# Ответ: 10



# Тип 24 № 36037
'''
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд символов, среди которых нет подстроки XZZY.
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

s = open('24.txt').readline()
s = s.replace('XZZY', ' ')
M = [len(i) for i in s.split()]
print(M)
print(3+max(M)+3)
'''
# Ответ: 1713


# Тип 24 № 29672
'''
# Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество строк, в которых буква E встречается чаще, чем буква A.

s = open('24.txt').readlines()
count = 0
for x in s:
    if x.count('E') > x.count('A'):
        count += 1
print(count)
'''
# Ответ: 467


# Тип 24 № 27699
# Текстовый файл состоит не более чем из 10**6 символов L, D и R.
# Определите максимальную длину цепочки вида LDRLDRLDR... (составленной из фрагментов LDR, последний фрагмент может быть неполным).
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
print(open('24.txt').readline())

print(len('LDRLDRLDRLDRLDR'))
'''

# Тип 24 № 37131
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите наибольшую длину цепочки символов, среди которых нет символов K и L, стоящих рядом.
#
# Например, в тексте ABCAABAKLD самая длинная цепочка символов, удовлетворяющая условию — ABCAABAK, её длина равна 8.
#
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
s = open('24.txt').readline()
s = s.replace('KL', ' ').replace('LK', ' ')
M = [len(i) for i in s.split()]
print(M)
print(1+max(M)+1)
'''
# Ответ: 2796



# endregion Урок: ******************************************************************************


# todo: Степан = [2, 5, 8, 14+, 15+, 16, 19, 20, 21, 23, 25.2]
# на прошлом уроке: Повторили 17 номер (решал сам) и начали разбирать 24 номер
# на следующем уроке: