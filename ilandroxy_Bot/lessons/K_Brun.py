# region Домашка: ******************************************************************

# КЕГЭ № 5736 (Уровень: Средний) (Д. Тараскин)
# Программа перебирает числа больше 10**9 и выбирает из них числа-палиндромы,
# у которых наибольший делитель (отличный от 1 и самого числа) кратен 7.
# Выведите первые 5 чисел, которые выберет программа, и для каждого числа выведите наибольший делитель.

'''
def divisors(x):
    div = []
    for j in range(2, int(x**0.5)+1):  # (отличный от 1 и самого числа)
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


k = 0
for x in range(10**9+1, 10**10):  # перебирает числа больше 10**9
    if str(x) == str(x)[::-1]:   # числа-палиндромы
        d = divisors(x)
        if max(d) % 7 == 0:
            print(x, max(d))
            k += 1
            if k == 5:
                break
'''
# endregion Домашка: *****************************************************************


# region Урок: ******************************************************************

'''
f = open('17.txt', 'r')
print(f)  # <_io.TextIOWrapper name='17.txt' mode='r' encoding='UTF-8'>
f.close()
'''
'''
with open('17.txt', 'r') as f:
    print(f)
# тут файл уже закрыт 
'''
'''
with open('17.txt', 'r') as f:
    # print(f.readline())  # считывает первую строку файла
    # print(f.readlines())  # считывает все строки файла и возвращает их в виде списка
    print(f.read())  # просто возвращает содержимое файла
'''
'''
# Пробегаем каждую строку файла 
for s in open('17.txt'):
    print(s)
'''

# Как открывать и читать 17.txt файл
'''
M = [int(x) for x in open('17.txt')]
print(M)
'''


# Рассмотрим рзличные типы задач для номера 17
'''
M = [1, 2, 3, 4, 5]

# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
# 11 12 13 14 15
# 21 22 23 24 25
# 31 32 33 34 35
# 41 42 43 44 45
# 51 52 53 54 55
'''

# Тип 17 №37359
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых сумма элементов кратна 117, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 117 == 0:
            count += 1
            maxi = max(maxi, x + y)
print(count, maxi)
'''
'''
M = [int(x) for x in open('17.txt')]
B = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 117 == 0:
            B.append(x + y)
print(len(B), max(B))
'''
# Ответ: 427120 19890


# Тип 17 №51986
# Файл содержит последовательность целых чисел, по модулю не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
#
# Определите количество таких пар, в которых запись меньшего элемента заканчивается цифрой 5,
# а сумма квадратов элементов пары меньше, чем квадрат наименьшего из элементов
# последовательности, запись которых заканчивается цифрой 5. В ответе запишите два числа:
# сначала количество найденных пар, затем максимальную сумму квадратов элементов этих пар.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-1] == '5']
B = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if str(min(x, y))[-1] == '5':
        if (x ** 2 + y ** 2) < min(A) ** 2:
            B.append(x ** 2 + y ** 2)
print(len(B), max(B))
'''
# Ответ: 403 99805561.


# Тип 17 №61363
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.
#
# Определите количество троек, для которых выполняются следующие условия:
# — ровно два числа в тройке четырёхзначные;
# — хотя бы одно число в тройке делится на 3;
# — сумма элементов тройки больше максимального элемента последовательности,
# запись которого заканчивается на 19. (Гарантируется, что в последовательности есть
# хотя бы один элемент, запись которого заканчивается на 19.)
#
# В ответе запишите два числа: сначала количество найденных троек, затем максимальную
# величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-2:] == '19']
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if sum([len(str(abs(v))) == 4 for v in [x, y, z]]) == 2:
        if sum([abs(v) % 3 == 0 for v in [x, y, z]]) > 0:
            if (x + y + z) > max(A):
                R.append(x + y + z)
print(len(R), max(R))
'''
# Ответ: 78 115709.


# endregion Урок: ******************************************************************


# Екатерина = [2.1, 5.1, 6.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
