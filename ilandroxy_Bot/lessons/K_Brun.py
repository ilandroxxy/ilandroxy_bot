# region Домашка: ******************************************************************


# endregion Домашка: *****************************************************************


# region Урок: ******************************************************************

# Рассмотрим 24 номера базового типа

# Тип 24 №27687
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Y.
# Хотя бы один символ Y находится в последовательности.
'''
# Вариант 1
s = open('24.txt').readline()
count = 1  # будет считать длину промежуточной последовательности
maxi = 0  # будем сравнивать ее с count и при нахождении нового наибольшего - перезаписывать
for i in range(len(s)-1):
    # if s[i] == 'Y' and s[i+1] == 'Y':
    if s[i:i+2] == 'YY':
        count += 1
        maxi = max(maxi, count)  # тут происходит перезапись, если count > maxi
    else:
        count = 1
print(maxi)


# Вариант 2
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Z', ' ')
maxi = 0
for x in s.split():
    maxi = max(maxi, len(x))
print(maxi)

# Вариант 2.2
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Z', ' ')
print(max([len(x) for x in s.split()]))

# Вариант 2.3
print(max([len(x) for x in open('24.txt').readline().replace('X', ' ').replace('Z', ' ').split()]))

# Вариант 3 - вариант решения через поиск ctrl + F
print(open('24.txt').readline())
print(len('YYYYYYYYYY'))
'''
# Ответ: 10


# Тип 24 №38602
# Текстовый файл состоит из символов P, Q, R и S.
# Определите максимальное количество идущих подряд символов в прилагаемом файле,
# среди которых нет идущих подряд символов P.
'''
s = open('24.txt').readline()
s = s.replace('PP', 'P P')
print(max([len(x) for x in s.split()]))
'''


# Тип 24 №59817
# Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов, которых никакие две буквы
# из набора букв A, B и C (с учетом повторений) не записаны подряд.
'''
s = open('24.txt').readline()
for a in 'AA BB CC AB BA AC CA BC CB'.split():
    s = s.replace(a, '* *')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 49


# Тип 24 №59848
# Текстовый файл состоит не более чем из 106 символов латинского алфавита.
# Необходимо найти самую длинную подстроку, которая может являться числом в 24 системе счисления.
# В ответ записать длину последовательности символов, которая может являться числом в 24 системе счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
s = open('24.txt').readline()
for a in alphabet[24:]:
    s = s.replace(a, ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 40


# Тип 24 №27689
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите максимальную длину цепочки вида XYZXYZXYZ...
# (составленной из фрагментов XYZ, последний фрагмент может быть неполным).
'''
print(open('24.txt').readline())
print(len('XYZXYZXYZXYZX'))
'''
# Ответ: 13


# Тип 24 №27421
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.
'''
s = open('24.txt').readline()
count = 1
maxi = 0
for i in range(len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)
'''
# Ответ: 35


# Тип 24 №46982
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество групп из идущих подряд не менее 12 символов,
# которые начинаются и заканчиваются буквой E и не содержат других букв E (кроме первой и последней) и букв F.
'''
s = open('24.txt').readline()
s = s.replace('E', 'E E')
print(len([len(x) for x in s.split() if 'F' not in x and len(x) >= 12]))
'''
# Ответ: 9655

# endregion Урок: ******************************************************************


# Екатерина = [2.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1-, 25.1]
# КЕГЭ  = []
# на следующем уроке: Разбираем вторую часть 24 номеров на строки и кол-во элементов
