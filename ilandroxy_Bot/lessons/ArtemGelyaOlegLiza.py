
# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# № 12462 PRO100 ЕГЭ 29.12.23 (Уровень: Базовый)
# Сколько существует различных трёхзначных и пятизначных чисел, записанных в шестнадцатеричной системе счисления,
# в записи которых цифры следуют слева направо в строго убывающем порядке?
'''
from itertools import product
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
s = alphabet[:16]
count = 0
for num in product(s, repeat=3):
    if len(num) == len(set(num)):
        if list(num) == sorted(num, reverse=True):
            count += 1

for num in product(s, repeat=5):
    if len(num) == len(set(num)):
        if list(num) == sorted(num, reverse=True):
            count += 1
print(count)


# Вариант 2
count = 0
for i1 in range(1, 16):
    for i2 in range(0, i1):
        for i3 in range(0, i2):
            count += 1

for i1 in range(1, 16):
    for i2 in range(0, i1):
        for i3 in range(0, i2):
            for i4 in range(0, i3):
                for i5 in range(0, i4):
                    count += 1
print(count)
'''
# Ответ: 4928


# № 11227 (Уровень: Базовый)
# (М. Ишимов) Все пятибуквенные слова, составленные из букв Л, О, Г, А, Р, И, Ф, М,
# записаны в алфавитном порядке и пронумерованы.
# Вот начало списка:
# 1. ААААА
# 2. ААААГ
# 3. ААААИ
# 4. ААААЛ
# 5. ААААМ
# 6. ААААО
# 7. ААААР
# …
# Определите в этом списке количество слов с чётными номерами, которые не начинаются на ЛМ
# и при этом содержат в своей записи не менее двух букв И.
'''
s = sorted('ЛОГАРИФМ')
count = 0
num = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if num % 2 == 0 and slovo[:2] != 'ЛМ' and slovo.count('И') >= 2:
                        count += 1
                    num += 1
print(count)
'''
'''
from itertools import *
k = n = 0
for s in product(sorted('ЛОГАРИФМ'), repeat=5):
    s = ''.join(s)
    n += 1
    if n % 2 == 0 and s[:2] != 'ЛМ' and s.count('И') >= 2:
        k += 1
print(k)
'''
# Ответ: 1288


# № 11202 (Уровень: Средний)
# (С. Якунин) Полина составляет слова, переставляя буквы в слове АССЕМБЛЕР.
# Сколько слов может составить Полина, если известно, что сумма порядковых номеров гласных букв,
# в каждом из них, равна 9? Буквы нумеруются слева направо, начиная с единицы.
'''
from itertools import permutations
count = set()
for s in permutations('АССЕМБЛЕР'):
    summa = sum([i+1 for i in range(len(s)) if s[i] in 'АЕ'])
    if summa == 9:
        count.add(s)
print(len(count))
'''
# Ответ: 3240


# № 9363 Джобс 10.06.23 (Уровень: Средний)
# Семён составляет слова путем перестановки букв в слове ХОЧУНАБЮДЖЕТ.
# Сколько слов может составить Семён, если известно, что слова с пятью подряд идущими гласными буквами запрещены?
'''
from itertools import permutations
count = 0
for v in permutations('ХОЧУНАБЮДЖЕТ'):
    s = ''.join(v)
    s = s.replace('О', 'А').replace('Ю', 'А').replace('Е', 'А').replace('У', 'А')
    if 'ААААА' not in s:
        count += 1
        print(count)
'''
# Показать ответ: 474_163_200


#
# № 8364 Danov2305 (Уровень: Средний)
# (А.Богданов) Все шестибуквенные слова, составленные из букв слова КРАТЕР,
# записаны в алфавитном порядке и пронумерованы начиная с 1.
# Буквы могут входить в слово много раз или не входить вовсе.
# Сколько слов будет расположено между словами КАРЕТА и РАКЕТА?

# Показать ответ: 2999


# № 12098 Новогодний вариант (Уровень: Базовый)
# (М. Попков) Определите количество строк таблицы, для чисел которых выполнены все условия:
# – в строке есть одно число, которое повторяется ровно 3 раза;
# – повторяющееся число нечетно;
# – неповторяющееся число четно.
# В ответе запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    # if len(set(M)) == 2 and any(M.count(x) == 3 for x in M):  # [784, 782, 784, 784]
    if len([x for x in M if M.count(x) == 3]) == 3:
        copied = (sum(M) - sum(set(M))) / 2  # [211, 5, 211, 211]
        onli = sum(M) - copied * 3
        if copied % 2 != 0:
            if onli % 2 == 0:
                count += 1
print(count)


count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    A = [x for x in M if M.count(x) == 3]
    if len(A) == 3:
        copied = A[0]  # [211, 5, 211, 211]
        onli = sum(M) - copied * 3
        if copied % 2 != 0:
            if onli % 2 == 0:
                count += 1
print(count)
'''
# Показать ответ: 11


#
# № 11228 (Уровень: Сложный)
# (М. Ишимов) Откройте файл электронной таблицы, содержащей в каждой строке семь натуральных чисел.
# Определите сумму чисел всех строк таблицы, для которых выполнены оба условия:
# – в строке есть только одно число,которое повторяется трижды,и только два числа,каждое из которых повторяется дважды;
# – четыре наименьших числа строки можно разбить на две пары чисел с нечётными суммами.
# В ответе запишите полученное число.
'''
from itertools import permutations
summa = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    A = [M.count(x) for x in M if M.count(x) <= 3]
    if 2 in A and 3 in A and 1 not in A:
        if any(sum(p[:2]) % 2 != 0 and sum(p[2:]) % 2 != 0 for p in permutations(M[:4])):
            print(M)
            summa += sum(M)  
print(summa)
'''
# Ответ: 4675


# № 10716 (Уровень: Средний)
# Операнды арифметического выражения записаны в системе счисления с основанием

# В записи чисел переменной x обозначена неизвестная цифра из алфавита 150-ричной системы счисления.
# Определите наибольшее значение x, при котором значение данного арифметического выражения кратно 149.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 149
# и укажите его в ответе в десятичной системе счисления. Основание системы счисления указывать не нужно.
'''
def back_convert(M: list, system: int):
    result = 0
    M.reverse()
    for i in range(0, len(M)):
        result += M[i] * system ** i
    return result


for x in range(150):
    A = back_convert([5, 1, x, 2, 9], 150)
    B = back_convert([x, 0, 2, 3], 150)
    if (A + B) % 149 == 0:
        print((A + B) // 149)
'''
# Показать ответ: 20157588


# № 9918 (Уровень: Сложный)
# (С. Чайкин) Дано арифметическое выражение:

#   В записи чисел переменными x и y обозначены неизвестные цифры из допустимого
#   алфавита для указанных систем счисления.
# Определите, сколько различных значений может принимать выражение при всех возможных x и y.
'''
def back_convert(M: list, system: int):
    result = 0
    M.reverse()
    for i in range(0, len(M)):
        result += M[i] * system ** i
    return result


R = []
for x in range(10, 67):
    for y in range(x):
        A = back_convert([7, 3, x, 1, y], 67)
        B = back_convert([4, 9, y, 6], x)
        R.append(A + B)
print(len(set(R)))
'''
# Показать ответ: 2166


# № 5486 (Уровень: Средний)
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Если сумма цифр десятичной записи заданного числа нечётна,
# то в конец двоичной записи дописывается 1, если чётна – 0.
# 3–4. Пункт 2 повторяется для вновь полученных чисел ещё два раза.
# 5. Результатом работы алгоритма становится десятичная запись полученного числа R.

# Определите наименьшее возможное значение R > 2054, которое может получиться в результате работы алгоритма.
'''
R = []
for n in range(1, 10000):
    s = bin(n)[2:]
    for _ in range(3):
        summa = sum([int(x) for x in str(int(s, 2))])  # сумма цифр десятичной записи заданного числа
        if summa % 2 != 0:
            s += '1'
        else:
            s += '0'
    r = int(s, 2)
    if r > 2054:
        R.append(r)
print(min(R))
'''
# Ответ: 2057


# № 11234 (Уровень: Базовый)
# (М. Ишимов) Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится
# без остатка на натуральное число m».
# Пусть на числовой прямой дан отрезок B = [120; 130].
# Для какого наименьшего натурального числа А формула истинна (т.е. принимает значение 1)
# при любом натуральном значении переменной х?
'''
def F(x, A):
    B = 120 <= x <= 130
    return (B <= (x % 7 != 0)) or (A > 2*x)

for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 10000)):
        print(A)
        break
'''
# Ответ: 253

#
# № 11235 (Уровень: Базовый)
# (М. Ишимов) Алгоритм вычисления значения функции
# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)= n, если n≤6,
# F(n)= 2n + 3 + F(n−1), если n>6.
# Чему равно значение выражения F(6188)−F(6185)?

# F(6188) = 2*6188 + 3 + F(6187)
# F(6187) = 2*6187 + 3 + F(6186)
# F(6186) = 2*6186 + 3 + F(6185) − F(6185)
'''
print(2*6188 + 3 + 2*6187 + 3 + 2*6186 + 3)
'''
# Ответ: 37131


# № 11236 (Уровень: Средний)
# (М. Ишимов) В файле содержится последовательность целых чисел, каждое из которых по модулю не превышает 100 000.
# Определите количество троек элементов последовательности,
# в которых ровно два из трёх элементов больше квадрата минимального двузначного элемента последовательности,
# а произведение модулей элементов тройки кратно максимальному четырёхзначному элементу последовательности,
# который оканчивается на 1. Гарантируется, что в последовательности есть хотя бы одно четырёхзначное число,
# которое оканчивается на 1. В ответе запишите количество найденных троек чисел, затем максимальную
# из сумм модулей элементов таких троек.
# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
A = min([x for x in M if len(str(abs(x))) == 2]) ** 2  # квадрата минимального двузначного элемента последовательности
B = max([x for x in M if len(str(abs(x))) == 4 and str(x)[-1] == '1'])  # максимальному четырёхзначному элементу последовательности, который оканчивается на 1
count = 0
maxi = 0
for i in range(0, len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if len([k for k in [x, y, z] if k > A]) == 2:
        if abs(x * y * z) % B == 0:
            count += 1
            maxi = max(maxi, abs(x) + abs(y) + abs(z))
print(count, maxi)
'''
# Ответ: 1 118534

# endregion Урок: ******************************************************************


# GOAL = [1.1, 2.1, 4.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
