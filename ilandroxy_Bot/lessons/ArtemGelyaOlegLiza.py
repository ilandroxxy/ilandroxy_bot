
# region –î–æ–º–∞—à–∫–∞: ******************************************************************

# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************


# region –£—Ä–æ–∫: ******************************************************************

# –ö–ï–ì–≠ ‚Ññ 6210 (–£—Ä–æ–≤–µ–Ω—å: –°—Ä–µ–¥–Ω–∏–π) üå∂
#
# (–ù. –°–∞—Ñ—Ä–æ–Ω–æ–≤) –ù–∞–∑–æ–≤—ë–º –º–∞—Å–∫–æ–π —á–∏—Å–ª–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã:
#
# —Å–∏–º–≤–æ–ª ¬´?¬ª –æ–∑–Ω–∞—á–∞–µ—Ç —Ä–æ–≤–Ω–æ –æ–¥–Ω—É –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É;
# —Å–∏–º–≤–æ–ª ¬´*¬ª –æ–∑–Ω–∞—á–∞–µ—Ç –ª—é–±—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã;
# –≤ —Ç–æ–º —á–∏—Å–ª–µ ¬´*¬ª –º–æ–∂–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å –∏ –ø—É—Å—Ç—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.

# –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞, –Ω–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∏–µ 10**7, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—Å–µ —É—Å–ª–æ–≤–∏—è:
#
# —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –º–∞—Å–∫–µ *2?2*;
# —è–≤–ª—è—é—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞–º–∏;
# –¥–µ–ª—è—Ç—Å—è –Ω–∞ —á–∏—Å–ª–æ 53 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞;
# –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ª–∏—Ç–µ–ª–µ–π –±–æ–ª—å—à–µ 30.
# –í –æ—Ç–≤–µ—Ç–µ –∑–∞–ø–∏—à–∏—Ç–µ –≤ –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ —Ç–∞–±–ª–∏—Ü—ã –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è,
# –∞ –≤–æ –≤—Ç–æ—Ä–æ–º —Å—Ç–æ–ª–±—Ü–µ ‚Äî —Å—É–º–º—É –¥–µ–ª–∏—Ç–µ–ª–µ–π.
'''
from fnmatch import *

def divisors(num):
    div = []
    for j in range(1, int(num**0.5)+1):
        if num % j == 0:
            div += [j, num // j]
    return sorted(set(div))


for x in range(53, 10**7, 53):
    if fnmatch(str(x), '*2?2*'):
        if str(x) == str(x)[::-1]:
            div = divisors(x)
            if len(div) > 30:
                print(x, sum(div))
'''


# –ö–ï–ì–≠ ‚Ññ 9737 –û—Å–Ω–æ–≤–Ω–∞—è –≤–æ–ª–Ω–∞ 19.06.23 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
# –í –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –ß–µ—Ä–µ–ø–∞—Ö–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç,
# –µ—ë –≥–æ–ª–æ–≤–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–¥–æ–ª—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å–∏ –æ—Ä–¥–∏–Ω–∞—Ç, —Ö–≤–æ—Å—Ç –æ–ø—É—â–µ–Ω.
# –ß–µ—Ä–µ–ø–∞—Ö–µ –±—ã–ª –¥–∞–Ω –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º:
#
# –ü–æ–≤—Ç–æ—Ä–∏ 2 [–í–ø–µ—Ä—ë–¥ 10 –ù–∞–ø—Ä–∞–≤–æ 90 –í–ø–µ—Ä—ë–¥ 18 –ù–∞–ø—Ä–∞–≤–æ 90]
# –ü–æ–¥–Ω—è—Ç—å —Ö–≤–æ—Å—Ç
# –í–ø–µ—Ä—ë–¥ 5 –ù–∞–ø—Ä–∞–≤–æ 90 –í–ø–µ—Ä—ë–¥ 7 –ù–∞–ª–µ–≤–æ 90
# –û–ø—É—Å—Ç–∏—Ç—å —Ö–≤–æ—Å—Ç
# –ü–æ–≤—Ç–æ—Ä–∏ 2 [–í–ø–µ—Ä—ë–¥ 10 –ù–∞–ø—Ä–∞–≤–æ 90 –í–ø–µ—Ä—ë–¥ 7 –ù–∞–ø—Ä–∞–≤–æ 90]
#
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Ç–æ—á–µ–∫ —Å —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –±—É–¥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ñ–∏–≥—É—Ä, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö
# –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –ª–∏–Ω–∏—è–º–∏, –≤–∫–ª—é—á–∞—è —Ç–æ—á–∫–∏ –Ω–∞ –ª–∏–Ω–∏—è—Ö.

import turtle as t
t.tracer(0)
t.left(90)
m = 30

for i in range(2):
    t.forward(10 * m)
    t.right(90)
    t.forward(18 * m)
    t.right(90)

t.up()

t.forward(5 * m)
t.right(90)
t.forward(7 * m)
t.left(90)

t.down()

t.color('green')

for i in range(2):
    t.forward(10 * m)
    t.right(90)
    t.forward(7 * m)
    t.right(90)

t.up()
for x in range(-50, 50):
    for y in range(-50, 50):
        t.goto(x * m, y * m)
        t.dot(2, 'red')

t.update()
t.done()

'''
import turtle as t
t.tracer(0)
t.left(90)
m = 30

"""
–¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Å–µ–≤–¥–æ–∫–æ–¥
"""

t.up()
for x in range(-50, 50):
    for y in range(-50, 50):
        t.goto(x * m, y * m)
        t.dot(2, 'red')

t.update()
t.done()
'''


# endregion –£—Ä–æ–∫: ******************************************************************


# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************

# todo –¢–∏–ø 24 ‚Ññ55641
'''
f = open('24.txt').readlines()–ø—à
li = []
for j in f:
    st = ''
    for x, y in zip(j, j[1:]):
        if x == 'T':
            st += y
    maxi = max(st.count(i) for i in set(st))
    for s in set(st):
        if st.count(s) == maxi:
            li += [s]
print(max(li.count(l) for l in set(li)))
'''

# todo –ó–∞–¥–∞–Ω–∏–µ 13
'''
from ipaddress import *

net = ip_network(f'222.63.131.128/255.255.255.192', 0)
print(net)
'''

# todo –†–∞–∑–æ–±—Ä–∞—Ç—å –∑–∞–¥–∞—á–∫—É https://stepik.org/lesson/1231755/step/9?unit=1245338
# (–ê.–ë–æ–≥–¥–∞–Ω–æ–≤) –í —Ñ–∞–π–ª–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.
# –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è –≤—Å–µ –ø–∞—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç —á—ë—Ç–Ω—ã–π,
# –∏ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –ø–∞—Ä—ã –µ—Å—Ç—å —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –∏ –æ–Ω –∫—Ä–∞—Ç–µ–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É
# —á–µ—Ç–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
# –ù–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–∫–∏—Ö –ø–∞—Ä –∏ –ø–∞—Ä—É —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º–æ–π.
'''
M = [int(i) for i in open('17.txt')]
n = min([i for i in M if i % 2 == 0])  # –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —á–µ—Ç–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
B = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        z = M[M.index(x) + 1]
        if M.index(y) - M.index(x) == 2:
            if (x % 2 == 0) != (y % 2 == 0):
                if z % n == 0:
                    B.append(x + y)
print(len(B), min(B))
'''
#  0  1  2  3  4
# [4, 5, 6, 7, 8]

'''
M = [int(i) for i in open('17.txt')]
n = min([i for i in M if i % 2 == 0])  # –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —á–µ—Ç–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
count = 0
mini = 9999999
r = ''
for i in range(len(M) - 2):
    x, y, z = M[i], M[i+1], M[i+2]
    if (x % 2 == 0) != (z % 2 == 0):
        if y % n == 0:
            count += 1
            if mini > x + z:
                mini = x + z
                r = [x, y]
print(count, r)
'''


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# GOAL = [1.1, 2.1, 4.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
