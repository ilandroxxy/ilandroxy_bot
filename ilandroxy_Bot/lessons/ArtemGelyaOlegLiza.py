
# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# ! ФОРМУЛА: IP-адрес узла & Маска = IP-адрес сети
# ! МАСКА ИМЕЕТ ВИД:  1111...000 and len(маски) == 32

# Тип 13 №5623
# По заданным IP-адресу узла и маске определите адрес сети.
# IP-адрес узла: 64.128.194.208
# Маска: 255.255.224.0

# Решение:
'''
from ipaddress import *
net = ip_network('64.128.194.208/255.255.224.0', 0)
print(net)  # 64.128.192.0/19, 19 - кол-во единиц в маске
'''

# print(bin(255)[2:], bin(255)[2:], bin(224)[2:])  # 19 единиц
# print((bin(255)[2:] + bin(255)[2:] + bin(224)[2:]).count('1'))  # 19

# 64.128.192.0
# Ответ: BCDA


# Тип 13 №14227
# Для узла с IP-адресом 93.138.96.47 адрес сети равен 93.138.64.0.
# Чему равен третий слева байт маски? Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'93.138.96.47/{mask}', 0)
    print(net, net.netmask)
    # 93.138.64.0/18 255.255.192.0
'''
# Ответ: 192


# Тип 13 №10413
# Для узла с IP-адресом 111.81.200.27 адрес сети равен 111.81.192.0.
# Чему равно наибольшее возможное значение третьего слева байта маски? Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'111.81.200.27/{mask}', 0)
    print(net, net.netmask)
    
    # 111.81.192.0/18 255.255.192.0
    # 111.81.192.0/19 255.255.224.0
    # 111.81.192.0/20 255.255.240.0
'''
# Ответ: 240


# Тип 13 №26984
# Для узла с IP-адресом 117.191.208.37 адрес сети равен 117.191.192.0.
# Чему равно наименьшее возможное значение третьего слева байта маски сети?
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'117.191.208.37/{mask}', 0)
    print(net, net.netmask)
    
    # 117.191.192.0/18 255.255.192.0
    # 117.191.192.0/19 255.255.224.0
'''
# Ответ: 192


# Тип 13 №60255
# Сеть задана IP-адресом 192.168.32.160 и маской сети 255.255.255.240.
# Сколько в этой сети IP-адресов, для которых сумма единиц в двоичной записи IP-адреса чётна?
'''
from ipaddress import *
net = ip_network('192.168.32.160/255.255.255.240', 0)

cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 2 == 0:
        cnt += 1
print(cnt)
'''
# Ответ: 8


# Задание 13 - done
'''
from ipaddress import *
net = ip_network('222.63.131.128/255.255.255.192', 0)

cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 5 == 0:
        cnt += 1
print(cnt)
'''
# Ответ: 15


# Тип 13 №3541
# Для некоторой подсети используется маска 255.255.248.0.
# Сколько различных адресов компьютеров допускает эта маска?
# Примечание. На практике для адресации компьютеров не используются два адреса: адрес сети и широковещательный адрес.
'''
from ipaddress import *
net = ip_network('0.0.0.0/255.255.248.0', 0)
cnt = 0
for ip in net:
    print(ip)
    cnt += 1
print(cnt)  # 2048 − 2 = 2046

print(net.num_addresses - 2)
'''
# Ответ: 2046


# № 10579 (Уровень: Средний)
# Сеть задана IP-адресом 192.168.240.0 и маской сети 255.255.255.0
# Сколько в этой сети IP-адресов, для которых количество единиц и нулей в двоичной записи IP-адреса одинаково?
'''
from ipaddress import *
net = ip_network('192.168.240.0/255.255.255.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') == s.count('0'):
        cnt += 1
print(cnt)
'''
# Ответ: 8


# Тип 13 №11308
# Для узла с IP-адресом 203.155.196.98 адрес сети равен 203.155.192.0.
# Найдите наибольшее возможное количество единиц в двоичной записи маски подсети.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'203.155.196.98/{mask}', 0)
    print(net)

    # 203.155.192.0/18
    # 203.155.192.0/19
    # 203.155.192.0/20
    # 203.155.192.0/21
'''
# Ответ: 21


# Тип 13 №27381
# Узлы с IP-адресами 84.77.95.123 и 84.77.96.123 находятся в разных сетях, маски которых одинаковы.
# Укажите наименьшее возможное значение третьего слева байта этой маски. Ответ запишите в виде десятичного числа
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'84.77.95.123/{mask}', 0)
    net2 = ip_network(f'84.77.96.123/{mask}', 0)
    if net1 != net2:
        print(net1.netmask)
        # 255.255.224.0
        # 255.255.240.0
        # 255.255.248.0
        # 255.255.252.0
'''
# Ответ: 224


# Тип 13 №18560
# Узлы с IP-адресами 98.162.78.139 и 98.162.78.154 находятся в разных сетях.
# Чему равно наименьшее количество возможных единиц в масках этих сетей?
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'98.162.78.139/{mask}', 0)
    net2 = ip_network(f'98.162.78.154/{mask}', 0)
    if net1 != net2:
        print(net1)
        # 98.162.78.128/28
        # 98.162.78.136/29
        # 98.162.78.136/30
        # 98.162.78.138/31
        # 98.162.78.139/32
'''
# Ответ: 28


# Тип 13 №18624
# Узлы с IP-адресами 98.162.78.139 и 98.162.78.154 находятся в одной сети.
# Чему равно наибольшее количество возможных единиц в маске этой сети?
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'98.162.78.139/{mask}', 0)
    net2 = ip_network(f'98.162.78.154/{mask}', 0)
    if net1 == net2:
        print(net1)
        # 98.162.78.0/23
        # 98.162.78.0/24
        # 98.162.78.128/25
        # 98.162.78.128/26
        # 98.162.78.128/27
'''
# Ответ: 27


# № 10578 (Уровень: Базовый)
# Два узла, находящиеся в разных подсетях, имеют IP-адреса 10.96.180.231 и 10.96.140.118.
# В масках обеих подсетей одинаковое количество единиц.
# Найдите наибольшее возможное количество нулей в двоичной записи маски подсети.
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'10.96.180.231/{mask}', 0)
    net2 = ip_network(f'10.96.140.118/{mask}', 0)
    if net1 != net2:
        print(net1, 32-mask)
'''
# Ответ: 13


# Тип 13 №16888
# Для узла с IP-адресом 98.162.71.94 адрес сети равен 98.162.71.64.
# Чему равно наименьшее количество возможных адресов в этой сети?
'''
from ipaddress import *
for mask in range(1, 32+1):
    net = ip_network(f'98.162.71.94/{mask}', 0)
    print(net, net.num_addresses)  # net.num_addresses - Количество возможных адресов
    # 98.162.71.64/26 64
    # 98.162.71.64/27 32
'''
# Ответ: 32

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# todo Тип 24 №55641
'''
f = open('24.txt').readlines()пш
li = []
for j in f:
    st = ''
    for x, y in zip(j, j[1:]):
        if x == 'T':
            st += y
    maxi = max(st.count(i) for i in set(st))
    for s in set(st):
        if st.count(s) == maxi:
            li += [s]
print(max(li.count(l) for l in set(li)))
'''


# todo - Разобрать Тип 13 №64943
# Узлы с IP -адресами 202.3.20.24 и 202.3.27.11 находятся в одной сети.
# Укажите наименьшее возможное количество принадлежащих этой сети IP-адресов,
# в двоичной записи которых чётное число единиц.
'''
from ipaddress import *
mini = 10**9
for mask in range(32+1):
    cnt = 0
    net1 = ip_network(f'202.3.20.24/{mask}', 0)
    net2 = ip_network(f'202.3.27.11/{mask}', 0)
    if net1 == net2:
        for ip in net1:
            s = f'{ip:b}'
            if s.count('1') % 2 == 0:
                cnt += 1
    maxi = max(maxi, cnt)
    print(maxi)
'''
# Ответ: 2048


# todo Разобрать задачку https://stepik.org/lesson/1231755/step/9?unit=1245338
# (А.Богданов) В файле содержится последовательность натуральных чисел.
# Рассматриваются все пары элементов, в которых только один элемент чётный,
# и между элементами пары есть ровно один элемент и он кратен минимальному
# четному элементу из всех элементов последовательности.
# Найти количество таких пар и пару с минимальной суммой.
'''
M = [int(i) for i in open('17.txt')]
n = min([i for i in M if i % 2 == 0])  # минимальному четному элементу из всех элементов последовательности
B = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        z = M[M.index(x) + 1]
        if M.index(y) - M.index(x) == 2:
            if (x % 2 == 0) != (y % 2 == 0):
                if z % n == 0:
                    B.append(x + y)
print(len(B), min(B))
'''
#  0  1  2  3  4
# [4, 5, 6, 7, 8]

'''
M = [int(i) for i in open('17.txt')]
n = min([i for i in M if i % 2 == 0])  # минимальному четному элементу из всех элементов последовательности
count = 0
mini = 9999999
r = ''
for i in range(len(M) - 2):
    x, y, z = M[i], M[i+1], M[i+2]
    if (x % 2 == 0) != (z % 2 == 0):
        if y % n == 0:
            count += 1
            if mini > x + z:
                mini = x + z
                r = [x, y]
print(count, r)
'''


# endregion Разобрать: *************************************************************


# GOAL = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# КЕГЭ  = []
# на следующем уроке:
