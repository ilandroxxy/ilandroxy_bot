
# region Домашка: ******************************************************************

# КЕГЭ № 5268 (Уровень: Средний) (С. Якунин)
# Дмитрий составляет слова, переставляя буквы в слове АМФИБРАХИЙ.
# Сколько различных слов, содержащих ИИФАА или ААФИИ, может составить Дмитрий?

'''
from itertools import permutations
my_set = set()
for x in permutations('АМФИБРАХИЙ'):
    slovo = ''.join(x)
    if 'ИИФАА' in slovo or 'ААФИИ' in slovo:
        my_set.add(slovo)
print(len(my_set))
'''
'''
from itertools import permutations
words = permutations('АМФИБРАХИЙ')
k = set()
for w in words:
    word = ''.join(w)
    if 'ИИФАА' in word or 'ААФИИ' in word:
        k.add(word)
print(len(k))
'''


# print('02 20 04 40 06 60 24 42 26 62 46 64 13 31 15 51 17 71 35 53 37 73 57 75'.split())

# # КЕГЭ № 4320 (Уровень: Средний)
# # Сколько существует восьмеричных шестизначных чисел, в которых все цифры различны,
# # никакие две чётные или две нечётные цифры не стоят рядом и десятичная запись которых делится на 5?
'''
from itertools import permutations
count = 0
for x in permutations('01234567', 6):
    num = ''.join(x)
    if int(num, 8) % 5 == 0:
        if all(pair not in num for pair in '02 20 04 40 06 60 24 42 26 62 46 64 13 31 15 51 17 71 35 53 37 73 57 75'.split()):
            if num[0] != '0':
                count += 1
print(count)



from itertools import permutations
PAIRS = []
for x in permutations('01234567', 2):
    if (x[0] in '0246' and x[1] in '0246') or (x[0] in '1357' and x[1] in '1357'):
        PAIRS.append(''.join(x))

count = 0
for x in permutations('01234567', 6):
    num = ''.join(x)
    if int(num, 8) % 5 == 0:
        if all(pair not in num for pair in PAIRS):
            if num[0] != '0':
                count += 1
print(count)
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# КЕГЭ № 8585 (Уровень: Базовый) (Л. Шастин)
# 1. Вычти сумму всех цифр числа
# 2. Найди целую часть от деления на 2
# 3. Вычти 1

# Сколько существует программ, для которых при исходном числе 40
# результатом является число 10, и при этом траектория вычислений содержит число 25?
'''
def my_summ(number: int):  # 12345
    # print([int(x) for x in str(number)])  # [1, 2, 3, 4, 5]
    return sum([int(x) for x in str(number)])  # 15


def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a - my_summ(a), b) + F(a//2, b) + F(a-1, b)


print(F(40, 25) * F(25, 10))
'''

# Тип 15 №34517
# Для какого наибольшего целого числа А формула
# х&А != 0 → (x&10 = 0 → х&3 != 0)
# тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении переменной x)?
'''
def F(x, A):
    # return (x & A != 0) <= ((x & 10 == 0) <= (x & 3 != 0))
    B = x & A != 0
    C = x & 10 == 0
    D = x & 3 != 0
    return B <= (C <= D)


R = []
for A in range(-100, 100):
    flag = True
    for x in range(0, 1000):
        if not F(x, A):
            flag = False
            break
    if flag:
        R.append(A)
        
print(max(R))  # 11
'''

'''
#  Вариант 2
def F(x, A):
    return (x & A != 0) <= ((x & 10 == 0) <= (x & 3 != 0))


R = []
for A in range(-100, 100):
    if all(F(x, A) for x in range(0, 10000)):
        R.append(A)

print(max(R))  # 11


# Вариант 3
print(max([A for A in range(-100, 100) if all(((x & A != 0) <= ((x & 10 == 0) <= (x & 3 != 0))) for x in range(0, 1000))]))
'''

# Тип 15 №27547
# Для какого наименьшего целого неотрицательного числа А выражение
# (3x + 5y < A) ∨ (x ≥ y) ∨ (y > 8)
# тождественно истинно, т. е. принимает значение 1 при любых целых неотрицательных x и y?
'''
def F(x, y, A):
    return (3*x + 5*y < A) or (x >= y) or (y > 8)

for A in range(0, 1000):
    if all(F(x, y, A) for x in range(0, 100) for y in range(0, 100)):
        print(A)
        break
'''
# Ответ: 62


# Тип 15 №27412
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
#
# Для какого наибольшего натурального числа А формула
# ¬ДЕЛ(x, А) → (ДЕЛ(x, 6) → ¬ДЕЛ(x, 9))
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?
'''
def F(x, A):
    return (x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))

for A in range(1000, 0, -1):
    if all(F(x, A) for x in range(1, 10000)):
        print(A)
        break
'''
# Ответ: 18


# Тип 15 №8666
# На числовой прямой даны два отрезка: P = [25; 50] и Q = [32; 47].
# Укажите наибольшую возможную длину промежутка A, для которого формула
# (¬ (x A) → (x  P)) → ((x  A) → (x  Q))
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
'''
def F(a1, a2, x):
    P = 25 <= x <= 50
    Q = 32 <= x <= 47
    A = a1 <= x <= a2
    return ((not A) <= P) <= (A <= Q)


R = []
M = [x / 4 for x in range(20 * 4, 55 * 4)]
for a1 in M:
    for a2 in M:
        if all(F(a1, a2, x) for x in M):
            R.append(a2 - a1)
print(max(R))
'''

# Тип 15 №11119
# На числовой прямой даны два отрезка: P = [20, 50] и Q = [30,65].
# Отрезок A таков, что формул
# ¬(x ∈ A) → ((x ∈ P) →¬ (x ∈ Q))
# истинна при любом значении переменной x. Какова наименьшая возможная длина отрезка A?
'''
def F(a1, a2, x):
    P = 20 <= x <= 50
    Q = 30 <= x <= 65
    A = a1 <= x <= a2
    return (not A) <= (P <= (not Q))


R = []
M = [x / 4 for x in range(15 * 4, 70 * 4)]
for a1 in M:
    for a2 in M:
        if all(F(a1, a2, x) for x in M):
            R.append(a2 - a1)
print(min(R))
'''

# Тип 15 №34541
# На числовой прямой даны два отрезка: Р = [3, 38] и Q = [21, 57].
# Какова наибольшая возможная длина интервала A, что логическое выражение
# ((х ∈ Q) → (х ∈ Р)) → ¬(х ∈ A)
# тождественно истинно, то есть принимает значение 1 при любом значении переменной х.
'''
def F(a1, a2, x):
    P = 3 <= x <= 38
    Q = 21 <= x <= 57
    A = a1 <= x <= a2
    return (Q <= P) <= (not A)

R = []
M = [x / 5 for x in range(1 * 5, 65 * 5)]
for a1 in M:
    for a2 in M:
        if all(F(a1, a2, x) for x in M):
            R.append(a2 - a1)
print(max(R))  # 18 -> 18.75  # Ответ: 19
'''

# Тип 9 №59780
# Откройте файл электронной таблицы, содержащей в каждой строке семь натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# — среди семи чисел совпадают ровно четыре числа;
# — среднее значение повторяющихся чисел строго меньше чем среднее арифметическое ВСЕХ чисел строки.
# В ответе запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(set(M)) == 4 and any(M.count(x) == 4 for x in M):  # — среди семи чисел совпадают ровно четыре числа;
        copied = (sum(M) - sum(set(M))) / 3  # среднее значение повторяющихся чисел
        if copied < (sum(M) / len(M)):  # строго меньше чем среднее арифметическое ВСЕХ чисел строки
            count += 1
print(count)  # Ответ: 10
'''


'''
file = open('9.txt', 'r')
print(file)  # <_io.TextIOWrapper name='9.txt' mode='r' encoding='UTF-8'>

print(file.read())  # выводит все содержимое файла
print(file.readline())  # выводит только первую строку файла
print(file.readlines())  # выводит все строки в виде списка строк

file.close()
'''

'''
with open('9.txt', 'r') as file:
    print(file)  # <_io.TextIOWrapper name='9.txt' mode='r' encoding='UTF-8'>

    print(file.read())  # выводит все содержимое файла
    print(file.readline())  # выводит только первую строку файла
    print(file.readlines())  # выводит все строки в виде списка строк
'''


# Тип 9 №51978
# В каждой строке электронной таблицы записаны пять целых положительных чисел.
# Определите, сколько в таблице строк, для которых выполнены следующие условия:
# — все числа в строке различны;
# — нечётных чисел больше, чем чётных;
# — сумма нечётных чисел меньше суммы чётных.
#
# В ответе запишите число — количество строк, для которых выполнены эти условия.
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    # if all(M.count(x) == 1 for x in M):
    if len(M) == len(set(M)):
        chet = [x for x in M if x % 2 == 0]
        nechet = [x for x in M if x % 2 != 0]
        if len(nechet) > len(chet):
            if sum(nechet) < sum(chet):
                count += 1
print(count)  # Ответ: 303
'''

# Тип 9 №58517
# В каждой строке электронной таблицы записаны шесть натуральных чисел.
#
# Определите количество строк таблицы, содержащих числа, для которых одновременно выполнены все следующие условия:
# — минимальное число встречается в строке ровно один раз;
# — хотя бы одно число в строке повторяется более одного раза;
# — максимальное число в строке превышает среднее арифметическое
# остальных пяти чисел этой строки более чем в три раза.
#
# В ответе запишите число — количество строк, для которых выполнены эти условия.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    # if M.count(min(M)) == 1:
    if M.count(M[0]) == 1:
        if any(M.count(x) > 1 for x in M):
            print(M, M[-1], M[:-1])
            if M[-1] > (sum(M[:-1]) / len(M[:-1])) * 3:
                count += 1
print(count)  
'''

# Ответ: 49

# todo Продолжить рассматривать 9-е номера (задачи на температуру).


# endregion Урок: ******************************************************************


# GOAL = [2.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
