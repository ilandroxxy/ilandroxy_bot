
# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Файл содержит последовательность натуральных чисел, не превышающих 20 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, для которых выполняются следующие условия:
# – ровно одно число в паре четырёхзначное;
# – сумма квадратов элементов пары без остатка делится на наименьшее в
# последовательности трёхзначное число, запись которого заканчивается цифрой 3.
#
# В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную из сумм квадратов элементов таких пар.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if len(str(abs(x))) == 3 and abs(x) % 10 == 3]
print(A)
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (1000 <= abs(x) <= 9999) != (len(str(abs(y))) == 4):
        if (x**2 + y**2) % min(A) == 0:
            R.append(x**2 + y**2)
print(len(R), max(R))
'''
import readline

# (Грачев Н.) Текстовый файл состоит из символов D, R и цифр 1, 8.
# Определите максимальное количество идущих подряд троек символов вида двузначное число + буква в прилагаемом файле.
# Для выполнения этого задания следует написать программу.
'''
# 18D 18R 81D 81R
s = open('24.txt').readline()
s = s.replace('1', '8').replace('R', 'D')
print(s)
s = s.replace('88D', '*').replace('D', ' ').replace('8', ' ')
print(max([len(x) for x in s.split()]))


s = open('24.txt').readline()
s = s.replace('1', '8').replace('R', 'D')
print(s)
# Находим строку через ctrl + F
s = '88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D88D'
print(len(s) / 3)
'''

# todo Закинуть разбор на канал
# (В. Рыбальченко) В файле 9.xlsx в каждой строке содержится 5 целых чисел.
# Необходимо посчитать количество строк, в которых выполняется оба условия:
# – Ровно три числа заканчиваются цифрой 3;
# – Квадрат суммы положительных чисел меньше квадрата суммы отрицательных чисел.
'''
print(-83 % 10)  # 7

cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len([x for x in M if abs(x) % 10 == 3]) == 3:
        A = [x for x in M if x > 0]
        B = [x for x in M if x < 0]
        if sum(A) ** 2 < sum(B) ** 2:
            cnt += 1
print(cnt)
'''
# Ответ: 23

# в последовательности находится не более одной гласной (AEIOUY).
# 'xxxxxxAxxxxxxAxxxxxAxxxxxxAxxxxxx'
# s = 'xxxxxxAxxxxxxAxxxxxAxxxxxxAxxxxxx'.split('A')
# ['xxxxxx', 'xxxxxx', 'xxxxx', 'xxxxxx', 'xxxxxx']
# 'xxxxxxAxxxxxx'
# 'xxxxxxAxxxxx'
# 'xxxxxAxxxxxx'
# 'xxxxxxAxxxxxx'

# Текстовый файл состоит из заглавных букв латинского алфавита.
# Определите последовательность наибольшей длины в прилагаемом файле,
# для которой выполняются два условия:
# символы идут в алфавитном порядке,
# в последовательности находится не более одной гласной (AEIOUY).
'''
s = open('24.txt').readline()
for a in 'AEIOUY':
    s = s.replace(a, '*')
s = s.split('*')
maxi = 0
for i in range(len(s)-1):
    x, y = s[i], s[i+1]
    if maxi < len(x + y) + 1:
        if list(x+y) == sorted(x+y):
            maxi = len(x + y) + 1
print(maxi)
'''


# (М. Шагитов) Дана последовательность целых чисел, записанная в файле
# и содержащая целые числа в диапазоне от -10000 до 10000.
# Необходимо определить количество пар соседних чисел, где только одно
# из чисел отрицательно, а их сумма положительна и делится на наименьшее
# по модулю число в последовательности без остатка.
# В качестве ответа требуется указать число таких пар и максимальную сумму элементов среди них.
'''
M = [int(x) for x in open('17.txt')]
A = [abs(x) for x in M]
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x < 0) != (y < 0):
        if (x + y) > 0 and (x + y) % min(A) == 0:
            R.append(x + y)
print(len(R), max(R))
'''


# todo Добавить разбор на канал
# (Е. Фокин) Текстовый файл состоит не более чем из 10**6 символов и
# содержит только буквы латинского алфавита и десятичные цифры.
# Найдите максимальную длину подстроки, ограниченной с двух сторон одним и
# тем же символом и не содержащей этого символа между ними.
# В ответе укажите длину найденной строки, включая граничные символы.
# Например, для строки ABCDABECD ответом будет 6.
'''
name = 'Даша'
print(f'Привет, {name}!')
print('Привет,', name, '!')
'''
'''
from string import *
alphabet = digits + ascii_uppercase
print(alphabet)  # 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ

s = open('24.txt').readline()
maxi = 0
for a in alphabet:
    s = s.replace(f'{a}', f'{a} {a}')
    if maxi < max([len(x) for x in s.split()]):
        maxi = max([len(x) for x in s.split()])
        print(a, maxi)
    s = s.replace(f'{a} {a}', f'{a}')
'''
# 9747


# todo Разобрать задачку https://stepik.org/lesson/1231755/step/9?unit=1245338
# (А.Богданов) В файле содержится последовательность натуральных чисел.
# Рассматриваются все пары элементов, в которых только один элемент чётный,
# и между элементами пары есть ровно один элемент и он кратен минимальному
# четному элементу из всех элементов последовательности.
# Найти количество таких пар и пару с минимальной суммой.
'''
M = [int(i) for i in open('17.txt')]
n = min([i for i in M if i % 2 == 0])  # минимальному четному элементу из всех элементов последовательности
B = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        z = M[M.index(x) + 1]
        if M.index(y) - M.index(x) == 2:
            if (x % 2 == 0) != (y % 2 == 0):
                if z % n == 0:
                    B.append(x + y)
print(len(B), min(B))
'''
#  0  1  2  3  4
# [4, 5, 6, 7, 8]

'''
M = [int(i) for i in open('17.txt')]
n = min([i for i in M if i % 2 == 0])  # минимальному четному элементу из всех элементов последовательности
count = 0
mini = 9999999
r = ''
for i in range(len(M) - 2):
    x, y, z = M[i], M[i+1], M[i+2]
    if (x % 2 == 0) != (z % 2 == 0):
        if y % n == 0:
            count += 1
            if mini > x + z:
                mini = x + z
                r = [x, y]
print(count, r)
'''





# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# todo Тип 24 №55641
'''
f = open('24.txt').readlines()пш
li = []
for j in f:
    st = ''
    for x, y in zip(j, j[1:]):
        if x == 'T':
            st += y
    maxi = max(st.count(i) for i in set(st))
    for s in set(st):
        if st.count(s) == maxi:
            li += [s]
print(max(li.count(l) for l in set(li)))
'''

# todo Задание 13
'''
from ipaddress import *

net = ip_network(f'222.63.131.128/255.255.255.192', 0)
print(net)
'''

# endregion Разобрать: *************************************************************


# GOAL = [1.1, 2.1, 4.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
