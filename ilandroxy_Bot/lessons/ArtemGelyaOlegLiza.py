
# region Домашка: ******************************************************************

# КЕГЭ № 5268 (Уровень: Средний) (С. Якунин)
# Дмитрий составляет слова, переставляя буквы в слове АМФИБРАХИЙ.
# Сколько различных слов, содержащих ИИФАА или ААФИИ, может составить Дмитрий?

'''
from itertools import permutations
my_set = set()
for x in permutations('АМФИБРАХИЙ'):
    slovo = ''.join(x)
    if 'ИИФАА' in slovo or 'ААФИИ' in slovo:
        my_set.add(slovo)
print(len(my_set))
'''
'''
from itertools import permutations
words = permutations('АМФИБРАХИЙ')
k = set()
for w in words:
    word = ''.join(w)
    if 'ИИФАА' in word or 'ААФИИ' in word:
        k.add(word)
print(len(k))
'''


# print('02 20 04 40 06 60 24 42 26 62 46 64 13 31 15 51 17 71 35 53 37 73 57 75'.split())

# # КЕГЭ № 4320 (Уровень: Средний)
# # Сколько существует восьмеричных шестизначных чисел, в которых все цифры различны,
# # никакие две чётные или две нечётные цифры не стоят рядом и десятичная запись которых делится на 5?
'''
from itertools import permutations
count = 0
for x in permutations('01234567', 6):
    num = ''.join(x)
    if int(num, 8) % 5 == 0:
        if all(pair not in num for pair in '02 20 04 40 06 60 24 42 26 62 46 64 13 31 15 51 17 71 35 53 37 73 57 75'.split()):
            if num[0] != '0':
                count += 1
print(count)



from itertools import permutations
PAIRS = []
for x in permutations('01234567', 2):
    if (x[0] in '0246' and x[1] in '0246') or (x[0] in '1357' and x[1] in '1357'):
        PAIRS.append(''.join(x))

count = 0
for x in permutations('01234567', 6):
    num = ''.join(x)
    if int(num, 8) % 5 == 0:
        if all(pair not in num for pair in PAIRS):
            if num[0] != '0':
                count += 1
print(count)
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# КЕГЭ № 7594 Досрочная волна 2023 (Уровень: Базовый)
#
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# x&39 = 0 ∨ (x&11 = 0 → ¬(x&А = 0))
#
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной х)?
# def f(x, a):
#     return (x & 39 == 0）or（(x & 11 == 0） <=（x & a != 0))
'''
def F(x, A):
    return (x & 39 == 0) or ((x & 11 == 0) <= (x & A != 0))


for a in range(1000):
    if all(F(x, a) for x in range(1000)):
        print(a)
        break
'''
'''
def f(x, a):
    return(x&39 == 0) or ((x&11 == 0) <= (x&a != 0))


for a in range(100000):
    if all(f(x, a) == 1 for x in range(100000)):
        print(a)
        break
'''

'''
def f(x):
    return(x&39 == 0) or ((x&11 == 0) <= (x&a != 0))

for a in range(100000):
    if all(f(x) for x in range(100000)):
        print(a)
        break
'''

# КЕГЭ № 2184 (Уровень: Базовый)
# На числовой прямой даны два отрезка: P = [1, 39] и Q = [23, 58].
# Какова наибольшая возможная длина интервала A, что логическое выражение
#
#   ((x ∈ P) → ¬(x ∈ Q)) → ¬(x ∈ А)
#
# тождественно истинно, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    P = 1 <= x <= 39
    Q = 23 <= x <= 58
    A = a1 <= x <= a2
    return (P <= (not Q)) <= (not A)


R = []
M = [x/4 for x in range(1*4, 60*4)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(max(R))
'''

# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнено хотя бы одно из условий:
#
# – в строке есть хотя бы одно повторяющееся число;
# – будучи упорядоченными, все числа строки образуют арифметическую прогрессию.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    flag1, flag2 = False, False
    if len(set(M)) < len(M):
        flag1 = True
    S = sorted(set(M))
    B = [S[i+1] - S[i] for i in range(len(S)-1)]
    if len(set(B)) == 1:
        flag2 = True
    if flag1 + flag2 >= 1:
        count += 1
print(count)
'''

'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    if len(set(M)) != len(M) or all(M[i + 1] - M[i] == M[1] - M[0] for i in range(len(M) - 1)):
        count += 1
print(count)
'''


# Тип 9 №28117
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного
# измерения температуры воздуха на протяжении трёх месяцев.
#
# Найдите количество суток, в которых среднее значение температуры не превышало 20 °С.
'''
count = 0
for s in open('9.txt'):
    M = [float(x) for x in s.replace(',', '.').split()]
    # ValueError: could not convert string to float: '13,7'
    if (sum(M) / len(M)) <= 20:
        count += 1
print(count)
'''
# Ответ: 30


# Тип 9 №27524
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного
# измерения температуры воздуха на протяжении трёх месяцев.
#
# Сколько раз встречалась температура, которая была ниже половины от максимального значения?
'''
count = 0
A = []
for s in open('9.txt'):
    M = [float(x) for x in s.replace(',', '.').split()]
    A += M

maxi = max(A) / 2
for x in A:
    if x < maxi:
        count += 1
print(count)
'''
# Ответ: 601


'''
M = [1, 2, 3, 4, 5]

# Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')  # 12 23 34 45
print()

# Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    print(f'{M[i]}{M[i+1]}{M[i+2]}', end=' ')  # 123 234 345
print()

# В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(len(M)):
    for j in range(i+1, len(M)):
        print(f'{M[i]}{M[j]}', end=' ')
    print()
'''

# Тип 17 №38951
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 3, а их сумма делится на 5.
# В ответе запишите два числа: сначала количество найденных пар, а затем – максимальную сумму элементов таких пар.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(len(M)-1):
    if M[i] % 3 == 0 or M[i+1] % 3 == 0:
        if (M[i] + M[i+1]) % 5 == 0:
            # if maxi < M[i] + M[i+1]:
            #     maxi = M[i] + M[i+1]
            maxi = max(maxi, M[i] + M[i+1])
            count += 1
print(count, maxi)
'''
# Ответ: 635 19730


# Тип 17 №57424
# В файле содержится последовательность целых чисел.

# Элементы последовательности могут принимать целые значения от 1 до 100000 включительно.
# Определите количество пар последовательности, в которых только один из элементов является двузначным числом,
# а сумма элементов пары кратна максимальному двузначному элементу последовательности.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
MAXI = max([x for x in M if len(str(abs(x))) == 2])
count = 0
maxi = 0
for i in range(len(M)-1):
    if (len(str(abs(M[i]))) == 2) ^ (len(str(abs(M[i+1]))) == 2):   # в которых только один
        if (M[i] + M[i+1]) % MAXI == 0:
            maxi = max(maxi, M[i] + M[i+1])
            count += 1
print(count, maxi)

M = [int(x) for x in open('17.txt')]
MAXI = max([x for x in M if len(str(abs(x))) == 2])
count = 0
maxi = 0
for i in range(len(M)-1):
    a, b = M[i], M[i+1]
    if (len(str(abs(a))) == 2) ^ (len(str(abs(b))) == 2):   # в которых только один
        if (a + b) % MAXI == 0:
            maxi = max(maxi, a + b)
            count += 1
print(count, maxi)
'''
# Ответ: 16 9702


# Тип 17 №59810
# В файле содержится последовательность целых чисел.
# Элементы ряда могут принимать целые значения в диапазоне [−10000; 10000].
# Определите количество троек элементов в которых только одно число трехзначное,
# и сумма элементов тройки больше максимального числа последовательности оканчивающегося на 24.
# В ответе запишите два числа: сначала количество найденных троек, а затем минимальную из сумм таких троек.
# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
MAXI = max([x for x in M if abs(x) % 100 == 24])
count = 0
maxi = -9999999
mini = 9999999999
for i in range(len(M)-2):
    a, b, c = M[i], M[i+1], M[i+2]
    if (len(str(abs(a))) == 3) ^ (len(str(abs(b))) == 3) ^ (len(str(abs(c))) == 3):
        if (a + b + c) > MAXI:
            count += 1
            mini = min(mini, a + b + c)
print(count, mini)
'''
# 217 9542


# Тип 17 №37358
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10 000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых сумма элементов кратна 10, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = -99999
for i in range(len(M)):
    for j in range(i+1, len(M)):
        a, b = M[i], M[j]
        if (a+b) % 10 == 0:
            count += 1
            maxi = max(maxi, a + b)
print(count, maxi)
'''
# 4999742 19990


# Тип 17 №61363
# Файл содержит последовательность натуральных чисел, не превышающих 100 000.
# Назовём тройкой три идущих подряд элемента последовательности.
#
# Определите количество троек, для которых выполняются следующие условия:
# — ровно два числа в тройке четырёхзначные;
# — хотя бы одно число в тройке делится на 3;
# — сумма элементов тройки больше максимального элемента последовательности,
# запись которого заканчивается на 19.
#
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
MAXI = max([x for x in M if abs(x) % 100 == 19])
count = 0
maxi = -99999
for i in range(len(M)-2):
    a, b, c = M[i], M[i+1], M[i+2]
    # A = [len(str(abs(a))) == 4, len(str(abs(b))) == 4, len(str(abs(c))) == 4]
    A = [len(str(abs(x))) == 4 for x in [a, b, c]]
    if sum(A) == 2:
        # if a % 3 == 0 or b % 3 == 0 or c % 3 == 0:
        if any(x % 3 == 0 for x in [a, b, c]):
            if (a + b + c) > MAXI:
                count += 1
                maxi = max(maxi, a + b + c)
print(count, maxi)
'''
# Ответ: 78 115709

# Тип 17 №56545

# endregion Урок: ******************************************************************


# GOAL = [2.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
