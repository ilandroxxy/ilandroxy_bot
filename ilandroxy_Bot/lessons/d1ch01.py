# region Домашка: ******************************************************************


# endregion Домашка: *****************************************************************


# region Урок: ******************************************************************


# Тип 24 №27688
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Z.
# Хотя бы один символ Z находится в последовательности.
'''
# Вариант 1
s = open('24.txt').readline()
cnt = 1  # счетчик для промежуточных последовательностей
maxi = 0  # счетчик, но для самой большой подходящей последовательности
for i in range(len(s)-1):
    if s[i] == 'Z' and s[i+1] == 'Z':
        cnt += 1
        maxi = max(maxi, cnt)
        # if maxi < cnt:
        #     maxi = cnt
    else:
        cnt = 1
print(maxi)

# Вариант 2
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Y', ' ')
print(max([len(x) for x in s.split()]))

# Вариант 3
print(open('24.txt').readline())   # поиск подходящей подпоследовательности через ctrl + F
print(len('ZZZZZZZ'))
'''
# Ответ: 7


# Тип 24 №27421
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите максимальное количество идущих подряд символов,
# среди которых каждые два соседних различны.
'''
s = open('24.txt').readline()
cnt = 1
maxi = 0
for i in range(len(s)-1):
    if s[i] != s[i+1]:
        cnt += 1
        maxi = max(maxi, cnt)
    else:
        cnt = 1
print(maxi)
'''
# Ответ: 35


# Тип 24 №39253
# Текстовый файл содержит только заглавные буквы латинского алфавита
# (ABC…Z). Определите максимальное количество идущих подряд символов,
# среди которых не более одной буквы D.
'''
s = open('24.txt').readline().split('D')
maxi = 0
for i in range(len(s)-1):
    r = s[i] + 'D' + s[i+1]
    maxi = max(maxi, len(r))
print(maxi)
'''
# Ответ: 354


# Тип 24 №48445
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите максимальное количество идущих подряд групп
# символов вида: согласная + согласная + гласная.
'''
s = open('24.txt').readline()
s = s.replace('O', 'A')
s = s.replace('C', 'D').replace('F', 'D')
s = s.replace('DDA', '*')
s = s.replace('A', ' ').replace('D', ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 5

# Тип 24 №59848
# Текстовый файл состоит не более чем из 10**6 символов
# латинского алфавита. Необходимо найти самую длинную
# подстроку, которая может являться числом в 24 системе
# счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
s = open('24.txt').readline()
for x in alphabet[24:]:
    s = s.replace(x, ' ')
print(max(len(x) for x in s.split()))
'''
# Ответ: 40


# Тип 24 №58326
# Текстовый файл состоит не более чем из 10**6 символов
# арабских цифр (0,1,...,9).
# Определите максимальное количество идущих подряд цифр,
# расположенных в строгом убывающем порядке.
'''
s = open('24.txt').readline()
cnt = 1
maxi = 0
for i in range(len(s)-1):
    if int(s[i]) > int(s[i+1]):
        cnt += 1
        maxi = max(maxi, cnt)
    else:
        cnt = 1
print(maxi)
'''
# Ответ: 8


# Тип 24 №46982
# Текстовый файл содержит только заглавные буквы латинского
# алфавита (ABC…Z). Определите количество групп из идущих
# подряд не менее 12 символов, которые начинаются и
# заканчиваются буквой E и не содержат других букв E
# (кроме первой и последней) и букв F.
'''
s = open('24.txt').readline()
s = s.replace('E', 'E E')
print(len([x for x in s.split() if 'F' not in x and len(x) >= 12]))
'''
# Ответ: 9655


# Тип 24 №57431
# Текстовый файл состоит из символов, обозначающих прописные
# буквы латинского алфавита.
#
# Определите максимальное количество идущих подряд символов,
# среди которых никакие две буквы из набора букв A, B и C
# (с учетом повторений) не записаны подряд.
'''
s = open('24.txt').readline()
for x in 'AB BA BC CB CA AC CC BB AA'.split():
    s = s.replace(x, '* *')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 82+2 = 84


# Тип 24 №36037
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд символов, среди которых
# нет подстроки XZZY. Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
s = open('24.txt').readline()
s = s.replace('XZZY', 'XZZ ZZY')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 1713


# Тип 24 №27699
# Текстовый файл состоит не более чем из 106 символов L, D и R.
# Определите максимальную длину цепочки вида LDRLDRLDR...
# (составленной из фрагментов LDR, последний фрагмент может быть неполным).
'''
print(open('24.txt').readline())
print(len('LDRLDRLDRLDRLDR'))
'''
# Ответ: 15


# Тип 24 №51993
# Текстовый файл содержит только буквы A, C, D, F, O. Определите длину самой длинной цепочки символов,
# которая начинается и заканчивается буквой F, а между двумя последовательными
# буквами F содержит не более двух букв A и произвольное количество других букв.
'''
s = open('24.txt').readline().split('F')
cnt = 1  # 'F'+'xxxx' + 'F'+'xxxx' + 'F'+'xxxx' + 'F'+'xxxx' + 'F'
maxi = 0
for i in range(len(s)):
    if s[i].count("A") <= 2:
        cnt += len(s[i]) + 1
        maxi = max(maxi, cnt)
    else:
        cnt = 1
print(maxi)
'''
# Ответ: 266

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************


# Дмитрий = [2, 5, 8, 9, 12, 13, 14, 15, 16, 17, 23, 24.1, 25]
# КЕГЭ  = []
# на следующем уроке: На следующем уроке рассматриваем сложыне 24 номера
