# region Домашка: ******************************************************************


# endregion Домашка: *****************************************************************


# region Урок: ******************************************************************


# Открытие и чтение файла 17.txt:
'''
M = [int(x) for x in open('17.txt')]
R = []
'''

# Типы задач для 17 номера:
'''
M = [1, 2, 3, 4, 5]

# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''


# Тип 17 №37344
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000. Определите и запишите в ответе сначала количество
# пар элементов последовательности, для которых произведение элементов делится без остатка на 10,
# затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x * y) % 10 == 0:
            R.append(x + y)
print(len(R), max(R))
'''
# Ответ: 13510315 19999


# Тип 17 №47014
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности. Определите количество пар,
# в которых один из двух элементов делится на 5, а другой меньше среднего арифметического
# всех нечётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.
'''
M = [int(x) for x in open('17.txt')]
nechet = [x for x in M if x % 2 != 0]
avg = sum(nechet) / len(nechet)
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x % 5 == 0 and y < avg) or (y % 5 == 0 and x < avg):
        R.append(x + y)
print(len(R), max(R))
'''
# Ответ: 1061 14847.


# Тип 17 №64947
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.
#
# Определите количество троек, для которых выполняются следующие условия:
# — в тройке есть четырёхзначные числа, но не все числа в тройке четырёхзначные;
# — в тройке больше чисел, кратных 5, чем чисел, кратных 3;
# — сумма элементов тройки больше максимального элемента последовательности, запись которого заканчивается на 832.
# (Гарантируется, что в последовательности есть хотя бы один элемент, запись которого заканчивается на 832.)
#
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
C = [x for x in M if str(x)[-3:] == '832']

R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    A = [a for a in [x, y, z] if len(str(abs(a))) == 4]
    if 1 <= len(A) < 3:
        B5 = [a for a in [x, y, z] if a % 5 == 0]
        B3 = [a for a in [x, y, z] if a % 3 == 0]
        if len(B5) > len(B3):
            if (x + y + z) > max(C):
                R.append(x + y + z)
print(len(R), max(R))
'''
# Ответ: 59 198654



# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************


# Дмитрий = [2, 5, 8, 12, 14, 15, 16, 23]
# КЕГЭ  = []
# на следующем уроке:
