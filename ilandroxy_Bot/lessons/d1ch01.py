# region Домашка: ******************************************************************

# https://stepik.org/lesson/1051610/step/8?unit=1060696
'''
a = int(input())
b = int(input())
c = int(input())
if a == b == c:
    print("Равносторонний")
elif a != b and a != c and b != c:
    print("Разносторонний")
elif a == b or a == c or b == c:
    print("Равнобедренный")


a = int(input())
b = int(input())
c = int(input())
if a == b == c:
    print("Равносторонний")
elif a != b and a != c and b != c:
    print("Разносторонний")
else:
    print("Равнобедренный")
'''

# https://stepik.org/lesson/1051610/step/9?unit=1060696
'''
a = int(input())
b = int(input())
a1, a2 = max(a, b), min(a, b)
if a1 % a2 == 0:
    print("Делится")
else:
    print("Не делится")
'''
# endregion Домашка: *****************************************************************


# region Урок: ******************************************************************

# Циклы в Пайтон: while и for

# Цикл for: отвечает на вопросы: "повтори n раз", "пробеги от А до В", "удобны для работы с последовательностями"
'''
for i in range(10):  # range(START=0, STOP=10-1, STEP=1)
    print(i, end=' ')  # 0 1 2 3 4 5 6 7 8 9
print()

for i in range(2, 10):  # range(START=2, STOP=10-1, STEP=1)
    print(i, end=' ')  # 2 3 4 5 6 7 8 9
print()

for i in range(2, 10, 2):  # range(START=2, STOP=10-1, STEP=2)
    print(i, end=' ')  # 2 4 6 8
print()

for i in range(2, 10+1, 2):  # range(START=2, STOP=10+1-1, STEP=2)
    print(i, end=' ')  # 2 4 6 8 10
print()

# Найдите натуральное число большее 100:
for i in range(100+1, 200):
    print(i, end=' ')  # 101 102 103 104 105 106 107 10...
print()

for i in range(10, 0, -1):  # range(START=10, STOP=1, STEP=-1)
    print(i, end=' ')  # 10 9 8 7 6 5 4 3 2 1
print()
'''
# Такой диапазон в обратном порядке может пригодится в 5 номере:

# Тип 5 №35894
# Алгоритм получает на вход натуральное число N>1 и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Подсчитывается количество нулей и единиц в полученной записи.
# Если их количество одинаково, в конец записи добавляется её последняя цифра.
# В противном случае в конец записи добавляется та цифра, которая встречается реже.
# 3. Шаг 2 повторяется ещё два раза
# 4.Результат переводится в десятичную систему.
# При каком наименьшем числе N > 104 в результате работы алгоритма получится число, кратное 4?
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

for n in range(104+1, 10000):
    s = bin(n)[2:]
    for _ in range(3):  # 3. Шаг 2 повторяется ещё два раза
        if s.count('0') == s.count('1'):
            s = s + s[-1]  # s[-1] - последний элемент строки/списка
        else:
            if s.count('0') < s.count('1'):
                s = s + '0'
            else:
                s = s + '1'
    r = int(s, 2)  # 4.Результат переводится в десятичную систему.
    if r % 4 == 0:
        print(n)
        break  # прерывание цикла
# Ответ: 107


# При каком наибольшем числе N > 104 в результате работы алгоритма получится число, кратное 4?
for n in range(10000, 104+1, -1):
    s = bin(n)[2:]
    for _ in range(3):  # 3. Шаг 2 повторяется ещё два раза
        if s.count('0') == s.count('1'):
            s = s + s[-1]  # s[-1] - последний элемент строки/списка
        else:
            if s.count('0') < s.count('1'):
                s = s + '0'
            else:
                s = s + '1'
    r = int(s, 2)  # 4.Результат переводится в десятичную систему.
    if r % 4 == 0:
        print(n)
        break  # прерывание цикла
'''
# Ответ: 9999


# Цикл while: отвечает на вопросы: "пока условие верно, делаем действие", "бесконечный цикл"
'''
for i in range(2, 10+1, 2):  # range(START=2, STOP=10+1-1, STEP=2)
    print(i, end=' ')  # 2 4 6 8 10
print()

i = 0
while i < 10:
    print(i, end=' ')
    i += 1   # i = i + 1  |  *=, -=, //=, %=, **=
print()
'''


'''
x = 8
n = 2
s = ''
while x > 0:
    s += str(x % n)
    x //= n
s = s[::-1]  # срез строки в обратном порядке 
print(s)
'''
'''
x = 8
n = 2
s = ''
while x > 0:
    s = str(x % n) + s
    x //= n
print(s)
'''
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
print(alphabet)
x = int(input('Введите 10-ое число для перевода: '))
n = int(input('Введите n-ую систему счисления: '))
s = ''
while x > 0:
    s = alphabet[x % n] + s
    x //= n
print(s)
'''

# Бесконечный цикл
'''
k = 1
while True:
    k += 1
    print(k)
'''

'''
import time
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
while True:
    time.sleep(2)
    case = input('\n\n'
                 'case 1: Перевод из 10-ой в n-ую систему. \n'
                 'case 2: Перевод из n-ой в 10-ую систему. \n'
                 'case 3: Перевод из n-ой в k-ую систему. \n'
                 'case 0: exit \n'
                 'case: ')
    print()

    if case == '1':
        x = int(input('Введите 10-ое число для перевода: '))
        old_x = x
        n = int(input('Введите n-ую систему счисления: '))
        s = ''
        while x > 0:
            s = alphabet[x % n] + s
            x //= n
        print(f'Результат перевода числа {old_x} в {n}-ую систему: {s}')

    elif case == '2':
        n = int(input('Введите n-ую систему счисления: '))
        s = input(f'Введите число в {n}-ой системе: ')
        r = int(s, n)  # перевод из n-ой в 10-ую
        print(f'Результат перевода числа {s} из {n}-ой системы: {r}')

    elif case == '3':
        pass  # идея: из n-ой перевести в 10-ую и из 10-ой уже переводить в k-ую

    elif case == '0':
        break
'''

# endregion Урок: ******************************************************************


# Дмитрий = []
# КЕГЭ  = []
# на следующем уроке:
