# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# № 2671 Пробный 02.2022 /dev/inf Base level (Уровень: Средний)
# Откройте файл электронной таблицы, содержащей в каждой строке три целых числа.
# Выясните, в каком количестве строк можно выбрать от одного до трех чисел так, чтобы их сумма была равна нулю.
# В ответе запишите только число.
'''
from itertools import permutations
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if any(sum(var) == 0 for l in range(1, 3+1) for var in permutations(M, l)):
        count += 1
print(count)
'''

'''
from itertools import permutations
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    flag = False
    for l in range(1, 3 + 1):
        for var in permutations(M, l):
            if sum(var) == 0:
                flag = True
                break
    if flag:
        count += 1

print(count)
'''
'''
count = 0
for s in open('9.txt'):
    a, b, c = [int(x) for x in s.split()]
    vars = [[a], [b], [c], [a, b], [a, c], [c, b], [a, b, c]]
    if any(sum(var) == 0 for var in vars):
        count += 1
print(count)
'''
# Ответ: 162


# № 3887 Джобс 14.05.2022 (Уровень: Средний)
# Откройте файл электронной таблицы, содержащей в каждой строке пять натуральных чисел.
# Определите количество строк таблицы, в которых хотя бы 3 числа больше среднего арифметического всех чисел в строке.
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len([x for x in M if x > (sum(M) / len(M))]) >= 3:
        count += 1
print(count)
'''
# Ответ: 1035


# Открытие файла для 17-го номера:
# Элементы последовательности могут принимать целые значения от 1 до 100000 включительно.
'''
M = [int(x) for x in open('17.txt')]
'''

# Разбираем типы задач для 17-го номера
'''
M = [1, 2, 3, 4, 5]

# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print('\n')

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print('\n')

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''


# Тип 17 №55813
# В файле содержится последовательность целых чисел.

# Элементы последовательности могут принимать целые значения от 1 до 100000 включительно.
# Определите количество пар последовательности, в которых только одно число трехзначное, и
# сумма элементов пары кратна минимальному трехзначному значению последовательности, оканчивающемуся на 5.
# В ответе запишите два числа: сначала количество найденных пар, затем минимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if len(str(abs(x))) == 3 and abs(x) % 10 == 5]
count = 0
mini = 9999999999
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    # if 100 <= abs(x) <= 999
    # if (len(str(abs(x))) == 3 and len(str(abs(y))) != 3) or (len(str(abs(y))) == 3 and len(str(abs(x))) != 3)
    if (len(str(abs(x))) == 3) ^ (len(str(abs(y))) == 3):  # ^ - только одно улсовие выполняется
        if (x + y) % min(A) == 0:
            count += 1
            mini = min(mini, x+y)
            # if mini > x+y:
            #     mini = x+y

print(count, mini)
'''
# Ответ: 2 33120


# Тип 17 №61397
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.
#
# Определите количество троек, для которых выполняются следующие условия:
# — ровно два числа в тройке четырёхзначные;
# — хотя бы одно число в тройке делится на 5;
# — сумма элементов тройки больше максимального элемента последовательности,
# запись которого заканчивается на 17. (Гарантируется, что в последовательности есть
# хотя бы один элемент, запись которого заканчивается на 17.)
#
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if abs(x) % 100 == 17]
print(A)
count = 0
maxi = -9999999999
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if len([i for i in [x, y, z] if len(str(abs(i))) == 4]) == 2:
        if any(i % 5 == 0 for i in [x, y, z]):
            if (x + y + z) > max(A):
                count += 1
                maxi = max(maxi, x + y + z)
print(count, maxi)
'''
# Ответ: 21 114132


# Тип 17 №37371
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000. Определите и запишите в ответе сначала
# количество пар элементов последовательности, у которых разность элементов кратна 60,
# затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = -9999999999
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if abs(x - y) % 60 == 0:
            count += 1
            maxi = max(maxi, abs(x - y))
print(count, maxi)
'''
# 832722 9960


# Тип 17 №58525
# Файл содержит последовательность натуральных чисел, не превышающих 20000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, для которых выполняются следующие условия:
# — ровно одно число в паре четырёхзначное;
# — сумма квадратов элементов пары без остатка делится на наименьшее
# в последовательности трёхзначное число, запись которого заканчивается цифрой 3.
#
# В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную из сумм квадратов элементов таких пар.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if len(str(abs(x))) == 3 and abs(x) % 10 == 3]
count = 0
maxi = -9999999999
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (len(str(abs(x))) == 4) ^ (len(str(abs(y))) == 4):
        if (x**2 + y**2) % min(A) == 0:
            count += 1
            maxi = max(maxi, x**2 + y**2)
print(count, maxi)
'''
# Ответ: 74 433966217

# endregion Урок: ******************************************************************


# Александр = [9.1, 15.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
