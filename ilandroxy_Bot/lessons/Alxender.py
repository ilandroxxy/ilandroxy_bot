# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 15 №33485
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наибольшего натурального числа А формула
# ДЕЛ(120, A) ∧ (¬ДЕЛ(x, А) → (ДЕЛ(x, 18) → ¬ДЕЛ(x, 24)))
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?
'''
def F(x, A):
    return (120 % A == 0) and ((x % A != 0) <= ((x % 18 == 0) <= (x % 24 != 0)))


R = []
for A in range(1, 1000):
    flag = True
    for x in range(1, 10000):
        if not F(x, A):
            flag = False
            break
    if flag:
        R.append(A)
print(max(R))


# Вариант 2
def F(x, A):
    return (120 % A == 0) and ((x % A != 0) <= ((x % 18 == 0) <= (x % 24 != 0)))

R = []
for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 10000)):
        R.append(A)
print(max(R))

# Вариант 3
print(max([A for A in range(1, 1000) if all(((120 % A == 0) and ((x % A != 0) <= ((x % 18 == 0) <= (x % 24 != 0)))) for x in range(1, 10000))]))
'''


# Тип 15 №58523
# На числовой прямой даны три отрезка: P=[13;31], Q[18;80] и R=[48;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
# ¬((x∈Q)→((x∈P)∨(x∈R)))→(¬(x∈A)→¬(x∈Q))
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).
'''
def F(x, a1, a2):
    P = 13 <= x <= 31
    Q = 18 <= x <= 80
    R = 48 <= x <= 114
    A = a1 <= x <= a2
    return ((not(Q <= (P or R))) <= ((not A) <= (not Q)))


R = []
M = [x / 4 for x in range(0 * 4, 125 * 4)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# 16.5 -> 17


# Тип 9 №57416
# Откройте файл электронной таблицы, содержащей в каждой строке пять натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# — в строке все числа различны;
# — удвоенная сумма максимального и минимального чисел строки не больше суммы оставшихся трёх её чисел.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])

    if len(M) == len(set(M)):  # — в строке все числа различны;
        if (M[0] + M[-1]) * 2 <= sum(M[1:4]):
            count += 1
print(count)
'''
# Ответ: 607


# Тип 9 №59687
# Откройте файл электронной таблицы, содержащей в каждой строке семь натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для чисел которых выполнены оба условия:
# — в строке есть одно число, которое повторяется трижды, остальные четыре числа различны;
# — среднее арифметическое неповторяющихся чисел строки не больше повторяющегося числа.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if len(set(M)) == 5 and any(M.count(x) == 3 for x in M):
        copied = (sum(M) - sum(set(M))) / 2
        if ((sum(set(M)) - copied) / 4) <= copied:
            count += 1
print(count)
'''
# Ответ: 36


# Тип 9 №58325
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного измерения
# интенсивности испарения для частных бассейнов на протяжении трёх месяцев.

# Найдите разность между округленным до целого средним арифметическим значением
# испарения воды в этот период времени и округленным до целого минимальным значением испарения воды.
'''
A = []
for s in open('9.txt'):
    A += [float(x) for x in s.replace(',', '.').split()]

print((sum(A) / len(A)) - min(A))
'''
# Ответ: 116


count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(M) == len(set(M)):
        chet = [x for x in M if x % 2 == 0]
        nechet = [x for x in M if x % 2 != 0]
        if len(chet) > len(nechet):
            if sum(chet) < sum(nechet):
                count += 1
print(count)

# endregion Урок: ******************************************************************


# Александр = [25.1, 15.1]
# КЕГЭ  = []
# на следующем уроке:
