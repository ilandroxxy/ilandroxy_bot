# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

'''
import time

start = time.time()

divisors = {}
def number_of_divisors(n):
    count = set()
    if n in divisors:
        return divisors[n]
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            count.add(i)
            count.add(n // i)
    divisors.update(({n: len(count)}))
    return count


print(number_of_divisors(2000000000))
print(number_of_divisors(6))
print(number_of_divisors(6))
print(number_of_divisors(2000000000))
print(divisors)
end = time.time() - start

print(end)
'''


# Тип 25 №28124
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [568023; 569230],
# число, имеющее максимальное количество различных натуральных делителей,
# если таких чисел несколько — найдите минимальное из них.
# Выведите на экран количество делителей такого числа и само число.
'''
def Divisors(n):
    divisors = set()
    for i in range(1, int(n**0.5)+1):
        if n % i == 0:
            divisors.add(i)
            divisors.add(n // i)
    return sorted(divisors)
    # 24 {1, 2, 3, 4, 24**0.5, 6, 8, 12, 24}  # четное кол-во делителей
    # 16 {1, 2, 4, 8, 16}  # нечетное кол-во делителей

maxi = 0
for n in range(568023, 569230+1):
    divisors = Divisors(n)
    if maxi < len(divisors):
        maxi = len(divisors)
        print(maxi, n)
'''
# Ответ: 144 568260


# Тип 25 №40741
# Пусть M(N)— сумма двух наибольших различных натуральных делителей натурального числа N,
# не считая самого числа. Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 10000000,
# для которых 0<M(N)<10000. В ответе запишите найденные
# значения M(N) в порядке возрастания соответствующих им чиселN.
'''
def Divisors(n):
    divisors = set()
    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            divisors.add(i)
            divisors.add(n // i)
    return sorted(divisors)


k = 0
for n in range(10000000, 10000000000):
    divisors = Divisors(n)
    if len(divisors) >= 2:
        M = divisors[-2] + divisors[-1]
        if 0 < M < 10000:
            print(M)
            k += 1
            if k == 5:
                exit()
'''
# Ответ:
# 6876
# 6374
# 6924
# 8024
# 8358


# Тип 25 №33495
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения
# двух натуральных чисел и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [2000000; 3000000],
# у которых составленное описанным способом множество разностей будет содержать не меньше трёх элементов,
# не превышающих 115. В ответе перечислите найденные числа в порядке возрастания.

'''
def Divisors(n):
    divisors = set()
    for i in range(1, int(n**0.5)+1):
        if n % i == 0:
            r = abs(i - (n // i))
            if r <= 115:
                divisors.add(r)
    return sorted(divisors)


for n in range(2000000, 3000000+1):
    divisors = Divisors(n)
    if len(divisors) >= 3:
        print(n)
'''
# Ответ:
# 2053440
# 2098080
# 2328480
# 2638944



# Тип 25 №35999
# Найдите все натуральные числа N, принадлежащие отрезку [200000000; 400000000], которые можно представить
# в виде N=2**m * 3**n, где m — чётное число, n — нечётное число.
# В ответе запишите все найденные числа в порядке возрастания.

# print(400000000)
# print(2**28)
# print(3**17)
'''
R = []
for m in range(0, 28+1, 2):
    for n in range(1, 17+1, 2):
        N = 2 ** m * 3 ** n
        if 200000000 <= N <= 400000000:
            R.append(N)
            
for s in sorted(R):
    print(s)
'''
# 201326592
# 229582512
# 254803968
# 322486272


# Тип 25 №28121
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [2422000; 2422080], простые числа.
# Выведите все найденные простые числа в порядке возрастания, слева от каждого числа выведите его номер по порядку,
# считая, что первое найденное число имеет номер «1», второе — «2», и т.д.
'''
def Prime(n):
    for j in range(2, n):
        if n % j == 0:
            return False
    return True

k = 1
for n in range(2422000, 2422080+1):
    if Prime(n):
        print(k, n)
        k +=1
'''
# Ответ:
# 1 2422027
# 2 2422033
# 3 2422037
# 4 2422073



# Тип 25 №29673
# Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Найдите все натуральные числа, принадлежащие отрезку [123456789;223456789]
# и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе его наибольший нетривиальный делитель.
# Ответы расположите в порядке возрастания.
'''
def Divisors(n):
    divisors = set()
    if round(n ** 0.5) == n ** 0.5:
        for i in range(2, int(n**0.5)+1):
            if n % i == 0:
                divisors.add(i)
                divisors.add(n // i)
    return sorted(divisors)


for n in range(123456789, 223456789+1):
    divisors = Divisors(n)
    if len(divisors) == 3:
        print(n, divisors[-1])
'''
# Ответ:
# 131079601 1225043
# 141158161 1295029
# 163047361 1442897


# Тип 25 №56553
# Маска числа — это последовательность цифр, в которой могут встречаться специальные символы «?» и «*».
# Символ «?» означает ровно одну произвольную цифру,
# символ «*» означает произвольную (в том числе пустую) последовательность цифр.
#
# Найдите все натуральные числа, не превышающие 10**10, которые
# соответствуют маске 1?2655*8 и при этом без остатка делятся на 4173.
#
# В ответе запишите все найденные числа в порядке возрастания.

# Вариант 1
'''
from fnmatch import *
for n in range(4173, 10**10, 4173):  # при этом без остатка делятся на 4173
    if fnmatch(str(n), '1?2655*8'):
        print(n)
'''

# Вариант 2
'''
print(10**10)
print('1?2655***8')

from itertools import product
for l in range(0, 3+1):
    for s in product('0123456789', repeat=l):
        star = ''.join(s)

        for que in '0123456789':
            num = int(f'1{que}2655{star}8')
            if num % 4173 == 0:
                print(num)
'''
# Ответ:
# 1026558
# 1226553198
# 1526550168

# endregion Урок: ******************************************************************


# Марк = []
# КЕГЭ  = []
# на следующем уроке:
