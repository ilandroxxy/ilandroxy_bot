# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# 	(№ 5901) (Е. Джобс) Автомат обрабатывает натуральное число N по следующему алгоритму:
# 1. Из числа N вычитается количество нулей в двоичной записи числа N.
# 2. Строится двоичная запись полученного числа.
# 3. К полученной записи слева дописывается три младших разряда.
# 4. Результат переводится в десятичную систему и выводится на экран.
# Пример. Дано число N = 13. Алгоритм работает следующим образом:
# 1. Двоичная запись числа 13 = 11012 содержит один 0. 13 – 1 = 12.
# 2. 1210 = 110023. 1100 -> 1001100
# 4. 10011002 = 76
# Какое наименьшее число, большее 224, может появиться на экране в результате работы автомата?

'''
R = []
for n in range(1, 1000):
    temp = n - bin(n)[2:].count('0')
    s = bin(temp)[2:]
    s = s[-3:] + s
    r = int(s, 2)
    if r > 224:
        R.append(r)
print(min(R))
'''
# Ответ: 227

'''
for n in range(1, 1000):
    s = '>2' + n * '12' + '<'

    while '>2<' not in s:
        s1 = s
        s = s.replace('>1', '>2', 1)
        s = s.replace('12<', '1<2', 1)
        s = s.replace('>21', '1>', 1)
        s = s.replace('1<', '<2', 1)
        s2 = s
        if s1 == s2:
            break
    if s.count('1') + s.count('2') * 2 > 103:
        print(n)
        break
'''
# Ответ: 42

# (№ 6196) (Д. Статный)
# В файле электронной таблицы 9-199.xls в каждой строке записаны 6 неотрицательных целых чисел.
# Определите количество строк таблицы, для которых выполнено только одно из следующих условий:
# – в строке только одно число повторяется дважды, а остальные не повторяются;
# – в строке среднее арифметическое чётных чисел отличается от среднего арифметического нечётных чисел более чем на 50.
# Примечание: если в строке нет чётных или нечётных чисел, принять их среднее арифметическое равным нулю.
'''
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    chet = [i for i in M if i % 2 == 0]
    nechet = [i for i in M if i % 2 != 0]
    sred_chet, sred_nechet = 0, 0
    if len(chet) != 0:
        sred_chet = sum(chet) / len(chet)
    if len(nechet) != 0:
        sred_nechet = sum(nechet) / len(nechet)
    flag1 = False
    flag2 = False
    if len(set(M)) == len(M) - 1:
        flag1 = True
    if abs(sred_chet - sred_nechet) > 50:
        flag2 = True
    if flag2 + flag1 == 1:
        count += 1
print(count)
'''
# Ответ: 862

# endregion Урок:  ******************************************************************************


# todo: Александр = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14+, 15, 16, 17, 18, 19-21, 22, 23, 24+, 25]
# todo: Никита КЕГЭ = [5, 8]
# на прошлом уроке: Попрорешивали сложные номера: 5, 9, 12, 14
# на следующем уроке: Повторить и прорешать 15 номера