
'''
# Тип 22 № 3280
# Ниже записана программа. Получив на вход число x , эта программа печатает два числа, L и M.
# Укажите наименьшее из таких чисел x, при вводе которых алгоритм печатает сначала 3, а потом 7.

for i in range(10, 1000):
    x = i
    L = 0
    M = 0
    while x > 0:
        L = L + 1
        M = M + (x % 10)
        x = x // 10
    #print(L)
    #print(M)
    if L == 3 and M == 7:
        print(i, L, M)
        break
'''
'''
# Тип 17 № 37371
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, у которых разность элементов кратна 60,
# затем максимальную из разностей элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
s = open('10.txt', 'r')
M = [int(i) for i in s]
count = 0
maxi = 0
for i in range(len(M)):
    for j in range(i+1, len(M)):
        if (M[i] - M[j]) % 60 == 0 or (M[j] - M[i]) % 60 == 0:
            count += 1
            if maxi < (M[j] - M[i]):
                maxi = (M[j] - M[i])
print(count, maxi)
'''
# Тип 24 № 37131
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите наибольшую длину цепочки символов,
# среди которых нет символов K и L, стоящих рядом.
# Например, в тексте ABCAABAKLD самая длинная цепочка символов, удовлетворяющая условию— ABCAABAK, её длина равна 8.
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
s = open('20.txt', 'r')
f = s.readline()
count = 1
maxi = 0
for i in range(len(f)-1):
    if (f[i] != "K" and f[i+1] != "L") or (f[i] != "L" and f[i+1] != "K"):
        count += 1
        if count > maxi:
            maxi = count
    else:
        count = 1
print(maxi) 'Не правильно'
'''
'''
f = open('24 (3).txt', 'r')
s = f.readline()

count = 1
maxi = 0
for i in range(0, len(s)-1):
    if (s[i] == 'K' and s[i+1] == 'L') or (s[i] == 'L' and s[i+1] == 'K'):
        count = 1
    else:
        count += 1
        if count > maxi:
            maxi = count
print(maxi) 'Правильно'
'''
'''
# Тип 24 № 27687
# Текстовый файл состоит не более чем из 106 символов X, Y и Z. Определите длину самой длинной последовательности, состоящей из символов Y.
# Хотя бы один символ Y находится в последовательности.
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
f = open('24_demo.txt', 'r')
s = f.readline()
count = 1
maxi = 0
for i in range(len(s)-1):
    if s[i] == 'Y' and s[i+1] == 'Y':
        count += 1
if count > maxi:
            maxi = count
    else:
        count = 1
print(maxi)
'''
'''
# Тип 24 № 27695
# Текстовый файл состоит не более чем из 106 символов L, D и R. Определите максимальное количество идущих подряд символов,
# среди которых каждые два соседних различны.
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
f = open('zadanie24_2.txt', 'r')
s = f.readline()
count = 1
maxi = 0
for i in range(len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        if count > maxi:
            maxi = count
    else:
        count = 1
print(maxi)
'''
# Тип 24 № 36879
# Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
# В строках, содержащих менее 25 букв G, нужно определить и вывести максимальное расстояние между одинаковыми буквами в одной строке.
# Пример. Исходный файл:
# GIGA
# GABLAB
# NOTEBOOK
# AGAAA
# В этом примере во всех строках меньше 25 букв G. Самое большое расстояние между одинаковыми буквами— в третьей строке между буквами O,
# расположенными в строке на 2-й и 7-й позициях. В ответе для данного примера нужно вывести число 5.
try:
    f = open('inf_26_04_21_24.txt.crdownload', 'r')
    s = f.readlines()
    count = 0
    maxi = 0
    for i in range(len(s)):
        print(s[i])
        #for j in range(i):
            #if s[i] == s[j]:
except FileNotFoundError:
    print('Сработало исключение, файла нет в дериктории ')