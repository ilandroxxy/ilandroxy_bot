# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# № 7817 (Уровень: Базовый)
# (М. Ишимов) Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Пусть на числовой прямой дан отрезок B = [40; 60].
# Для какого наибольшего натурального числа А формула
#
# (ДЕЛ(x, 13) → ¬( x ∈ B )) \/ (A < x + 20)
#
# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?
'''
def F(x, A):
    B = 40 <= x <= 60
    return ((x % 13 == 0) <= (not B)) or (A < x + 20)

for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
'''

'''
def F(x, A):
    B = 40 <= x <= 60
    return ((x % 13 == 0) <= (not B)) or (A < x + 20)

for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 1000)):
        print(A)
'''
# Показать ответ: 71


# № 6087 /dev/inf 02.2023 (Уровень: Сложный)
# (А. Рогов) На числовой прямой даны три отрезка: D = [15; 40],
# C = [21; 63] и А = [7; E]. Укажите наименьшее возможное целое значение E такое, что формула
#
# (x ∈ D) → ((¬(x ∈ C) /\ ¬(x ∈ A)) → ¬(x ∈ D))
#
# истинна (то есть принимает значение 1 при любом значении переменной х).
'''
def F(x, E):
    D = 15 <= x <= 40
    C = 21 <= x <= 63
    A = 7 <= x <= E
    return D <= (((not C) and (not A)) <= (not D))

M = [i/5 for i in range(1*5, 80*5)]
print(M)
for E in M:
    if all(F(x, E) for x in M):
        print(E)
        break
'''
# Показать ответ: 20.8 -> 21


# № 2716 Пробный 02.2022 /dev/inf Middle level (Уровень: Средний)
# Пусть S - сумма трех максимальных натуральных делителей целого числа, не считая единицы
# и самого числа, не превышающих половину данного числа. Если подходящих делителей у числа
# меньше чем 3, считать значение S равным нулю.
#
# Напишите программу, которая перебирает целые числа, не превышающие 1 200 000,
# и ищет среди них такие, для которых значение S отлично от нуля, кратно 2022 и
# не равно самому числу. Программа должна найти и вывести 5 наибольших таких чисел и соответствующие им значения S.
#
# Формат вывода: для каждого числа выводится сначала само число, затем соответствующее
# ему значение S в порядке возрастания найденных чисел.
#
# Например, для числа 20: S = 4 + 5 + 10 = 19
'''
def Divisors(x):
    divisors = set()
    for j in range(2, int(x **0.5)+1):  # не считая единицы и самого числа
        if x % j == 0:
            divisors.add(j)
            divisors.add(x // j)
            if len(divisors) > 6:
                return sorted(divisors)
    return sorted(divisors)

count = 0
for x in range(1_200_000, 1, -1):
    divisors = Divisors(x)
    if len(divisors) >= 3:
        S = divisors[-1] + divisors[-2] + divisors[-3]  # S - сумма трех максимальных натуральных делителей целого числа
        if S != x and S % 2022 == 0:
            print(x, S)

            count += 1
            if count == 5:
                break
'''
# Показать ответ
# 1091880 1182870
# 1116144 1209156
# 1140408 1235442
# 1164672 1261728
# 1188936 1288014


#
# № 5863 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
#
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, превышающих 10^7, но не превышающих 10^8, найдите все числа,
# десятичная запись которых соответствует маске 4*?9?*4, цифра 9 только одна, а само число делится на 1024.
# Выберите из них те, в которых равны суммы цифр до цифры 9 и после неё,
# а также, равны количества нулей до цифры 9 и после неё.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 1024.

print(10**8)         # 100000000
print('4?9?***4')   # 4?9?***4

import itertools
M = []
for l in range(0, 3+1):
    for s in itertools.product('0123456789', repeat=l):
        slovo = ''.join(s)
        M.append(slovo)
print(M)  # ['', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '00', '01', '02',

R = []
for x in '0123456789':
    for y in '0123456789':
        for z in M:
            for w in M:
                A = int(f'4{z}{x}9{y}{w}4')
                if 10**7 < A < 10**8:
                    if str(A).count('9') == 1:
                        if A % 1024 == 0:
                            s1, s2 = str(A).split('9')
                            if s1.count('0') == s2.count('0'):
                                if sum([int(i) for i in s1]) == sum([int(i) for i in s2]):
                                    R.append([A, A//1024])
print(R)

for x in sorted(R):
    print(*x)


# Показать ответ
# 41549824 40576
# 43029504 42021
# 44391424 43351
# 44893184 43841
# 45169664 44111
# 46239744 45156
# 47693824 46576
# 48697344 47556

# endregion Урок:  ******************************************************************************


# todo: Александр = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14+, 15, 16, 17, 18, 19-21, 22, 23, 24+, 25]
# todo: Никита КЕГЭ = [5, 8, 9, 12, 14, 15, 25]
# на прошлом уроке: Повторили 15, 25 номера всех типов с КЕГЭ
# на следующем уроке: