# region Домашка:



# endregion Домашка:



# region Урок:

# Тип 6 № 47303
'''
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
#
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 5 Направо 90 Вперёд 10 Направо 90]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом.
# Точки на линии учитывать не следует.


import  turtle as t
l = 30
t.left(90)
t.color('red')

t.begin_fill()
for _ in range(2):
    t.forward(5 * l)
    t. right(90)
    t.forward(10 * l)
    t.right(90)
t.end_fill()

canvas = t.getcanvas()
count = 0
for x in range(-100*l, 100*l, l):
    for y in range(-100 * l, 100 * l, l):
        item = canvas.find_overlapping(x, y, x, y)
        if len(item) == 1 and item[0] == 5:
            count += 1
print(count)

t.done()
'''
# Ответ: 36




# Тип 6 № 47407
'''
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 8 Направо 90]
# Повтори 3 [Вперёд 12 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом:Повтори 4 [Вперёд 8 Направо 90]
# и находиться вне области, ограниченной линией, заданной данным алгоритмом: Повтори 3 [Вперёд 12 Направо 120].
# Точки на линии учитывать не следует.

import  turtle as t
l = 30
t.left(90)
t.color('red')

t.begin_fill()
for _ in range(4):
    t.forward(8 * l)
    t. right(90)
t.end_fill()

t.begin_fill()
for _ in range(3):
    t.forward(12 * l)
    t. right(120)
t.end_fill()

canvas = t.getcanvas()
count = 0
for x in range(-100*l, 100*l, l):
    for y in range(-100 * l, 100 * l, l):
        item = canvas.find_overlapping(x, y, x, y)
        if len(item) == 1 and item[0] == 5:
            count += 1
print(count)

t.done()
'''


# Тип 23 № 37158
'''
# Исполнитель преобразует число на экране. У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Прибавить 2
# 3. Умножить на 3
#
# Первая команда увеличивает число на 1, вторая — на 2, третья — втрое.
# Программа для исполнителя — это последовательность команд.
# Сколько существует таких программ, которые исходное число 2 преобразуют в число 19 и при этом траектория вычислений программы проходит через 9 и не проходит через 12?


def F(a, b):
    if a > b or a == 12:
        return 0
    if a == b:
        return 1
    else:
        return F(a + 1, b) + F(a + 2, b) + F(a * 3, b)

print(F(2, 9) * F(9, 19))
'''
# Ответ: 650




# Тип 23 № 29129
'''
# Исполнитель РазДва преобразует число на экране. У исполнителя есть две команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Умножить на 2
#
# Сколько существует программ, которые преобразуют исходное число 3 в число 60, и при этом траектория вычислений содержит числа 13 и 30?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 2, b)

print(F(3, 13) * F(13, 30) * F(30, 60))
'''
# Ответ: 48

# endregion Урок:


# todo: Александр = [2, 5, 6, 8, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24], на следующем уроке: Порешать 25