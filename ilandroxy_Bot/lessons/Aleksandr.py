# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# Тип 9 № 27525
'''
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного измерения температуры воздуха на протяжении трёх месяцев.
# Сколько раз встречалась температура, которая была выше удвоенного минимального значения?

f = open('9.txt')
A = []
for s in f:
    M = [float(i) for i in s.replace(',', '.').split()]
    A += M

mini = min(A) * 2
count = 0
for x in A:
    if x > mini:
        count += 1
print(count)
'''

# Тип 9 № 40984
'''
# В каждой строке электронной таблицы записаны три натуральных числа, задающих длины трёх взаимно перпендикулярных рёбер прямоугольного параллелепипеда.
# Определите, сколько в таблице троек, для которых у заданного ими параллелепипеда для любых трёх граней с общей вершиной сумма площадей двух из них больше площади третьей.

f = open('9.txt')
count = 0
for s in f:
    M = sorted([int(i) for i in s.split()])
    pr1 = M[1] * M[2]
    summ_another = M[0] * M[1] + M[0] * M[2]
    if pr1 < summ_another:
        count += 1
print(count)
'''
# Ответ: 1878



# Тип 9 № 36864
'''
# Электронная таблица содержит результаты ежечасного измерения температуры воздуха на протяжении трёх месяцев.
# Определите, сколько раз за время измерений минимальная суточная температура оказывалась ниже среднесуточной на 8 и более градусов.

f = open('9.txt')
count = 0
for s in f:
    M = [float(i) for i in s.replace(',', '.').split()]
    if (sum(M)/len(M)) - min(M) > 8:
        count += 1
print(count)
'''
# Ответ: 51


# x = 12.231242141
# print(round(x, 2))
# print(round(x, 4))

# Тип 9 № 39238 Добавить в вариант
# Откройте файл электронной таблицы, содержащей в каждой строке три натуральных числа.
#
# Определите, сколько среди заданных троек чисел таких, которые могут быть сторонами прямоугольного треугольника.
'''
f = open('9.txt')
count = 0
for s in f:
    M = sorted([int(i) for i in s.split()])
    if M[0] ** 2 + M[1] ** 2 == M[2] ** 2:
        count += 1
print(count)
'''
# Ответ: 2



# Тип 7 № 13593
# Производится звукозапись музыкального фрагмента в формате стерео (двухканальная запись) с частотой дискретизации 32 кГц и 32-битным разрешением.
# Результаты записываются в файл, сжатие данных не производится; размер полученного файла 40 Мбайт.
# Затем производится повторная запись этого же фрагмента в формате моно (одноканальная запись) с частотой дискретизации 16 кГц и 16-битным разрешением. Сжатие данных не производилось.
#
# Укажите размер файла в Мбайт, полученного при повторной записи. В ответе запишите только целое число, единицу измерения писать не нужно.
'''
I = 40*2**23
t = round((I) / (2*32000*32))

s = (16 * 16000 * t) / (2**23)
print(s)
'''

# Тип 11 № 23911
'''
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль, состоящий из 25
# символов и содержащий только символы из 7-символьного набора: С, Д, А, М, Е, Г, Э.
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое и минимально возможное целое число байт.
# При этом используют посимвольное кодирование паролей, все символы кодируют одинаковым и минимально возможным количеством бит.
# Кроме собственно пароля, для каждого пользователя в системе хранятся дополнительные сведения, для чего выделено целое число байт;
# это число одно и то же для всех пользователей. Для хранения сведений о 50 пользователях потребовалось 1200 байт.
#
# Сколько байт выделено для хранения дополнительных сведений об одном пользователе? В ответе запишите только целое число – количество байт.


symbols = 25
alphabet = 7  # 7 < 2**3
i = 3  # бит
r = i * symbols  # 75
I = (r // 8) + 1

# result = 50 * (x + I) = 1200
result = (1200 - 50*I) / 50
print(result)
'''




# endregion Урок:  ******************************************************************************


# todo: Александр = [2, 5, 6, 8, 9, 12, 14+, 15, 16, 17, 19, 20, 21, 23, 24+, 25], на следующем уроке: