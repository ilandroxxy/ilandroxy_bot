# Домашка

'''
s = input("Введите строку значений: ")
x = input("Введите символ - разделитель: ")

M = [i for i in s]
print(M)

res = x.join(M)
print(res)
'''


# Тип 8 № 28685
'''
# Петя составляет 6-буквенные коды из букв П, Е, Т, Я.
# Каждую букву можно использовать любое количество раз или совсем не использовать,
# при этом нельзя ставить подряд две гласные или две согласные.
# Сколько различных кодов может составить Петя?

s = 'ПЕТЯ'

s1 = 'ПТ'
s2 = 'ИЯ'

mycount = 0
for a in s1:
    for b in s2:
        for c in s1:
            for d in s2:
                for e in s1:
                    for f in s2:
                        mycount += 1

print(mycount * 2)  # потому что в последовательности s2 s1 s2 s1 ... такое же кол-во слов
'''
# Ответ: 128



# Тип 8 № 7338
'''
# Рассматриваются символьные последовательности длины 6 в пятибуквенном алфавите {К, А, Т, Е, Р}.
# Сколько существует таких последовательностей, которые начинаются с буквы Р и заканчиваются буквой К?

s = "КАТЕР"
mycount = 0
for a in 'Р':
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in "К":
                        mycount += 1
print(mycount)
'''
# Ответ: 625

# Тип 8 № 16886
'''
# Матвей составляет 6-буквенные коды из букв М, А, Т, В, Е, Й.
# Каждую букву нужно использовать ровно 1 раз, при этом код не может начинаться с буквы Й и не может содержать сочетания АЕ.
# Сколько различных кодов может составить Матвей?

s = 'МАТВЕЙ'

mycount = 0
for a in 'МАТВЕ':
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        if 'АЕ' not in temp:
                            if 'М' in temp and 'А' in temp and "Т" in temp and "В" in temp and "Е" in temp and "Й" in temp:
                                mycount += 1
print(mycount)
print(6 ** 6)  # кол-во всех слов, если бы не было условий
'''



s = 'WDAHSBFDHSJBDAHJDBSJDAJHSDSAJDASDW'
print(s.index('A'), s.rindex("A"), s.rindex("A") - s.index('A'))
n = len(s[s.index('A'): s.rindex("A")])
print(s[s.index('A'): s.rindex("A")], n)



# Тип 24 № 36879 Добавить в вариант
# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# В строках, содержащих менее 25 букв G, нужно определить и вывести максимальное расстояние между одинаковыми буквами в одной строке.
#
# Пример. Исходный файл:
# GIGA
# GABLAB
# NOTEBOOK
# AGAAA
# В этом примере во всех строках меньше 25 букв G.
# Самое большое расстояние между одинаковыми буквами — в третьей строке между буквами O, расположенными в строке на 2-й и 7-й позициях.
# В ответе для данного примера нужно вывести число 5.






f = open('24.txt', 'r')
M = f.readlines()
Alphabet = 'QWERTYUIOPASDFGHJKLZXCVBNM'

for s in M:
    if s.count('G') < 25: # В строках, содержащих менее 25 букв G
        maxi = 0  # это промежуточный счетчик для строки
        for i in Alphabet:  # просто пробегаем алфавит и проверяем общее условие
            if maxi < s.rindex(i) - s.index(i):
                maxi = s.rindex(i) - s.index(i)
        print(maxi)

# Отвeт: 1001

