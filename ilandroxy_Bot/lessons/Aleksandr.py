# https://inf-ege.sdamgia.ru/test?id=11282251&nt=True&pub=False


# Тип 2 № 36857
'''
# Логическая функция F задаётся выражением ((¬x ∨ z) ≡ (y ∧ ¬w)) → (z ∧ y).
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий неповторяющиеся строки.
# Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных x, y, z, w.

print("x y z w")
for x in range(2):  # [0, 2) - 0, 1
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = ( (((not(x)) or z) == (y and (not(w)))) <= (z and y) )
                if F == False:
                    print(x, y, z, w)
'''



# Тип 5 № 17370
import zipimport

'''
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1.Строится двоичная запись числа N.
# 2.Удаляется первая слева единица и все следующие непосредственно за ней нули.
# Если после этого в числе не остаётся цифр, результат этого действия считается равным нулю.
# 3.Полученное число переводится в десятичную запись.
# 4.Новое число вычитается из исходного, полученная разность выводится на экран.
#
# Пример. Дано число N = 11. Алгоритм работает следующим образом.
# 1.Двоичная запись числа N: 1011.
# 2.Удаляется первая единица и следующий за ней ноль: 11.
# 3.Десятичное значение полученного числа 3.
# 4.На экран выводится число 11 – 3 = 8.
#
# Сколько разных значений будет показано на экране автомата при последовательном вводе всех натуральных чисел от 100 до 3000?

M = []
for n in range(100, 3000+1):
    temp = n
    N = []
    while n > 0:
        N.append(n % 2)
        n //= 2
    N.reverse()

    del N[0]

    N.reverse()
    res = 0
    for i in range(0, len(N)):
        res += N[i] * 2 ** i

    x = temp - res
    if x not in M:
        M.append(x)
print(M, len(M))
'''
# Ответ: 6



# Тип 6 № 33508
# Определите, при каком наименьшем введённом значении переменной s программа выведет число 60.
# Для Вашего удобства программа представлена на четырёх языках программирования.
'''
for i in range(6, 1000):
    s = i
    s = (s + 1) // 7
    n = 36
    while s < 2050:
        s = s * 2
        n = n + 3
    if n == 60:
        print(i)
'''
# Ответ 62




# Тип 8 № 3698
'''
# Все 6-буквенные слова, составленные из букв Б, К, Ф, записаны в алфавитном порядке и пронумерованы.
# Вот начало списка:
# 1.ББББББ
# 2.БББББК
# 3.БББББФ
# 4.ББББКБ
#
# Запишите слово, которое стоит на 345-м месте от начала списка.

s = 'БКФ'
count = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        if count == 345:
                            print(temp)
                        count += 1
'''
# Ответ ККБФБФ



# КОРТЕЖ
'''
M = [1, 2, 3, 4, 5]  # list()
M[1] = '*'
print(M)

A = tuple(M)
print(A)

M = list(A)
print(M)

def Func(a,b,c):
    x, y, z = a, b, c
    return x, y, z  # если функция выводит несколько значнинй, то она выводит их в виде кортежа

a = int(input())
b = int(input())
c = int(input())

x = Func(a, b, c)
print(x)
print(type(x))
'''





# Тип 12 № 10290
'''
# Какая строка получится в результате применения приведённой ниже программы к
# строке, состоящей из цифры 1, за которой следуют 80 идущих подряд цифр 8?
# В ответе запишите полученную строку.

# ПОКА нашлось (18) ИЛИ нашлось (288) ИЛИ нашлось (3888)
#   ЕСЛИ нашлось (18)
#       ТО заменить (18, 2)
#   ИНАЧЕ ЕСЛИ нашлось (288)
#       ТО заменить (288, 3)
#   ИНАЧЕ заменить (3888, 1)
# КОНЕЦ ПОКА


s = '1' + '8' * 80
while "18" in s or "288" in s or "3888" in s:
    if "18" in s:
        s = s.replace("18", "2", 1)
    elif "288" in s:
        s = s.replace("288", "3", 1)
    else:
        s = s.replace('3888', '1', 1)
print(s)
'''
# Ответ 28



# Тип 14 № 13743
'''
# Значение арифметического выражения: 49**10 + 7**30 – 49 — записали в системе счисления с основанием 7.
# Сколько цифр «6» содержится в этой записи?


x = 49**10 + 7**30 - 49
M = []
while x > 0:
    M.append(x % 7)
    x //= 7
M.reverse()
print(M, M.count(6))
'''
# Ответ 18





# Тип 16 № 4642
'''
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
# F(1) = 3
# F(n) = F(n–1) * (n–1), при n >1
# Чему равно значение функции F(6)?
# В ответе запишите только натуральное число.


def F(n):
    if n == 1:
        return 3
    if n > 1:
        return F(n - 1) * (n - 1)

print(F(6))
'''
# Ответ 360

# Типы данных
'''
M = [1, 2.0, '3', True, [1, 2, 3], (1, 2, 3)]
for i in range(0, len(M)):
    print(type(M[i]))
    
M = (1, 2.0, '3', True, [1, 2, 3], (1, 2, 3))
M[4][1] = '*'
print(M)
'''


# Тип 17 № 37372
'''
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, у которых
# разность элементов кратна 45 и хотя бы один из элементов кратен 18, затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.

f = open("17.txt", 'r')
M = [int(i) for i in f]
maxi = -99999
count = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] - M[j]) % 45 == 0 or (M[j] - M[i]) % 45 == 0:
            if M[i] % 18 == 0 or M[j] % 18 == 0:
                count += 1
                if maxi < (M[i] - M[j]):
                    maxi = (M[i] - M[j])
print(count, maxi)
'''
# Ответ 92471 9945

