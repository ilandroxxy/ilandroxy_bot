# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************


'''
def f(n):
    if n <= 10:
        return n
    if n >= 10000:
        return 1
    if 10 < n < 10000 and n % 2 == 0:
        return n % 10 + f(n+2)
    if 10 < n < 10000 and n % 2 == 1:
        return f(n-2) - (n-1) % 10
print(f(4500))
'''


# № 4736 (Уровень: Базовый)
# (А. Куканова) Алгоритм вычисления значения функции

# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)= 1 при n=1;
# F(n)= n * F(n-1)-1, если n>1.
# Чему равно значение выражения F(1000)/F(997)? В ответе укажите только целую часть числа.

# F(1000) = 1000 * F(999) - 1
# F(999) = 999 * F(998) - 1
# F(998) = 998 * F(997) - 1  / F(997)
'''
print(1000 * (999 * (998 * 1 - 1) - 1) - 1)
'''
# 997001999
# 996001999


# № 6596 Пробник ИМЦ СПб (Уровень: Базовый)
# Алгоритм вычисления функции
# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)=1, если n=1
# F(n)= F(n-1)*(2n-3), если n>1.
# Чему равно значение выражения F(516)/F(513)?

# F(516) = F(515)*(2*516-3)
# F(515) = F(514)*(2*515-3)
# F(514) = F(513)*(2*514-3) / F(513)
'''
print((2*516-3) * (2*515-3) * (2*514-3))
'''
# Показать ответ: 1083202575


# № 6088 /dev/inf 02.2023 (Уровень: Средний)
# (А. Рогов) Алгоритм вычисления значения функции

# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)=1 при n>3000;
# F(n)= F(n+1)-n+1, если n≤3000 и при этом n чётно;
# F(n)= F(n+2)-2*n+2, если n≤3000 и при этом n нечётно.
# Чему равно значение выражения 2*F(39)-2*F(34)?

# 2*F(39)-2*F(34)  ==>  2 * (F(39)-F(34))

# F(34) = F(35)-33
# F(35) = F(37)-68
# F(37) = F(39)-72  - F(39)
'''
print(2 * -(- 72 - 68 - 33))
'''
# Показать ответ: 346


# № 7601 Досрочная волна 2023 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**8, найдите все числа, соответствующие маске 1*****2??36*****1,
# делящиеся на 273 без остатка. В ответе запишите в первом столбце таблицы все найденные
# числа в порядке возрастания, а во втором столбце – соответствующие им результаты деления этих чисел на 273.
'''
from fnmatch import *
for x in range(273, 10**8, 273):   # не превышающих 10**8 and делящиеся на 273 без остатка
    if fnmatch(str(x), '12??36*1'):  # соответствующие маске 12??36*1
        print(x, x//273)
'''
# Показать ответ:
# 1271361 4657
# 12633621 46277
# 12663651 46387
# 12693681 46497



# № 7013 (Уровень: Средний)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Найдите все натуральные числа, не превосходящие 10**9, для которых выполнены все условия:
# - соответствуют маске *31*65?;
# - делятся на 31 и 2031 без остатка;
# - количество делителей числа является результатом любой степени двойки
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# справа от каждого числа их частное от деления на 2031.
'''
from fnmatch import *
M = [2**i for i in range(1, 100)]
for x in range(2031, 10**9, 2031):
    if fnmatch(str(x), '*31*65?'):
        if x % 31 == 0:
            divisors = set()
            for j in range(1, int(x**0.5)+1):
                if x % j == 0:
                    divisors.add(j)
                    divisors.add(x//j)
            if len(divisors) in M:
                print(x, x//2031)
'''
# Показать ответ:
# 53831655 26505
# 333126651 164021
# 512313657 252247
# 647931651 319021
# 831966654 409634


# № 6095 /dev/inf 02.2023 (Уровень: Базовый)
# (А. Рогов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**8, найдите все числа, соответствующие маске *15*7424,
# которые делятся без остатка только на одно из чисел 111, 113, 127.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на одно из чисел 111, 113, 127,
# на которое число делится без остатка.
from fnmatch import *
M = []
for x in range(111, 10**8, 111):
    if fnmatch(str(x), '*15*7424'):
        M.append([x, x//111])

for x in range(113, 10**8, 113):
    if fnmatch(str(x), '*15*7424'):
        M.append([x, x//113])

for x in range(127, 10**8, 127):
    if fnmatch(str(x), '*15*7424'):
        M.append([x, x//127])

for x in sorted(M):
    print(*x)

# Показать ответ:
# 1587424 14048
# 15147424 134048
# 15227424 137184
# 15457424 121712
# 28157424 221712
# 85157424 767184

# endregion Урок:  ******************************************************************************


# todo: Александр = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14+, 15, 16, 17, 18, 19-21, 22, 23, 24+, 25]
# todo: Никита КЕГЭ = [5, 8, 9, 12, 14, 15, 25]
# на прошлом уроке: Разобрали сложные задачи с домашки: 14, 24 повторили с самопрорешиванием
# на следующем уроке: