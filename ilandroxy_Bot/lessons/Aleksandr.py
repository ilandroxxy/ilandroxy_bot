# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************


# № 6884 OpenFIPI (Уровень: Базовый)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
#
# 2. К этой записи дописываются справа и слева ещё по одному или два разряда по следующему правилу: если N чётное,
# то в конец числа (справа) дописывается нуль, а в начало числа (слева) дописывается единица; если N нечётное,
# то в конец числа (справа) и в начало числа (слева) дописываются по две единицы.
#
# Например, для числа 13 двоичная запись 1101 преобразуется в запись 11110111.
#
# Полученная таким образом запись (в ней на два или четыре разряда больше, чем в записи исходного числа N) является
# двоичной записью искомого числа R.
#
# Укажите наименьшее число R, превышающее 225, которое может являться результатом работы данного алгоритма. В ответе
# это число запишите в десятичной системе счисления.
'''
R = []
for n in range(1, 10000):
    s = bin(n)[2:]

    if n % 2 == 0:
        s = '1' + s + '0'
    else:
        s = '11' + s + '11'

    r = int(s, 2)
    if r > 225:
        R.append(r)
print(min(R))
'''
# Ответ: 228


# № 6892 OpenFIPI (Уровень: Базовый)
# Определите количество шестизначных чисел, записанных в шестеричной системе счисления,
# в записи которых ровно одна цифра 2, при этом никакая нечётная цифра не стоит рядом с цифрой 2.
'''
s = '012345'
count = 0
for a in '12345':
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        if slovo.count('2') == 1:
                            # if '12' not in slovo and '21' not in slovo and '32' not in slovo and '23' not in slovo and '52' not in slovo and '25' not in slovo:
                            if all(i not in slovo for i in '12 21 32 23 52 25'.split()):
                                count += 1
print(count)
'''
'''
import itertools as t
count = 0
for s in t.product('012345', repeat=6):
    slovo = ''.join(s)
    if slovo.count('2') == 1 and slovo[0] != '0':
        if all(i not in slovo for i in '12 21 32 23 52 25'.split()):
            count += 1
print(count)
'''
# Показать ответ: 3700


# № 6897 OpenFIPI (Уровень: Средний)
# Откройте файл электронной таблицы, содержащей в каждой строке четыре натуральных числа.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
#
# – наибольшее из четырёх чисел меньше суммы трёх других;
# – четыре числа нельзя разбить на две пары чисел с равными суммами.
#
# В ответе запишите только число.
'''
from itertools import *
def F(M):
    for s in permutations(M, 4):
        if sum(s[:2]) == sum(s[2:]):
            return False
    return True

count = 0
for s in open('9.txt'):
    # M = sorted([int(i) for i in s.split()])
    # if M[3] < M[0] + M[1] + M[2]:
    M = [int(i) for i in s.split()]
    if max(M) < sum(M) - max(M):
        if F(M):
            count += 1
print(count)
'''
# Вариант 2
'''
from itertools import *

count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    if max(M) < sum(M) - max(M):
        if all((sum(s[:2]) != sum(s[2:])) for s in permutations(M, 4)):
            count += 1
print(count)
'''
# Ответ: 2396


# № 7086 OpenFIPI (Уровень: Базовый)
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m»;
# и пусть на числовой прямой дан отрезок B = [50; 70]. Для какого наибольшего натурального числа А формула
#
# ДЕЛ(x, A) \/ ((x ∈ B) → ¬ДЕЛ(x, 16))
#
# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?
#
# Показать ответ: 64
'''
def F(A, x):
    B = 50 <= x <= 70
    return (x % A == 0) or (B <= (x % 16 != 0))

for A in range(1, 10000):
    if all(F(A, x) for x in range(1, 10000)):
        print(A)
'''

# Вариант 2
'''
def F(A, x):
    B = 50 <= x <= 70
    return (x % A == 0) or (B <= (x % 16 != 0))

print(max([A for A in range(1, 10000) if all(F(A, x) for x in range(1, 10000))]))
'''

# Вариант 3
print(max([A for A in range(1, 10000) if all(((x % A == 0) or ((50 <= x <= 70) <= (x % 16 != 0))) for x in range(1, 10000))]))
# Ответ: 64
# endregion Урок:  ******************************************************************************


# todo: Александр = [2, 3, 5, 6, 8, 9, 12, 14+, 15, 16, 17, 18, 19-21, 22, 23, 24+, 25]
# на прошлом уроке: Прорешивали первый вариант нового Фипи, рассмотрели до 15 задачи.
# на следующем уроке: