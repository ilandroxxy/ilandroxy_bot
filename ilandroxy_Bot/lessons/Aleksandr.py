# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************


# Тип 24 № 27696 i
# Текстовый файл состоит не более чем из 106 символов L, D и R.
# Определите длину самой длинной последовательности, состоящей из символов L.
# Хотя бы один символ L находится в последовательности.
#
# Для выполнения этого задания следует написать программу. Ниже приведён файл,
# который необходимо обработать с помощью данного алгоритма.
'''
# Вариант 1
s = open('24.txt').readline()
count = 1  # длина промежуточной последовательности
Maxcount = 0  # хранить длину максимальной
for i in range(0, len(s)-1):  # делаем -1, чтобы при переборе пар не выйти за диапазон range
    # if s[i] == 'L' and s[i+1] == 'L':
    if s[i:i+2] == 'LL':
        count += 1
        Maxcount = max(Maxcount, count)
    else:
        count = 1
print(Maxcount)


# Вариант 2
s = open('24.txt').readline()
s = s.replace('D', ' ').replace('R', ' ')
M = [len(i) for i in s.split()]
print(max(M))

# Вариант 3
print(open('24.txt').readline())
print(len('LLLLLLL'))
'''
# Ответ: 7


# Тип 24 № 40740
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC...Z).
# Определите максимальное количество идущих подряд символов,
# среди которых нет ни одной буквы A и при этом не менее трёх букв E.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
s = open('24.txt').readline()
s = s.replace('A', ' ')
M = [len(i) for i in s.split() if i.count('E') >= 3]
print(max(M))
'''
# Ответ: 282


# Тип 24 № 27699 i
# Текстовый файл состоит не более чем из 106 символов L, D и R.
# Определите максимальную длину цепочки вида LDRLDRLDR...
# (составленной из фрагментов LDR, последний фрагмент может быть неполным).
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# Вариант 1
'''
print(open('24.txt').readline())
print(len('LDRLDRLDRLDRLDR'))
'''
# Ответ: 15



# Тип 24 № 27421 i
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
s = open('24.txt').readline()
count = 1
Maxcount = 0
for i in range(0, len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        Maxcount = max(Maxcount, count)
    else:
        count = 1
print(Maxcount)
'''
# Ответ: 35


# Тип 24 № 45258
# Текстовый файл состоит из символов A, B и C.
#
# Определите максимальное количество идущих подряд пар символов AB или CB в прилагаемом файле.
#
# Искомая подпоследовательность должна состоять только из пар AB,
# или только из пар CB, или только из пар AB и CB в произвольном порядке следования этих пар.
'''
s = open('24.txt').readline()
s = s.replace('AB', '*').replace("CB", '*')
s = s.replace('A', ' ').replace('B', ' ').replace('C', ' ')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 65


# Тип 24 № 36037
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z. Определите максимальное
# количество идущих подряд символов, среди которых нет подстроки XZZY. Для выполнения этого задания следует написать
# программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
s = open('24.txt').readline()
s = s.replace('XZZY', ' ')
M = [len(i) for i in s.split()]
print(3 + max(M) + 3)  # XZZ  + M + ZZY
'''
# Ответ: 1713.


# Тип 24 № 46982
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите количество
# групп из идущих подряд не менее 12 символов, которые начинаются и заканчиваются буквой E и не содержат других букв
# E (кроме первой и последней) и букв F.
'''
# Вариант 1
s = open('24.txt').readline()
s = s.replace('E', ' ')
M = [i for i in s.split() if 'F' not in i and len('E' + i + 'E') >= 12]
# M = [i for i in s.split() if 'F' not in i and len(i) >= 10]
print(len(M))

# Вариант 2
print(len([i for i in open('24.txt').readline().split('E') if 'F' not in i and len(i) >= 10]))
'''
# Ответ: 9665

# Тип 24 № 33769
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите символ,
# который чаще всего встречается в файле после двух одинаковых символов.
'''
s = open('24.txt').readline()
R = []
for i in range(0, len(s)-2):
    if s[i] == s[i+1]:
        R.append(s[i+2])

alphabet1 = 'QWERTYUIOPASDFGHJKLZXCVBNM'

alphabet2 = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])

import string
alphabet3 = string.ascii_uppercase

M = []
for a in alphabet1:
    M.append([R.count(a), a])

print(max(M))
'''
# Ответ: К



# Тип 24 № 33103
# Текстовый файл содержит строки различной длины. Строки содержат только заглавные буквы латинского алфавита (
# ABC…Z). Определите количество строк, в которых буква A встречается чаще, чем буква E.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
count = 0
s = open('24.txt').readlines()
for my_string in s:
    if my_string.count('E') < my_string.count('A'):
        count += 1
print(count)
'''
# Ответ: 485



# Тип 24 № 47228 i
# Текстовый файл состоит из символов A, C, D, F и O.
#
# Определите максимальное количество идущих подряд пар символов вида
#
# согласная + гласная.
#
# Для выполнения этого задания следует написать программу.
'''
# Код решения Вариант 2
s = open('24.txt').readline()
s = s.replace('C', 'S').replace('D', 'S').replace('F', 'S')
s = s.replace('A', 'G').replace('O', 'G')
s = s.replace('SG', '*')
s = s.replace('S', ' ').replace('G', ' ')
print(max([len(i) for i in s.split()]))
'''
# Ответ: 95

# endregion Урок:  ******************************************************************************


# todo: Александр = [2, 3, 5, 6, 8, 9, 12, 14+, 15, 16, 17, 18, 19-21, 22, 23, 24+, 25]
# на прошлом уроке: Повторили один 18 номер на энергию со стенками. Можно проработали все задачи 24 номера (кроме задач на строки).
# на следующем уроке: Письменная часть: 1, 4, 7, 11, 13 нмоера