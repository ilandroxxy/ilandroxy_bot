# region Домашка:  ******************************************************************************

# №2
'''
print("x y z w")
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                temp = ((z and (w <= y)) and (not(x)))
                if temp == 1:
                    print(x, y, z, w)
'''

# Тип 5
'''
for n in range(1, 1000):
    s = bin(n)[2:]

    summ = s.count('1')
    if summ % 2 == 0:
        s += '0'
        s = '1' + s[2:]
    else:
        s = '1'
        s = '11' + s[2:]

    r = int(s, 2)
    
    if r > 49:
        print(n)
        break
'''
# Ответ: 43


# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# символ «?» означает ровно одну произвольную цифру;
# символ «*» означает любую последовательность пИфО произвольной длины;
# в том числе «*» может задавать и пустую последовательность

# Среди натуральных чисел, не превышающих 10**8, найдите все числа, соответствующие маске 1?234*6, делящиеся на 149 без остатка.

# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце - соответствующие им результаты деления этих чисел на 149.

# print(10**8)
# print('1?234***6')
'''
M = [str(i) for i in range(0, 100)]
M.append('')

my_dict = {}
for x in '0123456789':
    for y in M:
        A = int(f'1{x}234{y}6')
        if A % 149 == 0:
            my_dict[A] = A // 149

for key in sorted(my_dict):
    print(key, my_dict[key])
'''
#  Ответ:
# 112346 754
# 12234986 82114
# 13234776 88824
# 14234566 95534
# 15234356 102244
# 16234146 108954

# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

'''
A = []
for s in open('9.txt'):
    A += [float(i) for i in s.replace(',', '.').split()]

count = 0
for x in A:
    if round(sum(A) / len(A), 1) < x < 30:
        count += 1
print(count)
'''
# Ответ: 633



# Тип 9 № 47213

# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
#
# — в строке только одно число повторяется ровно два раза, остальные числа различны;
#
# — среднее арифметическое неповторяющихся чисел строки не больше суммы повторяющихся чисел.
#
# В ответе запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    A = set(M)
    if len(A) == len(M) - 1:
        poftor = sum(M) - sum(A)
        if ((sum(M) - poftor * 2) / 4) <= (poftor * 2):
            count += 1
print(count)
'''


# Тип 17 № 46975
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых один из двух элементов делится на 3,
# а другой меньше среднего арифметического всех чётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.

f = open('17.txt')
A = [int(i) for i in f if int(i) % 2 == 0]
sred = sum(A) / len(A)

f = open('17.txt')
M = [int(i) for i in f]

count = 0
maxi = 0
for i in range(1, len(M)-1):
    if (M[i] % 3 == 0 and M[i+1] < sred) or (M[i+1] % 3 == 0 and M[i] < sred):
        count += 1
        maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# Ответ: 1711 14666



# Тип 17 № 37344
'''
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, для которых произведение
# элементов делится без остатка на 10, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.


f = open('17.txt')
M = [int(i) for i in f]

count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] * M[j]) % 10 == 0:
            count += 1
            maxi = max(maxi, M[i] + M[j])
print(count, maxi)
'''
# 13510315 19999



# Тип 24 № 27692
'''
# Текстовый файл состоит не более чем из 10**6 символов A, B и C. Определите максимальное количество идущих подряд символов B.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.


s = open('24.txt').readline().replace('A', ' ').replace('C', ' ').split()
print(max([len(i) for i in s]))
'''
# Ответ: 11

# Тип 24 № 35998
'''
# Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# В строках, содержащих менее 25 букв A, нужно определить и вывести максимальное расстояние между одинаковыми буквами в одной строке.

import string
alphabet = string.ascii_uppercase  # ABCDEFGHIJKLMNOPQRSTUVWXYZ

S = open('24.txt').readlines()
print(len(S))

A = []
for x in S:
    if x.count('A') < 25:
        A.append(x)
print(len(A))

maxi = 0
for x in A:
    for alp in alphabet:
        maxi = max(maxi, x.rindex(alp) - x.index(alp))
print(maxi)
'''


# Тип 8 № 3571
'''
# Все 5-буквенные слова, составленные из букв С, Л, О, Н записаны в алфавитном порядке и пронумерованы.
#
# Вот начало списка:
# 1. ЛЛЛЛЛ
# 2. ЛЛЛЛН
# 3. ЛЛЛЛО
# 4. ЛЛЛЛС
# 5. ЛЛЛНЛ

# Запишите слово, которое стоит под номером 1020.

s = sorted(["С", "Л", "О", "Н"])
M = ['0']
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    M.append(temp)
print(M[1020])
'''



# endregion Урок:  ******************************************************************************


# todo: Александр = [2, 5, 6, 8, 9, 12, 14+, 15, 16, 17, 19, 20, 21, 23, 24+, 25]
# на прошлом уроке: Разбирали следующий вариант со школы, и прорешали задачи 9, 17, 24
# на следующем уроке: