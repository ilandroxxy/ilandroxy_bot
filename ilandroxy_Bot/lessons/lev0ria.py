# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 5 №28897
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу:
#  а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается
#  в конец числа (справа).
#  б) над этой записью производятся те же действия — справа дописывается остаток от деления суммы цифр на 2.
#
# Укажите такое наименьшее число N, для которого результат работы алгоритма больше 125.
# В ответе это число запишите в десятичной системе счисления.
'''
for n in range(1, 1000):
    s = bin(n)[2:]  # oct(n)[2:] - восьмеричная, hex(n)[2:] - 16
    for _ in range(2):
        s = s + str(s.count('1') % 2)
    r = int(s, 2)
    if r > 125:
        print(n)
        break


# Вариант 2
def my_bin(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    s = ''
    while number > 0:
        s += alphabet[number % system]
        number //= system
    return s[::-1]


for n in range(1, 1000):
    s = my_bin(n, 2)
    for _ in range(2):
        s = s + str(s.count('1') % 2)
    r = int(s, 2)
    if r > 125:
        print(n)
        break
'''
# Ответ: 31


# Тип 5 №51974
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Если сумма цифр десятичной записи заданного числа нечётна,
# то в конец двоичной записи дописывается 1, если чётна — 0.
# 3−4. Пункт 2 повторяется для вновь полученных чисел ещё два раза.
# 5. Результатом работы алгоритма становится десятичная запись полученного числа R.
#
# Определите наименьшее возможное значение R >1028, которое может получиться в результате работы алгоритма.
'''
R = []
for n in range(1, 10000):
    s = bin(n)[2:]
    for i in range(3):
        summa = sum([int(x) for x in str(int(s, 2))])
        if summa % 2 != 0:
            s = s + '1'
        else:
             s = s + '0'
    r = int(s, 2)
    if r > 1028:
        R.append(r)
print(min(R))
'''
# Ответ: 1035


# Тип 5 №48426
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. В полученной записи все нули заменяются на единицы,
# все единицы — на нули. Из полученного числа удаляются ведущие нули.
# 3. Результат переводится в десятичную систему счисления.
# 4. Результатом работы алгоритма становится разность исходного числа N и числа, полученного на предыдущем шаге.
# При каком наименьшем N в результате работы алгоритма получится R = 999?
'''
for n in range(1, 10000):
    s = bin(n)[2:]
    s = s.replace('1', '*').replace('0', '1').replace('*', '0')
    r = int(s, 2)
    R = n - r
    if R == 999:
        print(n)
        break
'''
# Ответ: 1011


# Тип 5 №59827
# На вход алгоритма подается натуральное число N. Алгоритм строит по нему новое число R следующим образом:
#
# 1) Строится троичная запись числа N
# 2) Если N кратно 3, то в конец записи дописываются две последние троичные цифры
# 3) Если N не кратно 3, то остаток от деления умножается
# на 5, переводится в троичную систему и затем дописывается к числу
#
# Полученная таким образом запись является троичной записью искомого числа R.
#
# Укажите максимальное число R, не превышающее 173, которое может быть получено с помощью описанного алгоритма.
# В ответе запишите это число в десятичной системе счисления.
'''
def my_bin(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    s = ''
    while number > 0:
        s += alphabet[number % system]
        number //= system
    return s[::-1]


R = []
for n in range(1, 1000):
    s = my_bin(n, 3)
    if n % 3 == 0:
        s += s[-2:]
    else:
        x = (n % 3) * 5
        s += my_bin(x, 3)
    r = int(s, 3)
    if r < 173:
        R.append(r)
        
print(max(R))
'''
# Ответ: 162


# Тип 5 №33750
# Алгоритм получает на вход натуральное число N>1 и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Вместо последней (самой правой) двоичной цифры дважды записывается вторая слева цифра двоичной записи.
# 3. Результат переводится в десятичную систему.

# При каком наименьшем числе N в результате работы алгоритма получится R>76?
# В ответе запишите это число в десятичной системе счисления.

# endregion Урок: ******************************************************************

# Лев = [2.1, 5.1, 6.1, 14.1]
# КЕГЭ  = []
# на следующем уроке:
