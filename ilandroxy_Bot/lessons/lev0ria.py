# region –î–æ–º–∞—à–∫–∞: ******************************************************************

# –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ —Å—É–º–º—ã —Ü–∏—Ñ—Ä —Å—Ç—Ä–æ–∫–∏
'''
s = '2193219 084'
summa = sum([int(x) for x in s if x.isdigit()])
print(summa)
'''


# –ö–ï–ì–≠ ‚Ññ 3901 –î–∂–æ–±—Å 14.05.2022 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π) üå∂
# –ù–∞–∑–æ–≤—ë–º –º–∞—Å–∫–æ–π —á–∏—Å–ª–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã:
# ‚Äî —Å–∏–º–≤–æ–ª ¬´?¬ª –æ–∑–Ω–∞—á–∞–µ—Ç —Ä–æ–≤–Ω–æ –æ–¥–Ω—É –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É;
# ‚Äî —Å–∏–º–≤–æ–ª ¬´*¬ª –æ–∑–Ω–∞—á–∞–µ—Ç –ª—é–±—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã;
# –≤ —Ç–æ–º —á–∏—Å–ª–µ ¬´*¬ª –º–æ–∂–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å –∏ –ø—É—Å—Ç—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.
#
# –ù–∞–π–¥–∏—Ç–µ 5 –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª, –±–æ–ª—å—à–∏—Ö 700000, –∫–æ—Ç–æ—Ä—ã–µ –∫—Ä–∞—Ç–Ω—ã 13
# –∏ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç –Ω–∏ –ø–æ–¥ –æ–¥–Ω—É –∏–∑ —Ç—Ä–µ—Ö –º–∞—Å–æ–∫: *0??3*, *4??2 –∏ *1*.
# –ù–∞–π–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –∑–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è, —Å–ø—Ä–∞–≤–∞ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∑–Ω–∞—á–µ–Ω–∏–π —Ä–∞–∑—Ä—è–¥–æ–≤.
'''
from fnmatch import *
k = 0
for x in range(700011, 701000, 13):
    if not fnmatch(str(x), '*0??3*') and not fnmatch(str(x), '*04??2') and not fnmatch(str(x), '*1*'):
        print(x, sum([int(s) for s in str(x) if s.isdigit()]))
        k += 1
        if k == 5:
            break
'''


# –ö–ï–ì–≠ ‚Ññ 2591 (–£—Ä–æ–≤–µ–Ω—å: –°—Ä–µ–¥–Ω–∏–π) üå∂
# –°—Ä–µ–¥–∏ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏—Ö —á–∏—Å–ª–æ–≤–æ–º—É –æ—Ç—Ä–µ–∑–∫—É [125697; 125721], –Ω–∞–π–¥–∏—Ç–µ —á–∏—Å–ª–∞,
# –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –¥–≤—É—Ö —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–æ—Å—Ç—ã—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π.
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –∑–∞–ø–∏—à–∏—Ç–µ —ç—Ç–∏ –¥–≤–∞ –¥–µ–ª–∏—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ
# —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —ç—Ç–∏—Ö –¥–≤—É—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π.
# –î–µ–ª–∏—Ç–µ–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ —Ç–∞–±–ª–∏—Ü—ã —Ç–∞–∫–∂–µ –¥–æ–ª–∂–Ω—ã —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è.
'''
def is_prime(number):
    if number == 1:
        return False
    for i in range(2, int(number ** 0.5) + 1):
        if number % i == 0:
            return False
    return True

def divisors(x):
    div = []
    for i in range(1, int(x**0.5)+1):
        if x % i == 0:
            if is_prime(i) and is_prime(x // i):
                div += [i, x // i]
    return sorted(set(div))


for x in range(125697, 125722):
    div = divisors(x)
    if len(div) == 2:
        print(div[0], div[1])
'''


# –ö–ï–ì–≠ ‚Ññ 5736 (–£—Ä–æ–≤–µ–Ω—å: –°—Ä–µ–¥–Ω–∏–π) (–î. –¢–∞—Ä–∞—Å–∫–∏–Ω) üå∂
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç —á–∏—Å–ª–∞ –±–æ–ª—å—à–µ 10**9 –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –∏–∑ –Ω–∏—Ö —á–∏—Å–ª–∞-–ø–∞–ª–∏–Ω–¥—Ä–æ–º—ã,
# —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–∏–±–æ–ª—å—à–∏–π –¥–µ–ª–∏—Ç–µ–ª—å (–æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç 1 –∏ —Å–∞–º–æ–≥–æ —á–∏—Å–ª–∞) –∫—Ä–∞—Ç–µ–Ω 7.
# –í—ã–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–µ 5 —á–∏—Å–µ–ª, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–±–µ—Ä–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞, –∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–±–æ–ª—å—à–∏–π –¥–µ–ª–∏—Ç–µ–ª—å.
'''
def divisors(x):
    div = []
    for j in range(2, int(x ** 0.5)+1):  # (–æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç 1 –∏ —Å–∞–º–æ–≥–æ —á–∏—Å–ª–∞)
        if x % j == 0:
            div += [j, x // j]
    return sorted(set(div))


k = 0
for x in range(10**9+1, 10**10):
    if str(x) == str(x)[::-1]:  # –≤—ã–±–∏—Ä–∞–µ—Ç –∏–∑ –Ω–∏—Ö —á–∏—Å–ª–∞-–ø–∞–ª–∏–Ω–¥—Ä–æ–º—ã
        d = divisors(x)
        if max(d) % 7 == 0:
            print(x, max(d))
            k += 1
            if k == 5:
                break
'''
# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************


# region –£—Ä–æ–∫: ******************************************************************
'''
from itertools import permutations

table = '12 18 21 23 24 28 32 36 37 42 46 57 58 63 64 73 75 78 81 82 85 87'
graph = '–ê–ë –ë–ê –ê–ò –ò–ê –ê–ñ –ñ–ê –ò–ñ –ñ–ò –ñ–ï –ï–ñ –ñ–î –î–ñ –ï–î –î–ï –î–ë –ë–î –ë–í –í–ë –í–ì –ì–í –ì–î –î–ì'
for per in permutations('–ñ–î–í–ì–ë–ê–ï–ò'):
    new_table = table
    #   0    1    2    3    4    5    6    7
    # ('–ò', '–ï', '–ñ', '–î', '–ì', '–í', '–ë', '–ê')
    for i in range(1, 8+1):
        new_table = new_table.replace(str(i), per[i-1])
    if set(new_table.split()) == set(graph.split()):
        print('1 2 3 4 5 6 7 8')
        print(*per)
'''

'''
from itertools import permutations

table = '14 17 18 23 25 26 32 34 38 41 43 47 48 52 56 58 62 65 71 74 81 83 84 85'
graph = '–ê–ë –ë–ê –ê–ò –ò–ê –ò–ë –ë–ò –ë–ñ –ñ–ë –ò–ñ –ñ–ò –ñ–ï –ï–ñ –ï–î –î–ï –î–ì –ì–î –ï–ì –ì–ï –ì–í –í–ì –í–ñ –ñ–í –ë–í –í–ë'
for per in permutations('–ñ–î–í–ì–ë–ê–ï–ò'):
    new_table = table
    #   0    1    2    3    4    5    6    7
    # ('–ò', '–ï', '–ñ', '–î', '–ì', '–í', '–ë', '–ê')
    for i in range(1, 8+1):
        new_table = new_table.replace(str(i), per[i-1])
    if set(new_table.split()) == set(graph.split()):
        print('12345678')
        print(''.join(per))
'''
# –ò–ì–í–ë–ï–î–ê–ñ

# endregion –£—Ä–æ–∫: ******************************************************************


# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************

# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# –õ–µ–≤ = [1.1, 2.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 25.1]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
