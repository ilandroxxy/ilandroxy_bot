# region Домашка: ******************************************************************

# КЕГЭ № 5627 (Уровень: Средний) (М. Ишимов)
# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнено хотя бы одно из условий:
# – в строке есть хотя бы одно повторяющееся число;
# – будучи упорядоченными, все числа строки образуют арифметическую прогрессию.
'''
cnt = 0
for s in open('9.txt'):
    M = sorted(int(x) for x in s.split())
    if (len(set(M)) != len(M)) or (M[5]-M[4] == M[4]-M[3] == M[3]-M[2] == M[2]-M[1] == M[1]-M[0]):
        cnt += 1
print(cnt)
'''


# КЕГЭ № 6262 Danov2302 (Уровень: Средний) (А.Богданов)
#
# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнено строго одно из условий:
#  – в строке есть повторяющиеся числа;
#  – в строке есть ровно три нечетных числа.
'''
cnt = 0
for s in open('9.txt'):
    M = sorted(int(x) for x in s.split())
    flag = 0
    if len(set(M)) != len(M):
        flag += 1
    if len([y for y in M if y % 2 != 0]) == 3:
        flag += 1
    if flag == 1:
        cnt += 1
print(cnt)


cnt = 0
for s in open('9.txt'):
    M = sorted(int(x) for x in s.split())
    if (len(set(M)) != len(M)) != (len([y for y in M if y % 2 != 0]) == 3):
        cnt += 1
print(cnt)
'''


# КЕГЭ № 6999 (Уровень: Базовый)
# В файле электронной таблицы в каждой строке содержатся шесть неотрицательных целых чисел.
# Определите количество строк таблицы, для которых выполнены оба условия:
# – в строке ровно три числа кратных трем;
# – размах чисел строки не больше суммы чисел строки, кратных 3.
'''
cnt = 0
for s in open('9.txt'):
    M = sorted(int(x) for x in s.split())
    A = [y for y in M if y % 3 == 0]
    if len(A) == 3:
        if max(M) - min(M) <= sum(A):
            cnt += 1
print(cnt)
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Чтение файла для 17 номера:
'''
M = [int(x) for x in open('17.txt')]
'''

# Рассмотрим типы заданий 17 номера:
'''
M = [1, 2, 3, 4, 5]

# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''

# Тип 17 №37369
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000. Определите и запишите в ответе сначала
# количество пар элементов последовательности, у которых разность элементов кратна 80,
# затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if abs(x - y) % 80 == 0:
            R.append(x - y)
print(len(R), max(R))
'''
# Ответ: 625876 9920


# Тип 17 №63066
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.
#
# Определите количество троек, для которых выполняются следующие условия:
# — ровно два числа в тройке пятизначные;
# — хотя бы одно число в тройке делится на 5;
# — сумма элементов тройки больше максимального элемента последовательности,
# запись которого заканчивается на 321. (Гарантируется, что в последовательности
# есть хотя бы один элемент, запись которого заканчивается на 321.)
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
A = max([x for x in M if str(x)[-3:] == '321'])
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if len([p for p in [x, y, z] if len(str(abs(p))) == 5]) == 2:
        if len([p for p in [x, y, z] if p % 5 == 0]) > 0:
            if (x + y + z) > A:
                R.append(x + y + z)
print(len(R), max(R))
'''
# Ответ: 269 198654

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Лев = [2.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
