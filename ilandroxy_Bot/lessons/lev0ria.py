# region Домашка: ******************************************************************

# У вас есть некоторое количество монет разных номиналов.
# Напишите программу, которая принимает на вход сумму в целых монетах
# и номинал монеты для размена. Программа должна определить,
# сколько монет данного номинала войдет в указанную сумму, а также сколько монет останется.
'''
a = int(input())
b = int(input())
print(a // b)
print(a % b)
'''

# Дано натуральное число. Напишите программу, которая вычисляет:
# количество цифр 2 в нем;
# сколько раз в нем встречается последняя цифра;
# количество нечетных цифр;
# сумму его цифр, больших семи;
# произведение цифр, больших семи (если цифр больших семи нет,
# то вывести 11, если такая цифра одна, то вывести ее);
# сколько раз в нем встречаются цифры 0 и 4 (всего суммарно).
'''
x = int(input())  # 123452
print(str(x).count('2'))
print(str(x).count(str(x)[-1]))
print(len([a for a in str(x) if a in '13579']))
print(sum([int(a) for a in str(x) if int(a) > 7]))
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Условные операторы (ветвление)

# Проверка на чтеное или нечетное число
'''
x = int(input())
if x % 2 == 0:  # if - если
    print('Четное')
else:  # else - иначе 
    print('Нечетное')
'''

'''
x = 0
y = 6

if x > 0 and y > 0:  # if - если
    print('1 четверть')
elif x < 0 and y > 0:  # elif - иначе если
    print('2 четверть')
elif x < 0 and y < 0:
    print('3 четверть')
elif x > 0 and y < 0:
    print('4 четверть')
else:  # else - иначе
    print('Лежит на осях')
print('конец')
'''

# Каскадные условные операторы (или вложеные условия)
'''
x = int(input('x: '))
y = int(input('y: '))

if x > 0:
    if y > 0:  # x > 0, y > 0
        print('1 четверть')
    else:  # x > 0, y <= 0
        print('4 четверть')
else:
    if y > 0:  # x <= 0, y > 0
        print('2 четверть')
    else:  # x <= 0, y <= 0
        print('3 четверть')
'''


# Напишите программу, которая принимает на вход число и в зависимости
# от условий выводит текст «Да» или «Нет».
#
# Если число нечетное, то вывести «Да»;
# Если число четное в диапазоне от 3 до 8 (включительно), то вывести «Нет»;
# Если число четное в диапазоне от 9 до 18 (включительно), то вывести «Да»;
# Если число четное и больше 18, то вывести «Нет».
'''
x = int(input())
if x % 2 != 0:
    print('Да')
elif x % 2 == 0 and 3 <= x <= 8:
    print('Нет')
elif x % 2 == 0 and 9 <= x <= 18:
    print('Да')
else:
    print('Нет')
'''

# Логические связки and, or, ^, not
'''
flag = True
print(not flag)  # False

a = -7
b = 6
if a > 0 and b > 0:  # and - гарантирует, что все условия будут True
    print('YES 1')
if a > 0 or b > 0:  # or - говорит о том, что хотя бы одно из условий будет True
    print('YES 2')
if (a > 0) ^ (b > 0):  # () ^ () - гарантирует, что только одно условие True
    print('YES 3')
'''

# Циклы - просто повторяющиеся действия

# for - удовлетворяет условиям: "повтори 9 раз", "пробеги от 2 до 10"
'''
for i in range(10):  # range(START=0, STOP=10-1, STEP=1)
    print(i, end=' ')  # 0 1 2 3 4 5 6 7 8 9
print()

for i in range(2, 10):  # range(START=2, STOP=10-1, STEP=1)
    print(i, end=' ')  # 2 3 4 5 6 7 8 9
print()

for i in range(2, 10, 2):  # range(START=2, STOP=10-1, STEP=2)
    print(i, end=' ')  # 2 4 6 8
print()

for i in range(2, 10+1, 2):  # range(START=2, STOP=10+1-1, STEP=2)
    print(i, end=' ')  # 2 4 6 8 10
print()

for i in range(10, 2, -1):  # range(START=10, STOP=2+1, STEP=-1)
    print(i, end=' ')  # 10 9 8 7 6 5 4 3
print()

# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
print(len(M))  # возвращает длину списка (кол-во элементов в нем)

# Форик используется для работы с списками (и другими последовательностями)

for i in range(len(M)):  # удобно, чтобы менять элементы
    # print(i, end=' ')  # 0 1 2 3 4
    print(M[i], end=' ')  # a b c d e
print()

for i in M:  # удобно просто выводить, пробегать и исследовать список
    print(i, end=' ')  # a b c d e
print()

for i in range(len(M)):
    M[i] = M[i] * i
print(M)  # ['', 'b', 'cc', 'ddd', 'eeee']
'''

#  while - это цикл с условием: "действие повторяется, пока условие истинно", "бесконечный цикл"
'''
for i in range(2, 10+1, 2):  # range(START=2, STOP=10+1-1, STEP=2)
    print(i, end=' ')  # 2 4 6 8 10
print()


i = 2
while i <= 10:  # пока выполняетcя условие 
    print(i, end=' ')  # 2 4 6 8 10
    i += 2
'''
'''
x = 8
n = 2
M = []
while x > 0:
    M.append(x % n)  # .append() - добавить новый элемент в конец списка
    x //= n
M.reverse()  # .reverse() - развернуть список в обратном порядке 
print(M)  # [1, 0, 0, 0]
'''

# Бесконечные циклы
'''
k = 0
while True:
    k += 1
    print(k)
'''

'''
from random import randint
import time

pas = 'qwerty'
count = 0
password = input('Введите пароль: ')
while True:
    if pas == password:
        break
    count += 1
    if count == 3:
        print('Подозрительная попытка входа, пройдите проверку:')
        a = randint(0, 100)
        b = randint(0, 100)
        x = int(input(f'{a} + {b} = '))
        if x == a + b:
            count = 0
            print('Проверка пройдена успешно.')
        else:
            print('Повторите попытку через 5 минут!')
            time.sleep(5 * 60)
    password = input('Неверный пароль, попробуйте снова: ')
g
print('Welcome')
'''
# endregion Урок: ******************************************************************

# Лев = []
# КЕГЭ  = []
# на следующем уроке:
