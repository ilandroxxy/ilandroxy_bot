# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Единицы измерения информации
# 1 бит - минимальная единица измерения информации
# 1 байт = 8 бит = 2**3 бит
# 1 Кбайт = 1024 байт = 2**10 байт = 2**13 бит
# 1 Мбайт = 1024 Кбайт = 2**10 Кбайт = 2**23 бит
# 1 Гбайт = 1024 Мбайт = 2**10 Мбайт = 2**33 бит


# Тип 7 №15977
# Автоматическая фотокамера производит растровые изображения размером 800 на 600 пикселей.
# При этом объём файла с изображением не может превышать 500 Кбайт, упаковка данных не производится.
# Какое максимальное количество цветов можно использовать в палитре?

# I (бит) = pixels (шт) * i (бит на один пиксель)
# colors = 2 ** i (бит на один пиксель)
'''
pixels = 800 * 600
I = 500 * 2 ** 13  # бит
i = I / pixels
print(i)  # 8.53333
i = 8
print(2 ** i)
'''
# Ответ: 256


# Тип 7 №35896
# В информационной системе хранятся изображения размером 1024×768 пикселей.
# Методы сжатия изображений не используются.
# Каждое изображение дополняется служебной информацией, которая занимает 640 Кбайт.
# Для хранения 2048 изображений потребовалось 2 Гбайт.
# Сколько цветов использовано в палитре каждого изображения?
'''
pixels = 1024 * 768
I = (2 * 2 ** 33) / 2048  # вес одного изображения в бит (с служебной информацией)
I = I - (640 * 2 ** 13)  # вес одного изображения в бит (без служебной информацией)
i = I / pixels
print(i)  # 4
print(2**i)
'''
# Ответ: 16


# Тип 7 №18078
# Какой минимальный объём памяти (в Кбайт) нужно зарезервировать,
# чтобы можно было сохранить любое растровое изображение размером 640 на 320 пикселей при условии,
# что в изображении могут использоваться 64 различных цвета?
# В ответе запишите только целое число, единицу измерения писать не нужно.
'''
pixels = 640 * 320
colors = 64  # colors = 2 ** i
i = 6
I = pixels * i  # бит
print(I / (2**13))  # Кбайт
'''

# Тип 7 №63023
# Камера наблюдения каждые n секунд (n — целое число) делает фотографию с разрешением
# 1024×768 пикселей и палитрой 4096 цветов. Фотографии передаются по каналу с пропускной
# способностью 200 Кбайт/сек, при этом используются методы сжатия, позволяющие
# уменьшить размер изображения в среднем на 20%.
#
# Определите минимально возможное значение n, при котором возможна передача в режиме реального времени.
'''
pixels = 1024 * 768
i = 12
I = pixels * i
U = (200 * 2 ** 13)  # бит / сек
I = I * (1 - 0.2)
print(I / U)  # 4.608
'''


# Тип 11 №55807
# При регистрации в компьютерной системе каждому объекту присваивается идентификатор,
# состоящий из 113 символов и содержащий только десятичные цифры и символы
# из 2025-символьного специального алфавита.
#
# В базе данных для хранения каждого идентификатора отведено одинаковое
# и минимально возможное целое число байт. При этом используют посимвольное
# кодирование идентификаторов, все символы кодируют одинаковым и минимально возможным количеством бит.
#
# Определите объём памяти (в Кбайт), необходимый для хранения 32 768 идентификаторов.
# В ответе запишите только целое число — количество Кбайт.
'''
# alphabet = 2 ** i (бит на один символ)
symbols = 113
alphabet = 2035
print(2**11)
i = 11  # (бит на один символ)
bit = symbols * i
print(bit / 8)  # 155.375
byte = 156
print((32_768 * byte) / (2**10))
'''
# Ответ: 4992


# Тип 11 №11309
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль,
# состоящий из 15 символов и содержащий только символы из 12-символьного набора:
# А, В, C, D, Е, F, G, H, I, J, K, L. В базе данных для хранения сведений
# о каждом пользователе отведено одинаковое минимально возможное целое число байт.
# При этом используют посимвольное кодирование паролей, все символы кодируют
# одинаковым минимально возможным количеством бит.
#
# Кроме собственно пароля для каждого пользователя в системе хранятся
# дополнительные сведения, для чего выделено целое число байт, одно
# и то же для всех пользователей. Для хранения сведений о 20 пользователях потребовалось
# 400 байт. Сколько байт выделено для хранения дополнительных сведений об одном пользователе?
# В ответе запишите только целое число – количество байт.
'''
symbols = 15
alphabet = 12
i = 4
bit = symbols * i
print(bit / 8)  # 7.5
byte = 8
I = 400 / 20  # вес в байт одного пользователя
print(I - byte)
'''
# Ответ: 12


# Тип 11 №5205
# При регистрации в компьютерной системе каждому пользователю выдаётся идентификатор,
# состоящий из 8 символов, первый и последний из которых — одна из 18 букв,
# а остальные — цифры (допускается использование 10 десятичных цифр).
#
# Каждый такой идентификатор в компьютерной программе записывается минимально возможным
# и одинаковым целым количеством байт (при этом используют посимвольное кодирование;
# все цифры кодируются одинаковым и минимально возможным количеством бит,
# все буквы также кодируются одинаковым и минимально возможным количеством бит).
#
# Определите объём памяти, отводимый этой программой для записи 500 идентификаторов.
# (Ответ дайте в байтах.)
'''
symbols1 = 2
alphabet1 = 18
i1 = 5

symbols2 = 6
alphabet2 = 10
i2 = 4

bit = symbols1 * i1 + symbols2 * i2
print(bit / 8)  # 4.25
byte = 5
print(500 * 5)
'''
# Ответ: 2500

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# todo Разобрать задачку Лев
# КЕГЭ № 6094 /dev/inf 02.2023 (Уровень: Средний) (А. Рогов)
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд пар символов
# вида согласная + гласная среди которых нет подстроки XYZY.
# Примечание. Букву Y считайте всегда гласной.
'''
s = open('24.txt').readline()
s = s.replace('XY', '*').replace('ZY', '+')
for a in 'XYZ':
    s = s.replace(a, ' ')
print(max([len(x) for x in s.split() if '*+' not in x]))
'''

# endregion Разобрать: *************************************************************


# Лев = [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 23, 24, 25]
# КЕГЭ  = []
# на следующем уроке: Посмотреть 7 номера на музыку
