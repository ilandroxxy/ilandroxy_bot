# region –î–æ–º–∞—à–∫–∞: ******************************************************************

#–ö–ï–ì–≠ ‚Ññ 6904 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π) (–î. –°—Ç–∞—Ç–Ω—ã–π)
# –õ–æ–≥–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è F –∑–∞–¥–∞—ë—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º ¬¨(((x ‚Üí y ‚àß w) ‚àß (z ‚Üí x ‚à® y)) ‚â° w).

'''
print('x y z w')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (not(((x <= (y and w)) and (z <= (x or y))) == w))
                if F == True:
                    print(x, y, z, w)
'''


# –ö–ï–ì–≠ ‚Ññ 9149 –î–∂–æ–±—Å 06.06.2023 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
# –ú–∏—à–∞ –∑–∞–ø–æ–ª–Ω—è–ª —Ç–∞–±–ª–∏—Ü—É –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏  F = ((x ‚Üí y) ‚à® (z ‚â° x)) ‚àß (w ‚Üí z),
# –Ω–æ —É—Å–ø–µ–ª –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ª–∏—à—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∏–∑ —Ç—Ä—ë—Ö —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –µ—ë —Å—Ç—Ä–æ–∫,
# –¥–∞–∂–µ –Ω–µ —É–∫–∞–∑–∞–≤, –∫–∞–∫–æ–º—É —Å—Ç–æ–ª–±—Ü—É —Ç–∞–±–ª–∏—Ü—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–∞–∂–¥–∞—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö w, x, y, z.
'''
print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (x <= (y == w)) and (y == (w <= z)) # # –†–µ—à—É –ï–ì–≠ ‚Ññ 48423
                # F = ((x <= y) or (z == x)) and (w <= z)    # –ö–ï–ì–≠ ‚Ññ 9149 –î–∂–æ–±—Å 06.06.2023 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
                print(x, y, z, w, int(F))
'''

# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************


# region –£—Ä–æ–∫: ******************************************************************

# –¢–µ–æ—Ä–∏—è —Å–ø–∏—Å–∫–æ–≤ list

# i   0    1    2   3   4
L = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2  -1

print(f'–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ L: {L[0]} \n'
      f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ L: {L[-1]}')
# –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ L: a
# –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ L: 5.0

# –°–≤–æ–π—Å—Ç–≤–∞ —Å–ø–∏—Å–∫–æ–≤:
# - –ú–æ–≥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
# - –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä - –∏–Ω–¥–µ–∫—Å (—á–µ—Ä–µ–∑ –Ω–µ–≥–æ –º–æ–∂–µ–º –±—Ä–∞—Ç—å –∏ –º–µ–Ω—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã)
# - –ò–Ω–¥–µ–∫—Å—ã —Å—á–∏—Ç–∞—é—Ç—Å—è —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ (–æ—Ç 0) –∏–ª–∏ —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ (–æ—Ç -1)
# - –í –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –∫–æ—Ä—Ç–µ–∂–µ–π (tuple) - –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–æ–≤ —á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å—ã

# –ß–µ—Ä–µ–∑ —Ü–∏–∫–ª for –º–æ–∂–µ–º –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–±–µ–∂–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –Ω–∞–ø—Ä—è–º—É—é:
'''
for x in L:
    print(x, end=' ')  # a b c d e
print()


for x in L:
    if x in 'cde':
        print(x, end=' ')  # c d e
print()


for i in range(len(L)):
    # print(i, end=' ')  # 0 1 2 3 4
    print(L[i], end=' ')  # a b c d e
print()
'''

# –ß–µ—Ä–µ–∑ —Ü–∏–∫–ª for –º–æ–∂–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Å–∞–º —Å–ø–∏—Å–æ–∫
'''
for i in range(len(L)):
    L[i] = L[i] * i
print(L)  # ['', 'b', 'cc', 'ddd', 'eeee']
'''


# –§—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤:
'''
M = [8, 4, 23, 6, 7, 54]
print(len(M))  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–µ–º)
print(sum(M))  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –∑–Ω–∞—á–µ–Ω–∏–π —Å–ø–∏—Å–∫–∞
summa = sum(M)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
print(summa)  # –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω
print(max(M))
print(min(M))

print(sorted(M))  # [4, 6, 7, 8, 23, 54]  - –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
print(sorted(M, reverse=True))  # [54, 23, 8, 7, 6, 4]  - –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ —É–±—ã–≤–∞–Ω–∏—é
print(*M)  # 8 4 23 6 7 54 (* - –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–∫—Ä—ã—Ç–∏—è, –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç —Å–∫–æ–±–æ–∫)
'''


# üñ•  –í—Å–µ –º–µ—Ç–æ–¥—ã —Å–ø–∏—Å–∫–æ–≤ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠  #tpy #useful
'''
# üö© .APPEND()
# –ú–µ—Ç–æ–¥ .append() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3]
my_list.append(4)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

# –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é (—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ) —Å–ø–∏—Å–∫–æ–≤:
my_list = [1, 2, 3]
my_list += [4, 5, 6]
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4, 5, 6]


# üö© .REVERSE()
# –ú–µ—Ç–æ–¥ .reverse() –∏–∑–º–µ–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3, 4]
my_list.reverse()
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É —á–µ—Ä–µ–∑ —Å—Ä–µ–∑:
my_list = [1, 2, 3, 4]
my_list = my_list[::-1]
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]


# üö© .COUNT()
# –ú–µ—Ç–æ–¥ .count() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 2, 3, 4, 2]
count_of_twos = my_list.count(2)
print(count_of_twos)  # –í—ã–≤–æ–¥: 3


my_list = [1, '2', '2', 3, 4, 2]
count_of_twos = my_list.count(2)
count_of_twoS = my_list.count('2')
print(count_of_twos)  # –í—ã–≤–æ–¥: 1
print(count_of_twoS)  # –í—ã–≤–æ–¥: 2


# üö© .REMOVE()
# –ú–µ—Ç–æ–¥ .remove() —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3, 2, 4]
my_list.remove(2)  # –ø–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –¥–≤–æ–π–∫–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]

# –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –µ–≥–æ –∏–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É—è del:
my_list = [1, 2, 3, 2, 4]
del my_list[1]  # –∏–Ω–¥–µ–∫—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]


# üö© .INDEX()
# –ú–µ—Ç–æ–¥ .index() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3, 2, 4]
index_of_two = my_list.index(2)
print(index_of_two)  # –í—ã–≤–æ–¥: 1


# üö© .SORT()
# –ú–µ—Ç–æ–¥ .sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç reverse=True. –ü—Ä–∏–º–µ—Ä:
my_list = [4, 1, 3, 2]
my_list.sort()
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list.sort(reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –°–∫–∞–∂—É —á–µ—Å—Ç–Ω–æ —è –Ω–µ –ª—é–±–∏—Ç–µ–ª—å —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, —Å—á–∏—Ç–∞—é, —á—Ç–æ —É–¥–æ–±–Ω–µ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é sorted():
my_list = [4, 1, 3, 2]
my_list = sorted(my_list)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list = sorted(my_list, reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''
# –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –ï–ì–≠ | itpy (https://t.me/informatika_kege_itpy) üë®‚Äçüíª


# –°–†–ï–ó–´ —Å–ø–∏—Å–∫–æ–≤
'''
# i  0  1   2  3  4   5
M = [8, 4, 23, 6, 7, 54]
print(M[0])  # 8
print(M[1:4])  # [4, 23, 6]
print(M[:4])  # [8, 4, 23, 6]
print(M[4:])  # [7, 54]
print(M[-2:])   # [7, 54]   (—á–∏—Å–ª–æ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 19)
print(M[::])  # [8, 4, 23, 6, 7, 54]
print(M[0::2])  # [8, 23, 7]  - —Å —á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
print(M[1::2])  # [4, 6, 54]  - —Å –Ω–µ—á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
print(M[::-1])  # [54, 7, 6, 23, 4, 8] - –ø—Ä–æ–π—Ç–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
'''

# endregion –£—Ä–æ–∫: ******************************************************************

# –õ–µ–≤ = [2.1, 6.1]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
