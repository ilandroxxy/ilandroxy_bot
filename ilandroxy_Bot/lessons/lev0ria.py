# region Домашка: ******************************************************************

# https://stepik.org/lesson/1038682/step/8?unit=1062773
'''
M = []
for i in range(4, 4000):
    s = '1' + '2' * i
    summa = 0
    while '12' in s or '322' in s or '222' in s:
        if '12' in s:
            s = s.replace('12', '2', 1)
        if '322' in s:
            s = s.replace('322', '21', 1)
        if '222' in s:
            s = s.replace('222', '3', 1)

    summa = sum([int(x) for x in s if x.isdigit()])
    M.append(summa)
print(max(M))
'''


# https://stepik.org/lesson/1038682/step/9?unit=1062773

# На вход приведённой выше программе поступает строка, начинающаяся с цифры 3, а затем n подряд идущих цифр 7.
#
# Определите наибольшее значение n ∈ [210; 300), при котором сумма числовых значений цифр строки,
# получившейся в результате выполнения программы, кратна 15.
'''
for n in range(301, 210-1, -1):
    s = '3' + '7' * n
    while '27' in s or '377' in s or '777' in s:
        if '27' in s:
            s = s.replace('27', '32', 1)
        if '377' in s:
            s = s.replace('377', '27', 1)
        if '777' in s:
            s = s.replace('777', '3', 1)

    if sum([int(x) for x in s]) % 15 == 0:
        print(n)
        break
'''

# https://stepik.org/lesson/1038682/step/14?unit=1062773
'''
for n in range(1, 1000):
    s = '3' * 15 + '2' * 18 + '1' * n
    while '31' in s or '33' in s or '21' in s:
        if '31' in s:
            s = s.replace('31', '123')
        if '33' in s:
            s = s.replace('33', '211')
        if '21' in s:
            s = s.replace('21', '1')
    if sum([int(i) for i in s]) > 24:
        print(n)
        break
'''

# Дана программа для Редактора:
#
# НАЧАЛО
# ПОКА нашлось (52) ИЛИ нашлось (2222) ИЛИ нашлось (1122)
#    ЕСЛИ нашлось (52)
#      ТО заменить (52, 11)
#    ЕСЛИ нашлось (2222)
#      ТО заменить (2222, 5)
#    ЕСЛИ нашлось (1122)
#      ТО заменить (1122, 25)

# На вход приведённой выше программе поступает строка, начинающаяся
# с цифры «5», а затем содержащая n цифр «2» (3 < n < 10 000).
#
# Определите наименьшее значение n, при котором сумма цифр в строке,
# получившейся в результате выполнения программы, оканчивается на 7.
'''
for n in range(4, 10000):
    s = '5' + '2' * n
    while '52' in s or '2222' in s or '1122' in s:
        if '52' in s:
            s = s.replace('52', '11', 1)
        if '2222' in s:
            s = s.replace('2222', '5', 1)
        if '1122' in s:
            s = s.replace('1122', '25', 1)
    if sum([int(i) for i in s]) % 10 == 7:
        print(n)
        break
'''

#  КЕГЭ № 6786 (Уровень: Средни
# На вход приведённой выше программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 39 цифр «0», n цифр «1» и 39 цифр «2», расположенных в произвольном порядке.
# Определите наименьшее значение n, при котором сумма числовых значений цифр строки,
# получившейся в результате выполнения программы, является простым числом.
'''
def divisors(x):
    div = []
    for j in range(1, int(x ** 0.5)+1):  # не считая единицы и самого числа.
        if x % j == 0:
            div += [j, x // j]
    return sorted(set(div))


for n in range(1, 1000):
    s = '>' + '0' * 39 + '1' * n + '2' * 39
    while '>1' in s or '>2' in s or '>0' in s:
        if '>1' in s:
            s = s.replace('>1', '22>')
        if '>2' in s:
            s = s.replace('>2', '2>')
        if '>0' in s:
            s = s.replace('>0', '1>')

    summa = sum([int(i) for i in s if i.isdigit()])
    if len(divisors(summa)) == 2:
        print(n)
        break
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 16 №5089
# Алгоритм вычисления значения функции F(n), где n - натуральное число, задан следующими соотношениями:
# F(1) = 5;
# F(2) = 5;
# F(n) = 5*F(n − 1) − 4*F(n − 2) при n >2.
# Чему равно значение функции F(13)? В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 5
    if n == 2:
        return 5
    if n > 2:
        return 5 * F(n - 1) - 4 * F(n - 2)


print(F(13))
'''


# Тип 16 №38950
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 500 и F(n) = 8?
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)


cnt = 0
for n in range(1, 500+1):
    if F(n) == 8:
        cnt += 1
print(cnt)
'''


# Тип 16 №4656
# Алгоритм вычисления значения функции F(n) и G(n), где n – натуральное число, задан следующими соотношениями:
# F(1) = 0
# F(n) = F(n–1) + n, при n >1
#
# G(1) = 1
# G(n) = G(n–1) * n, при n >1
# Чему равно значение функции F(5) + G(5)?
'''
def F(n):
    if n == 1:
        return 0
    if n > 1:
        return F(n-1) + n

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return G(n-1) * n

print(F(5) + G(5))
'''
# Ответ: 134


# Тип 16 №47220
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n)=1 при n=1;
# F(n)=n·F(n−1), если n>1.
#
# Чему равно значение выражения F(2023) / F(2020)?
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n-1)


print(F(2023) / F(2020))


# Перебор руками: 
# F(2023) = 2023 * F(2022)
# F(2022) = 2022 * F(2021)
# F(2021) = 2021 * F(2020) / F(2020)

print(2023 * 2022 * 2021)

# [Previous line repeated 996 more times]
# RecursionError: maximum recursion depth exceeded
'''
# Ответ: 8266912626


# Тип 23 №15959
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Умножить на 3
# Сколько существует программ, которые преобразуют исходное число 3 в число 50
# и при этом траектория вычислений содержит число 15 и не содержит числа 33?
'''
def F(a, b):
    if a > b or a == 33:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b) + F(a*3, b)


print(F(3, 15))


# Вариант 2
def F(a, b):
    if a >= b or a == 33:
        return a == b
    return F(a+1, b) + F(a*2, b) + F(a*3, b)


print(F(3, 15))
'''

# endregion Урок: ******************************************************************

# Лев = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1, 16.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
