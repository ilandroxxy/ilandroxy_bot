# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# Теория
# Адрес сети = IP адрес узла & Маска сети, где & - побитовая конъюнкция

# IP - состоит из 4 чисел на каждое из которых выделено по 1 байту, то есть по 8 бит
# Таким образом числа лежат в диапазоне от 0 (00000000) до 255 (11111111)

# Маска сети имеет длину 32 бита и вид: 11111..000 (сначала единицы, затем нули)

# Тип 13 №3510
# По заданным IP-адресу узла и маске определите адрес сети.
# IP адрес узла: 217.9.142.131
# Маска: 255.255.192.0
'''
print(217 & 255, 9 & 255, 142 & 192, 131 & 0)
# 217 9 128 0
'''
# Ответ: HBEA


# Тип 13 №3510
# По заданным IP-адресу узла и маске определите адрес сети.
# IP адрес узла: 217.9.142.131
# Маска: 255.255.192.0
'''
from ipaddress import *
net = ip_network('217.9.142.131/255.255.192.0', 0)
print(net)  # 217.9.128.0/18, где 18 - это кол-во единиц в маске числа
print(net.netmask)  # 255.255.192.0
print(f'{net.netmask:b}')  # 11111111111111111100000000000000
'''
# Ответ: HBEA


# Тип 13 №11348
# Для узла с IP-адресом 119.83.208.27 адрес сети равен 119.83.192.0.
# Каково наименьшее возможное количество единиц в разрядах маски?
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'119.83.208.27/{mask}', 0)
    print(net, mask, net.netmask)
    # 119.83.192.0/18 18 255.255.192.0
    # 119.83.192.0/19 19 255.255.224.0
'''
'''
from ipaddress import *
mini = 99999
for mask in range(32+1):
    net = ip_network(f'119.83.208.27/{mask}', 0)
    if str(net) == f'119.83.192.0/{mask}':
        mini = min(mini, mask)
print(mini)
'''
# Ответ: 18


# Тип 13 №14698
# Для узла с IP-адресом 93.138.161.94 адрес сети равен 93.138.160.0.
# Какое наибольшее количество нулей может быть в двоичной записи маски?
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'93.138.161.94/{mask}', 0)
    print(net, 32 - mask)
    # 93.138.160.0/19 13
    # 93.138.160.0/20 12
    # 93.138.160.0/21 11
    # 93.138.160.0/22 10
    # 93.138.160.0/23 9
'''
# Ответ: 13


# Тип 13 №17330
# Узлы с IP-адресами 98.162.71.150 и 98.162.71.140 находятся в одной сети.
# Чему равно наибольшее количество возможных единиц в маске этой сети?
'''
from ipaddress import *
maxi = 0
for mask in range(32+1):
    net1 = ip_network(f'98.162.71.150/{mask}', 0)
    net2 = ip_network(f'98.162.71.140/{mask}', 0)
    if net1 == net2:
        maxi = max(maxi, mask)
print(maxi)
'''
# Ответ: 27


# Тип 13 №60255
# Сеть задана IP-адресом 192.168.32.160 и маской сети 255.255.255.240.
# Сколько в этой сети IP-адресов, для которых сумма единиц в двоичной записи IP-адреса чётна?
'''
from ipaddress import *
net = ip_network('192.168.32.160/255.255.255.240', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 2 == 0:
        cnt += 1
print(cnt)
'''


# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Лев = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# КЕГЭ  = []
# на следующем уроке:
