

# Тип 12 №27383
# Дана программа для Редактора:
#
# ПОКА нашлось (12)
#   заменить (12, 4)

# Исходная строка содержит десять единиц и некоторое количество двоек, других цифр нет,
# точный порядок расположения единиц и двоек неизвестен.
# После выполнения программы получилась строка с суммой цифр 25.
# Какое наименьшее количество двоек могло быть в исходной строке?
'''
from itertools import permutations

for n in range(1, 10):
    for t in permutations('1'*10+'2'*n):
        s = ''.join(t)

        while '12' in s:  # ПОКА нашлось (12)
            s = s.replace('12', '4', 1)  # заменить (12, 4)

        summ = sum([int(i) for i in s if i.isdigit()])

        if summ == 25:
            print(n)
'''


# Тип 12 №18793
# Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 68 троек?
#
#     ПОКА нашлось (999) ИЛИ нашлось (333)
#         ЕСЛИ нашлось (333)
#             ТО заменить (333, 9)
#         ИНАЧЕ
#             заменить (999, 3)

'''
s = '3' * 68
while '999' in s or '333' in s:
    if '333' in s:
        s = s.replace('333', '9', 1)
    else:
        s = s.replace('999', '3', 1)

print(s)
'''
# Ответ: 93



# Тип 14 №15856
# Сколько единиц содержится в двоичной записи значения выражения:
# 4**12 + 2**32 - 16.
'''
# Вариант 1
x = 4**12 + 2**32 - 16
M = []
while x > 0:
    M.append(x % 2)
    x //= 2
M.reverse()
print(M.count(1))

# Вариант 2
print(bin(4**12 + 2**32 - 16)[2:].count('1'))
'''
# Ответ: 21



