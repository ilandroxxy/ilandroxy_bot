# region Домашка: ************************************************************

# КЕГЭ № 2509 (Уровень: Средний)
#
# Текстовый файл состоит не более чем из 10**6 символов и содержит только
# заглавные буквы латинского алфавита (ABC…Z).
# Определите количество самого частого и самого редкого символа в файле
# (без учёта символа окончания строки). В качестве ответа запишите разницу между ними.
'''
s = open('24.txt').readline()
R = []
for a in 'QWERTYUIOPASDFGHJKLZXCVBNM':
    R.append(s.count(a))
print(max(R) - min(R))
'''

# endregion Домашка: ************************************************************


# region Урок: ******************************************************************

# Тип 24 №33196
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите символ, который чаще всего встречается в файле сразу после буквы A.
'''
s = open('24.txt').readline()
R = []
for i in range(len(s)-1):
    if s[i] == 'A':
        R.append(s[i+1])

M = []
for a in set(R):
    M.append([R.count(a), a])

print(max(M))
'''

# Тип 24 №29672
# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество строк, в которых буква E встречается чаще, чем буква A.
'''
s = open('24.txt').readlines()
cnt = 0
for x in s:
    if x.count('E') > x.count('A'):
        cnt += 1
print(cnt)
'''
# Ответ: 467


# Тип 24 №33769
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите символ, который чаще всего встречается в файле после двух одинаковых символов.
'''
s = open('24.txt').readline()
R = []
for i in range(len(s)-2):
    if s[i] == s[i+1]:
        R.append(s[i+2])

M = []
for x in set(R):
    M.append([R.count(x), x])

print(max(M))
'''

# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# В строках, содержащих менее 25 букв G, нужно определить
# и вывести максимальное расстояние между одинаковыми буквами в одной строке.
'''
s = open('24.txt').readlines()
maxi = 0
for x in s:
    if x.count('G') >= 25:
        for a in 'QWERTYUIOPASDFGHJKLZXCVBNM':
            maxi = max(maxi, x.rindex(a) - x.index(a))
print(maxi)
'''

# Тип 24 №35482
# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# Необходимо найти строку, содержащую наименьшее количество букв G
# (если таких строк несколько, надо взять ту, которая находится в файле раньше),
# и определить, какая буква встречается в этой строке чаще всего.
# Если таких букв несколько, надо взять ту, которая позже стоит в алфавите.
'''
s = open('24.txt').readlines()
r = ''
mini = 9999999
for x in s:
    if mini > x.count('G'):
        mini = x.count('G')
        r = x

for a in sorted('QWERTYUIOPASDFGHJKLZXCVBNM'):
    print(a, r.count(a))
'''
# Ответ: T


# Тип 24 №59789
# Текстовый файл состоит не более чем из 10**6 символов латинского алфавита.
# Определите самую длинную непрерывную подпоследовательность,
# где символ Y встречается не более 3 раз.

s = 'xxxxYxxxxYxxxxYxxxxYxxxxxYxxxxxxxxYxxxxYxxxxxYxxxx'
# ['xxxx', 'xxxx', 'xxxx', 'xxxx', 'xxxxx', 'xxxxxxxx', 'xxxx', 'xxxxx', 'xxxx']
# xxxxYxxxxYxxxxYxxxx
# xxxxYxxxxYxxxxYxxxxx
# xxxxYxxxxYxxxxxYxxxxxxxx
# xxxxYxxxxxYxxxxxxxxYxxxx
# xxxxxYxxxxxxxxYxxxxYxxxxx  # 25
# xxxxxxxxYxxxxYxxxxxYxxxx
'''
s = s.split('Y')
maxi = 0
for i in range(len(s)-3):
    r = 'Y'.join(s[i:i + 4])
    maxi = max(maxi, len(r))
print(maxi)
'''
# 24


# Тип 24 №59789
# Текстовый файл состоит не более чем из 10**6 символов латинского алфавита.
# Определите самую длинную непрерывную подпоследовательность,
# где символ Y встречается не более 100 раз.
'''
s = open('24.txt').readline().split('Y')
maxi = 0
for i in range(len(s)-100):
    r = 'Y'.join(s[i:i + 101])
    maxi = max(maxi, len(r))
print(maxi)
'''
# Ответ: 169


# Тип 24 № 
# 59793
# i
# Текстовый файл состоит не более чем из 106 символов латинского алфавита. Определите минимальную подстроку, содержащую 120 символов "V". Для выполнения этого задания следует написать программу.

# endregion Урок: ***************************************************************


# Сева = [2.1, 6.1, 5.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
