# region Домашка: ************************************************************
'''
# i  0  1  2  3  4
M = [1, 2, 3, 4, 5]
# 12 23 34 45

for i in range(len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')
'''

# КЕГЭ № 1933 (Уровень: Базовый) (А. Куканова)
#
# Вероника составляет слова, меняя местами буквы в слове КЛАБХАУС так,
# что любые две соседние буквы различны между собой.
# Сколько слов, включая исходное, может составить Вероника?
'''
from itertools import permutations
count = set()
for s in permutations('КЛАБХАУС'):  #  меняя местами буквы в слове КЛАБХАУС
    slovo = ''.join(s)
    if all(slovo[i] != slovo[i+1] for i in range(len(slovo)-1)):
        count.add(slovo)
print(len(count))
'''


# КЕГЭ № 3886 Джобс 14.05.2022 (Уровень: Средний)
#
# Петя составляет четырехбуквенные слова из символов КЕГЭ2023
# и записывает их в алфавитном порядке в список. Вот начало списка
#
# 1. ГГГГ
# 2. ГГГЕ
# 3. ГГГК
# 4. ГГГЭ
# 5. ГГГ0
# 6. ГГГ2
# 7. ГГГ3
# 8. ГГЕГ
#
# На какой позиции будет стоять первое слово, начинающееся с цифры,
# и не содержащее двух подряд идущих одинаковых символов?
'''
s = sorted('КЕГЭ203')
num = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                slovo = a + b + c + d
                if a in '023':
                    if all(slovo[i] != slovo[i + 1] for i in range(len(slovo) - 1)):
                        print(num)
                        exit()
                num += 1
'''

# endregion Домашка: ************************************************************


# region Урок: ******************************************************************

# Тип 16 №4659
# Алгоритм вычисления значения функции F(n),
# где n – натуральное число, задан следующими соотношениями:
# F(1) = 1
# F(2) = 2
# F(n) = F(n–1) − F(n–2) + 2 * n, при n >2
# Чему равно значение функции F(6)?
'''
def F(n):
    if n == 1:  # F(1) = 1
        return 1
    if n == 2:  # F(2) = 2
        return 2
    if n > 2:
        return F(n - 1) - F(n - 2) + 2 * n
    
print(F(6))
'''
# Ответ: 15


# Тип 16 №47220
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n)=1 при n=1;
# F(n) = n·F(n−1), если n>1
# Чему равно значение выражения F(2023) / F(2020)?
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n-1)

print(F(2023) / F(2020))

# [Previous line repeated 996 more times]
# RecursionError: maximum recursion depth exceeded
'''
# Ответ: 8266912626


# Тип 16 №4656
# Алгоритм вычисления значения функции F(n) и G(n),
# где n – натуральное число, задан следующими соотношениями:
#
# F(1) = 0
# F(n) = F(n–1) + n, при n >1
#
# G(1) = 1
# G(n) = G(n–1) * n, при n >1
#
# Чему равно значение функции F(5) + G(5)?



# Тип 16 №35990
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 500 и F(n) = 3?


# Тип 23 №59771
# 1. Прибавить 2
# 2. Прибавить 3
# 3. Умножить на 3

# Сколько существует программ, для которых при исходном числе 3 результатом является число 25,
# и при этом траектория вычислений содержит число 15 и не содержит число 9?
'''
def F(a, b):
    if a > b or a == 9:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+2, b) + F(a+3, b) + F(a*3, b)

print(F(3, 15) * F(15, 25))


def F(a, b):
    if a >= b or a == 9:
        return a == b
    return F(a+2, b) + F(a+3, b) + F(a*3, b)

print(F(3, 15) * F(15, 25))
'''
# Ответ: 63

print(True + False + True + True)  # 3







# endregion Урок: ***************************************************************


# Сева = [2.1, 6.1, 5.1, 8.1, 12.1, 14.1, 16.1]
# КЕГЭ  = []
# на следующем уроке:
