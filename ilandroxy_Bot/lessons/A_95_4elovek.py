# region Домашка: ************************************************************

# КЕГЭ № 3376 Джобс 22.04.2022 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**9, найдите все числа, соответствующие маске 1*5*9,
# значения разрядов в которых идут в строго возрастающем порядке,
# и делящиеся на 21 без остатка. В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им частные от деления на 21.

'''
from fnmatch import *
k = 0
for x in range(21, 10**9, 21):
    if fnmatch(str(x), '1*5*9'):  # 2 3 4 5
        if len(str(x)) == len(set(str(x))):  # все числа в строке различные
            if sorted(str(x)) == list(str(x)):
                print(x, x // 21)
                k += 1
                if k == 5:
                    break
'''


# КЕГЭ № 706 Джобс 16.11.2020 (Уровень: Базовый)
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [6638225; 6638322],
# простые числа. Выведите все найденные простые числа в порядке возрастания,
# слева от каждого числа выведите его номер по порядку.
'''
def divisors(x):
    div = []
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


num = 1
for x in range(6638225, 6638322+1):
    d = divisors(x)
    if len(d) == 2:
        print(num, x)
        num += 1
'''
# Ответ:
# 1 6638227
# 2 6638231
# 3 6638249
# 4 6638251
# 5 6638263
# 6 6638273
# 7 6638299
# 8 6638321


# КЕГЭ № 5477 (Уровень: Средний) (A. Бойко)
# Напишите программу, которая перебирает целые числа, большие 600 000,
# в порядке возрастания и ищет среди них такие, что они делятся на 6 без остатка
# и их соседи - простые числа. Для первых шести найденных чисел выведите соседей
# каждого найденного числа в порядке возрастания.
# Соседями числа называются числа, отличные от него на 1.
'''
def divisors(x):
    div = []
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


k = 0
for x in range(600000+1, 10000000):
    if x % 6 == 0:
        if len(divisors(x-1)) == 2 and len(divisors(x+1)) == 2:
            print(x-1, x+1)
            k += 1
            if k == 6:
                break
'''
# 600071 600073
# 600167 600169
# 600239 600241
# 600317 600319
# 600359 600361
# 600401 600403

# endregion Домашка: ************************************************************


# region Урок: ******************************************************************


# Тип 9 №52180
# В каждой строке электронной таблицы записаны пять натуральных чисел.
# Определите, сколько в таблице строк, для которых выполнены следующие условия:
#
# — все числа в строке различны;
# — чётных чисел больше, чем нечётных;
# — сумма чётных чисел меньше суммы нечётных.
#
# В ответе запишите число — количество строк, для которых выполнены эти условия.
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(M) == len(set(M)):  # — все числа в строке различны;
        chet = [x for x in M if x % 2 == 0]
        nechet = [x for x in M if x % 2 != 0]
        if len(chet) > len(nechet):
            if sum(chet) < sum(nechet):
                count += 1

print(count)
'''
# Ответ: 241


# Тип 9 №58321
# Откройте файл электронной таблицы, содержащей в каждой строке четыре натуральных числа.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# — наименьшее из четырёх чисел более чем в шесть раз меньше суммы трёх других;
# — произведение наибольшего и наименьшего числа больше произведения оставшихся чисел.
# В ответе запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if M[0] * 6 < sum(M[1:]):
        if M[0] * M[-1] > M[1] * M[2]:
            count += 1
print(count)
'''
# Ответ: 118


# Тип 9 №59833
# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# — в строке есть только два равных числа, остальные 4 различны;
# — среднее арифметическое повторяющихся чисел меньше чем среднее арифметическое остальных чисел строки.
# В ответе запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if len(set(M)) == 5:
        copied = sum(M) - sum(set(M))
        if copied < (sum(M) - copied*2) / 4:
            count += 1
print(count)
'''
# Ответ: 1483


# Тип 9 №63025
# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, для чисел которых одновременно выполнены все следующие условия:
#
# — в строке есть повторяющиеся числа;
# — максимальное число в строке не повторяется;
# — сумма всех повторяющихся чисел в строке больше максимального числа этой строки.
# При подсчёте суммы повторяющихся чисел каждое число учитывается столько раз, сколько оно встречается.
#
# В ответе запишите число — количество строк, удовлетворяющих заданным условиям.
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(M) != len(set(M)):
        if M.count(max(M)) == 1:
            A = [x for x in M if M.count(x) > 1]
            if sum(A) > max(M):
                count += 1
print(count)
'''
# Ответ: 941


# Тип 9 №27529
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного
# измерения температуры воздуха на протяжении трёх месяцев.
#
# Найдите количество значений, которые выше округленного до десятых среднего значения всех
# чисел таблицы, но меньше 30 °C.

A = []
for s in open('9.txt'):
    A += [float(x) for x in s.replace(',', '.').split()]

count = 0
sred = round(sum(A) / len(A), 1)
for x in A:
    if x > sred and x < 30:
        count += 1
print(count)

# Ответ: Ответ: 633

# ValueError: could not convert string to float: '13,7'


# endregion Урок: ***************************************************************


# Сева = [2.1, 6.1, 5.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 23.1, 25.1]
# КЕГЭ  = []
# на следующем уроке: На следующем уроке разобрать 17 номер и остатки 9-го
