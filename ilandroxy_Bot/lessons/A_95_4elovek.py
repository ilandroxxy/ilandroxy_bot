# region Домашка: ************************************************************
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x - y) % 36 == 0:
            if (x % 13 == 0) or (y % 13 == 0) :
                count += 1
                maxi = max(maxi, x - y)
print(count, maxi)

M = [int(x) for x in open('17.txt')]
R = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x - y) % 36 == 0:
            if (x % 13 == 0) or (y % 13 == 0) :
                R.append(x - y)
print(len(R), max(R))
'''


# КЕГЭ № 8954 Джобс 02.06.2023 (Уровень: Базовый) (Е. Джобс)
# В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от 1 до 10 000 включительно.
# Определите количество пар последовательности, в которых только одно число кратно 7,
# а сумма элементов пары кратна максимальному элементу последовательности, оканчивающемуся на 0F
# в шестнадцатеричной системе счисления.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if hex(x)[-2:] == '0f']   # оканчивающемуся на 0F в шестнадцатеричной системе счисления.
R = []
for i in range(0, len(M)-1):
    x, y = M[i], M[i+1]
    if (x % 7 == 0) != (y % 7 == 0):  # в которых только одно число кратно 7
        if (x + y) % max(A) == 0:
            R.append(x + y)
print(len(R), max(R))
'''
# 2 9487


# КЕГЭ № 7718 (Уровень: Средний) (Грачев Н.)
#
# В файле содержится последовательность целых неотрицательных чисел, не превышающих 10000.
# Определите количество пар элементов последовательности, в которых либо сумма элементов кратна 18,
# либо произведение элементов кратно 18. В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную сумму элементов этих пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if ((x + y) % 18 == 0) != ((x * y) % 18 == 0):
            R.append(x + y)
print(len(R), max(R))
'''
# 120400 19971

# endregion Домашка: ************************************************************


# region Урок: ******************************************************************

# Тип 24 №27687
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Y.
# Хотя бы один символ Y находится в последовательности.

# s = "xxxxYYYYxYYYYYxYYYYYxYYYYYYYYxYYYYY"

# Вариант 1
'''
s = open('24.txt').readline()
count = 1
max_count = 0
for i in range(len(s)-1):
    # if s[i:i+2] == 'YY':
    if s[i] == 'Y' and s[i+1] == 'Y':
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)
'''


# Вариант 2
'''
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Z', ' ')
print(max([len(x) for x in s.split()]))


# Вариант 2.2
print(max([len(x) for x in open('24.txt').readline().replace('X', ' ').replace('Z', ' ').split()]))
'''

# Вариант 3
'''
s = open('24.txt').readline()
print(s)
print(len('YYYYYYYYYY'))
'''
# Ответ: 10.


# Тип 24 №27690
# Текстовый файл состоит не более чем из 10**6 символов A, B и C.
# Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.
'''
s = open('24.txt').readline()
count = 1
max_count = 0
for i in range(len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)

# Вариант 2
s = open('24.txt').readline()
s = s.replace('BB', 'B B').replace('AA', 'A A').replace('CC', 'C C')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 42


# Тип 24 №38958
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите максимальное количество идущих подряд символов, среди которых не более одной буквы A.
'''
# xxxxxxAxxxxxxAxxxxxAxxxxxxx
# xxxxxx xxxxxx xxxxx xxxxxxx
s = open('24.txt').readline().split('A')
print(max([len(s[i]) + len(s[i+1]) for i in range(len(s)-1)]) + 1)
'''
# 337


# Тип 24 №59817
# Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов, которых никакие две буквы
# из набора букв A, B и C (с учетом повторений) не записаны подряд.
'''
s = open('24.txt').readline()
for x in 'AA BB CC AB AC BC BA CA CB'.split():
    s = s.replace(x, '* *')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 49

# Тип 24 №36037
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд символов, среди которых нет подстроки XZZY.
'''
s = open('24.txt').readline()
s = s.replace('XZZY', 'XZZ ZZY')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 1713

# endregion Урок: ***************************************************************


# Сева = [2.1, 6.1, 5.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
