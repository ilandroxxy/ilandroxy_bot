
# region Домашка: ******************************************************************

# region Тип 5 № 13536 очень интересная задача с нечетными цифрами четырехзначного числа
'''
# Автомат получает на вход четырёхзначное десятичное число, в котором все цифры нечётные.
# По этому числу строится новое число по следующим правилам.
#
# 1.Складываются первая и вторая, а также третья и четвёртая цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания (без разделителей).
#
# Пример. Исходное число: 7511. Суммы: 7 + 5 = 12; 1 + 1 = 2. Результат: 212.
# Сколько существует чисел, в результате обработки которых автомат выдаст число 414

count = 0
for n in range(1000, 10000):
    M = [int(i) for i in str(n) if int(i) % 2 != 0]
    if len(M) == 4:
        a = M[0] + M[1]
        b = M[2] + M[3]

        maxi = max(a, b)
        mini = min(a, b)
        r = str(mini) + str(maxi)

        if r == '414':
            print(n)
            count += 1
print(count)
'''
# Ответ: 12
# endregion Тип 5 № 13536 очень интересная задача с нечетными цифрами четырехзначного числа


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 25 № 28122
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [489421;489440],
# числа, имеющие ровно четыре различных натуральных делителя.
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

def F(x):
    dl = set()
    for j in range(1, int(x ** 0.5) + 1):  # for j in range(1, x+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
            if len(dl) > 4:
                return dl
    return sorted(dl)

for x in range(489421, 489440+1):
    dl = F(x)
    if len(dl) == 4:
        print(*dl)
'''
# Ответ:
# 1 19 25759 489421
# 1 2 244711 489422
# 1 13 37649 489437


# Тип 25 № 37130
'''
# Напишите программу, которая перебирает целые числа, большие 600000, в порядке возрастания и ищет среди них такие,
# среди делителей которых есть хотя бы одно число, оканчивающееся на 7, но не равное 7 и самому числу.
# Необходимо вывести первые 5 таких чисел, и наименьший делитель, оканчивающийся на 7, не равный 7 и самому числу.

def F(x):
    dl = set()
    for j in range(2, int(x ** 0.5)+1):
        if x % j == 0 and j != 7:
            if j % 10 == 7:
                dl.add(j)
            if (x//j) % 10 == 7:
                dl.add(x//j)
    return sorted(dl)

k = 0
for x in range(600001, 100000000):
    dl = F(x)
    if len(dl) != 0:
        print(x, min(dl))
        k += 1
        if k == 5:
            break
'''
# Ответ:
# 600001 437
# 600002 47
# 600003 1227
# 600005 217
# 600012 16667


# Тип 25 № 36880
'''
# Найдите все натуральные числа N, принадлежащие отрезку [400000000; 600000000], которые можно представить в виде N=2**m*3**n,
# где m — чётное число, n — нечётное число. В ответе запишите все найденные числа в порядке возрастания.

# print(2**28)
# print(3**17)
M = []
for m in range(2, 28+1, 2):
    for n in range(1, 17+1, 2):
        N = 2 ** m * 3 ** n
        if 400000000 <= N <= 600000000:
            M.append(N)
M.sort()
print(*M)
'''
# Ответ:
# 516560652
# 408146688
# 573308928
# 452984832


# Тип 25 № 27855
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632;95700], числа,
# имеющие ровно шесть различных чётных натуральных делителей (при этом количество нечётных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.


def F(x):
    dl = set()
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (x // j) % 2 == 0:
                dl.add(x // j)
            if len(dl) > 6:
                return dl
    return sorted(dl)

for x in range(95632, 95700+1):
    dl = F(x)
    if len(dl) == 6:
        print(* dl)
'''
# Ответ:
# 2 10 50 3826 19130 95650
# 2 26 338 566 7358 95654
# 2 4 8 23918 47836 95672




# Тип 25 № 40741
'''
# Пусть M(N) — сумма двух наибольших различных натуральных делителей натурального числа N, не считая самого числа. Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 10_000_000, для которых 0 < M(N) < 10000. В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.
import time
def F(x):
    dl = set()
    for j in range(2, int(x ** 0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) == 4:
                return sorted(dl)
    return sorted(dl)

k = 0
for x in range(10_000_000, 100_000_000):
    dl = F(x)
    if 2 <= len(dl) <= 4:
        M = dl[-1] + dl[-2]
        if 0 <= M <= 10000:
            print(x, M)
            k += 1
            if k == 5:
                break
'''
# Ответ:
# 6876
# 6374
# 6924
# 8024
# 8358



# endregion Урок: ******************************************************************


# todo: Владек = [2, 5, 8, 12, 14+, 15, 16, 23, 25.1], на следующем уроке: 25 номер на Mки, маски, N = 2**m*3**n