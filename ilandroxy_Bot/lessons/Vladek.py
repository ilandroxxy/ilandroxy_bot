
# region Домашка: ******************************************************************






# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************



#  В файле 17-243.txt содержится последовательность целых чисел.
#  Элементы последовательности могут принимать целые значения от 0 до 10 000 включительно.
#  Определите количество пар чисел, в которых ровно один из двух элементов больше,
#  чем сумма цифр всех чисел в файле, делящихся на 35, а шестнадцатеричная запись другого оканчивается на EF.
#  В ответе запишите два числа: сначала количество найденных пар, а затем – минимальную сумму элементов таких пар.
#  В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
def my_bin(x: int, n: int):
    alphabet = '0123456789ABCDEF'
    M = []
    while x > 0:
        M.append(alphabet[x % n])
        x //= n
    M.reverse()
    return ''.join(M)

def F(x: int) -> str:
    return sum([int(i) for i in str(x)])

A = [F(int(i)) for i in open('17-243.txt') if int(i) % 35 == 0]
summ = sum(A)  # сумма цифр всех чисел в файле, делящихся на 35

M = [int(i) for i in open('17-243.txt')]
# M = [1, 2, 3, 4, 5]
count = 0
mini = 99999
for i in range(0, len(M)-1):

    if (M[i] > summ and M[i+1] < summ and my_bin(M[i+1], 16)[-2:] == 'EF') or \
            (M[i+1] > summ and M[i] < summ and my_bin(M[i], 16)[-2:] == 'EF'):
        print(M[i] > summ, M[i + 1] > summ, my_bin(M[i], 16)[-2:], my_bin(M[i + 1], 16)[-2:])
        count += 1
        mini = min(mini, M[i] + M[i+1])
print(count, mini)
'''
# Ответ: 15 6410


# 2. (А. Кабанов) В файле 17-4.txt содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от 0 до 10 000 включительно.
# Рассматривается множество элементов последовательности, которые в пятеричной системе счисления оканчиваются на 3,
# в девятеричной – на 5 и не оканчиваются на 7 в восьмеричной системе счисления.
# В качестве ответа укажите два числа – количество найденных чисел и максимальное из них.
"""
def my_bin(x: int, n: int):
    alphabet = '0123456789ABCDEF'
    M = []
    while x > 0:
        M.append(alphabet[x % n])
        x //= n
    M.reverse()
    return ''.join(M)

# Вариант 1
'''
M = [int(i) for i in open('17-4.txt')]
count = 0
maxi = -99999
for i in range(0, len(M)):
    if my_bin(M[i], 5)[-1] == '3':
        if my_bin(M[i], 9)[-1] == '5':
            if my_bin(M[i], 8)[-1] != '7':
                count += 1
                maxi = max(maxi, M[i])
print(count, maxi)
'''

# Вариант 2
M = [int(i) for i in open('17-4.txt')]
count = 0
maxi = -99999
for x in M:
    if my_bin(x, 5)[-1] == '3':
        if my_bin(x, 9)[-1] == '5':
            if my_bin(x, 8)[-1] != '7':
                count += 1
                maxi = max(maxi, x)
print(count, maxi)
"""
# Ответ: 43 9653


# 12. Текстовый файл 24-224.txt содержит строку из символов A, B и C, всего не более чем 10**6 символов.
# Найдите максимальную длину строки, состоящей только из комбинаций BAC и СAB.
# Например, в строке BABABACCABCABCB такая подстрока BACCABCAB (длина 9).

s = open('24.txt').readline()

s = s.replace('BAC', '***').replace('CAB', '***')

s = s.replace('A', ' ').replace('B', ' ').replace('C', ' ')
M = [len(i) for i in s.split()]
print(max(M))


'''
s = open('24.txt').readline()
count = 2
max_count = 0
for i in range(0, len(s)-2):
    if s[i:i+3] == 'BAC' or s[i:i+3] == 'ACB' or s[i:i+3] == 'CBA' or s[i:i+3] == 'CAB' or s[i:i+3] == 'ABC' or s[i:i+3] == 'BCA':
        count += 1
        max_count = max(max_count, count)
    else:
        count = 2
print(max_count)
'''


# 3. В файле 17-243.txt содержится последовательность целых чисел. Элементы последовательности могут принимать целые значения от 0 до 10 000 включительно. Определите количество пар чисел, в которых хотя бы один из двух элементов больше, чем наибольшее из всех чисел в файле, делящихся на 211, и хотя бы один элемент из двух содержит цифру 1. В ответе запишите два числа: сначала количество найденных пар, а затем – минимальную сумму элементов таких пар. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.

# endregion Урок: ******************************************************************


# todo: Владек = [2, 5, 8, 12, 14+, 15, 16, 17, 22, 23, 25.2]
# на прошлом уроке: Разобрали 17 номера с Полякова и повторили несколько 5 задач на системы счисления.
# на следующем уроке: Добить 17, 5 номера. Разбираем 9, 24 номера.