
# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# Тип 6 № 47403
'''
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 12 Направо 90]
# Направо 30
# Повтори 3 [Вперёд 8 Направо 60 Вперёд 8 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом: Повтори 4 [Вперёд 12 Направо 90]
#
# и находиться вне области, ограниченной линией, заданной данным алгоритмом: Повтори 3 [Вперёд 8 Направо 60 Вперёд 8 Направо 120].
# Точки на линии учитывать не следует.

import turtle as t
t.left(90)
l = 40
# t.speed(10)

for _ in range(4):
    t.forward(12*l)
    t.right(90)
t.right(30)
t.color('red')
for _ in range(3):
    t.forward(8*l)
    t.right(60)
    t.forward(8*l)
    t.right(120)
t.color('blue')
t.pu()
for x in range(0, 14):
    for y in range(0, 14):
        t.goto(x*l, y*l)
        t.dot(3)
t.done()
'''
# Ответ: 73



# Тип 8 № 3700
# Все 5-буквенные слова, составленные из букв Б, К, Ф, Ц, записаны в алфавитном порядке и пронумерованы. Вот начало списка:
#
# 1.БББББ
# 2.ББББК
# 3.ББББФ
# 4.ББББЦ
# 5.БББКБ

# Запишите слово, которое стоит на 486-м месте от начала списка.
'''
s = 'БКФЦ'
i = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if i == 486:
                        print(i, temp)
                    i += 1
'''
# Ответ: КЦФКК


# Тип 8 № 7338
'''
# Рассматриваются символьные последовательноств пятибуквенном алфавите {К, А, Т, Е, Р}.
# Сколько существует таких последовательностей, которые начинаются с буквы Р и заканчиваются буквой К?

s = 'КАТЕР'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        # if temp[0] == 'Р' and temp[-1] == 'К':
                        if a == 'Р' and f == 'К':
                            count += 1
print(count)
'''
# Ответ: 625




# Тип 12 № 47216
# Дана программа для Редактора:
#
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>0)
#     ЕСЛИ нашлось (>1)
#         ТО заменить (>1, 22>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>2)
#         ТО заменить (>2, 2>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>0)
#         ТО заменить (>0, 1>)
#     КОНЕЦ ЕСЛИ
#
# На вход приведённой выше программе поступает строка, начинающаяся с символа «>», а затем содержащая 39 цифр «0»,
# n цифр «1» и 39 цифр «2», расположенных в произвольном порядке.
#
# Определите наименьшее значение n, при котором сумма числовых значений цифр строки, получившейся
# в результате выполнения программы, является простым числом.
'''
def MySimpler(x):
    for j in range(2, x):
        if x % j == 0:
            return False
    return True

for n in range(1, 1000):
    s = '>' + '0' * 39 + '1' * n + '2' * 39

    while '>1' in s or '>2' in s or '>0' in s:
        if '>1' in s:
            s = s.replace('>1', '22>', 1)
        if '>2' in s:
            s = s.replace('>2', '2>', 1)
        if '>0' in s:
            s = s.replace('>0', '1>', 1)

    summ1 = s.count('1') + s.count('2') * 2
    summ2 = sum([int(i) for i in s[:-1]])
    # print(summ1, summ2)

    if MySimpler(summ1) == True:
        print(n)
        break
'''
# Ответ: 5


# Тип 16 № 37151
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(n) = 0, при n ≤ 1;
# F(n) = F(n − 1) + 3n**2, если n > 1 и при этом нечётно;
# F(n) = n / 2 + F(n − 1) + 2, если n > 1 и при этом чётно.
#
# Чему равно значение функции F(49)? В ответе запишите только целое число.
'''
def F(n):
    if n <= 1:
        return 0
    if n > 1 and n % 2 != 0:
        return F(n - 1) + 3*n**2
    if n > 1 and n % 2 == 0:
        return n / 2 + F(n - 1) + 2

print(F(49))
'''
# Ответ: 62820


# Тип 16 № 38950
'''
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#

# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 500 и F(n) = 8?
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n-1)

count = 0
for x in range(1, 500+1):
    if F(x) == 8:
        count += 1
print(count)
'''
# Ответ: 5


# Тип 23 № 15990
'''
# Исполнитель Вычислитель преобразует число на экране.
#
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 2
# 2. Умножить на 2
# 3. Прибавить 3
#
# Сколько существует программ, которые преобразуют исходное число 2 в число 22 и при этом траектория вычислений содержит число 11?


def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 2, b) + F(a * 2, b) + F(a + 3, b)

print(F(2, 11) * F(11, 22))
'''

# endregion Урок: ******************************************************************


# todo: Василий = [2, 5, 8, 12, 14+], на следующем уроке: Добиваем добиваем 23 номер, разобрать на рисунке.