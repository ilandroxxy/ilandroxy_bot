
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************

# (№ 5888) (А. Бриккер)
# def f(n):
#     if n <= 3:
#         return n - 1
#     if n > 3 and n % 2 == 0:
#         return f(n - 2) + n / 2 - f(n - 4)
#     if n > 3 and n % 3 == 0:
#         return f(n - 1) * n + f(n - 2)
# print(f(4952) + 2 * f(4958) + f(4964))

# (А. Бриккер) Алгоритм вычисления функции F(n), где n – неотрицательное число, задан следующимисоотношениями:
# F(n) = n - 1, при n ≤ 3;
# F(n) = F(n - 2) + n / 2 - F(n - 4), если n > 3 и n чётно;
# F(n) = F(n - 1) * n + F(n - 2), если n > 3 и n нечётно.
#
# Чему равно значение выражения F(4952) + 2*F(4958) + F(4964)?

# F(4964) = F(4962) + 4964 / 2 - F(4960)
# F(4962) = F(4960) + 4962 / 2 - F(4958)

# F(4960) + 4962 / 2 - F(4958) + 4964 / 2 - F(4960)
# 4962 / 2 - F(4958) + 4964 / 2

# F(4952) + 2*F(4958) + 4962 / 2 - F(4958) + 4964 / 2
# F(4952) + F(4958) + 4962 / 2 + 4964 / 2

# F(4958) = F(4956) + 4958 / 2 - F(4954)
# F(4956) = F(4954) + 4956 / 2 - F(4952)

# F(4954) + 4956 / 2 - F(4952) + 4958 / 2 - F(4954)
# 4956 / 2 - F(4952) + 4958 / 2

# F(4952) + 4956 / 2 - F(4952) + 4958 / 2  + 4962 / 2 + 4964 / 2
# 4956 / 2  + 4958 / 2  + 4962 / 2 + 4964 / 2
'''
print(4956 / 2 + 4958 / 2 + 4962 / 2 + 4964 / 2)
'''
# Ответ: 9920


# Тип 14 №
# 48382
# Операнды арифметического выражения записаны в системе счисления с основанием 16:
#
# 8x84x_16 + 78x34_16
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита шестнадцатеричной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 23.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 23
# и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
for x in '0123456789ABCDEF':
    A = int(f'8{x}84{x}', 16)
    B = int(f'78{x}34', 16)
    if (A + B) % 23 == 0:
        print((A + B) // 23)
        exit()
'''
# Ответ: 45963





###########    VOPROSIK

# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10 ** 9,
# найдите все числа, соответствующие маске 15*3*09 и имеющие ровно 9 делителей. В ответе запишите в
# первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце – соответствующие
# им максимальные делители, не считая самого числа.

print(10 ** 9)       # 1000000000
print('153****09')   # 153****09

import itertools

def Divisors(x):
    divisors = set()
    for j in range(1, int(x ** 0.5)+1):
        if x % j == 0:
            divisors.add(j)
            divisors.add(x // j)
    return sorted(divisors)

M = []
for l in range(0, 4+1):  # длина *
    for s in itertools.product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)

my_dict = dict()
for x in M:
    for y in M:
        A = int(f'15{x}3{y}09')
        if A < 10**9:
            divisors = Divisors(A)
            if len(divisors) == 9:
                my_dict[A] = divisors[-2]

for key in sorted(my_dict):
    print(key, my_dict[key])

# Ответ:
# 15233409 5077803
# 153834409 1947271
# 158835609 52945203


# endregion Урок: ******************************************************************

import useful
print(useful.Who_Is_Name())

# todo:    Владек   = [2, 3, 5, 8, 9, 12, 14+, 15, 16, 17, 19-21, 22, 23, 24.1, 25.2]
# todo: Владек КЕГЭ = [16, 25]
# на прошлом уроке: Прорешивали 16 номера с превышением рекурсии (вручную) и решали задачку 25 с сложными масками
# на следующем уроке:  Позаниматься 25 номерами с масками
