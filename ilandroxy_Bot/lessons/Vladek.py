
# region Домашка: ******************************************************************

# Тип 5 № 15791
'''
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится двоичная запись числа N.
# 2. Складываются все цифры полученной двоичной записи. В конец записи (справа) дописывается остаток от деления суммы на 2.
# 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
# 4. Результат переводится в десятичную систему и выводится на экран.
#
# Пример. Дано число N = 13. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 1101.
# 2. Сумма цифр двоичной записи 3, остаток от деления на 2 равен 1, новая запись 11011.
# 3. Сумма цифр полученной записи 4, остаток от деления на 2 равен 0, новая запись 110110.
# 4. На экран выводится число 54.
#
# Какое наименьшее число, большее 97, может появиться на экране в результате работы автомата?



M = []
for n in range(1, 10000):
    s = bin(n)[2::]  # 1. Строится двоичная запись числа N.

    for _ in range(2):  # 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
        summ = s.count('1')
        s += str(summ % 2)  # 2. Складываются все цифры полученной двоичной записи. В конец записи (справа) дописывается остаток от деления суммы на 2.

    r = int(s, 2)  # 4. Результат переводится в десятичную систему и выводится на экран.

    if r > 97:
        print(r)
        M.append(r)
        break

print(min(M))
'''
# Ответ: 102





# Тип 5 № 13617
'''
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Перемножаются отдельно первая и вторая цифры, а также – вторая и третья цифры.
#
# 2. Полученные два числа записываются друг за другом в порядке невозрастания без разделителей.
#
# Пример. Исходное число: 179. Произведения: 1*7 = 7; 7*9 = 63. Результат: 637.
#
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 123.



for n in range(100, 1000):
   s = str(n)
   M = [int(i) for i in s]

   a = M[0] * M[1]
   b = M[1] * M[2]

   r = str(max(a,b)) + str(min(a,b))

   if r == '123':
       print(n)
       break
'''
# Ответ:134.



#
#s = 'АЕКР'
#count = 1
#for a in s:
#    for b in s:
#        for c in s:
#            for d in s:
#                    temp = a + b + c + d
#                    if temp.count('А') == 0:
#                        print(count)
#                        break
#                    count += 1
#


# Тип 8 № 3692
'''
s = 'АОУ'
count = 1
for a in s:
   for b in s:
       for c in s:
           for d in s:
               for e in s:
                   temp = a + b + c + d + e
                   if count == 240:
                       print(count, temp)
                   count += 1
'''
# Ответ: УУУОУ




# 14
'''
x = 5**36 + 5**24 - 25
a = ''
while x != 0:
   a += str(x % 5)
   x //= 5
a = a[::-1]
print(a.count('4'))


x = 5**36 + 5**24 - 25
M = []
while x > 0:
    M.append(x % 5)
    x //= 5
M.reverse()
print(M.count(4))
'''


#  14
#x = 4**16 + 2**36 - 8
#a = ''
#while x != 0:
#    a += str(x % 2)
#    x //= 2
#a = a[::-1]
#print(a.count('1'))

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

'''
# Три способа взятия суммы от строки
s = '11221133221133'

# вариант 1
M = [int(i) for i in s]
print(sum(M))

# вариант 1
summ1 = 0
for i in s:
    summ1 += int(i)
print(summ1)

# вариант 3
summ2 = s.count('1') + s.count('2') * 2 + s.count('3') * 3
print(summ2)
'''


# Тип 8 № 13594
'''
# Алексей составляет таблицу кодовых слов для передачи сообщений, каждому сообщению соответствует своё кодовое слово.
# В качестве кодовых слов Алексей использует 5-буквенные слова, в которых есть только буквы A, B, C, X,
# причём буква X может появиться только на последнем месте или не появиться вовсе.
# Сколько различных кодовых слов может использовать Алексей?

count = 0
for a in 'ABC':
    for b in 'ABC':
        for c in 'ABC':
            for d in 'ABC':
                for e in 'ABCX':
                    temp = a + b + c + d + e
                    count += 1
print(count)
'''
# Ответ: 324



# Тип 8 № 29195
'''
# Регина составляет 5-буквенные коды из букв Р, Е, Г, И, Н, А. Буквы Р и Г нужно обязательно
# использовать ровно по одному разу, букву Н можно использовать один раз или не использовать совсем,
# остальные буквы можно использовать произвольное количество раз или не использовать совсем.
# Сколько различных кодов может составить Регина?

s = 'РЕГИНА'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('Р') == 1 and temp.count('Г') == 1:
                        if temp.count('Н') <= 1:
                            count += 1
print(count)
'''
# Ответ: 1080


# Тип 8 № 18491
'''
# Ольга составляет 5-буквенные коды из букв О, Л, Ь, Г, А.
# Каждую букву нужно использовать ровно 1 раз, при этом Ь нельзя ставить первым и нельзя ставить после гласной.
# Сколько различных кодов может составить Ольга?

s = 'ОЛЬГА'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if a != 'Ь' and 'ОЬ' not in temp and 'АЬ' not in temp:
                        M = [i for i in temp]
                        A = set(M)  # переводим список М в множество, чтобы убрать повторяющиеся элементы
                        if len(A) == 5:
                            count += 1
                            print(temp, A)
print(count)
'''
# Ответ: 48


# Тип 8 № 14771
# Все трёхбуквенные слова, составленные из букв П, А, Р, У, С, записаны в алфавитном порядке и пронумерованы, начиная с 1.
# Начало списка выглядит так:
#
# 1.ААА
# 2.ААП
# 3.ААР
# 4.ААС
# 5.ААУ
# 6.АПА
#
# Под каким номером в списке идёт первое слово, которое начинается с буквы Р?

# Вариант 1
'''
s = 'АПРСУ'
i = 1
for a in s:
    for b in s:
        for c in s:
            temp = a + b + c
            if a == 'Р':
                print(i, temp)
                exit()
            i += 1
'''

# Вариант 2
'''
s = 'АПРСУ'
i = 0
for a in s:
    for b in s:
        for c in s:
            i += 1
            temp = a + b + c
            if a == 'Р':
                print(i, temp)
                exit()
'''


# Вариант 3
'''
s = 'АПРСУ'
M = ['0']
for a in s:
    for b in s:
        for c in s:
            temp = a + b + c
            M.append(temp)

for i in range(0, len(M)):
    if M[i] == 'РАА':
        print(i)
'''

# Ответ: 51 РАА


# Тип 12 № 36867
'''
# Дана программа для редактора:
#
# НАЧАЛО
#     ПОКА НЕ нашлось (00)
#         заменить (01, 210)
#         заменить (02, 320)
#         заменить (03, 3012)
#     КОНЕЦ ПОКА
# КОНЕЦ

# Известно, что исходная строка начиналась с нуля и заканчивалась нулём, а между ними содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 26 единиц, 54 двойки и 48 троек.
# Сколько цифр было в исходной строке?

for x in range(1, 50):
    for y in range(1, 50):
        for z in range(1, 50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'
            temp = s

            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '320', 1)
                s = s.replace('03', '3012', 1)

            if s.count('1') == 26 and s.count('2') == 54 and s.count('3') == 48:
                print(len(temp))
'''
# Ответ: 36.




# endregion Урок: ******************************************************************


# todo: Василий = [2, 5, 8, 14+], на следующем уроке: Добиваем 12 номера