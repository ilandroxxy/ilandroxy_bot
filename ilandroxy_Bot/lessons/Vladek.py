
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************

#
# № 4802 (Уровень: Средний)
# Операнды арифметического выражения записаны в системе счисления с основанием 12.
#
# Пусть T = 4Ax_12 + y1B23_12
#
# В записи чисел переменными x и y обозначены неизвестные цифры из алфавита 12-ричной системы счисления.
# Причём известно, что x кратно 9, а y больше двух.
#
# Определите наименьшее значение выражения 2*(x+y), при котором значение арифметического выражения T кратно 6.
# Укажите его в ответе в десятичной системе счисления.
'''
ALPHABTE = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for x in ALPHABTE[:12]:
    for y in ALPHABTE[:12]:
        if int(f'{x}', 12) % 9 == 0 and int(f'{y}', 12) > 2:
            T = int(f'4A{x}', 12) + int(f'{y}1B23', 12)
            if T % 6 == 0:
                print(2*(int(f'{x}', 12) + int(f'{y}', 12)))
                exit()
'''
# Показать ответ: 24


# № 8493 Апробация 17.05 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число N делится на 3, то к этой записи дописываются три последние двоичные цифры;
# б) если число N на 3 не делится, то остаток от деления умножается на 3,
# переводится в двоичную запись и дописывается в конец числа.
# Полученная таким образом запись является двоичной записью искомого числа R.
# 3. Результат переводится в десятичную систему и выводится на экран.
# Например, для исходного числа 12 = 11002 результатом является число 11001002 = 100,
# а для исходного числа 4 = 1002 результатом является число 100112 = 19.
# Укажите максимальное число N, после обработки которого с помощью этого алгоритма получается число R, меньшее чем 76.
'''
for n in range(1, 10000):
    s = bin(n)[2:]
    if n % 3 == 0:
        s += s[-3:]
    else:
        s += bin(3 * (n % 3))[2:]

    r = int(s, 2)

    if r < 76:
        print(n)
'''
# Показать ответ: 16


# Поднять перо
# Сместиться на (5, 5)
# Опустить перо
# Повтори 20 [Сместиться на (-5, -5) Сместиться на (0, 5)]
# Сместиться на (0, -5)
# Повтори 20 [Сместиться на (5, 0)]

# Определите, общую площадь для всех замкнутых фигур, полученных в результате работы алгоритма.
# В ответ укажите только целую часть полученного числа.
'''
import turtle as t
t.left(90)
l = 30
t.speed(100)

t.up()

x, y = 0, 0
x += 5
y += 5
t.goto(x * l, y * l)  # Сместиться на (5, 5)

t.down()

for i in range(20):
    x += -5
    y += -5
    t.goto(x * l, y * l)  # Сместиться на (5, 5)

    x += 0
    y += 5
    t.goto(x * l, y * l)  # Сместиться на (5, 5)

x += 0
y += -5
t.goto(x * l, y * l)  # Сместиться на (5, 5)

for i in range(20):
    x += 5
    y += 0
    t.goto(x * l, y * l)  # Сместиться на (5, 5)

t.done()
'''
# Показать ответ: 237



# Какое количество вариантов строки можно получить при выходе из Фиксика, если использовать четыре 1, три 3 и две 2 на входе.
'''
import itertools
my_set = set()

for p in itertools.permutations('1' * 4 + '3' * 3 + '2' * 2, 9):
    s = ''.join(p)
    while '133' in s or '221' in s or '23' in s:
        if '133' in s:
            s = s.replace('133', '1', 1)
            # count += 1

        if '221' in s:
            s = s.replace('221', '31', 1)
            # count += 1

        if '23' in s:
            s = s.replace('23', '21', 1)
    my_set.add(s)
print(len(my_set))
'''
# Ответ: 640


# № 7346 (Уровень: Средний)
# (Д. Статный) Дано арифметическое выражение:
#
# 3x21_81 + 17x4_67
#
# В записи чисел переменной x обозначена неизвестная цифра из допустимого алфавита для
# указанных систем счисления. Определите наибольшее значение x, при котором значение данного
# арифметического выражения кратно 35. Для найденного значения x вычислите частное от деления
# значения арифметического выражения на 35 и укажите его в ответе в десятичной системе счисления.

ALPHABTE = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
def my_int(s: str, n: int):
    """
    Аналог встроенной функции int(s, n)

    :param s: Число в n-ной системе счисления (в виде строки)
    :param n: Система счисления в которой, находится число (из которой переводи)
    :return: Будет возвращать целое число в 10-ной системе счисления
    """
    M = [ALPHABTE.index(i) for i in s]
    r = 0
    M.reverse()
    for i in range(0, len(M)):
        r += M[i] * n ** i
    return r


print(my_int('2345FG', 16))

print(my_int('1000', 2))




# print(int('234234', 84))  # ValueError: int() base must be >= 2 and <= 36, or 0

# Показать ответ: 62244


# endregion Урок: ******************************************************************

import useful
print(useful.Who_Is_Name())


# todo:    Владек   = [2, 3, 5, 8, 9, 12, 14+, 15, 16, 17, 19-21, 22, 23, 24.1, 25.2]
# todo: Владек КЕГЭ = [16, 25]
# на прошлом уроке: Решали разной сложности задачи: 6, 14, 12 - все задачи среднего и сложного уровня
# на следующем уроке: