
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************



# № 1241 Статград 26.04.2021 (Уровень: Базовый)
# Руслан составляет 5-буквенные коды из букв Р, У, С, Л, А, Н.
# Каждая допустимая гласная буква может входить в код не более одного раза.
# Сколько кодов может составить Руслан?
'''
s = 'РУСЛАН'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('У') <= 1 and temp.count('А') <= 1:
                        count += 1
print(count)
'''


# № 1804 (Уровень: Базовый)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится двоичная запись числа 2N.
#
# 2) К этой записи дописываются справа ещё два разряда по следующему правилу:
#
# а) складываются все цифры двоичной записи числа N, и остаток от деления суммы на 2 дописывается в конец числа (справа)
# .Например, запись 10000 преобразуется в запись 100001;
#
# б) над этой записью производятся те же действия – справа дописывается остаток от деления суммы её цифр на 2.
#
# Полученная таким образом запись (в ней на три разряда больше, чем в записи исходного числа N) является
# двоичной записью искомого числа R. Укажите такое наименьшее число N,
# для которого результат работы данного алгоритма больше числа 249.
# В ответе это число запишите в десятичной системе счисления.

'''
for n in range(1, 1000):
    s = bin(2*n)[2:]
    s += str(s.count('1') % 2)
    s += str(s.count('1') % 2)
    r = int(s, 2)
    if r > 249:
        print(n)
        break
'''


# № 7724 (Уровень: Базовый)
# (Грачев Н.) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Найдите все натуральные числа, не превосходящие 109, для которых выполнены все условия:
#
# - соответствуют маске *18??18;
# - делятся на 18 и на 1018 без остатка;
#
# В ответе запишите в первом столбце таблицы первые пять найденных чисел
# в порядке возрастания, справа от каждого числа кол-во его делителей.
'''
from fnmatch import *
for x in range(1018, 10**9, 1018):
    if fnmatch(str(x), '*18??18'):
        if x % 18 == 0:
            divisors = set()
            for j in range(1, int(x**0.5)+1):
                if x % j == 0:
                    divisors.add(j)
                    divisors.add(x // j)
            print(x, len(divisors))
'''
# Ответ:
# 2189718 24
# 13184118 24
# 84189618 40
# 95184018 32
# 166189518 96


# № 5947 (Уровень: Базовый)
'''
c = 0
for n in range(3, 50+1):
    s = ">" * 1 + "1" * n + "2" * n + "3" * n
    while ">1" in s or ">2" in s or ">3" in s:
        if ">1" in s:
            s = s.replace(">1", "22>3", 1)
        if ">2" in s:
            s = s.replace(">2", "2>", 1)
        if ">3" in s:
            s = s.replace(">3", "11>2", 1)
    if sum([int(i) for i in s if i.isdigit()]) % 7 == 0:
        c += 1
print(c)
'''
# Ответ: 48




# endregion Урок: ******************************************************************

import useful
print(useful.Who_Is_Name())


# todo:    Владек   = [2, 3, 5, 8, 9, 12, 14+, 15, 16, 17, 19-21, 22, 23, 24.1, 25.2]
# todo: Владек КЕГЭ = [16, 25]
# на прошлом уроке: Решали разной сложности задачи: 6, 14, 12 - все задачи среднего и сложного уровня
# на следующем уроке: