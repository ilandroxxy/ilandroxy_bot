# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Комментарии в Пайтон
'''
# - однострочный комментарий

"""
- многострочный комментарий
"""

# print()
# print()  # сочетание клавиш ctrl + /  - закомментировать несколько строк через #
# print()
'''

# print('Я прочитал книгу "Война и мир"')  # Я прочитал книгу "Война и мир"

# Переменная - это удобный способ хранения данных через присваивание им какого-то персонального имени
X = 5
# print(X, type(X))  # 5 <class 'int'>

# Типы данных переменных
'''
a = 5  # int (integer) - целочисленные значения

b = 5.0  # float (число с плавающей точкой) - вещественные числа/дроби
print(1/2, type(1/2))  # 0.5 <class 'float'>
print(7 / 2)  # 3.5

c = '5'  # str (string) - строковый тип данных, то есть хранит в себе: символы, буквы, слова, текста..
print(a * 4, c * 4)  # 20 5555 - строчка при умножении на целое число - дублируется n раз

s = '8' * 100
print(s)  # 8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888

d1 = True  # bool (Boolean) - Логические значения 
d2 = False

print(4 < 10)  # True - Задаем вопрос: четверка меньше 10? Ответ - да. 
'''

# Типы данных коллекций/последовательности
'''
# i  0  1  2
L = [1, 2, 3]  # list (списки)
# - Может содержать в себе неограниченное кол-во элементов разных типов данных
# - Каждый элемент последовательности имеет свой порядковый номер - индекс
# - Индексы могут считаться слева-направо начиная с 0 или справа-налево начиная с -1
# - Через индексы можно не только брать элементы списков, но и изменять их значение

# i  0  1  2
T = (1, 2, 3)  # tuple (кортеж)
# - Может содержать в себе неограниченное кол-во элементов разных типов данных
# - Каждый элемент последовательности имеет свой порядковый номер - индекс
# - Индексы могут считаться слева-направо начиная с 0 или справа-налево начиная с -1
# - Через индексы можно только брать элементы кортежей

# i  0  1  2
S = {1, 2, 3}  # set (множества)
# Не может хранить двух одинаковых элементов - то есть копии удаляются

D = {'один': 'one', 'два': 'two', 'три': 'three'}  # dict (словарь)
print(D['один'])  # one
print(D.keys())  # dict_keys(['один', 'два', 'три'])
print(D.values())  # dict_values(['one', 'two', 'three'])
print(D.items())  # dict_items([('один', 'one'), ('два', 'two'), ('три', 'three')])

for key, value in D.items():
    print(key, value)
    # один one
    # два two
    # три three
'''

# Конвертация типов данных
'''
a = 5
print(a, type(a))  # 5 <class 'int'>

a = str(a)
print(a, type(a))  # 5 <class 'str'>
# ValueError: invalid literal for int() with base 10: '5.0'

a = float(a)
print(a, type(a))  # 5.0 <class 'float'>

a = int(a)
print(a, type(a))  # 5 <class 'int'>
'''

'''
L = [1, 2, 3, 1, 2]
print(L, type(L))  # [1, 2, 3, 1, 2] <class 'list'>

L = tuple(L)
print(L, type(L))  # (1, 2, 3, 1, 2) <class 'tuple'>

L = set(L)
print(L, type(L))  # {1, 2, 3} <class 'set'>

L = list(L)
print(L, type(L))  # [1, 2, 3] <class 'list'>
'''

# Ввод данных с клавиатуры
'''
x = input('Ввод строки с клавиатуры: ')
print(x, type(x))  # <class 'str'>

n = int(input('Ввод числа с клавиатуры: '))
print(n, type(n))  # <class 'int'>
'''

# Работа с функцией print() и f-строкой
'''
# Сегодня облачно, а температура 24 градуса!
weather = input('Какая сегодня погода: ')
temperature = int(input('И посмотри температуру: '))
print('Сегодня ', weather, ', а температура ', temperature, ' градуса!')
print('Сегодня ' + weather + ', а температура ' + str(temperature) + ' градуса!')
print('Сегодня {}, а температура {} градуса!'.format(weather, temperature))
print(f'Сегодня {weather}, а температура {temperature} градуса!')
'''

# Базовая арифметика
'''
a = 7
b = 2

print(f'{a} + {b} = {a + b} \n'   # \n - перейти на новую строку в консоли 
      f'{a} - {b} = {a - b} \n'
      f'{a} * {b} = {a * b}')

print()  # в пустой функции (да и в любой функции) print есть переход на новую строку \n

print(f'{a} / {b} = {a / b} - Вещественное деление (результат всегда float) \n'  # 3.5
      f'{a} // {b} = {a // b} - Целочисленное деление (то есть только лишь целая часть) \n'
      f'{a} % {b} = {a % b} - Остаток от деления в виде обыкновенной дроби')

print()

print(f'Возведем число {a} в степень {b}: {a} ** {b} = {a**b} \n'
      f'Квадратный корень от числа 16: 16 ** (1/2) = {16 ** (1/2)} \n'
      f'Кубический корень от числа 27: 27 ** (1/3) = {27 ** (1/3)} \n')
'''

# endregion Урок: ******************************************************************

# Лика = []
# КЕГЭ  = []
# на следующем уроке: Продолжаем разбирать 8-ой номер
