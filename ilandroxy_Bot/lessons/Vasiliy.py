# region Домашка: ************************************************************


# endregion Домашка: ************************************************************


# region Урок: ************************************************************

# № 6756 Апробация 10.03.23 (Уровень: Базовый)

# У исполнителя есть две команды, которые обозначены латинскими буквами:

# А. Вычти 2
# В. Найди целую часть от деления на 2
#
# Сколько существует программ, для которых при исходном числе 40 результатом является число 2,
# и при этом траектория вычислений содержит число 10?

# Вариант 1
'''
def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a-2, b) + F(a//2, b)

print(F(40, 10) * F(10, 2))
'''

# a = 4
# b = 4
# print((a == b) + (a == b) + (a == b))

# Вариант 2
'''
def F(a, b):
    if a <= b:  # if a < b or a == b:
        return a == b
    else:
        return F(a-2, b) + F(a//2, b)

print(F(40, 10) * F(10, 2))
'''
# Показать ответ: 40


# № 6743 Апробация 10.03.23 (Уровень: Базовый)
# Все пятибуквенные слова, в составе которых могут быть только русские буквы С, О, Й, К, А,
# записаны в алфавитном порядке и пронумерованы начиная с 1.
#
# Ниже приведено начало списка.
# 1. ААААА
# 2. ААААЙ
# 3. ААААК
# 4. ААААО
# 5. ААААС
# 6. АААЙА
#
# Под каким номером в списке идёт последнее слово, которое содержит
# не более одной буквы О и не содержит букв С, стоящих рядом?

# s = 'АЙКОС'
# M = [i for i in s]
# print(set(M))
#
# print(set(s))
'''
import itertools
count = 1
for s in itertools.product('АЙКОС', repeat=5):
    slovo = ''.join(s)
    if slovo.count('О') <= 1 and 'СС' not in slovo:
        print(count)
    count += 1
'''
# Показать ответ: 2990


# № 6758 Апробация 10.03.23 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10**8, найдите все числа,
# соответствующие маске 2*5443?1, делящиеся на 23 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце — соответствующие им результаты деления этих чисел на 23.
'''
import itertools
M = []
for l in range(0, 1+1):
    for s in itertools.product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)

R = []
for x in M:
    for y in range(0, 9+1):
        A = int(f'2{x}5443{y}1')
        if A % 23 == 0:
            R.append([A, A//23])

for x in sorted(R):
    print(*x)
'''

'''
for x in range(0, 10):
    for y in range(0, 10):
        A = int(f'2{x}5443{y}1')
        if A % 23 == 0:
            print(A, A//23)
'''
# Показать ответ:
# 22544301 980187
# 23544341 1023667
# 24544381 1067147
# 28544311 1241057
# 29544351 1284537


# № 6763 (Уровень: Базовый)
# (Д. Статный) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:

# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

# Среди натуральных чисел, не превышающих 109, найдите все числа,
# соответствующие маске 6323*353?, делящиеся на 28 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце — соответствующие им результаты деления этих чисел на 28.

# print(10**9)
# print('6323*353?')
'''
import itertools
M = []
for l in range(0, 1+1):
    for s in itertools.product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)

R = []
for x in M:
    for y in range(0, 9+1):
        A = int(f'6323{x}353{y}')
        if A % 28 == 0:
            R.append([A, A//28])

for x in sorted(R):
    print(*x)
'''
# Показать ответ
# 632303532 22582269
# 632363536 22584412
# 632373532 22584769


#
# № 6637 Пробник ИМЦ СПб (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

# Среди натуральных чисел, не превышающих 10**10, найдите все числа,
# соответствующие маске 1?2139*4, делящиеся на 3052 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 3052.

# print(10**10)
# print('1?2139***4')
'''
import itertools
M = []
for l in range(0, 3+1):
    for s in itertools.product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)

R = []
for x in M:
    for y in range(0, 9+1):
        A = int(f'1{y}2139{x}4')
        if A % 3052 == 0:
            R.append([A, A//3052])

for x in sorted(R):
    print(*x)
'''
# Показать ответ
# 1421398804 465727
# 1521397584 498492
# 1621396364 531257
# 1721395144 564022
# 1821393924 596787
# 1921392704 6295

# endregion Урок: ************************************************************


# todo: Василий = [2, 3, 5, 6, 8, 12, 14+, 15, 16, 17, 19-21, 22, 23, 24, 25.1]
# на прошлом уроке: Решали 23, 25 маски и 8 номер через библиотеку itertools
# на следующем уроке:
