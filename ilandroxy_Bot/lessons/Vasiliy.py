
# region Домашка: ************************************************************

# # Тип 23 № 15932
# # Исполнитель РазДваТри преобразует число на экране.
# # У исполнителя есть три команды, которым присвоены номера:
#
# # 1. Прибавить 1
# # 2. Умножить на 2
# # 3. Умножить на 3
#
# # Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья умножает его на 3.
# # Программа для исполнителя РазДваТри — это последовательность команд.
# # Сколько существует программ, которые преобразуют исходное число 2 в число 44
# # и при этом траектория вычислений содержит число 13 и не содержит числа 29?
#
# # Траектория вычислений — это последовательность результатов выполнения всех команд программы.
# # Например, для программы 312 при исходном числе 6 траектория будет состоять из чисел 18, 19, 38.
#
# '''
# def f_1_2_3(x, y):
#     if x > y or x == 29:
#         return 0
#     if x == y:
#         return 1
#     else:
#         return f_1_2_3(x + 1, y) + f_1_2_3(x * 2, y) + f_1_2_3(x * 3, y)
#
#
# print(f_1_2_3(2, 13) * f_1_2_3(13, 44))
# '''
#
#
# # Ответ: 150
#
#
# # Тип 23 № 7998
# # Исполнитель Б22 преобразует целое число, записанное на экране.
# # У исполнителя три команды, каждой команде присвоен номер:
#
# # 1) Прибавь 1
# # 2) Прибавь 2
# # 3) Прибавь следующее
#
# # Первая команда увеличивает число на экране на 1, вторая увеличивает это число на 2,
# # третья прибавляет к числу на экране число, большее на 1
# # (к числу 3 прибавляется 4, к числу 9 прибавляется 10 и т. д.).
# # Сколько существует программ, которые число 2 преобразуют в число 10?
#
# # Обозначим число программ, преобразующих число 2 в число N как КN.
# # Тогда число N может быть получено либо прибавление единице к N − 1, либо двойки к N − 2,
# # либо из некоторого числа X увеличением на X + 1 (следующее число), так что N = X + X + 1,
# # откуда X = (N − 1) / 2; так могут быть получены только нечетные числа.
#
# # Тогда для чётных чисел KN = KN − 1 + KN − 2, а для нечётных — KN = KN − 1 + KN − 2 + K(N − 1)/2.
# # Заполним таблицу для значений от 2 до 9:
#
# # N   3  4  5  6  7  8  9  10
# # K_N  1  2  4  6  11  17  30  47
#
# '''
# def B_22(x, y):
#     if x == y:
#         return 1
#     if x > y:
#         return 0
#     else:
#         return B_22(x + 1, y) + B_22(x + 2, y) + B_22(2 * x + 1, y)
#
#
# print(B_22(2, 10))
# '''
#
# # Ответ: 47

# endregion Домашка: ************************************************************


# region Урок: ************************************************************

# Тип 9 № 27529
'''
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного
# измерения температуры воздуха на протяжении трёх месяцев.

# Найдите количество значений, которые выше округленного до десятых среднего значения всех чисел таблицы, но меньше 30°C.

f = open('9.txt', 'r')
count = 0
A = []
for s in f:
    A += [float(i) for i in s.replace(',', '.').split()]

sred = round(sum(A)/len(A), 1)
for x in A:
    if x > sred and x < 30:
        count += 1
print(count)
'''
# Ответ: 9





# Тип 9 № 40725
'''
# В каждой строке электронной таблицы записаны три натуральных числа, задающих длины трёх взаимно перпендикулярных рёбер прямоугольного параллелепипеда.
# Определите, сколько в таблице троек, для которых у заданного ими параллелепипеда можно так выбрать три грани с общей вершиной, что сумма площадей двух из них будет меньше площади третьей.

f = open('9.txt', 'r')
count = 0
for s in f:
    M = sorted([int(i) for i in s.split()])
    A = M[2] * M[1]
    B = M[1] * M[0]
    C = M[2] * M[0]

    if A > B + C:
        count += 1
print(count)
'''
# Ответ: 3119


# Тип 15 № 14277
# На числовой прямой даны два отрезка: P = [17, 40] и Q = [20, 57]. Отрезок A таков, что приведённая ниже формула истинна при любом значении переменной х:
#
# ¬(x ∈ A) →(((x ∈ P) ⋀ (x ∈ Q)) → (x ∈ A))
#
# Какова наименьшая возможная длина отрезка A?


'''
def F(x, a1, a2):
    A = a1 <= x <= a2
    P = 17 <= x <= 40
    Q = 20 <= x <= 57
    return (not A) <= ((P and Q) <= A)
    # return (not(a1 <= x <= a2)) <= (((17 <= x <= 40) and (20 <= x <= 57)) <= (a1 <= x <= a2))

M = []
for a1 in range(1, 100):
    for a2 in range(1, 100):
        flag = True
        for x in range(1, 1000):
            if F(x, a1, a2) == False:
                flag = False
                break
        if flag == True:
            M.append(a2-a1)
print(min(M))
'''

# Вариант 2
'''
def F(x):
    A = a1 <= x <= a2
    P = 17 <= x <= 40
    Q = 20 <= x <= 57
    return (not A) <= ((P and Q) <= A)

M = [i/4 for i in range(1*4, 100*4)]
print(M)
Result = []
for a1 in M:
    for a2 in M:
        if all(F(x) == True for x in M):
            Result.append(a2-a1)
print(min(Result))
'''
# Ответ: 20

# Тип 15 № 9653
'''
# На числовой прямой даны два отрезка: P = [10, 29] и Q = [13, 18].
#
# Укажите наибольшую возможную длину отрезка A, для которого выражение
#
# ((x ∈ A) → (x ∈ P)) ∨ (x ∈ Q)
#
# тождественно истинно, то есть принимает значение 1 при любом значении переменной х.

def F(x):
    A = a1 <= x <= a2
    P = 10 <= x <= 29
    Q = 13 <= x <= 18
    return (A <= P) or Q

M = [i/4 for i in range(1*4, 40*4)]
print(M)
Result = []
for a1 in M:
    for a2 in M:
        if all(F(x) == True for x in M):
            Result.append(a2-a1)
print(max(Result))
'''
# Ответ: 19




# Тип 15 № 40990
# На числовой прямой даны два отрезка: P=[19;84] и Q=[4;51]. Укажите наименьшую возможную длину такого отрезка A, для которого формула
#
# (x∈P)→(¬(x∈Q)→¬((x∈P)∧¬(x∈A)))
#
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).

'''
def F(x):
    A = a1 <= x <= a2
    P = 19 <= x <= 84
    Q = 4 <= x <= 51
    return P <= ((not Q) <= (not(P and (not A))))

M = [i/4 for i in range(1*4, 100*4)]
print(M)
Result = []
for a1 in M:
    for a2 in M:
        if all(F(x) == True for x in M):
            Result.append(a2-a1)
print(min(Result))
'''
# Ответ: 33 - округляем вверх



# № 745
'''
# Элементами множества А являются натуральные числа. Известно, что выражение
#
# ¬(x ∈ {1, 2, 4, 8, 16}) ∧ ¬(x ∈ {3, 4, 9, 16}) ∨ (x ∈ A)
#
# истинно (т. е. принимает значение 1) при любом значении переменной х.
# Определите наименьшее возможное количество элементов множества A.
a = set()   # {1, 2, 4, 8, 16} - множества

def F(x):
    A = x in a
    P = x in {1, 2, 4, 8, 16}
    Q = x in {3, 4, 9, 16}
    return (not P) and (not Q or A)

for x in range(0, 1000):
    if F(x) == False:
        a.add(x)
print(a, len(a))
'''
# Ответ: 7

# № 744
'''
# Элементами множества А являются натуральные числа. Известно, что выражение
#
# (x ∈ {2, 4, 8, 12, 15}) → (¬(x ∈ {3, 6, 8, 15}) ∨ (x ∈ A))
#
# истинно (т. е. принимает значение 1) при любом значении переменной х.
# Определите наименьшее возможное значение произведения элементов множества A.

a = set()

def F(x):
    A = x in a
    P = x in {2, 4, 8, 12, 15}
    Q = x in {3, 6, 8, 15}
    return P <= ((not Q) or A)

for x in range(0, 1000):
    if F(x) == False:
        a.add(x)
print(a, len(a))
print(f'Ответ: {8 * 15}')
'''
# Ответ: 120



#
# № 752
# Элементами множества А являются натуральные числа. Известно, что выражение
#
# ¬(¬(x ∈ A) ∧ (x ∈ {3, 6, 9, 12})) ∨ ¬(x ∈ {1, 2, 3, 4, 5, 6})
#
# истинно (т. е. принимает значение 1) при любом значении переменной х. Определите наименьшее возможное количество элементов множества A.
'''
a = set()

def F(x):
    A = x in a
    P = x in {3, 6, 9, 12}
    Q = x in {1, 2, 3, 4, 5, 6}
    return (not((not A) and P)) or (not Q)

for x in range(0, 1000):
    if F(x) == False:
        a.add(x)
print(a, len(a))
'''
# Ответ: 2




# № 948
'''
# Обозначим через mod(m, n) остаток от деления m на n. Для какого наименьшего натурального числа А формула
#
# тождественно истинна при любых целых положительных х?

def F(x, A):
    Q = (x % 4 != 3)
    W = (x % 6 != 1)
    R = (x % 36 != A)
    return (Q or W) <= R
    # return ((x % 4 != 3) or (x % 6 != 1)) <= (x % 36 != A)

for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break
'''
# Ответ: 7



# № 1012, 100 базовых задач Е. Джобс
'''
# Обозначим x ∈ A утверждение "x принадлежит множеству А". Например, 4 ∈ {2, 4, 6, 8} является истинным утверждением.
#
# Какое максимальное количество целых чисел может быть в множестве А, чтобы приведённое ниже выражение принимало истинное значение при любых целых значениях х?
#
# (x ∈ {12, 23, 34, 45, 56}) ∨ (x ∈ {23, 35, 56, 68, 89}) ∨ (x ∉ A)


a = set(range(1000))

def F(x):
    A = x not in a
    P = x in {12, 23, 34, 45, 56}
    Q = x in {23, 35, 56, 68, 89}
    return P or Q or A

for x in range(0, 1000):
    if F(x) == False:
        a.remove(x)
print(a, len(a))
'''
# Ответ: 8


# № 1072
'''
# Элементами множеств А, P и Q являются натуральные числа, причём P = { 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30}
# и Q = {1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31}. Известно, что выражение
#
# ((x ∈ A) → (x ∈ P)) ∧ ((x ∈ Q) → (x ∉ A))
#
# истинно (т. е. принимает значение 1) при любом значении переменной х. Определите наибольшее возможное количество элементов множества A.

a = set(range(1000))

def F(x):
    A = x in a
    P = x in {2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30}
    Q = x in {1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31}
    return (A <= P) and (Q <= (not A))

for x in range(0, 1000):
    if F(x) == False:
        a.remove(x)
print(a, len(a))
'''
# Ответ: 10

# endregion Урок: ************************************************************


# todo: Василий = [2, 5, 6, 8, 12, 14+, 15, 17, 19, 20, 22, 24], на следующем уроке: Проговорить 9 номер через Питон, 15 номер с отрезками и множествами