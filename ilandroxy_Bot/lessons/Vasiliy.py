# region Домашка: ************************************************************


# endregion Домашка: ************************************************************


# region Урок: ************************************************************

# Тип 15 № 34510 i
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
#
# Например, 14&5 = 11102&01012 = 01002 = 4.
#
# Для какого наименьшего неотрицательного целого числа А формула
#
# x&25 ≠ 0 → (x&9 = 0 → x&А ≠ 0)
#
# тождественно истинна (то есть принимает значение 1 при любом неотрицательном целом значении переменной х)?
'''
def F(x):
    return (x&25 != 0) <= ((x&9 == 0) <= (x&A != 0))

for A in range(0, 1000):
    if all(F(x) for x in range(0, 1000)):
        print(A)
        break


def F(x):
    return (x&25 != 0) <= ((x&9 == 0) <= (x&A != 0))

R = []
for A in range(0, 1000):
    if all(F(x) for x in range(0, 1000)):
        R.append(A)
print(min(R))


# Вариант 3
R = []
for A in range(0, 1000):
    if all(((x&25 != 0) <= ((x&9 == 0) <= (x&A != 0))) for x in range(0, 1000)):
        R.append(A)
print(min(R))


# Вариант 4
print(min([A for A in range(0, 1000) if all(((x & 25 != 0) <= ((x & 9 == 0) <= (x & A != 0))) for x in range(0, 1000))]))
'''
# Ответ: 16


# Тип 25 № 27853
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [312614; 312651],
# числа, имеющие ровно шесть различных натуральных делителей.
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

# Вариант 1
'''
for x in range(312614, 312651+1):
    M = []
    for j in range(1, x+1):
        if x % j == 0:
            M.append(j)
    if len(M) == 6:
        print(*M)
'''
# 48 = {1, 2, 3, 4, 6, (48**0.5), 8, 12, 16, 24, 48}
#  48 / 6 = 8    48 / 8 = 6    48 / 12 = 4   48 / 4 = 12

# Вариант 2
'''
def D(x):
    S = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            S.add(j)
            S.add(x // j)
    return sorted(S)

for x in range(312614, 312651+1):
    dl = D(x)
    if len(dl) == 6:
        print(*dl)
'''
# Ответ:
# 1 2 4 78157 156314 312628
# 1 3 9 34739 104217 312651


# Тип 25 № 27856 i
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632; 95650],
# числа, имеющие ровно шесть различных нечётных натуральных делителей
# (при этом количество четных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних
# столбцов на экране с новой строки.
# \Делители в строке должны следовать в порядке возрастания.
'''
def D(x):
    S = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if j % 2 != 0:
                S.add(j)
            if (x // j) % 2 != 0:
                S.add(x // j)
    return sorted(S)

for x in range(95632, 95650+1):
    dl = D(x)
    if len(dl) == 6:
        print(*dl)
'''
# Ответ:
# 1 3 9 10627 31881 95643
# 1 7 49 61 427 2989
# 1 5 25 1913 9565 47825


# Тип 25 № 28121 i
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [2422000; 2422080], простые числа.
# Выведите все найденные простые числа в порядке возрастания, слева от каждого числа выведите его номер по порядку, считая,
# что первое найденное число имеет номер «1», второе — «2», и т.д.
'''
def prime(x):
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            return False
    return True

k = 1
for x in range(2422000, 2422080+1):
    if prime(x) == True:
        print(k, x)
        k += 1
'''
# Ответ:
# 1 2422027
# 2 2422033
# 3 2422037
# 4 2422073



# Тип 25 № 37130 i
# Напишите программу, которая перебирает целые числа, большие 600_000, в порядке возрастания и ищет среди них такие,
# среди делителей которых есть хотя бы одно число, оканчивающееся на 7, но не равное 7 и самому числу.
# Необходимо вывести первые 5 таких чисел, и наименьший делитель, оканчивающийся на 7, не равный 7 и самому числу.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число,
# затем — наименьший делитель, оканчивающийся на 7, не равный 7 и самому числу.
# Строки выводятся в порядке возрастания найденных чисел.
#
# Количество строк в таблице для ответа избыточно.
'''
def D(x):
    S = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0 and j != 7:
            if j % 10 == 7:
                S.add(j)
            if (x // j) % 10 == 7:
                S.add(x // j)
    return sorted(S)

k = 0
for x in range(600_000+1, 6_000_000):
    dl = D(x)
    if len(dl) > 0:
        print(x, min(dl))
        k += 1
        if k == 5:
            break
'''
# Ответ:
# 600001 437
# 600002 47
# 600003 1227
# 600005 217
# 600012 16667



# Тип 25 № 33495 i
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения
# двух натуральных чисел и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [2000000; 3000000], у которых составленное описанным способом
# множество разностей будет содержать не меньше трёх элементов, не превышающих 115.
# В ответе перечислите найденные числа в порядке возрастания.
'''
def D(x):
    S = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if ((x // j) - j) <= 115:
                S.add((x // j) - j)
                if len(S) > 2:
                    return sorted(S)
    return sorted(S)

for x in range(2000000, 3000000+1):
    if len(D(x)) > 2:
        print(x)
'''
# Ответ:
# 2053440
# 2098080
# 2328480
# 2638944



# Тип 25 № 36038
# Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то считаем значение M равным нулю.
#
# Напишите программу, которая перебирает целые числа, большие 452021, в порядке возрастания и ищет среди них такие,
# для которых значение M при делении на 7 даёт в остатке 3. Вывести первые 5 найденных чисел и соответствующие им значения M.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число, затем — значение М.
# Строки выводятся в порядке возрастания найденных чисел.

def D(x):
    S = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            S.add(j)
            S.add(x // j)
            if len(S) > 2:
                return sorted(S)
    return sorted(S)

k = 0
for x in range(452021+1, 10000000):
    dl = D(x)
    if len(dl) > 2:
        M = dl[0] + dl[-1]
        if M % 7 == 3:
            print(x, M)
            k += 1
            if k == 5:
                break

# Ответ:
# 452025 150678
# 452029 23810
# 452034 226019
# 452048 226026
# 452062 226033

# endregion Урок: ************************************************************


# todo: Василий = [2, 3, 5, 6, 8, 12, 14+, 15, 17, 19, 20, 22, 24, 25.1]
# на прошлом уроке: Проработали 3 номер через функцию ВПР и 22 номер аналогично.
# на следующем уроке:
