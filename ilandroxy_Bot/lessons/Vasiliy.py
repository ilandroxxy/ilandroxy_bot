# region Домашка: ************************************************************

# endregion Домашка: ************************************************************



# region Урок: ************************************************************

# № 4613 Основная волна 2022 (Уровень: Базовый)
# Определите количество пятизначных чисел, записанных в девятеричной системе счисления,
# которые не начинаются с нечетных цифр, не оканчиваются цифрами 1 или 8,
# а также содержат в своей записи не более одной цифры 3.
'''
from itertools import product

num = '012345678'
ch = '2468'
counter = 0

for i in product(num, repeat=5):
    if i[0] in ch and (i[-1] != '1' and i[-1] != '8') and i.count('3') <= 1:
        counter += 1

print(counter)



from itertools import product

num = '012345678'
ch = '02468'
counter = 0

for i in product(num, repeat=5):
    temp = ''.join(i)
    if temp[0] in ch and temp[0] != '0':
        if temp[-1] != '1' and temp[-1] != '8':
            if temp.count('3') <= 1:
                counter += 1
print(counter)
'''
# Показать ответ: 18944

# № 4937 (Уровень: Средний)
# Операнды арифметического выражения записаны в системе счисления с основанием 80.
#
# 3x75_80 + 14x0_80
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита 80-ричной системы счисления.
# Определите наибольшее значение x, при котором значение данного арифметического выражения кратно 17.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 17
# и укажите его в ответе в десятичной системе счисления.
'''
def my_int(M: list, n: int):
    r = 0
    M.reverse()
    for i in range(0, len(M)):
        r += M[i] * n ** i
    return r

for x in range(0, 80):
    A = my_int([3, x, 7, 5], 80) + my_int([1, 4, x, 0], 80)
    if A % 17 == 0:
        print(A // 17)
'''
# Ответ: 146405

# print(int('234234', 80))  # ValueError: int() base must be >= 2 and <= 36, or 0


#
# № 4736 (Уровень: Базовый)
# (А. Куканова) Алгоритм вычисления значения функции
# F(n), где
# n – натуральное число, задан следующими соотношениями:
# F(n)= 1 при n=1;
# F(n)= n * F(n - 1) - 1, если n>1.
# Чему равно значение выражения F(1 000)/F(997)?
# В ответе укажите только целую часть числа.
'''
# F(1000) = 1000 * F(999) - 1
# F(999) = 999 * F(998) - 1
# F(998) = 998 * F(997) - 1    / F(997)

print(999 * -999)  # -998001
print(1000 * 998002)
'''
# Ответ: 997001999


# № 4597 Основная волна 2022 (Уровень: Базовый)
# В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от 1 до 100 000 включительно.
# Определите количество пар последовательности, в которых остаток от деления хотя бы одного из элементов на 117
# равен минимальному элементу последовательности. В ответе запишите количество найденных пар, затем максимальную из
# сумм элементов таких пар. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
nums = [int(i) for i in open('17.txt')]
minimum = min(nums)

counter = max_sum = 0
for i in range(len(nums) - 1):
    if int(nums[i]) % 117 == minimum or int(nums[i+1]) % 117 == minimum:
        counter += 1
        max_sum = max(max_sum, int(nums[i]) + int(nums[i+1]))
print(counter, max_sum)
'''
# 175 173738



# № 4643 (Уровень: Базовый)
# (А. Калинин)  Текстовый файл состоит из символов A, B и цифр 1, 2.
#
# Определите максимальное количество идущих подряд троек символов вида двузначное число + буква в прилагаемом файле.
#
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
for x in '12A 12B 21A 21B 11A 11B 22A 22B A12 B12 A21 B21 A11 B11 A22 B22'.split():
    s = s.replace(x, '*')

for x in '12AB':
    s = s.replace(x, ' ')
print(s)
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 67



# № 4311 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300425. Среди натуральных чисел, не превышающих 10**8,
# найдите все числа, соответствующие маске 123*890 и делящиеся на 27 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им частные от деления на 27.

from itertools import product
M = []
for l in range(0, 6+1):
    for s in product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)
print(M)
R = []
for x in M:
    num = int(f'123{x}890')
    if num % 27 == 0 and num < 10**8:
        R.append([num, num // 27])

for x in sorted(R):
    print(*x)



# endregion Урок: ************************************************************


# todo:   Василий    = [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 14+, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# todo: Василий КЕГЭ = [25]
# на прошлом уроке:  Разбирали все вопросы по домашнему варианту, номера: 4, 8, 13, 14, 16, 17, 24, 25
# на следующем уроке: #todo: № 4643
