# Тип 16 № 7308
'''
# Алгоритм вычисления значения функции F(n), где n — натуральное число,
# задан следующими соотношениями:
#
# F(1) = 1
# F(n) = F(n–1) + 2**(n–1) , если n > 1.
#
# Чему равно значение функции F(10)?
# В ответе запишите только натуральное число

def F(n):
    if n > 1:
        return F(n-1) + 2**(n-1)
    if n == 1:
        return 1

print(F(10))
'''

# Тип 16 № 47013
'''
# Алгоритм вычисления значения функции F(n), где n—целое неотрицательное число,
# задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n − 1) + 1, если n нечётно;
# F(n) = F(n / 2), если n > 0 и при этом n чётно.
#
# Укажите количество таких значений n<1000000000, для которых F(n)=3.

def F(n):
    if n == 0:
        return 0
    if n % 2 != 0:
        return F(n - 1) + 1
    if n > 0 and n % 2 == 0:
        return F(n / 2)

count = 0
for i in range(0, 1_000_000):
    if F(i) == 3:
        count += 1
print(count)
'''


# Тип 15 № 27412
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
#
# Для какого наибольшего натурального числа А формула
#
# ¬ДЕЛ(x, А) → (ДЕЛ(x, 6) → ¬ДЕЛ(x, 9))
#
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?
'''
def F(A, x):
    return (x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))

for A in range(1000, 0, -1):
    flag = True
    for x in range(1, 1000):
        if F(A, x) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break
'''
'''
for A in range(1000, 0, -1):
    flag = True
    for x in range(1, 1000):
        if not((x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))):
        # if ((x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break
'''
# Ответ: 18.


# Тип 15 № 18630
'''
# Для какого наименьшего целого неотрицательного числа A выражение
#
# (3m + 4n > 63) ∨ ((m ≤ A) ∧ (n < A))
#
# тождественно истинно при любых целых неотрицательных m и n?

def F(m, n, A):
    return (((3 * m + 4 * n) > 63) or ((m <= A) and (n < A)))

for A in range(0, 1000):
    flag = True
    for m in range(0, 1000):
        for n in range(0, 1000):
            if F(m, n, A) == False:
                flag = False
                break
        if flag == False:
            break
    if flag == True:
        print(A)
        break
'''
# Ответ: 21



# Тип 15 № 34539
'''
# На числовой прямой даны два отрезка: Р = [22, 72] и Q = [42, 102].
# Какова наименьшая возможная длина интервала A, что логическое выражение
#
# ¬(¬(х ∈ А) ∧ (х ∈ Р)) ∨ (х ∈ Q)
#
# тождественно истинно, то есть принимает значение 1 при любом значении переменной х.

def F(x, a1, a2):
    return (not((not(a1 <= x <= a2)) and (22 <= x <= 72))) or (42 <= x <= 102)

M = []
for a1 in range(1, 1000):
    for a2 in range(a1+1, 1002):
        flag = True
        for x in range(1, 1000):
            if F(x, a1, a2) == False:
                flag = False
                break
        if flag == True:
            M.append((a2-a1) + 1)
print(min(M))
A = set(M)
print(A)
'''


# Тип 15 № 11119
'''
# На числовой прямой даны два отрезка: P = [20, 50] и Q = [30,65]. Отрезок A таков, что формул
#
# ¬(x ∈ A) → ((x ∈ P) →¬ (x ∈ Q))
#
# истинна при любом значении переменной x. Какова наименьшая возможная длина отрезка A?

def F(x, a1, a2):
    return (not(a1 <= x <= a2)) <= ((20 <= x <= 50) <= (not(30 <= x <= 65)))

M = []
for a1 in range(1, 1000):
    for a2 in range(a1+1, 1002):
        flag = True
        for x in range(1, 1000):
            if F(x, a1, a2) == False:
                flag = False
                break
        if flag == True:
            M.append((a2-a1))
print(min(M))
'''
