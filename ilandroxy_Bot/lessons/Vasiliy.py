# region Домашка: ************************************************************


# endregion Домашка: ************************************************************


# region Урок: ************************************************************

# Тип 15 № 39244 i
# Обозначим через m & n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Так, например, 14 & 5 = 1110_2 & 0101_2 = 0100_2 = 4.
# Для какого наименьшего неотрицательного целого числа А формула

# (x & 105 = 0) → ((x & 58 ≠ 0) → (x & А ≠ 0))
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной x)?
'''
print(14 & 5)

def my_conc(m, n):
    m2 = bin(m)[2:]
    n2 = bin(n)[2:]

    while len(n2) != len(m2):
        if len(m2) < len(n2):
            m2 = '0' + m2
        else:
            n2 = '0' + n2
    s = ''
    for i in range(0, len(n2)):
        if n2[i] == '1' and m2[i] == '1':
            s += '1'
        else:
            s += '0'

    r = int(s, 2)
    return r

print(my_conc(14, 5))


def F(x):
    # return (x & 105 == 0) <= ((x & 58 != 0) <= (x & A != 0))
    return (my_conc(x, 105) == 0) <= ((my_conc(x, 58) != 0) <= (my_conc(x, A) != 0))

for A in range(0, 1000):
    if all(F(x) for x in range(0, 1000)):
        print(A)
        break
'''
# Ответ: 18

# Тип 15 № 16894
# Для какого наименьшего целого неотрицательного числа A выражение
# (2x + 3y ≠ 60) ∨ (A ≥ x) ∨ (A ≥ y)
#
# тождественно истинно при любых целых неотрицательных x и y?
'''
def F(x, y):
    return (2*x + 3*y != 60) or (A >= x) or (A >= y)

for A in range(0, 1000):
    if all(F(x, y) for x in range(0, 1000) for y in range(0, 1000)):
        print(A)
        break

# Вариант 2
def F(x, y):
    return (2*x + 3*y != 60) or (A >= x) or (A >= y)

M = [i for i in range(0, 1000)]
for A in M:
    if all(F(x, y) for x in M for y in M):
        print(A)
        break
'''
# Ответ: 12


# Тип 15 № 38590 i
# На числовой прямой даны два отрезка: D=[17;58] и C=[29;80].
# Укажите наименьшую возможную длину такого отрезка A, для которого логическое выражение
# (x∈D)→((¬(x∈C)∧¬(x∈A))→¬(x∈D))
#
# истинно (т.е. принимает значение 1) при любом значении переменной х.
'''
def F(x):
    D = 17 <= x <= 58
    C = 29 <= x <= 80
    A = a1 <= x <= a2
    return D <= (((not C) and (not A)) <= (not D))

R = []
M = [i/4 for i in range(10*4, 90*4)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 12


# Тип 25 № 27851 i
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [210235; 210300],
# числа, имеющие ровно четыре различных натуральных делителя, не считая единицы и самого числа.
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.
'''
for x in range(210235, 210300+1):
    M = []
    for j in range(2, x):
        if x % j == 0:
            M.append(j)
    if len(M) == 4:
        print(*M)
'''
'''
def F(x):
    M = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            M.add(j)
            M.add(x // j)
    return sorted(M)

for x in range(210235, 210300+1):
    M = F(x)
    if len(M) == 4:
        print(*M)
'''
# Ответ:
# 2 4 52561 105122
# 2 4 52567 105134
# 2 4 52571 105142



# Тип 25 № 28124
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [568023; 569230],
# число, имеющее максимальное количество различных натуральных делителей, если таких чисел несколько — найдите минимальное из них.
# Выведите на экран количество делителей такого числа и само число.
'''
def F(x):
    M = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            M.add(j)
            M.add(x // j)
    return sorted(M)

maxi = 0
r = 0
for x in range(568023, 569230+1):
    M = F(x)
    if maxi < len(M):
        maxi = len(M)
        r = x
print(maxi, r)
'''
# Ответ: 144 568260


# Тип 25 № 38959
# Пусть M(N) — произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы.
# Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
#
# Найдите 5 наименьших натуральных чисел, превышающих 200_000_000, для которых 0<M(N)<N.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.
'''
def F(x):
    M = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            M.add(j)
            M.add(x // j)
            # if len(M) > 10:
            #     return sorted(M)
    return sorted(M)

count = 0
for x in range(200_000_000+1, 400_000_000):
    dl = F(x)
    if len(dl) >= 5:
        M = dl[0] * dl[1] * dl[2] * dl[3] * dl[4]
        if 0 < M < x:
            print(M)
            count += 1
            if count == 5:
                break
 '''
# Ответ:
# 1728
# 21632
# 1260
# 1152
# 4127787


# Тип 25 № 27855 i
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632; 95700],
# числа, имеющие ровно шесть различных чётных натуральных делителей (при этом количество нечётных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.
'''
def F(x):
    M = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if j % 2 == 0:
                M.add(j)
            if (x // j) % 2 == 0:
                M.add(x // j)
    return sorted(M)

for x in range(95632, 95700+1):
    M = F(x)
    if len(M) == 6:
        print(*M)
'''
# Ответ:
# 2 10 50 3826 19130 95650
# 2 26 338 566 7358 95654
# 2 4 8 23918 47836 95672


# Тип 25 № 38603 i
# Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то значение M считается равным нулю.
#
# Напишите программу, которая перебирает целые числа, бо́льшие 700000, в порядке возрастания и ищет среди них такие,
# для которых значение M оканчивается на 8. Выведите первые пять найденных чисел и соответствующие им значения M.
#
# Формат вывода: для каждого из пяти таких найденных чисел в отдельной строке сначала выводится само число, затем — значение М.
'''
def F(x):
    M = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            M.add(j)
            M.add(x // j)
    return sorted(M)

count = 0
for x in range(700000+1, 1000000):
    dl = F(x)
    if len(dl) >= 2:
        M = dl[0] + dl[-1]
        if M % 10 == 8:
            print(x, M)
            count += 1
            if count == 5:
                break
'''
# Ответ:
# 700005 233338
# 700007 100008
# 700012 350008
# 700015 140008
# 700031 24168

# endregion Урок: ************************************************************


# todo: Василий = [2, 5, 6, 8, 12, 14+, 15, 17, 19, 20, 22, 24]
# на прошлом уроке: Повторили номера 15 и начали разбирать 25 номера на делители.
# на следующем уроке:
