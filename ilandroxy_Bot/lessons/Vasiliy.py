# region Домашка: ************************************************************


# endregion Домашка: ************************************************************


# region Урок: ************************************************************

# № 6742 Апробация 10.03.23 (Уровень: Базовый)
# Для хранения произвольного растрового изображения размером 320 на 512
# пикселей отведено 120 Кбайт памяти без учёта размера заголовка файла. При кодировании цвета каждого пикселя
# используется одинаковое количество бит, при этом для каждых 2 бит цвета дописывается дополнительный бит контроля
# чётности. Коды пикселей записываются в файл один за другим без промежутков. Какое максимальное количество цветов
# можно использовать в изображении?
'''
# Кол-во цветов = 2 ** i (бит на пиксель)
# I = pixels * i
i = (120 * 2**13) / (320 * 512)
i = (i / 3) * 2
print(i)
N = 2 ** i
print(N)
'''

# № 6743 Апробация 10.03.23 (Уровень: Базовый)
# Все пятибуквенные слова, в составе которых могут быть только русские буквы С, О, Й, К, А,
# записаны в алфавитном порядке и пронумерованы начиная с 1.
#
# Ниже приведено начало списка.
# 1. ААААА
# 2. ААААЙ
# 3. ААААК
# 4. ААААО
# 5. ААААС
# 6. АААЙА

# Под каким номером в списке идёт последнее слово, которое содержит не более
# одной буквы О и не содержит букв С, стоящих рядом?
'''
s = 'АЙКОС'
count = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if 'СС' not in temp and temp.count('О') <= 1:
                        print(count, temp)
                    count += 1
'''
# Ответ: 2990


# № 6746 Апробация 10.03.23 (Уровень: Базовый)
# При регистрации в компьютерной системе каждому объекту присваивается идентификатор, состоящий из 318 символов и
# содержащий только десятичные цифры и символы из 5000-символьного специального алфавита. В базе данных для хранения
# каждого идентификатора отведено одинаковое и минимально возможное целое число байт. При этом используется
# посимвольное кодирование идентификаторов, все символы кодируются одинаковым и минимально возможным количеством бит.
#
# Определите объём памяти (в Кбайт), необходимый для хранения 8192 идентификаторов.
# В ответе запишите только целое число — количество Кбайт.
'''
symbols = 318
alphabet = 10 + 5000
# 2**12 < 5010 < 2**13 -> i = 13  бит на 1 символ
i = 13
bit = symbols * i
print(bit)
byte = round(bit / 8)
print(byte)
Kbyte = (8192 * byte) / (2 ** 10)
print(Kbyte)
'''
# Ответ: 4136



# № 6750 Апробация 10.03.23 (Уровень: Базовый)
# Для какого наибольшего целого неотрицательного числа А выражение
#
# (x + y ≤ 32) ∨ (y ≤ x + 4) ∨ (y ≥ A)
#
# тождественно истинно (т.е. принимает значение 1) при любых целых положительных х и y?
'''
def F(x, y, A):
    return (x + y <= 32) or (y <= x + 4) or (y >= A)

for A in range(0, 1000):
    if all(F(x, y, A) for x in range(0, 100) for y in range(0, 100)):
        print(A)
'''

# print(max([A for A in range(0, 1000) if all(((x + y <= 32) or (y <= x + 4) or (y >= A)) for x in range(0, 100) for y in range(0, 100))]))

# Ответ: 19



#
# № 6752 Апробация 10.03.23 (Уровень: Базовый)
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от —100 000 до 100 000 включительно.
# Определите количество пар последовательности, в которых хотя бы одно число отрицательно,
# а сумма чисел пары меньше количества чисел в последовательности, делящихся на 3.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
length = len([int(i) for i in open('17.txt') if int(i) % 3 == 0])  # Вариант 1

M = [int(i) for i in open('17.txt')]

length2 = 0  
for x in M:
    if x % 3 == 0:  # Вариант 2
        length2 += 1

count = 0
maxi = 0
for i in range(0, len(M)-1):
    if M[i] < 0 or M[i+1] < 0:
        if (M[i] + M[i+1]) < length:
            count += 1
            maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# 5128 3322


# № 6756 Апробация 10.03.23 (Уровень: Базовый)
# У исполнителя есть две команды, которые обозначены латинскими буквами:

# А. Вычти 2
# В. Найди целую часть от деления на 2

# Сколько существует программ, для которых при исходном числе 40 результатом является число 2,
# и при этом траектория вычислений содержит число 10?
'''
def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a-2, b) + F(a // 2, b)

print(F(40, 10) * F(10, 2))


def F(a, b):
    if a <= b:
        return int(a == b)
    else:
        return F(a-2, b) + F(a // 2, b)

print(F(40, 10) * F(10, 2))
'''
# Ответ: 40



#
# № 6757 Апробация 10.03.23 (Уровень: Базовый)
# Текстовый файл состоит из символов С, D, Е и F.
#
# Определите максимальное количество идущих подряд последовательностей символов CFE или FCE в прилагаемом файле.
# Искомая подпоследовательность должна состоять только из троек CFE, или только из троек FCE,
# или только из троек CFE или FCE в произвольном порядке их следования.
#
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
s = s.replace('CFE', '*').replace('FCE', '*')
s = s.replace('C', ' ').replace('D', ' ').replace('E', ' ').replace('F', ' ')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 103



# № 6758 Апробация 10.03.23 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
#
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 108, найдите все числа,
# соответствующие маске 2*5443?1, делящиеся на 23 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 23.
#
# Количество строк в таблице для ответа избыточно.
'''
M = [i for i in range(0, 10)]
M.append('')
R = []
for x in M:
    for y in range(0, 10):
        A = int(f'2{x}5443{y}1')
        if A % 23 == 0:
            R.append([A, A//23])

for x in sorted(R):
    print(*x)
'''

# № 5382 /dev/inf 12.2022 (Уровень: Базовый)
# (А. Рогов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10**8, найдите все числа,
# соответствующие маске *1?542?, делящиеся на 2084 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 2084.

# print('**1?542?')
# print(10**8)

'''
import itertools
M = ['']  # в том числе «*» может задавать и пустую последовательность.
for l in range(1, 2+1):
    for s in itertools.product('0123456789', repeat=l):
        M.append(''.join(s))
R = []
for x in M:
    for y in range(0, 10):
        for z in range(0, 10):
            A = int(f'{x}1{y}542{z}')
            if A % 2084 == 0:
                R.append([A, A//2084])

for x in sorted(R):
    print(*x)
'''
# Ответ:
# 22165424 10636
# 52135428 25017
# 65135420 31255
# 78185428 37517
# 91185420 43755
# 95105424 45636

# 22165424 10636
# 52135428 25017
# 65135420 31255
# 78185428 37517
# 91185420 43755
# 95105424 45636



# endregion Урок: ************************************************************


# todo: Василий = [2, 3, 5, 6, 8, 12, 14+, 15, 17, 19-21, 22, 24, 25.1]
# на прошлом уроке: Прорешивали задачи с апробации от 10.03.23
# на следующем уроке:
