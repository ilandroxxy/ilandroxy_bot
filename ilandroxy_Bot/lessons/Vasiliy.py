

# Задания Д14 № 4938
# Решите уравнение 100_7 + x = 200_5.
#
# Ответ запишите в шестнадцатеричной системе (основание системы счисления в ответе писать не нужно).

'''
M7 = [1, 0, 0]
M7.reverse()
m7 = 0
for i in range(0, len(M7)):
    m7 += M7[i] * 7 ** i

M5 = [2, 0, 0]
M5.reverse()
m5 = 0
for i in range(0, len(M5)):
    m5 += M5[i] * 5 ** i

x = m5 - m7
print(m5, m7, x)

M = []
while x > 0:
    M.append(x % 16)
    x //= 16
M.reverse()

print(*M)
'''
# Ответ 1






# Тип 5 № 25836
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число следующим образом.
# 1)Строится двоичная запись числа N.
#
# 2)К этой записи дописываются справа ещё два разряда по следующему правилу:
# - если N чётное, в конец числа (справа) дописываются два нуля
# - в противном случае справа дописываются две единицы.
#
# Например, двоичная запись 1001 числа 9 будет преобразована в 100111.
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является
# двоичной записью числа — результата работы данного алгоритма.

# Укажите максимальное число N, для которого результат работы алгоритма будет меньше 134.
# В ответе это число запишите в десятичной системе счисления.

'''
Result = []
for i in range(1, 10000):
    n = i
    N = []
    while n > 0:
        N.append(n % 2)
        n //= 2
    N.reverse()

    if i % 2 == 0:
        N.append(0)
        N.append(0)
    else:
        N.append(1)
        N.append(1)

    N.reverse()
    r = 0
    for j in range(0, len(N)):
        r += N[j] * 2 ** j

    if r < 134:
        Result.append(i)

print(Result, max(Result), sep='\n')
'''
# Ответ: 32












# Тип 5 № 17370
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1.Строится двоичная запись числа N.
# 2.Удаляется первая слева единица и все следующие непосредственно за ней нули.
# Если после этого в числе не остаётся цифр, результат этого действия считается равным нулю.
# 3.Полученное число переводится в десятичную запись.
# 4.Новое число вычитается из исходного, полученная разность выводится на экран.
#
# Пример. Дано число N = 11. Алгоритм работает следующим образом.
# 1.Двоичная запись числа N: 1011.
# 2.Удаляется первая единица и следующий за ней ноль: 11.
# 3.Десятичное значение полученного числа 3.
# 4.На экран выводится число 11 – 3 = 8.
#
# Сколько разных значений будет показано на экране автомата при последовательном вводе всех натуральных чисел от 100 до 3000?

'''
Result = []
for j in range(100, 3000+1):
    n = j
    N = []
    while n > 0:
        N.append(n % 2)
        n //= 2
    N.reverse()
    #print(N)

    del N[0]
    #print(N)

    N.reverse()
    #print(N)
    r = 0
    for i in range(0, len(N)):
        r += N[i] * 2 ** i
    #print(r)
    res = j - r
    if res not in Result:
        Result.append(res)

print(Result, len(Result))
'''
# Ответ: 6





# Тип 5 № 10309
# Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам.
# 1.Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
# 2.Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Пример.
# Исходное число: 63179.
# Суммы: 6 + 1 + 9 = 16;
# 3 + 7 = 10.
# Результат: 1016.

# Укажите наименьшее число, при обработке которого автомат выдаёт результат 621.

'''
for x in range(10000, 99999+1):
    i = x
    M = []
    while i > 0:
        M.append(i % 10)
        i //= 10
    M.reverse()
    #print(M)

    sum1 = M[0] + M[2] + M[4]
    sum2 = M[1] + M[3]

    res = str(min(sum1, sum2)) + str(max(sum1, sum2))
    if res == '621':
        print(x)
        break
'''

for i in range(10000, 100000):
    s = str(i)
    k1 = int(s[0]) + int(s[2]) + int(s[4])
    k2 = int(s[1]) + int(s[3])
    s1 = str(min(k1, k2)) + str((max(k1, k2)))
    if s1 == '621':
        print(i)
        break

# Ответ: 30969

