# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 16 №6893
# Алгоритм вычисления значений функций F(n), где n туральное число, задан следующими соотношениями:
# F(1) = 1;
# F(2) = 2;
# F(3) = 3;
# F(n) = F(n − 3)*n при n >3
# Чему равно значение функции F(10)? В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n == 2:
        return 2
    if n == 3:
        return 3
    if n > 3:
        return F(n - 3) * n


print(F(10))
'''
# Ответ: 280

'''
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) + 2**(n-1)

print(F(12))
'''
# Ответ: 4095


'''
import sys
sys.setrecursionlimit(10000)
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n - 2 + F(n-1)

print(F(2023) - F(2021))
# [Previous line repeated 996 more times]
# RecursionError: maximum recursion depth exceeded
'''
# Ответ: 4041

'''
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return 2 * G(n-1) + 5*n

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) + 2*n

print(F(4) + G(4))
'''
# Ответ: 89


# Тип 16 №36871
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:

# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.

# Сколько существует таких чисел n, что 1 ≤ n ≤ 1000 и F(n) = 3?
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n-1)


cnt = 0
for n in range(1, 1001):
    if F(n) == 3:
        cnt += 1
print(cnt)
'''
# Ответ: 120


# Тип 23 №59816
# 1. Прибавить 1
# 2. Прибавить 3
# 3. Умножить на 3.
# Сколько существует программ, для которых при исходном числе 7 результатом является число 20
# и при этом траектория содержит число 14 и не содержит 15?
'''
def F(a, b):   # где a - старт, b - стоп
    if a >= b or a == 15:
        return a == b
    return F(a+1, b) + F(a+3, b) + F(a*3, b)

print(F(7, 14) * F(14, 20))
'''
# Ответ: 18

# Тип 23 №60265
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Возвести в квадрат
# Сколько существует программ, для которых при исходном числе 2 результатом является число 20,
# при этом траектория вычислений не содержит числа 11?
'''
def F(a, b):
    if a >= b or a == 11:
        return a == b
    return F(a+1, b) + F(a*2, b) + F(a**2, b)

print(F(2, 20))
'''
# Ответ: 37


# Тип 23 №11123
# 1. Вычти 2
# 2. Вычти 5
# Сколько есть программ, которые число 22 преобразуют в число 2?
'''
def F(a, b):
    if a <= b:
        return a == b
    return F(a-2, b) + F(a-5, b)


print(F(22, 2))
'''
# Ответ: 23


# Тип 15 №18824
# Для какого наименьшего целого неотрицательного числа A выражение
# (xy < A) ∨ (y > x) ∨ (x ≥ 8)
# тождественно истинно, то есть принимает значение 1 при любых целых неотрицательных x и y?
'''
def F(x, y, A):
    return (x*y < A) or (y > x) or (x >= 8)


for A in range(0, 1000):
    if all(F(x, y, A) for x in range(100) for y in range(100)):
        print(A)
        break
'''


# Тип 15 №33187
'''
def F(x, A):
    return (90 % A == 0) and ((x % A != 0) <= ((x % 15 == 0) <= (x % 20 != 0)))

for A in range(1, 1000):
    if all(F(x, A) for x in range(10000)):
        print(A)
'''
# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************


# Лиза = [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25]
# КЕГЭ  = [15, 16, 23]
# на следующем уроке:
