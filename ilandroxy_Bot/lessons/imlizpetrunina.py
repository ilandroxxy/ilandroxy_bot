# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# i   0    1    2    3    4
A = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1


# каждую строчку файла 9.txt разбиваем на списки
for s in open('9.txt'):
    M = [int(x) for x in s.split()]

# каждую строчку файла 17.txt сразу читаем в общий список
M = [int(x) for x in open('17.txt')]


# Работа с разными типами задач номер 17

M = [1, 2, 3, 4, 5]
# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()
# IndexError: list index out of range


# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()


# Тип 17 №48465
# Файл содержит последовательность целых чисел, по модулю не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
#
# Определите количество таких пар, в которых запись ровно одного элемента заканчивается цифрой 6,
# а сумма квадратов элементов пары меньше, чем квадрат наименьшего
# из элементов последовательности, запись которых заканчивается цифрой 6.
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную сумму квадратов элементов этих пар.

'''
M = [int(x) for x in open('17.txt')]
# print([x for x in M if str(x)[-1] == '6'])
A = min([x for x in M if str(x)[-1] == '6'])
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (str(x)[-1] == '6') != (str(y)[-1] == '6'):
        if (x**2 + y**2) < A ** 2:
            R.append(x**2 + y**2)
print(len(R), max(R))
'''
# Ответ: 720 и 99266105


# Тип 17 №37370
# В файле содержится последовательность из 10 000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых разность элементов кратна 60 и хотя бы один из элементов кратен 15,
# затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if abs(x - y) % 60 == 0:
            # if (x % 15 == 0) !+ (y % 15 == 0):  # только один делится на 15
            if x % 15 == 0 or y % 15 == 0:
                R.append(abs(x - y))
print(len(R), max(R))
'''
# Ответ: 63517 9960


# Тип 24 №27688
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Z.
# Хотя бы один символ Z находится в последовательности.

# xZZZZxZZxZZZZZxZZZZZ
'''
s = open('24.txt').readline()
count = 1  # длина промежуточной последовательности
maxi = 0  # длина максимальной последовательности, то есть будем сравнивать ее с count
for i in range(len(s)-1):
    if s[i] == 'Z' and s[i+1] == 'Z':
        count += 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)
'''
# Ответ: 7

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Лиза = [2.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1]
# КЕГЭ  = []
# на следующем уроке:
