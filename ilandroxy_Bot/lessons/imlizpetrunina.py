# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

'''
# каждую строчку файла 9.txt разбиваем на списки
for s in open('9.txt'):
    M = [int(x) for x in s.split()]

# каждую строчку файла 17.txt сразу читаем в общий список
M = [int(x) for x in open('17.txt')]


# Работа с разными типами задач номер 17

M = [1, 2, 3, 4, 5]
# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()
# IndexError: list index out of range


# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''


# Тип 17 №37344
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# для которых произведение элементов делится без остатка на 10, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x * y) % 10 == 0:
            R.append(x + y)
print(len(R), max(R))
'''
# 13510315 19999


# Тип 17 №46975
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых один из двух элементов делится на 3,
# а другой меньше среднего арифметического всех чётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if x % 2 == 0]
sred = sum(A) / len(A)
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x % 3 == 0 and y < sred) or (y % 3 == 0 and x < sred):
        R.append(x + y)
print(len(R), max(R))
'''
# Ответ: 1711 14666


# Тип 17 №63033
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.
#
# Определите количество троек, для которых выполняются следующие условия:
# — хотя бы два числа в тройке пятизначные;
# — ровно одно число в тройке делится на 3;
# — сумма элементов тройки больше максимального элемента последовательности,
# запись которого заканчивается на 123.
#
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-3:] == '123']
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if len([a for a in [x, y, z] if len(str(abs(a))) == 5]) >= 2:   # abs() - взятие модуля числа
        if ((x % 3 == 0) + (y % 3 == 0) + (z % 3 == 0)) == 1:  # — ровно одно число в тройке делится на 3;
            if (x + y + z) > max(A):
                R.append(x + y + z)
print(len(R), max(R))
'''
# 336 253152

# endregion Урок: ******************************************************************


# Лиза = [2.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
