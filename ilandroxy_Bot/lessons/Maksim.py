# region Домашка: ************************************************************


# endregion Домашка: ************************************************************

# region Урок: ************************************************************

# Строковый тип данных в Python().

# Работа с индексами списков
'''
M = 'abcde'

print(f'Первый элемент списка: {M[0]} \n'
      f'Последний элемент списка: {M[-1]}')

# Срезы в списках:
print(M[:2])  # 'ab'
print(M[2:])  # 'cde'
print(M[:])  # 'abcde'
print(M[1:3])  # 'bc'
print(M[::2])  # 'ace'
print(M[::3])  # 'ad'
print(M[::-1])  # 'edcba' - аналог .reverse()
# range(START, STOP-1, STEP)  - логика примерно такая же
'''

# Пробежать списки можно напрямую или через индексы:
'''
M = 'abcde'

for x in M:
    print(x, end=' ')
print()

for i in range(len(M)):
    print(M[i], end=' ')
print()
'''


# Функции строк:
'''
M = '1364255'
print(len(M))  # len() - длину строки (кол-во элементов в нем)
print(max(M))  # просто максимальный по значению элемент из списка
print(min(M))  # минимальный
print(sorted(M))  # ['1', '2', '3', '4', '5', '5', '6']
# эта функция сортирует все что угодно в алфавитном порядке,
# но результат возвращает в виде списка

print(sorted(M, reverse=True))  # ['6', '5', '5', '4', '3', '2', '1'] - в обратном порядке
print(set(M))  # {'2', '6', '4', '5', '3', '1'} - убирает копии элементов


# Часто в ЕГЭ пишут "сколько различных значений будет выведено на экран?"
L = 't4r64tyr64tr64tr46tr'
print(len(set(L)))  # 5
print(set(L))  # {'r', 't', '4', 'y', '6'}
'''

# Методы строк
'''
s = '4522323767289'

print(s.count('2'))  # 4 - возвращает кол-во вхождений элемента в строку
print(s.index('2'))  # 2 - возвращает индекс первого найденного элемента
print(s.rindex('2'))  # 10 - возвращает индекс крайнего правого элемента

print(s.isdigit())  # True

weather = 'облачно'
print('Сегодня {} погода!'.format(weather))

s = s.replace('7', '*')  # заменил все символы '7'
print(s)  # 4522323*6*289

s = s.replace('2', '+', 3)
print(s)  # 45++3+3*6*289

# Есть строка чисел, как нам вытащить из нее "двузначные"

s = '123.45.78.9'
ip = s.split('.')
print(ip)  # ['123', '45', '78', '9']
IP = [int(x) for x in s.split('.')]
print(IP)  # [123, 45, 78, 9]


new_s = ','.join(ip)  # '123,45,78,9' - склеивает список строк в одну общую строку
print(new_s)
'''

'''
s = '2134..21343,123.12321,324.4324,'
A = [',', '.', ',.', '.,', ',,', '..']
for x in A:
    s = s.replace(x, '.')
print(s)
s = s.split('.')
print(s)
'''

# Ввод списка целых чисел с клавиатуры
'''
M = [int(x) for x in input('Введите числа через пробел: ').split() if x.isdigit()]
print(M)
'''

# Если функции sum() нет, то как посчитать сумму цифр строки
'''
s = '213456786543rghnkruje'
print(sum([int(x) for x in s if x.isdigit()]))
'''


# Тип 14 №9802
# Значение арифметического выражения: 9**8 + 3**5 - 2 – записали в системе счисления с основанием 3.
# Сколько цифр «2» содержится в этой записи?
'''
# Вариант 1
x = 9**8 + 3**5 - 2
M = []
while x > 0:
    M.append(x % 3)
    x //= 3
M.reverse()

print(M.count(2))

# Вариант 2
x = 9**8 + 3**5 - 2
s = ''
while x > 0:
    s += str(x % 3)
    x //= 3
s = s[::-1]
print(s.count("2"))
'''
# Ответ: 4


# Тип 14 №28552
# Значение выражения 216**6 + 216**4 + 36**6 − 6**14 − 24 записали в системе счисления с основанием 6.
# Сколько различных цифр содержит эта запись?
'''
x = 216**6 + 216**4 + 36**6 - 6**14 - 24
M = []
while x > 0:
    M.append(x % 6)
    x //= 6
M.reverse()
print(len(set(M)))
'''
# Ответ: 4


# Зачем нам может пригодиться alphabet = sorted('012345awsdfgh')
'''
import string
from string import *
import string as st
alphabet1 = st.digits + st.ascii_uppercase
print(alphabet1)  # 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ


alphabet2 = sorted('1234567890QWERTYUIOPASDFGHJKLZXCVBNM')
print(alphabet2)  # ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
'''

# Тип 14 №48382
# Операнды арифметического выражения записаны в системе счисления с основанием 16:
#
# 8x84x_16 + 78x34_16
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита шестнадцатеричной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 23.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 23
# и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
alpahbet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
# 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
for x in alpahbet[:16]:
    A = int(f'8{x}84{x}', 16)  # ValueError: invalid literal for int() with base 16: '8x84x'
    B = int(f'78{x}34', 16)
    if (A+B) % 23 == 0:
        print((A+B) // 23)
'''


# Тип 14 №48385
# Операнды арифметического выражения записаны в системах счисления с основаниями 13 и 18:
#
# 8x78y_13 + 79xy7_18
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные
# цифры. Определите значения x и y, при которых значение данного арифметического выражения
# будет наименьшим и кратно 9. Для найденных значений x и y вычислите частное от деления
# значения арифметического выражения на 9 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
alpahbet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for x in alpahbet[:13]:
    for y in alpahbet[:13]:
        A = int(f'8{x}78{y}', 13)  # ValueError: invalid literal for int() with base 16: '8x84x'
        B = int(f'79{x}{y}7', 18)
        if (A+B) % 9 == 0:
            print((A+B) // 9)
            exit()
'''
# Ответ: 113024

# endregion Урок: ************************************************************


# todo: Максим = [2.1]
# на прошлом уроке:
# на следующем уроке:
