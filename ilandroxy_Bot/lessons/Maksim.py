# region Домашка: ************************************************************


# КЕГЭ № 6901 (Уровень: Средний) (Д. Статный)
# Все пятибуквенные слова, в составе которых могут быть только буквы слова БАРАШ,
# записаны в алфавитном порядке и пронумерованы начиная с 1.
#
# Ниже приведено начало списка.
# 1. ААААА
# 2. ААААБ
# 3. ААААР
# 4. ААААШ
# 5. АААБА
#
# Под каким последним номером идёт слово, в котором не более 3-х согласных
# и только одна буква повторяется дважды, а остальные не повторяются?
'''
s = sorted('БРАШ')
cnt = 0
R = []
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    n = a + b + c + d + e
                    cnt += 1
                    if "АА" in n and (n.count('Б') + n.count('Р') + n.count('Ш') <= 3):
                        if len(set(n)) == 4:
                            R.append(cnt)
print(max(R))
'''

'''
from itertools import product
cnt = 0
R = []
s = sorted('БРАШ')
for var in product(s, repeat=5):
    n = ''.join(var)
    cnt += 1
    if len([x for x in n if x in 'БРШ']) <= 3:
        if len(set(n)) == 4:
            print(cnt, n)  # ШРБАА
            R.append(cnt)
print(max(R))
'''

# КЕГЭ № 5268 (Уровень: Средний) (С. Якунин)
#
# Дмитрий составляет слова, переставляя буквы в слове АМФИБРАХИЙ.
# Сколько различных слов, содержащих ИИФАА или ААФИИ, может составить Дмитрий?
'''
from itertools import permutations
R = []
for var in permutations('АМФИБРАХИЙ'):
    slovo = ''.join(var)
    if 'ИИФАА' in slovo or 'ААФИИ' in slovo:
        R.append(slovo)
# print(len(R))
print(len(set(R)))
'''
# endregion Домашка: ************************************************************

# region Урок: ************************************************************


# endregion Урок: ************************************************************
'''
print(3, 4, 5, 6, 7)

for x in range(2, 10, 2):
    print(x)
'''

'''
print(sum([1, 2, 3]))
# print(sum(1, 2, 3))
print(max([1, 2, 3]))
print(max(1, 2, 3))


maxi = 5
maxi = max(maxi, 10)
print(maxi)
'''

'''
def summa(*args):
    print(type(args))  # <class 'tuple'>
    return sum(args)


print(summa(1, 2, 3))
# <class 'tuple'>
# None -> 6
'''


# Функция поиска простого числа
'''
def prime(x: int):  # 24
    """
    Функция проверки числа на простое и составное
    :param x: Проверяемое число
    :return: Вернет True - если простое, False - если составное
    """
    if x == 1:
        return False
    for j in range(2, x):
        if x % j == 0:
            return False
    return True


for x in range(1, 1000):
    if prime(x):
        print(x, end=' ')
'''
# print(help(prime))


# Тип 23 №3611
# 1. прибавь 2,
# 2. умножь на 3.
# Сколько есть программ, которые число 1 преобразуют в число 25?
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+2, b) + F(a*3, b)


print(F(1, 25))


# Вариант 2
def F(a, b):
    if a >= b:
        return a == b
    return F(a+2, b) + F(a*3, b)


print(F(1, 25))
'''
# Ответ: 8


# Тип 23 №15959
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Умножить на 3
# Сколько существует программ, которые преобразуют исходное число 3 в число 50
# и при этом траектория вычислений содержит число 15 и не содержит числа 33?
'''
def F(a, b):
    if a >= b or a == 33:
        return a == b
    return F(a+1, b) + F(a*2, b) + F(a*3, b)


print(F(3, 15) * F(15, 50))
'''
# Ответ: 121


# Тип 23 №58216
# 1. Вычти 1;
# 2. Найди целую часть от деления на 2.
# Сколько существует программ, для которых при исходном числе 78 результатом является число 4,
# и при этом траектория вычислений содержит число 16?
'''
def F(a, b):
    if a <= b:
        return a == b
    return F(a-1, b) + F(a//2, b)


print(F(78, 16) * F(16, 4))
'''
# Ответ: 1232


# Максим = [2.1, 6.1, 5.1, 8.1, 12.1, 14.1, 23.1]
# КЕГЭ = []
# на следующем уроке: Разбираем 16 и 15 номера
