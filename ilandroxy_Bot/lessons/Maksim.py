# region Домашка: ************************************************************

# КЕГЭ № 6884 OpenFIPI (Уровень: Базовый)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа и слева ещё по одному или два разряда по следующему правилу:
#     а) если N чётное, то в конец числа (справа) дописывается нуль, а в начало числа (слева) дописывается единица;
#     б) если N нечётное, то в конец числа (справа) и в начало числа (слева) дописываются по две единицы.
#
# Полученная таким образом запись (в ней на два или четыре разряда больше, чем в записи исходного числа N)
# является двоичной записью искомого числа R.
#
# Укажите наименьшее число R, превышающее 225, которое может являться результатом работы данного алгоритма.
# В ответе это число запишите в десятичной системе счисления.
'''
R = []
for n in range(1, 10000):
    s = bin(n)[2:]
    if n % 2 == 0:
        s = '1' + s + '0'
    else:
        s = '11' + s + '11'
    r = int(s, 2)
    if r > 225:
        R.append(r)
print(min(R))
'''

'''
def my_convert(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while number > 0:
        result += alphabet[number % system]
        number //= system
    return result[::-1]


R = []
for n in range(1, 100000):
    s = my_convert(n, 2)
    if n % 2 == 0:
        s = '1' + s + '0'
    else:
        s = '11' + s + '11'
    r = int(s, 2)
    if r > 225:
        R.append(r)
print(min(R))
'''


# КЕГЭ № 2573 (Уровень: Средний)
# Дана программа для исполнителя Редактор:
#
# ПОКА нашлось(55555)
#    заменить(55555, 88)
#    заменить(888, 55)
# КОНЕЦ ПОКА
# Известно, что начальная строка состоит более чем из 300 цифр 5 и не содержит других цифр.
# При какой наименьшей длине исходной строки результат работы
# этой программы будет содержать наибольшее возможное число цифр 5?
'''
R = []
for x in range(301, 1000):
    s = '5' * x
    while '55555' in s:
        s = s.replace('55555', '88', 1)
        s = s.replace('888', '55', 1)
    if s.count('5') == 6:
        R.append(x)
print(min(R))
'''
# endregion Домашка: ************************************************************

# region Урок: ************************************************************


# Тип 12 №35986
# Дана программа для редактора:
#     ПОКА НЕ нашлось (00)
#         заменить (01, 210)
#         заменить (02, 320)
#         заменить (03, 3012)
#
# Известно, что исходная строка начиналась с нуля и заканчивалась нулём,
# а между ними содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 23 единицы, 48 двоек и 41 тройку.
# Сколько цифр было в исходной строке?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'

            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '320', 1)
                s = s.replace('03', '3012', 1)
            if s.count('1') == 23 and s.count('2') == 48 and s.count('3') == 41:
                print(2+x+y+z)
'''
# Ответ: 34


# Дана строка из 20 пятёрок. Сколько раз выполнится алгоритм?
#
# ПОКА нашлось (5555)
# ЕСЛИ нашлось(5555)
#       ТО заменить(5555, 45)
'''
s = '5' * 20
cnt = 0
while '5555' in s:
    if '5555' in s:
        s = s.replace('5555', '45', 1)
        cnt += 1
print(cnt)
'''


# Дана строка из K пятёрок.
# Алгоритм выполнился 3 раза и остались только четвёрки.
# Сколько пятёрок было изначально?
#
# ЕСЛИ нашлось(5555)
#       ТО заменить(5555, 4)
#       ИНАЧЕ заменить(4, 55)

'''
for k in range(6, 7):
    s = '5' * k
    for _ in range(3):
        if '5555' in s:
            s = s.replace('5555', '4', 1)
        else:
            s = s.replace('4', '55', 1)
    if s.count('5') == 0:
        print(k)
'''


# Тип 8 №3232
# Все 5-буквенные слова, составленные из букв А, К, Р, У, записаны в алфавитном порядке. Вот начало списка:
# 1. ААААА
# 2. ААААК
# 3. ААААР
# 4. ААААУ
# 5. АААКА
# Укажите номер слова РУКАА.
'''
s = sorted('АКРУ')
k = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if slovo == 'РУКАА':
                        print(k, slovo)
                    k += 1

# Вариант 2
from itertools import product
k = 1
for s in product(sorted('АКРУ'), repeat=5):
    slovo = ''.join(s)
    if slovo == 'РУКАА':
        print(k, slovo)
    k += 1
'''
# Ответ: 721


# Тип 8 №27236
# Андрей составляет 4-буквенные коды из букв А, Н, Д, Р, Е, Й.
# Каждую букву можно использовать любое количество раз, при этом код не может
# начинаться с буквы Й и должен содержать хотя бы одну гласную.
# Сколько различных кодов может составить Андрей?
'''
s = 'АНДРЕЙ'
cnt = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                slovo = a + b + c + d
                if a != 'Й':
                    if 'А' in slovo or 'Е' in slovo:
                        cnt += 1
print(cnt)


from itertools import product
count = 0
for var in product('АНДРЕЙ', repeat=4):
    slovo = ''.join(var)
    if slovo[0] != 'Й' and any(x in slovo for x in 'АЕ'):
        count += 1
print(count)
'''
# Ответ: 888

'''
from itertools import product, permutations

for s in product('012', repeat=3):
    slovo = ''.join(s)
    print(s, slovo)

for s in permutations('012', 3):
    slovo = ''.join(s)
    print(s)
'''


# Тип 8 №59831
# Игорь составляет пятизначные числа, используя цифры девятеричной системы счисления.
# Сколько различных чисел может составить Игорь, в которых только одна цифра 5
# и рядом с ней НЕ стоят нечётные цифры?
'''
s = '012345678'
cnt = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    if a != '0':
                        num = a + b + c + d + e
                        if num.count('5') == 1:
                            if all(pair not in num for pair in '15 51 35 53 57 75'.split()):
                                cnt += 1
print(cnt)
'''
# Ответ: 8880.

# endregion Урок: ************************************************************


# Максим = [2.1, 6.1, 5.1, 8.1, 12.1, 14.1]
# КЕГЭ = []
# на следующем уроке:
