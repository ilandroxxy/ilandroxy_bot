# region Домашка: ************************************************************

# КЕГЭ № 6844 (Уровень: Средний)
# В системе счисления с основанием p выполняется равенство
# 5x83_p + x9x9_p = y20y_p
#
# Буквами x и y обозначены некоторые цифры из алфавита системы счисления с основанием p.
# Определите значение числа xyyx_p и запишите это значение в десятичной системе счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for p in range(10, 36+1):
    for x in alphabet[:p]:
        for y in alphabet[:p]:
            if int(f'5{x}83', p) + int(f'{x}9{x}9', p) == int(f'{y}20{y}', p):
                print(int(f'{x}{y}{y}{x}', p))
'''
# endregion Домашка: ************************************************************

# region Урок: ************************************************************

# Тип 5 №10407
# Автомат получает на вход четырёхзначное число.
# По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая и вторая цифры, вторая
# и третья цифры, а также третья и четвёртая цифры.
# 2. Из полученных трёх чисел выбираются два наибольших
# и записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 9575. Суммы: 9+5 = 14; 5+7 = 12; 7+5 = 12.
# Наибольшие суммы: 14, 12. Результат: 1214.
#
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 1515.
'''
# Вариант 1
for n in range(1000, 10000):
    a, b, c, d = [int(x) for x in str(n)]  # 9998 [9, 9, 9, 8]
    M = sorted([a + b, b + c, c + d])
    del M[0]
    r = ''.join([str(M[0]), str(M[1])])
    if r == '1515':
        print(n)


# Вариант 2
for n in range(1000, 10000):
    a, b, c, d = [int(x) for x in str(n)]  # 9998 [9, 9, 9, 8]
    M = sorted([a + b, b + c, c + d])
    del M[0]
    r = M[0] * 100 + M[1]
    if r == 1515:
        print(n)
'''
# Ответ: 9696


# Тип 5 №15791
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится двоичная запись числа N.
# 2. Складываются все цифры полученной двоичной записи.
# В конец записи (справа) дописывается остаток от деления суммы на 2.
# 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
# 4. Результат переводится в десятичную систему и выводится на экран.

# Пример. Дано число N = 13. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 1101.
# 2. Сумма цифр двоичной записи 3, остаток от деления на 2 равен 1, новая запись 11011.
# 3. Сумма цифр полученной записи 4, остаток от деления на 2 равен 0, новая запись 110110.
# 4. На экран выводится число 54.
#
# Какое наименьшее число, большее 97, может появиться на экране в результате работы автомата?
'''
# Вариант 1
R = []
for n in range(1, 10000):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.
    for _ in range(2):  # 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
        s += str(s.count('1') % 2)  # 2. (справа) дописывается остаток от деления суммы на 2
    r = int(s, 2)  # # 4. Результат переводится в десятичную систему и выводится на экран.
    if r > 97:
        R.append(r)
print(min(R))


# Вариант 2

def my_convert(number: int, system: int) -> str:
    """
Универсальная функция для перевода в системы счисления от 2-ой до 36-ой
    :param number: Переводимое 10-ное число
    :param system: Система счисления в которую будем переводить
    :return: Результат вернем в виде строки
    """
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while number > 0:
        result += alphabet[number % system]
        number //= system
    return result[::-1]


# print(my_convert.__doc__)
# print(range.__doc__)

R = []
for n in range(1, 10000):
    s = my_convert(n, 2)  # 1. Строится двоичная запись числа N.
    for _ in range(2):  # 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
        s += str(s.count('1') % 2)  # 2. (справа) дописывается остаток от деления суммы на 2
    r = int(s, 2)  # # 4. Результат переводится в десятичную систему и выводится на экран.
    if r > 97:
        R.append(r)
print(min(R))
'''
# Ответ: 102


# Тип 5 №28681
# Автомат обрабатывает натуральное число N (128 ≤ N ≤ 255) по следующему алгоритму:
# 1. Строится восьмибитная двоичная запись числа N.
# 2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3. Полученное число переводится в десятичную запись.
# 4. Из исходного числа вычитается полученное, разность выводится на экран.
#
# Пример. Дано число N = 131. Алгоритм работает следующим образом:
# 1. Восьмибитная двоичная запись числа N: 10000011.
# 2. Все цифры заменяются на противоположные, новая запись: 01111100.
# 3. Десятичное значение полученного числа: 124.
# 4. На экран выводится число: 131 – 124 = 7.
#
# Какое число нужно ввести в автомат, чтобы в результате получилось 105?
'''
for n in range(128, 255+1):
    s = bin(n)[2:]
    s = s.replace('1', '*').replace('0', '1').replace('*', '0')
    r = int(s, 2)
    if n - r == 105:
        print(n)
'''
# Ответ: 180





# endregion Урок: ************************************************************


# Максим = [2.1, 6.1, 5.1, 14.1]
# КЕГЭ = []
# на следующем уроке:
