# region Домашка: ************************************************************

# КЕГЭ № 5111 /dev/inf 11.22 (Уровень: Базовый) (А. Рогов)
'''
def my_convert(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while number > 0:
        result += alphabet[number % system]
        number //= system
    return result[::-1]


for n in range(1, 100000):
    s = my_convert(n, 2)
    if s.count("1") % 2 == 0:
        s = '10' + s[2:] + '1'
    else:
        s = '1' + s[2:] + '11'
    r = int(s, 2)
    if r > 100:
        print(n)
        break  # exit()
'''



# M = [[1, 2, 3], [1, 2, 4], [1, 4, 5]]
# print(min(M))


# КЕГЭ № 7026 Danov2303 (Уровень: Базовый) (А.Богданов)
#
# На вход алгоритма подается натуральное число N. Алгоритм строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа еще несколько разрядов по следующему правилу:
#    а) если N четное, то к нему справа приписываются два нуля, а слева единица;
#    б) если N нечетное, то к нему справа приписывается в двоичном виде сумма цифр его двоичной записи;

# Укажите такое число N большее 8, для которого число R является наименьшим среди чисел, превышающих 88.
# В ответе это число запишите в десятичной системе счисления.
'''
R = []
for n in range(9, 1000):
    s = bin(n)[2:]
    if n % 2 == 0:
        s = '1' + s + '00'
    else:
        s = s + bin(s.count('1'))[2:]
    r = int(s, 2)
    if r > 88:
        R.append([r, n])
print(min(R)[1])
'''

# КЕГЭ № 1516 (Уровень: Средний)
# Автомат обрабатывает натуральное число N по следующему алгоритму:
# 1) Строится двоичная запись числа N.
# 2) Из записи удаляются все нули.
# 3) Полученное число переводится в десятичную запись и выводится на экран.
#
# Сколько разных значений будет показано на экране автомата при
# последовательном вводе всех натуральных чисел от 100 до 1000?
'''
R = []
for n in range(100, 1000+1):
    s = bin(n)[2:]
    s = s.replace('0', '')
    r = int(s, 2)
    R.append(r)
print(len(set(R)))


S = set()
for n in range(100, 1000+1):
    s = bin(n)[2:]
    s = s.replace('0', '')
    r = int(s, 2)
    S.add(r)
print(len(S))
'''
# endregion Домашка: ************************************************************

# region Урок: ************************************************************

# Тип 12 №18562
# Какая строка получится в результате применения приведённой
# ниже программы к строке вида 1…12…2 (39 единиц и 39 двоек)?

# ПОКА нашлось (111)
#   заменить (111, 2)
#   заменить (222, 1)
'''
s = '1' * 39 + '2' * 39  # исходная строка
while '111' in s:  # не нашлась - not in
    s = s.replace('111', '2', 1)
    s = s.replace('222', '1', 1)
print(s)  # получившаяся строка
'''
# Ответ: 12


# Тип 12 №40987
# Дана программа для редактора:
# ПОКА нашлось (1111)
#   заменить (1111, 22)
#   заменить (222, 1)

# Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр.
# При какой наименьшей длине исходной строки результат работы данной
# программы будет содержать наименьшее возможное число единиц?
'''
R = []
for n in range(201, 1000):
    s = '1' * n
    while '1111' in s:
        s = s.replace('1111', '22', 1)  # ctrl + d
        s = s.replace('222', '1', 1)
    R.append([s.count('1'), n])
print(min(R))


mini = 9999999999
for n in range(201, 1000):
    s = '1' * n
    while '1111' in s:
        s = s.replace('1111', '22', 1)  # ctrl + d
        s = s.replace('222', '1', 1)
    if mini > s.count('1'):
        mini = s.count('1')
        print(mini, n)
'''
# Ответ: 204


# Тип 12 №29199
# Дана программа для Редактора:
# ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#  заменить (01, 20)
#  заменить (02, 120)
#  заменить (03, 302)

# Известно, что исходная строка начинается с цифры 0, а далее содержит 12 цифр 1, 15 цифр 2 и 17 цифр 3,
# расположенных в произвольном порядке.
# Сколько цифр 1 будет в строке, которая получится после выполнения данной программы?
'''
s = '0' + '3' * 17 + '2' * 15 + '1' * 12 
while '01' in s or '02' in s or '03' in s:
    s = s.replace('01', '20', 1)
    s = s.replace('02', '120', 1)
    s = s.replace('03', '302', 1)
print(s.count('1'))
'''
# Ответ: 32


# КЕГЭ № 776 Джобс 30.11.2020 (Уровень: Сложный)
# Дана программа для Редактора:
#
# НАЧАЛО
# ПОКА НЕ нашлось(><)
#    заменить(>1, 3>)
#    заменить(>2, 2>)
#    заменить(>3, 1>)
#    заменить(3<, <1)
#    заменить(2<, <3)
#    заменить(1<, <2)
# КОНЕЦ ПОКА
# КОНЕЦ
#
# На вход приведённой ниже программе поступает строка,
# начинающаяся с символа «>», затем содержащая 20 цифр 1, 15 цифр 2 и 40 цифр 3,
# расположенных в произвольном порядке и оканчивающаяся символом «<».
#
# Определите максимальную сумму числовых значений цифр строки, получившейся в результате выполнения программы.
'''
import itertools
R = []
for var in itertools.permutations(['3' * 40, '1' * 20,'2' * 15]):
    s = '>' + ''.join(var) + '<'
    print(s)
    while '><' not in s:
        s = s.replace('>1', '3>', 1)
        s = s.replace('>2', '2>', 1)
        s = s.replace('>3', '1>', 1)
        s = s.replace('3<', '<1', 1)
        s = s.replace('2<', '<3', 1)
        s = s.replace('1<', '<2', 1)
    summa = sum([int(x) for x in s if x.isdigit()])
    R.append(summa)
print(max(R))
'''
# Ответ: 145


M = ['2132', '12342', '123']
print('*'.join(M))  # 2132*12342*123
print('  '.join(M))  # 2132  12342  123
print(',,'.join(M))  # 2132,,12342,,123

# todo добить пару задач по 12 номеру и начать 8 номера.

# endregion Урок: ************************************************************


# Максим = [2.1, 6.1, 5.1, 12.1, 14.1]
# КЕГЭ = []
# на следующем уроке:
