# region Домашка: ************************************************************

# КЕГЭ № 8954 Джобс 02.06.2023 (Уровень: Базовый) (Е. Джобс)

# В файле содержится последовательность натуральных чисел. Элементы последовательности
# могут принимать целые значения от 1 до 10 000 включительно.
# Определите количество пар последовательности, в которых только одно число кратно 7,
# а сумма элементов пары кратна максимальному элементу последовательности,
# оканчивающемуся на 0F в шестнадцатеричной системе счисления.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if hex(x)[-2:] == '0f']
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x % 7 == 0) != (y % 7 == 0):
        if (x + y) % max(A) == 0:
            R.append(x + y)
print(len(R), max(R))
'''


# КЕГЭ № 7718 (Уровень: Средний) (Грачев Н.)
# В файле содержится последовательность целых неотрицательных чисел, не превышающих 10000.
# Определите количество пар элементов последовательности, в которых либо сумма элементов кратна 18,
# либо произведение элементов кратно 18. В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную сумму элементов этих пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if ((x + y) % 18 == 0) != ((x * y) % 18 == 0):
            R.append(x + y)
print(len(R), max(R))
'''
# endregion Домашка: *********************************************************

# region Урок: ************************************************************

# Тип 24 №27691
# Текстовый файл состоит не более чем из 10**6 символов A, B и C.
# Определите максимальное количество идущих подряд символов A.
'''
# Вариант 1
s = open('24.txt').readline()
maxi = 0  # длина самой большой последовательности
count = 1  # длина промежуточных последовательностей
for i in range(len(s)-1):
    # if s[i] == 'A' and s[i+1] == 'A':
    if s[i:i+2] == 'AA':
        count += 1
        # if maxi < count:
        #    maxi = count
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)

# Вариант 2.1
s = open('24.txt').readline()
s = s.replace('B', ' ').replace('C', ' ')
print(max([len(x) for x in s.split()]))

# Вариант 2.2
print(max([len(x) for x in open('24.txt').readline().replace('B', ' ').replace('C', ' ').split()]))

# Вариант 3 - поиск по файлу через ctrl + F
print(open('24.txt').readline())
print(len('AAAAAAA'))
'''
# Ответ: 7


# Тип 24 №27694
# Текстовый файл состоит не более чем из 106 символов A, B и C.
# Определите максимальную длину цепочки вида ABABAB...
# (составленной из фрагментов AB, последний фрагмент может быть неполным).
'''
print(open('24.txt').readline())
print(len('ABABABABABABABABABABABAB'))
'''

# Тип 24 №59848
# Текстовый файл состоит не более чем из 106 символов латинского алфавита.
# Необходимо найти самую длинную подстроку, которая может являться числом в 24 системе счисления.
# В ответ записать длину последовательности символов, которая может являться числом в 24 системе счисления.
'''
s = open('24.txt').readline()
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for a in alphabet[24:]:
    s = s.replace(a, ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 40


# Тип 24 №59817
# Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов, которых никакие две буквы
# из набора букв A, B и C (с учетом повторений) не записаны подряд.
'''
s = open('24.txt').readline()
for a in 'AB BA AC CA BC CB AA BB CC'.split():
    s = s.replace(a, '* *')
print(max([len(x) for x in s.split()]))

# Вариант 2
s = open('24.txt').readline()
for a in 'ABC':
    s = s.replace(a, '*')
while '**' in s:
    s = s.replace('**', '* *')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 49


# Тип 24 №47228
# Текстовый файл состоит из символов A, C, D, F и O.
# Определите максимальное количество идущих подряд пар символов вида согласная + гласная.
'''
s = open('24.txt').readline()
s = s.replace('O', 'A')
s = s.replace('C', 'D').replace('F', 'D')
s = s.replace('DA', '*')
s = s.replace('A', ' ').replace('D', ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 95


# Тип 24 №40999
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC...Z).
# Определите максимальное количество идущих подряд символов, среди которых
# нет ни одной буквы E и при этом не менее трёх букв A.
'''
s = open('24.txt').readline().replace('E', ' ')
print(max([len(x) for x in s.split() if x.count('A') >= 3]))
'''
# Ответ: 275


# Тип 24 №46982
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество групп из идущих подряд не менее 12 символов,
# которые начинаются и заканчиваются буквой E и не содержат других букв E
# (кроме первой и последней) и букв F.
'''
s = open('24.txt').readline().replace('E', 'E E')
print(len([len(x) for x in s.split() if 'F' not in x and len(x) >= 12]))
'''
# Ответ: 9655


# Тип 24 №51993
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите длину самой длинной цепочки символов, которая начинается
# и заканчивается буквой F, а между двумя последовательными буквами F
# содержит не более двух букв A и произвольное количество других букв.
'''
s = open('24.txt').readline().split('F')
count = 1
maxi = 0
for i in range(len(s)):
    if s[i].count('A') <= 2:
        count += len(s[i]) + 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)
'''
# Ответ: 266


# Тип 24 №27690
# Текстовый файл состоит не более чем из 106 символов A, B и C.
# Определите максимальное количество идущих подряд символов,
# среди которых каждые два соседних различны.
'''
s = open('24.txt').readline()
count = 1
maxi = 0
for i in range(len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)
'''
# Ответ: 42


# Тип 24 №36037
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд символов, среди которых нет подстроки XZZY.
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
s = open('24.txt').readline()
s = s.replace('XZZY', 'XZZ ZZY')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 1713

# endregion Урок: ************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Максим = [2, 6, 5, 8, 9, 12, 14, 15, 16, 17, 23, 24, 25]
# КЕГЭ = []
# на следующем уроке: Разбираем сложные задачи 24 номера + на кол-во и строки
