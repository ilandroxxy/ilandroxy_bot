# region Домашка: ************************************************************

# КЕГЭ № 10577 (Уровень: Базовый)
# В терминологии сетей TCP/IP маской сети называют двоичное число, которое показывает,
# какая часть IP-адреса узла сети относится к адресу сети, а какая - к адресу узла в этой сети.
# Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.
#
# Два узла, находящиеся в одной сети, имеют IP-адреса 165.112.200.70 и 165.112.175.80.
# Найдите наибольшее возможное количество единиц в двоичной записи маски подсети.
'''
from ipaddress import *
maxi = 0
for mask in range(32+1):
    net1 = ip_network(f'165.112.200.70/{mask}', 0)
    net2 = ip_network(f'165.112.175.80/{mask}', 0)
    if net1 == net2:
        # print(net1, mask, net1.netmask)
        maxi = max(maxi, mask)
print(maxi)
'''
# Ответ: 17

# endregion Домашка: *********************************************************


# region Урок: ************************************************************
'''
import sys
sys.setrecursionlimit(10000)
def F(n):
    if n <= 3:
        return 2025
    if n > 3:
        return 3 * (n-1) * F(n-2)

print(F(2027) / F(2023))
'''
# [Previous line repeated 996 more times]
# RecursionError: maximum recursion depth exceeded


# № 16387 ЕГКР 27.04.24 (Уровень: Базовый)
# A. Прибавить 1
# B. Прибавить 2
# C. Умножить на 3
# Сколько существует программ, для которых при исходном
# числе 2 результатом является число 18, и при этом траектория
# вычислений содержит число 9 и не содержит числа 16?
'''
def F(a, b):  # a - старт, b - стоп
    if a >= b or a == 16:
        return a == b
    return F(a+1, b) + F(a+2, b) + F(a*3, b)

print(F(2, 9) * F(9, 18))
'''

'''
def F(a, b, t):
    if a > b or len(t) > 5:
        return 0
    elif a == b and len(t) <= 5:
        print(t)
        return 1
    else:
        return F(a**2, b, t+'1') + F(a+3, b, t+'2')


print(F(1, 25, ''))
'''


# № 16381 ЕГКР 27.04.24 (Уровень: Базовый)
# Обозначим через ДЕЛ(n, m)
# утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наибольшего натурального числа А логическое выражение
# ¬ДЕЛ(x, А) → (ДЕЛ(x, 28) → ¬ДЕЛ(x, 49))
# истинно (т.е. принимает значение 1) при любом натуральном
# значении переменной х?
'''
def F(x, A):
    return (x % A != 0) <= ((x % 28 == 0) <= ((x % 49 != 0)))

for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 10000)):
        print(A)
'''


# № 12247 ЕГКР 16.12.23 (Уровень: Базовый)
'''
def F(x, A):
    return (x & A == 0) or (x & 37 != 0) or (x & 12 != 0)

for A in range(1000):
    if all(F(x, A) for x in range(10000)):
        print(A)
'''
# Ответ: 45


# № 14659 Открытый курс "Слово пацана" (Уровень: Базовый)
# (М. Попков) Заданы два отрезка P = [6, 17] и Q = [13, 28],
# лежащие на числовой прямой. Также существует отрезок А. Он таков, что формула
#
# ((x ∈ A) → (x ∈ P)) ∨ (x ∈ Q)
#
# истинна, причем переменная x может принимать любые значения.
# Какую наибольшую длину может принимать отрезок А?
# Определите и запишите в ответ целое число.

'''
def F(x, a1, a2):
    P = 6 <= x <= 17
    Q = 13 <= x <= 28
    A = a1 <= x <= a2
    return (A <= P) or Q

R = []
M = [x / 4 for x in range(1 * 4, 50 * 4)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2 - a1)
print(max(R))
'''


# № 13868 (Уровень: Базовый)
'''
from fnmatch import *
for x in range(2024, 10**10, 2024):
    if fnmatch(str(x), '112?57*4'):
        # if sum([int(a) for a in str(x)]) % 2 != 0:
        if sum(map(int, str(x))) % 2 != 0:
            print(x, x // 2024)
'''

# endregion Урок: ************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Максим = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 23, 24, 25]
# КЕГЭ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 23, 25]
# на следующем уроке:
