# region Домашка: ************************************************************

# КЕГЭ № 6999 (Уровень: Базовый)
#
# В файле электронной таблицы в каждой строке содержатся шесть неотрицательных целых чисел.
# Определите количество строк таблицы, для которых выполнены оба условия:
# – в строке ровно три числа кратных трем;
# – размах чисел строки не больше суммы чисел строки, кратных 3.
#
# Примечание. Размах — это разность между наибольшим и наименьшим значениямив наборе данных.
# Например, для набора 2 3 6 4 7 5, размах будет 7 – 2 = 5.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    B = [x for x in M if x % 3 == 0]
    if len(B) == 3:  # – в строке ровно три числа кратных трем;
        if (M[-1] - M[0]) <= sum(B):
            count += 1
print(count)
'''

'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    B = [x for x in M if x % 3 == 0]
    k = 0
    for x in B:
        k += 1
    if k == 3:
        if (M[-1] - M[0]) <= sum([x for x in M if x % 3==0]):
            count += 1
print(count)
'''

# КЕГЭ № 5627 (Уровень: Средний) (М. Ишимов)
# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнено хотя бы одно из условий:
# – в строке есть хотя бы одно повторяющееся число;
# – будучи упорядоченными, все числа строки образуют арифметическую прогрессию.
# В ответе запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    flag = 0
    if len(M) != len(set(M)):
        flag += 1
    if all(M[1] - M[0] == M[i+1] - M[i] for i in range(len(M)-1)):
        flag += 1
    if flag > 0:
        count += 1
print(count)
'''
# endregion Домашка: ************************************************************

# region Урок: ************************************************************

# Тип 24 №27696
# Текстовый файл состоит не более чем из 10**6 символов L, D и R.
# Определите длину самой длинной последовательности, состоящей из символов L.
# Хотя бы один символ L находится в последовательности.
'''
# Вариант 1
s = open('24.txt').readline()  # считываем содержимое файла в одну строку
count = 1  # счетчик для промежуточных последовательностей
max_count = 0  # глобальный счетчик с максимально длиной
for i in range(len(s)-1):
    x, y = s[i], s[i+1]
    # if s[i:i+2] == 'LL':
    if x == 'L' and y == 'L':
        count += 1
        max_count = max(max_count, count)   # сравниваем длину промежуточной последовательности и максимальной
    else:
        count = 1
print(max_count)

# Вариант 2
s = open('24.txt').readline()
s = s.replace('D', ' ').replace('R', ' ')
print(max([len(x) for x in s.split()]))

# Вариант 2.1
print(max([len(x) for x in open('24.txt').readline().replace('D', ' ').replace('R', ' ').split()]))


# Вариант 3
s = open('24.txt').readline()
print(s)  # воспользуйтесь поиском через ctrl + F
print(len('LLLLLLL'))
'''
# Ответ: 7


# Тип 24 №27690
# Текстовый файл состоит не более чем из 10**6 символов A, B и C.
# Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.
'''
s = open('24.txt').readline()
count = 1
max_count = 0
for i in range(len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)

# Вариант 2
f = open('24.txt').readline()
f = f.replace('AA', 'A A').replace('BB', 'B B').replace('CC', 'C C')
print(max([len(x) for x in f.split()]))
'''
# Ответ: 42


# Тип 24 №27699
# Текстовый файл состоит не более чем из 106 символов L, D и R. Определите максимальную длину цепочки
# вида LDRLDRLDR... (составленной из фрагментов LDR, последний фрагмент может быть неполным).


# Вариант 1
'''
s = open('24.txt').readline()
print(s)
print(len('LDRLDRLDRLDRLDR'))
'''

# Вариант 2
'''
s = open('24.txt').readline()
count = 2
max_count = 0
for i in range(len(s)-2):
    if s[i:i+3] == 'LDR' or s[i:i+3] == 'DRL' or s[i:i+3] == 'RLD':
        count += 1
        max_count = max(max_count, count)
    else:
        count = 2
print(max_count)
'''
# Ответ: 15


# Тип 24 №47228
# Текстовый файл состоит из символов A, C, D, F и O.
# Определите максимальное количество идущих подряд пар символов вида согласная + гласная.
'''
s = open('24.txt').readline()
s = s.replace('O', 'A').replace('C', 'D').replace('F', 'D')
s = s.replace('AA', 'A A').replace('DD', 'D D')
print(max([len(x) for x in s.split()]) // 2)


s = open('24.txt').readline()
s = s.replace('O', 'A').replace('C', 'D').replace('F', 'D')
s = s.replace('DA', '*')
s = s.replace('A', ' ').replace('D', ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 95

# Тип 24 №57431
# Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов, среди которых
# никакие две буквы из набора букв A, B и C (с учетом повторений) не записаны подряд.
'''
s = open('24.txt').readline()
for x in 'AA BB CC AB AC BA BC CA CB'.split():
    s = s.replace(x, '* *')
print(max([len(x) for x in s.split()]))


s = open('24.txt').read()
s = s.replace('A', '*')
s = s.replace('B', '*')
s = s.replace('C', '*')
maxi = 1
count = 1
for i in range(1, len(s)):
    if s[i-1]+s[i] != '**':
        count += 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi + 1)
'''

# Тип 24 №58329
# Текстовый файл состоит не более чем из 106 символов арабских цифр (0,1,...,9).
# Определите максимальное количество идущих подряд цифр, среди которых
# сумма двух идущих подряд чисел больше числа следующего за ними.
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
count = 2
max_count = 0
for i in range(len(s)-2):
    if (int(s[i]) + int(s[i+1])) > int(s[i+2]):
        count += 1
        max_count = max(max_count, count)
    else:
        count = 2
print(max_count)
'''
# Ответ: 33

# endregion Урок: ************************************************************

# Никита = [5.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ = []
# на следующем уроке:
