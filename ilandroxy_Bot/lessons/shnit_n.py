# region Домашка: ************************************************************
'''
s = sorted('МАРКСЛ')
k = 1
R = []
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        # if slovo.count('КС') == 0 and slovo.count('СК') == 0:
                        # if 'КС' not in slovo and 'СК' not in slovo:
                        if all(pair not in slovo for pair in 'КС СК'.split()):
                            if len(set(slovo)) == 4 and any(slovo.count(a) == 3 for a in slovo):
                                R.append(k)
                        k += 1
print(max(R))
'''

# КЕГЭ № 4320 (Уровень: Средний)
#
# Сколько существует восьмеричных шестизначных чисел, в которых все цифры различны,
# никакие две чётные или две нечётные цифры не стоят рядом и десятичная запись которых делится на 5?
'''
s = '01234567'
s1 = '1357'
s2 = '0246'
count = 0
for a in s1:
    for b in s2:
        for c in s1:
            for d in s2:
                for e in s1:
                    for f in s2:
                        num = a + b + c + d + e + f
                        if len(set(num)) == len(num):
                            if int(num, 8) % 5 == 0:
                                count += 1

for a in s2:
    for b in s1:
        for c in s2:
            for d in s1:
                for e in s2:
                    for f in s1:
                        num = a + b + c + d + e + f
                        if num[0] != '0' or a != '0':
                            if len(set(num)) == len(num):
                                if int(num, 8) % 5 == 0:
                                    count += 1
print(count)
'''
# Ответ: 208

# endregion Домашка: ************************************************************

# region Урок: ************************************************************

# Тип 5 №9792
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Перемножаются первая и вторая, а также вторая и третья цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 631. Произведение: 6 * 3 = 18; 3 * 1 = 3. Результат: 318.
#
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 621.
'''
R = []
for n in range(100, 1000):
    a, b, c = [int(x) for x in str(n)]
    n1 = a * b
    n2 = b * c
    r = str(min(n1, n2)) + str(max(n1, n2))
    if r == '621':
        R.append(n)
print(max(R))
'''
# Ответ: 732


# Тип 5 №58472
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Если число N делится на 5, в конец двоичной записи добавляется
# двоичный код числа 5, в противном случае в конец двоичной записи добавляется 1.
# 3. Если полученное на предыдущем шаге число делится на 7,
# в конец двоичной записи добавляется двоичный код числа 7, в противном случае в конец двоичной записи добавляется 1.
# 4. Результатом работы алгоритма становится десятичная запись полученного числа R.

# Определите наибольшее возможное значение N, для которого
# в результате работы алгоритма получается R < 1728404.

'''
for n in range(1000000, 1, -1):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.
    if n % 5 == 0:
        s = s + bin(5)[2:]
    else:
        s = s + '1'
    if int(s, 2) % 7 == 0:
        s = s + bin(7)[2:]
    else:
        s = s + '1'
    r = int(s, 2)
    if r < 1728404:
        print(n)
        break
'''

'''
def convert(number: int, system: int):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while number > 0:
        result += alphabet[number % system]
        number //= system
    return result[::-1]


for n in range(1000000, 1, -1):
    s = convert(n, 2)
    if n % 5 == 0:
        s = s + convert(5, 2)
    else:
        s = s + '1'
    if int(s, 2) % 7 == 0:
        s = s + convert(7, 2)
    else:
        s = s + '1'
    r = int(s, 2)
    if r < 1728404:
        print(n)
        break
'''
# Ответ: 432098


# Тип 5 №48453
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. В полученной записи все нули заменяются на единицы, все единицы — на нули.
# Из полученного числа удаляются ведущие нули.
# 3. Результат переводится в десятичную систему счисления.
# 4. Результатом работы алгоритма становится разность исходного числа N и числа,
# полученного на предыдущем шаге.
#
# При каком наименьшем N в результате работы алгоритма получится R=979?
'''
for n in range(1, 100000):
    s = bin(n)[2:]
    s = s.replace('1', '*').replace('0', '1').replace('*', '0')
    r = int(s, 2)
    if n - r == 979:
        print(n)
        break
'''
# Ответ: 1001


# Тип 5 №59798
# На вход алгоритма подается натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1) Строится троичная запись числа N.
# 2) Если N не кратно 3, то остаток от деления на 3 умножается на 5,
# переводится в троичную запись и дописывается в конец числа.
# 3) Результат R переводится в десятичную систему счисления и выводится на экран.
#
# Укажите минимальное число N, после обработки которого автомат получается число, большее 146.
'''
def convert(number: int, system: int):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while number > 0:
        result += alphabet[number % system]
        number //= system
    return result[::-1]


for n in range(1, 10000):
    s = convert(n, 3)
    if n % 3 != 0:
        x = (n % 3) * 5
        s = s + convert(x, 3)
    r = int(s, 3)
    if r > 146:
        print(n)
        break
'''
# Ответ: 8


'''
M = [1, 2, 3, 4]
del M[0]
print(M)  # [2, 3, 4]
'''

'''
s = '1010101110'
s = s + s[-3:]
print(s)  # 1010101110110
'''
# endregion Урок: ************************************************************


# Никита = [5.1, 8.1, 12.1, 14.1]
# КЕГЭ = []
# на следующем уроке:
