# region Домашка: ************************************************************

# № 4414 (Уровень: Базовый)
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10 000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, у которых разность
# элементов кратна 36 и хотя бы один из элементов кратен 13, затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x - y) % 36 == 0 and (x%13==0 or y%13 ==0):
            count += 1
            maxi = max(maxi, abs(x-y))
print(count, maxi)
'''
# Ответ: 212587 9972


# № 6696 (Уровень: Базовый)
# (Д. Статный) В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от -100 000 до 100 000 включительно.
# Найдите такие тройки элементов, сумма которых кратна 2022 и хотя бы одно из чисел неотрицательно.
# В ответ запишите сначала количество таких троек, а затем – максимальную сумму элементов таких троек.
# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = -9999999
for i in range(len(M) - 2):
    x, y, z = M[i], M[i + 1], M[i + 2]
    if (x + y + z) % 2022 == 0 and (x > 0 or y > 0 or z > 0):
        count += 1
        maxi = max(maxi, x + y + z)
print(count, maxi)
'''
# Ответ: 7 76836


# КЕГЭ № 8954 Джобс 02.06.2023 (Уровень: Базовый) (Е. Джобс)
# В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от 1 до 10 000 включительно.
# Определите количество пар последовательности, в которых только одно число кратно 7,
# а сумма элементов пары кратна максимальному элементу последовательности,
# оканчивающемуся на 0F в шестнадцатеричной системе счисления.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
print(hex(1000))  # 0x3e8
print(hex(1000)[-2:])  # e8

M = [int(x) for x in open('17.txt')]
A = max([x for x in M if hex(x)[-2:].upper() == '0F'])
count = 0
maxi = -99999
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    # if ((x %7 == 0 and y%7!=0) or (x %7 != 0 and y%7==0)):
    if ((x % 7 == 0) + (y % 7 == 0)) == 1:
        if (x + y) % A == 0:
            count += 1
            maxi = max(maxi, x + y)
print(count, maxi)
'''
# Ответ: 2 9487


# № 7718 (Уровень: Средний)
# (Грачев Н.) В файле содержится последовательность целых неотрицательных чисел, не превышающих 10000.
# Определите количество пар элементов последовательности, в которых либо сумма элементов кратна 18,
# либо произведение элементов кратно 18. В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную сумму элементов этих пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if ((x*y) % 18 == 0) ^ ((x+y) % 18 == 0):
            count += 1
            maxi = max(maxi, x+y)
print(count, maxi)
'''

# endregion Домашка: ************************************************************

# region Урок: ************************************************************
'''
from itertools import *

def F(x, y, z, w, u):
    return ((z <= w) and (y == (not x))) <= (u == (y or z))


for a1, a2, a3, a4, a5, a6, a7, a8 in product([0, 1], repeat=8):
    table = [(0, a1, 0, 0, 0), (0, a2, a3, 0, 0), (a4, 0, 0, 0, a5), (0, 0, a6, a7, a8)]
    if len(set(table)) == len(table):
        for i in permutations('xyzwu'):
            if [F(**dict(zip(i, r))) for r in table] == [0, 0, 0, 0]:
                print(*i, sep='')



print('x y z w u')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                for u in range(2):
                    F = ((z <= w) and (y == (not x))) <= (u == (y or z))
                    if F == 0:
                        print(x, y, z, w, u)
'''


# todo Стanград почему b+1?
# Исполнитель преобразует число на экране.
# A. Вычесть 1
# B. Умножить на 2
# C. Умножить на 3
# Сколько существует программ, которые преобразуют исходное число 3
# в число 20 и при этом не содержат двух команд A подряд?

'''
def F(a, b, flag):
    if a >= b:
        return a == b
    if flag == 'A':
        return F(a*2, b, 'B') + F(a*3, b, 'C')
    return F(a-1, b, 'A') + F(a*2, b, 'B') + F(a*3, b, 'C')


print(F(3, 20, 0))


def F(a, b, flag):
    if a >= b or flag == 2:
        return a == b
    return F(a-1, b, flag+1) + F(a*2, b, 0) + F(a*3, b, 0)


print(F(3, 20, 0))


def F(a, b, flag):
    if a > b+1 or flag == 2:
        return 0 
    if a == b:
        return 1
    return F(a-1, b, flag+1) + F(a*2, b, 0) + F(a*3, b, 0)


print(F(3, 20, 0))
'''


#todo Статград

# Алгоритм получает на вход натуральное число N и строит по нему новое
# число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. В конец двоичной записи добавляется двоичный код остатка от деления
# числа N на 4.
# 3. Результатом работы алгоритма становится десятичная запись полученного
# числа R.

# Назовем доступными числа, которые могут получиться в результате работы
# этого алгоритма. Например, числа 27 и 58 – доступные.
# Какое наибольшее количество доступных чисел может быть на отрезке,
# содержащем 49 натуральных чисел?
'''
R = [0] * 10000
for x in range(1, 1000):
    s = bin(x)[2:]
    s += bin((x % 4))[2:]
    r = int(s, 2)
    R[r] += 1

print(R)
'''


# Дана программа для редактора:

# ПОКА НЕ нашлось (00)
# заменить (01, 220)
# заменить (02, 1013)
# заменить (03, 120)

# Известно, что в исходной строке A было ровно два нуля – на первом и на
# последнем месте, а после выполнения данной программы получилась строка
# B, содержащая 13 единиц и 18 двоек.
# Какое наибольшее количество цифр могло быть в строке A?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'
            while '00' not in s:
                s = s.replace('01', '220', 1)
                s = s.replace('02', '1013', 1)
                s = s.replace('03', '120', 1)
            if s.count('1') == 13 and s.count('2') == 18:
                print(2+x+y+z)
 '''
# Ответ: 16

# endregion Урок: ************************************************************

# Никита = [5.1, 8.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 25.1]
# КЕГЭ = []
# на следующем уроке:
