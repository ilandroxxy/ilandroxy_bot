print('hello, world!')


# № 11300 (Уровень: Базовый)
# (М. Ишимов) Все 6-буквенные слова, составленные из букв Г, О, Н, Д, У, Б, Ш,
# записаны в алфавитном порядке и пронумерованы.

# Вот начало списка:
# 1. ББББББ
# 2. БББББГ
# 3. БББББД
# 4. БББББН
# 5. БББББО
# 6. БББББУ

# Под каким номером в списке стоит последнее слово с нечётным номером, которое
# не начинается с буквы Б, содержит не менее двух букв Н и не содержит букв У?
'''
s = sorted('ГОНДУБШ')
k = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        if k % 2 != 0:
                            if a != 'Б':
                                if slovo.count('Н') >= 2:
                                    if 'У' not in slovo:
                                        print(k, slovo)
                        k += 1
'''

# Вариант 2
'''
from itertools import product
k = 1
for s in product(sorted('ГОНДУБШ'), repeat=6):
    slovo = ''.join(s)
    if k % 2 != 0:
        if slovo[0] != 'Б':
            if slovo.count('Н') >= 2:
                if 'У' not in slovo:
                    print(k, slovo)
    k += 1
'''
# Ответ: 117625



# Тип 12 №29121
# Дана программа для Редактора:
#
# ПОКА нашлось (111)
#     заменить (111, 2)
#     заменить (222, 11)
#
# Какая строка получится в результате применения приведённой выше программы к строке, состоящей из 77 единиц?
'''
s = '1' * 77
while '111' in s:
    s = s.replace('111', '2', 1)
    s = s.replace('222', '11', 1)
print(s)
'''
# Ответ: 221


# Тип 16 №7372
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими рекуррентными соотношениями:
#
# F(n) = 1 при n = 1;
#
# F(n) = F(n − 1)·n при n ≥ 2.
#
# Чему равно значение функции F(6)?
# В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n - 1) * n


print(F(6))
'''
# Ответ: 720


# Тип 23 №17386
# У исполнителя есть три команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Прибавить 5

# Сколько существует программ, которые преобразуют исходное число 1 в число 18,
# и при этом траектория вычислений содержит число 9 и не содержит числа 11?
'''
def F(a, b):
    if a > b or a == 11:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a * 2, b) + F(a + 5, b)


print(F(1, 9) * F(9, 18))
'''
'''
def F(a, b):
    if a >= b or a == 11:
        return a == b
    return F(a+1, b) + F(a * 2, b) + F(a + 5, b)


print(F(1, 9) * F(9, 18))
'''
# Ответ: 57

