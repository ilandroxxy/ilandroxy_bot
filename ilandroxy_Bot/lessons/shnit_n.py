# region Домашка: ************************************************************

# endregion Домашка: ************************************************************

# region Урок: ************************************************************

# Тип 15 №47219
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наименьшего натурального числа А формула
# (ДЕЛ(x, 2) → ¬ДЕЛ(x, 3))∨(x + A ≥ 100)
# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?
'''
def F(x, A):
    return ((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)


for A in range(1, 1000):
    flag = True
    for x in range(1, 10000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break


# Вариант 2
def F(x, A):
    return ((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)


for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 10000)):
        print(A)
        break


# Вариант 3
def F(x, A):
    return ((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)


R = []
for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 10000)):
        R.append(A)
print(min(R))


# Вариант 4
print(min([A for A in range(1, 1000) if all( (((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)) for x in range(1, 10000))]))
'''
# Ответ: 94


# Тип 15 №59756
# Для какого наименьшего целого неотрицательного числа А выражение
# (x<A) ∨ (y<A) ∨ (y>x−5) ∨ (y<2x−15)
# тождественно истинно?
'''
def F(x, y, A):
    return (x < A) or (y < A) or (y > x-5) or (y < 2*x-15)

for A in range(0, 1000):
    if all(F(x, y, A) for x in range(100) for y in range(100)):
        print(A)
        break
'''
# Ответ: 6


# Тип 15 №34521
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Так, например, 14&5=1110_2 & 0101_2=0100_2=4.
# Для какого наибольшего целого числа А формула
# x&51 = 0 ∨ (x&41 = 0 → x&А = 0)
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной x)?
'''
def F(x, A):
    return (x & 51 == 0) or ((x & 41 == 0) <= (x & A == 0))


R = []
for A in range(0, 1000):
    if all(F(x, A) for x in range(10000)):
        R.append(A)
print(max(R))
'''
# Ответ: 41


# Тип 15 №36028
# На числовой прямой даны два отрезка: P=[17,54] и Q=[37,83].
# Какова наименьшая возможная длина интервала A, что формула
# (x ∈ P) → (((x ∈ Q) ∧ ¬(x ∈ A)) → ¬(x ∈ P))
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    P = 17 <= x <= 54
    Q = 37 <= x <= 83
    A = a1 <= x <= a2
    return P <= ((Q and (not A)) <= (not P))


R = []
M = [x for x in range(15, 90)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 17


# Тип 15 №11119
# На числовой прямой даны два отрезка: P = [20, 50] и Q = [30,65]. Отрезок A таков, что формул
# ¬(x ∈ A) → ((x ∈ P) →¬ (x ∈ Q))
# истинна при любом значении переменной x. Какова наименьшая возможная длина отрезка A?
'''
def F(x, a1, a2):
    P = 20 <= x <= 50
    Q = 30 <= x <= 65
    A = a1 <= x <= a2
    return (not A) <= (P <= (not Q))


R = []
M = [x for x in range(15, 70)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 20


# Тип 15 №34538
# На числовой прямой даны два отрезка: Р = [30, 45] и Q = [40, 55].
# Какова наименьшая возможная длина интервала A, что обе приведённые ниже формулы
# истинны при любом значении переменной х:
#
# ( ¬(x ∈ A) → (¬(x ∈ P)) )
# ((x ∈ Q)→ (x ∈ A))
'''
def F(x, a1, a2):
    P = 30 <= x <= 45
    Q = 40 <= x <= 55
    A = a1 <= x <= a2
    return ((not A) <= (not P)) and (Q <= A)


R = []
M = [x for x in range(25, 60)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 25


# Тип 15 №46973
# На числовой прямой даны два отрезка: P=[69;91] и Q=[77;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
#
# (x∈Q)→(((x∈P)≡(x∈Q))∨(¬(x∈P)→(x∈A)))
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).
'''
def F(x, a1, a2):
    P = 69 <= x <= 91
    Q = 77 <= x <= 114
    A = a1 <= x <= a2
    return Q <= ((P == Q) or ((not P) <= A))


R = []
M = [x / 10 for x in range(60*10, 120*10)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 22.75 -> 22.799 -> 22.90 ->  23


# Поиск делителей числа
import time
start = time.time()

def divisors(num):
    div = []
    for j in range(1, num+1):
        if num % j == 0:
            div.append(j)
    return div


print(divisors(10000000))

end = time.time()
print(end - start)  # 0.286391019821167

import time
start = time.time()


# Правильная функция для поиска делителей числа
def divisors2(num):
    div = set()
    for j in range(1, int(num**0.5)+1):
        if num % j == 0:
            div.add(j)
            div.add(num // j)
    return sorted(div)


print(divisors2(10000000))

end = time.time()
print(end - start)  # 0.00013399124145507812


# endregion Урок: ************************************************************

# todo продолжить изучать 25 номера

# Никита = [5.1, 8.1, 12.1, 14.1, 15.1, 16.1, 23.1]
# КЕГЭ = []
# на следующем уроке:
