# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Считываем файл 17.txt в общий список M:
M = [int(x) for x in open('17.txt')]

# Три основных типа задач 17 номера:
M = [1, 2, 3, 4, 5]

# В данной задаче под парой подразумевается
# два идущих подряд элемента последовательности.
'''
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()
'''
# Вывод:
# 12 23 34 45


# Назовём тройкой три идущих подряд элемента
# последовательности.
'''
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()
'''
# Вывод:
# 123 234 345


#  В данной задаче под парой подразумевается
#  два различных элемента последовательности.
'''
M = [1, 2, 3, 4, 5]
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''
# Вывод:
# 12 13 14 15
# 23 24 25
# 34 35
# 45


# Тип 17 №37368
# В файле содержится последовательность из 10000 целых
# положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество
# пар элементов последовательности, у которых сумма
# элементов кратна 60 и хотя бы один элемент из
# пары делится на 40, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных
# элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
R = []  # Сюда будем складывать все суммы
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 60 == 0:
            if x % 40 == 0 or y % 40 == 0:
                R.append(x + y)
print(len(R), max(R))
'''
# Ответ: 29278 19860


# Тип 17 №37340
# В файле содержится последовательность из 10 000
# целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар
# элементов последовательности, разность которых четна и
# хотя бы одно из чисел делится на 31, затем максимальную
# из сумм элементов таких пар. В данной задаче под парой
# подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
R = []  # Сюда будем складывать все суммы
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x - y) % 2 == 0:
            if x % 31 == 0 or y % 31 == 0:
                R.append(x + y)
print(len(R), max(R))
'''


# Тип 17 №51986
# Файл содержит последовательность целых чисел, по модулю не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
#
# Определите количество таких пар, в которых запись меньшего элемента
# заканчивается цифрой 5, а сумма квадратов элементов пары меньше, чем квадрат
# наименьшего из элементов последовательности, запись которых заканчивается цифрой 5.
# В ответе запишите два числа:
# сначала количество найденных пар, затем максимальную сумму квадратов элементов этих пар.
'''
M = [int(x) for x in open('17.txt')]
D = [x for x in M if str(x)[-1] == '5']
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if str(min(x, y))[-1] == '5':
        if (x ** 2 + y ** 2) < min(D) ** 2:
            R.append(x ** 2 + y ** 2)
print(len(R), max(R))
'''


# Тип 17 №64947
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.
#
# Определите количество троек, для которых выполняются следующие условия:
# — в тройке есть четырёхзначные числа, но не все числа в тройке четырёхзначные;
# — в тройке больше чисел, кратных 5, чем чисел, кратных 3;
# — сумма элементов тройки больше максимального элемента последовательности,
# запись которого заканчивается на 832. (Гарантируется, что в последовательности
# есть хотя бы один элемент, запись которого заканчивается на 832.)
#
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-3:] == '832']
R = []
for i in range(len(M)-2):
    x, y, z = M[i:i+3]
    D = [a for a in (x, y, z) if len(str(abs(a))) == 4]
    if 1 <= len(D) < 3:
        D_5 = [a for a in (x, y, z) if a % 5 == 0]
        D_3 = [a for a in (x, y, z) if a % 3 == 0]
        if len(D_5) > len(D_3):
            if (x + y + z) > max(A):
                R.append(x + y + z)
print(len(R), max(R))
'''


# Тип 17 №52188
# Файл содержит последовательность целых чисел, по модулю не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.

# Определите количество таких пар, в которых запись меньшего
# элемента заканчивается цифрой 3, а сумма квадратов элементов пары меньше,
# чем квадрат наименьшего из элементов последовательности, запись которых
# заканчивается цифрой 3. В ответе запишите два числа:
# сначала количество найденных пар, затем максимальную сумму квадратов элементов этих пар.
'''
M = [int(x) for x in open('17.txt')]
D = [x for x in M if str(x)[-1] == '3']
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if str(min(x, y))[-1] == '3':
        if (x ** 2 + y ** 2) < min(D) ** 2:
            R.append(x ** 2 + y ** 2)
print(len(R), max(R))
'''


# Тип 17 №59722
# В файле находится ряд целых чисел.
# Определите количество троек элементов последовательности, в которой
# только одно число трехзначное, а сумма тройки меньше наибольшего числа,
# оканчивающегося на 17. В данной задаче под тройкой подразумевается три
# идущих подряд элемента последовательности.

M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-2:] == '17']
cnt = 0
for i in range(len(M)-2):
    x, y, z = M[i:i+3]
    D = [a for a in (x, y, z) if len(str(abs(a))) == 3]
    if len(D) == 1:
        if (x + y + z) < max(A):
            cnt += 1
print(cnt)


''' Публикую дополнительный вариант решения: '''
# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Вика = [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 23, 25]
# КЕГЭ  = [2, 3, 6, 14]
# на следующем уроке:
