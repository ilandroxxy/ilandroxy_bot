# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

X = 5  # X - переменная (переменная - это удобный способ взаимодействия с данными)
# print(X, type(X))  # <class 'int'>

# Типы данных переменных
'''
a = 5  # int (integer) - целочисленные значения

b = 5.0  # float (число с плавающей точкой) - вещественные числа (дроби)
print(type(7 / 2))  # <class 'float'>

c = '5'  # str (string) - строчный тип данных, хранит в себе символы, цифры, буквы, слова, текста, ...
print(a * 4, c * 4)  # 20 5555

d1 = True  # bool (Boolean) - логические значения Истина и Ложь
d2 = False
print(4 == 10)  # False
'''

'''
x = 7
if x % 2 == 0:  # /  //   % 
    print('Четный')
else:
    print('Нечетный')
'''

# Типы данных коллекций (последовательностей)
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print(M[1])  # b
print(f'Первый элемент списка: {M[0]} \n'
      f'Последний элемент списка: {M[-1]}')

# Первый элемент списка: a
# Последний элемент списка: e

A = [1, 2, 3]  # list (список)
# В списке может храниться неограниченное кол-во элементов, разных типов данных
# Каждый элемент списка имеет порядковый номер: индекс
# Индексы слева-направо считаются с нуля, а спарва-налево считаются с -1
# Элементы списка можно менять через его индексы

B = (1, 2, 3)  # tuple (кортеж)
# Все тоже самое, что и у списков, кроме: НЕЛЬЗЯ ИЗМЕНЯТЬ ЭЛЕМЕНТЫ


C = {1, 2, 3}  # set (множество)
# В множестве не может быть двух одинаковых элементов
print(set([1, 2, 3, 1, 2, 3]))  # {1, 2, 3}


D = {1: 'один', 'два': 2, 3: 'три'}  # dict (словарь)
print(D[1])  # один
print(D['два'])  # 2
'''

'''
M = [2, 2.5, '334', True, 2 + 2, 7 / 2, '3' * 3, 4 == 10, [1, 2, 3], (1, 2, 3), {1, 2, 3}, {1: 'один', 'два': 2, 3: 'три'}]
for x in M:
    print(x, type(x))
    # 5 <class 'int'>
    # 2 <class 'int'>
    # 2.5 <class 'float'>
    # 334 <class 'str'>
    # True <class 'bool'>
    # 4 <class 'int'>
    # 3.5 <class 'float'>
    # 333 <class 'str'>
    # False <class 'bool'>
    # [1, 2, 3] <class 'list'>
    # (1, 2, 3) <class 'tuple'>
    # {1, 2, 3} <class 'set'>
    # {1: 'один', 'два': 2, 3: 'три'} <class 'dict'>
'''

# Конвертация типов данных
'''
a = 5
print(a, type(a))  # 5 <class 'int'>

a = str(a)
print(a, type(a))  # 5 <class 'str'>

a = float(a)
print(a, type(a))  # 5.0 <class 'float'>

a = int(a)
print(a, type(a))  # 5 <class 'int'>


A = [1, 2, 3, 1, 2, 3]
print(A, type(A))  # [1, 2, 3, 1, 2, 3] <class 'list'>

A = tuple(A)
print(A, type(A))  # (1, 2, 3, 1, 2, 3) <class 'tuple'>

A = set(A)
print(A, type(A))  # {1, 2, 3} <class 'set'>

A = list(A)
print(A, type(A))  # [1, 2, 3] <class 'list'>
'''

# Ввод данных с клавиатуры
'''
x = input()  # функция input() - принимает строку на входе с клавиатуры
print(x, type(x))  # <class 'str'>

x = int(input())  
print(x, type(x))  # <class 'int'>
'''

# Базовая арифметика
'''
a = 7
b = 2

print(f'{a} + {b} = {a + b}')  # 7 + 2 = 9
print(f'{a} - {b} = {a - b}')  # 7 - 2 = 5
print(f'{a} * {b} = {a * b}')  # 7 * 2 = 14
print()
print(f'{a} / {b} = {a / b} - Вещественное деление (обычное деление, результат: float)')  # 7 / 2 = 3.5
print(f'{a} // {b} = {a // b} - Целочисленное деление (только целая часть)')  # 7 // 2 = 3
print(f'{a} % {b} = {a % b} - Остаток от деления (от обыкновенной дроби) ')  # 7 % 2 = 1
'''

# endregion Урок: ******************************************************************

# Вика = []
# КЕГЭ  = []
# на следующем уроке:
