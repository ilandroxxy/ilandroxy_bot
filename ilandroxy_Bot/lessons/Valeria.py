# Домашка: 17.10

# Задание 14 № 26988
'''
# Значение арифметического выражения: 16  8 * 4  20 - 4  5 - 64 — записали в системе счисления с основанием 4.
# Сколько цифр «3» содержится в этой записи?

# Решение:
x = 16  8 * 4  20 - 4  5 - 64
M = []
while x > 0:
    M.append(x % 4)
    x //= 4
M.reverse()
print(M.count(3))

# Ответ: 32
'''

# Задание 14 № 8664
import distutils.util

'''
# Сколько единиц содержится в двоичной записи значения выражения: 8  2020 + 4  2017 + 26 - 1?

# Решение:

x = 8  2020 + 4  2017 + 26 - 1
M = []
while x > 0:
    M.append(x % 2)
    x //= 2
M.reverse()
print(M.count(1))

# Ответ: 5
'''


# Задание 5 № 26949
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число следующим образом.
# 1)Строится двоичная запись числа N.
# 2)К этой записи дописывается справа два нуля, если число четное, или две единицы в противном случае
# Укажите максимальное число N, после обработки которого с помощью этого алгоритма получается число менее 94.
# В ответе это число запишите в десятичной системе.

# Решение:

for n in range(1000, 0, -1):
    temp = n

    N = []
    while n > 0:
        N.append(n % 2)
        n //= 2
    N.reverse()
    # print(N)

    if temp % 2 == 0:
        N.append(0)
        N.append(0)
    else:
        N.append(1)
        N.append(1)

    res = 0
    N.reverse()
    for i in range(0, len(N)):
        res += N[i] * 2 ** i

    if res < 94:
        print(temp)
        break
'''

'''
print(bin(8))
print(bin(8)[2:])

for i in range(100, 0, -1):
    s = bin(i)[2:]  # перевод в двоичную систему
    
    if i % 2 == 0:
        s += "00"
    else:
        s += "11"
        
    r = int(s, 2)  # перевод в десятичную систему
    
    if r < 94:
        print(i)
        break
'''


# Задание 5 № 15818
'''
# Автомат обрабатывает натуральное число N по следующему алгоритму:
# 1. Строится двоичная запись числа N.
# 2. Складываются все цифры полученной двоичной записи.
# В конец записи (справа) дописывается остаток от деления суммы на 2.
# 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
# 4. Результат переводится в десятичную систему и выводится на экран.

# Пример. Дано число N = 13. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 1101.
# 2. Сумма цифр двоичной записи 3, остаток от деления на 2 равен 1, новая запись 11011.
# 3. Сумма цифр полученной записи 4, остаток от деления на 2 равен 0, новая запись 110110.
# 4. На экран выводится число 54.

# Какое наименьшее число, большее 93, может появиться на экране в результате работы автомата?

# Решение:

for n in range(1, 1000):
    temp = n

    N = []
    while n > 0:
        N.append(n % 2)
        n //= 2
    N.reverse()
    # print(N)

    for _ in range(2):
        summ = sum(N)
        N.append(summ % 2)

    res = 0
    N.reverse()
    for i in range(0, len(N)):
        res += N[i] * 2 ** i

    if res > 93:
        print(res)
        break
'''



# Тип 6 № 47245
'''
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
#
# Повтори 5 [Вперёд 9 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом.
# Точки на линии учитывать не следует.


import turtle as t
t.left(90)
t.speed(10)
l = 60
for _ in range(6):
    t.forward(9 * l)
    t.right(120)

t.pu()
t.color('red')
for x in range(0, 10):
    for y in range(0, 10):
        t.goto(x * l, y * l)
        t.dot(2)

t.done()
'''
# Ответ: 30



# Черепахе был дан для исполнения следующий алгоритм:
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Повтори 4 [Вперёд 12 Направо 90]
# Повтори 3 [Вперёд 12 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом: Повтори 4 [Вперёд 12 Направо 90]
#
# и находиться вне области, ограниченной линией, заданной данным алгоритмом: Повтори 3 [Вперёд 12 Направо 120]. Точки на линии учитывать не следует.


import turtle as t
'''
t.speed(20)
t.left(90)
l = 40

for _ in range(4):
    t.fd(12 * l)
    t.right(90)

t.color('red')

for _ in range(3):
    t.fd(12 * l)
    t.right(120)

t.color('blue')
t.pu()
for x in range(0, 13):
    for y in range(0, 13):
        t.goto(x * l, y * l)
        t.dot(3)
t.done()
# Ответ: 65
'''

# Тип 8 № 3207
'''
# Все 5-буквенные слова, составленные из букв К, О, Р, записаны в алфавитном порядке и пронумерованы.
# Вот начало списка:
# 1. ККККК
# 2. ККККО
# 3. ККККР
# 4. КККОК
#
# Запишите слово, которое стоит под номером 238.

s = 'КОР'
count = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    # print(count, temp)
                    if count == 238:
                        print(temp)
                    count += 1
'''
# Ответ: Р Р Р О К





# todo: Валерия = [2, 5, 14, 6], на следующем уроке: разбирать теорию строк, методы split() , join() и 8, 12 номера