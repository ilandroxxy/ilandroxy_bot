# Разбор домашки 22.09

#Задание 2, Среднее число
'''
M = [1, 32, 5, 47, 54, 324, 23, 534, 6]
print(max(M))  # функция возвращает наибольший элемент из списка (массива)
print(sum(M))  # Функция возвращает сумму элементов списка

a = int(input('a: '))
b = int(input('b: '))
c = int(input('c: '))

# if a > b > c or a < b < c:
#     print(b)
# elif b > a > c or b < a < c:
#     print(a)
# else:
#     print(c)

sred = (a + b + c) - (max(a, b, c) + min(a, b, c))
print(f'Сумма цифра = {a + b + c}\nМаксимальный элемента = {max(a, b, c)}\n'
      f'Минимальный элемента = {min(a, b, c)}\nСреднее значение = {sred}')
'''

#Задание 1, Yes or No
'''
a = int(input())
if a % 2 != 0:
    print("Yes")
elif a % 2 == 0 and a >= 2 and a<= 5:  # 2 <= a <= 5
    print("No")
elif a % 2 == 0 and a>= 6 and a<= 20: # 6 <= a <= 20
    print("Yes")
elif a % 2 == 0 and a > 20:
    print("No")
'''

#Задание 3, Цветовой микшер
'''
a = input()
b= input()
if a == b and (a == "Красный" or a == "Синий" or a == "Желтый"):
    print(a)
elif (a == "Красный" and b == "Синий") or (a == "Синий" and b == "Красный"):
    print("Фиолетовый")
elif (a == "Красный" and b == "Желтый") or (a == "Желтый" and b == "Красный"):
    print("Оранжевый")
elif (a == "Желтый" and b == "Синий") or (a == "Синий" and b == "Желтый"):
    print("Зеленый")
else:
    print("Ошибка цвета")
'''

# Циклы в Python
# Ключевые слова: while, for, range, in, break, continue, flag

# Две технологии циклов: while, for
# Типов циклов много, например:
# 1. Повтори n раз
# 2. Повторяй пока условие истинно
# 3. Повторяй действие от a до b раз
# 4. Бесконечный цикл
# ...


# цикл for, это цикл повторения действий сколько-то раз
# range - это диапазон по которому двигается переменная i

# for по индексу
'''
for i in range(5):  # по сути повторит действие 5 раз
    print(i)  # но выведет числа от 0 до 4  -> [0, 5)

for i in range(1, 5):  # по сути повторит действие 4 раз
    print(i)  # (левый входит, правый нет) -> [1, 5)

for i in range(0, 10, 3):  # [0, 10) -> выводит через каждый ШАГ
    print(i)  # 0 3 6 9

M = [1, 2, 3, 4, 5]
#    0  1  2  3  4
print(M[2])  # в списках нумерация элементов начинается с 0, поэтому for - это цикл идеальный для работы с списками.
print('Длина списка M: ', len(M))  # Выведет: 5
for i in range(0, len(M)):  # [0, 5)
    print(M[i], end=' ')
print()
'''

'''
# for по элементу
for x in M:
    print(x**2, end=' ')  # пробежали список и каждый его элемент возвели в квадрат
print()

s = '12345'
for x in s:
    print(x*3, end=' ')  # for может двигаться не только по спискам, так же по строкам, кортежам, словарям
'''


# while - цикл выполняется, только если условие истинно
'''
for i in range(0, 10+1, 2):  # добавили +1, чтобы входила 10тка
    print(i)

j = 0
while j <= 10:  # <= аналог +1 как в for
    print(j)
    j += 2  # step

flag = True
x = 10
while flag == True:
    print(x)
    if x == 20:
        flag = False
    x += 1
'''


'''
y = 0
while True:  # это просто бесконечный цикл
    y += 1
    print(y)
'''

'''
import random

password = 'qwerty'
count = 0
while True:
    pas = input("Введите пароль: ")
    if pas == password:
        break  # способ прервать цикл и выйти из него
    print("По-моему неверный пароль, попробуйте снова!")
    count += 1
    if count == 3:
        print('Пройдите капчу! Вы не робот?')
        a = random.randint(1, 100)
        b = random.randint(1, 100)
        print(f"Решите задачу!\n{a} + {b} = ")
        res = int(input('Ответ: '))
        if res != a + b:
            print("Тут бот!")
            break
        else:
            print("Даю еще попытку : )")
            сount = 0
print('Weclome')
'''

# Задача #17 старые типы (Количество и максимальное значение)
'''
# Рассматривается множество целых чисел, принадлежащих числовому отрезку [4668; 10414],
# которые делятся на 4 и не делятся на 7, 17.
# Найдите количество таких чисел и максимальное из них.
# В ответе запишите два целых числа: сначала количество, затем максимальное число.
#
# Для выполнения этого задания можно написать программу или воспользоваться редактором электронных таблиц.

count = 0
maxi = 0
summ = 0
mini = 0
flag = True # по сути регулировщик который дает пройти или нет!
for i in range(4668, 10414+1):
    if i % 4 == 0 and i % 7 != 0 and i % 17 != 0:
        if flag == True:
            mini = i
            flag = False
        count += 1
        summ += i
        maxi = i
print(f'count = {count}, maxi = {maxi}, summ = {summ}, mini = {mini}')
'''


# Тип 6 № 37141
'''
# Какое максимальное значение переменной s, подаваемое на вход программе, для
# которого в результате работы программы на экран будет выведено значение 64?

for i in range(0, 1000):
    n = 1024
    s = i
    while s >= 5:
        s = s - 5
        n = n // 2
    if n == 64:
        print(i, n)  # n == 64
'''
# Ответ: 24


# Тип 6 № 33751
'''
# Определите, при каком наименьшем введённом значении переменной s программа выведет число 66.

for i in range(6, 1000):
    s = i
    s = (s + 1) // 7
    n = 36
    while s < 2050:
        s = s * 2
        n = n + 3
    if n == 66:
        print(i, n)
        # break - можем написать так, чтобы просто вывести первое число
'''
# Ответ: 20


for i in range(0, 10+1):
    if i % 2 == 0:
        continue  # по сути находя четные числа мы просто пропускаем их вывод - переходя на новую итерацию цикла (шаг)
    print(i)









