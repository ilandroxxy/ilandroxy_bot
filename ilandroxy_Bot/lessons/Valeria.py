# На следующий урок: счет факториала числа, немного про библиотеки в Python, ввод списка с клавиатуры, системы счисления + 14 номер


# Домашнее задание 29.09.

# Задание 2 №3346999
'''
# Логическая функция F задаётся выражением (x ≡ (y → z)) ∧ (¬w → (x ≡ y)).

# Решение:

print("x y z w")
for x in range(2):
    for y in range(2):
        for z in range(0, 2):
            for w in range(0, 2):
                F = (x == (y <= z)) and ((not(w)) <= (x == y))
                if F == True:
                  print(x, y, z, w, F)
'''
# Не получился
# Ответ: ywzx


# Задание 2 №33504
'''
#Логическая функция F задаётся выражением ((x ≡ ¬y) → (y ∧ ¬z)) ∨ (z ∧ ¬w)

# Решение:

print("x y z w")
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = ((x == (not(y))) <= (y and (not(z)))) or (z and (not(w)))
                if F == False:
                    print(x, y, z, w, F)
'''
# Не получился


# Задание 22 №11249
# Получив на вход число x, этот алгоритм печатает число M. Известно, что x > 200.
# Укажите наименьшее такое (т.е. большее 200) число x, при вводе которого алгоритм печатает 60.

# Решение:
'''
for i in range(201, 10000):
    x = i
    L= x-30
    M = x+30
    while L != M:
        if L > M:
            L = L - M
        else:
            M = M - L
    if M == 60:
       print(i, M)
'''
#Ответ: 210


# Задание 22 № 36877
# Укажите наименьшее значение x, при вводе которого программа выведет число 10.

# Решение:
'''
for i in range(6, 10000):
    x = i
    a = 3 * x + 23
    b = 3 * x - 17
    while a != b:
        if a > b:
            a -= b
        else:
            b -= a
    if a == 10:
        print(a, i)
'''
# Oтвет: 9





# Тип коллекции – СПИСОК  (list)

'''
M = []  # Пустой список
print(M, len(M))  # len() – это функция возвращающая длину списка, строки, кортежа...(длина = кол-во элементов в списке)


A = [1, 2, 3]  # У каждого элемента в списке есть порядковый номер - ИНДЕКС, счет начинается с НУЛЯ
#    0  1  2

print(A[0])  # Можем брать значение элемента списка

A[1] = '*'  # Списки - изменяемая коллекция, соответственно через индекс мы можем поменять значение элемента
print(A)
'''

# Пример:
'''

B = [1, 2, 3, 4, 5, 6, 7, 8]
#    0  1  2  3  4  5  6  7
print(B)

# Через цикл for мы можем пробегать список через индексы и менять его значения
for i in range(0, len(B)):  # [0, 8)  , то есть i - пробегает по индексам
    B[i] = B[i] ** 2
print(B)

# Такой цикл форик, только пробегает элементы списка, менять их значение без индексов нельзя
for x in B:
    print(x)
'''

# Список может содержать любые типы данных
'''
M = [1, 2.5, '3', True, [1, 2, 3], (1, 2, 3), (4 + 5) ** 2]  # Список может содержать любые типы данных
print(M)

for x in M:  # По сути переменная x принимает значение элемента списка
    print(type(x))
'''

# Полезные функции для работы со списками:
'''
A = [1, 2, 3, 1, 2, 6, 7, 4, 3, 4, 2]
print(len(A))
print(sum(A))
print(max(A))
print(min(A))
'''

# Методы = функция, но функция независима, а методы направлены на работу с определенным объектом (типом данных)

# Методы списков:
'''
A = [1, 2, 3, 4, 5, 6, 7]
A.reverse()  # переворачивает список
print(A)

A.append(0)
A.append(1)  # append - добавляет новый элемент в конец списка
A.append(3)
A.append(3)
print(A)

print(A.count(1))  # показывает кол-во вхождений элемента в список

A.sort()  # Отсортировал список по возрастанию
print(A)

print(A.index(3))  # показывает индекс первого найденного элемента по запросу (слева)

B = A  # таким образом появилась связь между списками - по сути они одинаковые
print('B: ', B)
A.append(11)

print('B: ', B)
B = A.copy()  # Если хотим сделать независимую копию
A.append(22)

print('B: ', B)


print('A: ', A)
x = A.pop(11)  # метод pop убрал элемент из списка и положил в переменную
print('A после поп: ', A)  
print('x: ', x)
'''

'''
M = []
for x in range(1, 1000):
    if x % 2 == 0:
        M.append(x)
print(M)
'''


'''
A = []
for i in range(201, 10000):
    x = i
    L= x-30
    M = x+30
    while L != M:
        if L > M:
            L = L - M
        else:
            M = M - L
    if M == 60:
       A.append(i)
print(min(A))
'''

'''
# Получить сумму цифр введенного числа
x = int(input('X: '))

M = []
while x > 0:
    M.append(x % 10)
    x //= 10
print(M, sum(M))

# Получить произведение всех чисел?
res_pr = 1
for x in M:
    res_pr *= x
print(res_pr)  # еще и посчитали факториал числа
'''


# 5! = 1 * 2 * 3 * 4 * 5  факториал числа 5 = 120










