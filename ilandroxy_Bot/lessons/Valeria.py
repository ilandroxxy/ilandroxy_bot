
# region Домашка: ******************************************************************

# № 6885 OpenFIPI (Уровень: Базовый)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
#
# 2. К этой записи дописываются справа ещё несколько разрядов по следующему правилу:
#
# а) если N чётное, то к нему справа приписываются два нуля, а слева единица;
#
# б) если N нечётное, то к нему справа приписывается в двоичном виде сумма цифр его двоичной записи;
#
# Полученная таким образом запись (в ней как минимум на один разряд больше,
# чем в записи исходного числа N) является двоичной записью искомого числа R.
#
# Например, исходное число 410 = 1002 преобразуется в число 1100002 = 4810,
# а исходное число 1310 = 11012 преобразуется в число 1101112 = 5510.
#
# Укажите такое число N, для которого число R является наименьшим среди чисел, превышающих 190.
# В ответе это число запишите в десятичной системе счисления
'''
R = []
for n in range(1, 1000):
    temp = n
    N = []
    while n > 0:
        N.append(n % 2)
        n //= 2
    N.reverse()

    for _ in range(1):
        if temp % 2 == 0:
            N.append(0)
            N.append(0)
            N.reverse()
            N.append(1)
            N.reverse()
        else:
            summ = sum(N)
            B = []
            while summ > 0:
                B.append(summ % 2)
                summ //= 2
            B.reverse()

            N += B
    res = 0
    N.reverse()
    for i in range(0, len(N)):
        res += N[i] * 2 ** i

    if res > 190:
        R.append([res, temp])

print(min(R))
'''

# Вариант 2
'''
R = []
for n in range(1, 1000):
    s = bin(n)[2:]

    if n % 2 == 0:
        s = '1' + s + '00'
    else:
        s += bin(sum([int(i) for i in s]))[2:]

    r = int(s, 2)

    if r > 190:
        R.append([r, n])
print(min(R))
'''
# Показать ответ: 16


# № 7264 OpenFIPI (Уровень: Базовый)
# Значение арифметического выражения
#
# 343515 – 6 ∙ 49520 + 5 ∙ 49510 – 3 ∙ 7530 – 550
#
# записали в системе счисления с основанием 7. Определите количество цифр 6 в записи этого числа.
'''
x = 343**515 - 6 * 49**520 + 5 * 49**510 - 3 * 7 ** 530 - 550
M = []
while x > 0:
    M.append(x % 7)
    x //= 7
M.reverse()
print(M.count(6))
'''
# Показать ответ: 1519


# № 7265 OpenFIPI (Уровень: Базовый)
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наименьшего натурального числа А формула
#
# (ДЕЛ(x, 2) → ¬ДЕЛ(x, 3)) \/ (x + A ≥ 100)
#
# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?.
'''
def F(x, A):
    return ((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)

for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 10000)):
        print(A)
        break
'''
# Показать ответ: 94


# 12 № 7262 OpenFIPI (Уровень: Базовый)
# Исполнитель Редактор получает на вход строку символов и преобразовывает её.
#
# На вход приведённой ниже программы поступает строка из 180 цифр,
# содержащая по 60 цифр 4, 6 и 8, расположенных в произвольном порядке.
#
# Определите, какие цифры будут находиться на 25-м, 75-м и 150-м местах строки,
# получившейся в результате выполнения программы.
# Цифры в строке нумеруются последовательно слева направо, самая левая имеет номер 1, следующая – номер 2 и т.д.
#
# В ответе запишите три полученные цифры подряд без пробелов и разделителей
# в порядке возрастания номеров их мест в получившейся строке.
# Так, например, если бы на 25-м месте стояла цифра 1, на 75-м – 2, а на 150-м – 3, то был бы ответ 123.
#
# НАЧАЛО
# ПОКА нашлось (46) ИЛИ нашлось (84) ИЛИ нашлось (86)
# ЕСЛИ нашлось (46)
# ТО заменить (46, 64)
# КОНЕЦ ЕСЛИ
# ЕСЛИ нашлось (84)
# ТО заменить (84, 48)
# КОНЕЦ ЕСЛИ
# ЕСЛИ нашлось (86)
# ТО заменить (86, 68)
# КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
# КОНЕЦ
'''
s = '8' * 60 + '4' * 60 + '6' * 60

while '46' in s or '84' in s or '86' in s:
    if '46' in s:
        s = s.replace('46', '64', 1)
    if '84' in s:
        s = s.replace('84', '48', 1)
    if '86' in s:
        s = s.replace('86', '68', 1)

print(s[25-1], s[75-1], s[150-1])
'''
# Показать ответ: 648


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# endregion Урок: ******************************************************************



# todo: Валерия = [1, 2, 3, 5, 6, 7, 8, 9+, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25]
# на прошлом уроке: Прорешивали 1, 2 номер с КЕГЭ
# на следующем уроке:
