
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************


# 12 номер Статград
'''
# Дана программа для редактора:
# ПОКА НЕ нашлось (00)
    # заменить (012, 30)
    # ЕСЛИ нашлось (011)
        # ТО
        # заменить (011, 20)
        # заменить (022, 40)
    # ИНАЧЕ
        # заменить (01, 10)
        # заменить (02, 101)
    # КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА

# Известно, что исходная строка A содержала ровно два нуля – на первом и на
# последнем месте, а также по 10 единиц и двоек. После выполнения данной
# программы получилась строка B, содержащая 7 единиц и 5 двоек. Какое
# наименьшее количество троек может быть в строке B?

# from itertools import *

# import itertools
# print(itertools.repeat.__doc__)
#
# print(len.__doc__)


import itertools
mini = 9999
for s in itertools.product('12', repeat=20):
    s = '0' + ''.join(s) + '0'
    if s.count('1') == s.count('2'):
        while '00' not in s:
            s = s.replace('012', '30', 1)
            if '011' in s:
                s = s.replace('011', '20', 1)
                s = s.replace('022', '40', 1)
            else:
                s = s.replace('01', '10', 1)
                s = s.replace('02', '101', 1)
        if s.count('1') == 7 and s.count('2') == 5:
            mini = min(mini, s.count('3'))
print(mini)
'''
# Ответ: 3



# (No 5420) (Е. Джобс)
'''
# Дана программа для исполнителя Редактор:
#       ПОКА нашлось(111) или нашлось(222)
#         ЕСЛИ нашлось(111)
#           ТО заменить(111,22)
#           ИНАЧЕ заменить(222,11)
#         КОНЕЦ ЕСЛИ
#       КОНЕЦ ПОКА

# На вход программе подана строка из 203 единицы и 1 двойку (точное расположение двойки в строке неизвестно).
# Найдите строку наибольшей длины, которая может получиться в результате работы алгоритма.

import itertools as i
maxi = -9999
for s in i.product('12', repeat=204):
    if s.count('2') == 1:
        s = ''.join(s)
        while '111' in s or '222' in s:
            if '111' in s:
                s = s.replace('111', '22', 1)
            else:
                s = s.replace('222', '11', 1)
        if maxi < len(s):
            maxi = len(s)
            print(s, maxi)
'''
# Ответ: 2212122



# Тип 12 № 27383
'''
# Дана программа для Редактора:
# ПОКА нашлось (12)
#   заменить (12, 4)
# КОНЕЦ ПОКА

# Исходная строка содержит десять единиц и некоторое количество двоек, других цифр нет, точный порядок расположения единиц и двоек неизвестен.
# После выполнения программы получилась строка с суммой цифр 25. Какое наименьшее количество двоек могло быть в исходной строке?

import itertools as i
mini = 9999
for x in range(1, 10):
    for s in i.product('12', repeat=10+x):
        if s.count('1') == 10:
            s = ''.join(s)
            while '12' in s:
                s = s.replace('12', '4', 1)
            if sum([int(i) for i in s]) == 25:
                mini = min(mini, x)
print(mini)
'''
# Ответ: 5


# Задание 17 Статград
'''
# Файл содержит последовательность целых чисел, по модулю не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество таких пар, в которых запись меньшего элемента
# заканчивается цифрой 5, а сумма квадратов элементов пары меньше, чем квадрат
# наименьшего из элементов последовательности, запись которых заканчивается цифрой 5.
# В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную сумму квадратов элементов этих пар.

A = [int(i) for i in open('17.txt') if int(i) % 10 == 5]
mini = min(A)

M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    # if str(min(M[i], M[i+1]))[-1] == '5':
    # if min(M[i], M[i + 1]) % 10 == 5:
    if abs(min(M[i], M[i + 1])) % 10 == 5:
        if (M[i] ** 2 + M[i+1] ** 2) < mini ** 2:
            count += 1
            maxi = max(maxi, M[i] ** 2 + M[i+1] ** 2)
print(count, maxi)
'''
# 403 99805561

# todo: перерешать
# Исполнитель преобразует число на экране.
# 1. Прибавить 1
# 2. Умножить на 2

# Сколько существует программ, которые преобразуют исходное число 1
# в число 14, и при этом никакая команда не повторяется более двух раз
# подряд?

#
# def F(a, b, t1):
#     if a > b:
#         return 0
#     elif a == b:
#         return 1
#     else:
#         if t1 == 0:
#             return F(a+1, b, 1) + F(a*2, b, 2)
#         elif t1 == 1:
#             return F(a*2, b, 2)
#         elif t1 == 2:
#             F(a + 1, b, 1)
#
# print(F(1, 14, 0))


# Задача 24
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите длину самой длинной цепочки символов, которая начинается и заканчивается буквой F,
# а между двумя последовательными буквами F содержит не более двух букв A и произвольное количество других букв.
'''
s = open('24.txt').readline()
s = s.replace('F', ' ')
M = [len(i) for i in s.split() if i.count('A') <= 2]
print(max(M)+2)
'''


'''
s = open('24.txt').readline()
s = s.replace('F', ' ')
M = [i for i in s.split() if i.count('A') <= 2]
maxi = 0
for x in M:
    if maxi < len(x):
        maxi = len(x)
        print(x, maxi)
print(maxi + 2)
'''

'''
s = open('24.txt').readline()
count = 0
maxi = 0
count_a = 0
for i in range(0, len(s)):
    if s[i] == 'F':
        if maxi < count and count_a <= 2:
            maxi = count
        count = 0
        count_a = 0
    else:
        count += 1
        if s[i] == 'A':
            count_a += 1
print(maxi+2)
'''

# Задача номер 25
'''
# Маска числа – это последовательность цифр, в которой могут встречаться специальные символы «?» и «*».
# Символ «?» означает ровно одну произвольную цифру,
# символ «*» означает произвольную (в том числе пустую) последовательность цифр.

# Найдите все натуральные числа, не  превышающие 10**9, которые
# соответствуют маске 12*63?5? и при этом без остатка делятся на 3123.
# В ответе запишите все найденные числа в порядке возрастания.

print(10**9)
print('12**63?5?')

M = [i for i in range(0, 100)]
M.append('')

for x in '0123456789':
    for y in '0123456789':
        for z in M:
            A = int(f'12{z}63{x}5{y}')
            if A % 3123 == 0:
                print(A)
'''

# Ответ:
# 125063658
# 124763850
# 12363957

# Тип 9 № 38588
'''
# Откройте файл электронной таблицы, содержащей в каждой строке три натуральных числа.
# Выясните, какое количество троек чисел может являться сторонами треугольника, то есть удовлетворяет неравенству треугольника.
# В ответе запишите только число.

count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    if M[2] < M[1] + M[0]:
        count += 1
print(count)
'''


# Тип 9 № 35983
'''
# Электронная таблица содержит результаты ежечасного измерения температуры воздуха на протяжении трёх месяцев.
# Определите, сколько раз за время измерений максимальная суточная температура оказывалась выше среднесуточной на 7 и более градусов.

count = 0
for s in open('9.txt'):
    M = [float(i) for i in s.replace(',', '.').split()]
    if max(M) - (sum(M) / len(M)) >= 7:
        count += 1
print(count)
'''
# Ответ: 66


# Тип 9 № 36022
'''
# Откройте файл электронной таблицы, содержащей вещественные числа —
# результаты ежечасного измерения температуры воздуха в течение трёх месяцев.
# Найдите разность между максимальной температурой воздуха с 1 апреля по 31 мая с 9:00 до 12:00 включительно и
# средним значением температуры воздуха в эти часы в апреле и мае, используя данные, представленные в таблице.

A = []
for s in open('9.txt'):
    M = [float(i) for i in s.replace(',', '.').split()]
    A += M

print(max(A) - (sum(A) / len(A)))
'''
# Ответ: 5

# Как генерить текстовый файл для 24 номера.
'''
import random
alphabet = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])

with open('valeria24.txt', 'w') as file:
    message_text = ''
    for _ in range(10**6):
        message_text += random.choice(alphabet)
    file.write(message_text)
'''

# Как генерить текстовый файл для 17 номера.
'''
import random
with open('valeria17.txt', 'w') as file:
    message_text = ''
    for _ in range(10000):
        message_text += f'{random.randint(1000, 9999)}\n'
    file.write(message_text)
'''




# endregion Урок: ******************************************************************



# todo: Валерия = [2, 5, 6, 8, 9.1, 12, 14+, 15+, 16, 17, 23, 24, 25]
# на прошлом уроке: Дорешали первый вариант статграда, разобрали 12 номер через itertools, поразбирали 9 номер через Python
# на следующем уроке:
