
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# № 6998 (Уровень: Средний)
# Генератор паролей составляет пароль длиной 7 символов из набора букв {Q, W, E, R, T, Y, N, O}.
#
# При генерации пароля отбрасываются пароли, в которых содержится подстрока QWERTY
# и все пароли, в которых один и тот же символ встречается более чем 2 раза.
#
# Сколько всего различных паролей может составить данный генератор?


# s = sorted('QWERTYNO')
# Вариант 1
'''
s = 'QWERTYNO'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        for g in s:
                            slovo = a + b + c + d + e + f + g
                            if 'QWERTY' not in slovo:
                                # if slovo.count(a) <= 2 and slovo.count(b) <= 2 ...:
                                if all(slovo.count(x) <= 2 for x in slovo):\
                                    count += 1
print(count)
'''

# Вариант 2
'''
import itertools
count = 0
for s in itertools.product('QWERTYNO', repeat=7):
    slovo = ''.join(s)
    if 'QWERTY' not in slovo:
        if all(slovo.count(x) <= 2 for x in slovo): 
                count += 1
print(count)
'''
# Ответ: 1345664


# № 6901 (Уровень: Средний)
# (Д. Статный) Все пятибуквенные слова, в составе которых могут быть только буквы слова БАРАШ,
# записаны в алфавитном порядке и пронумерованы начиная с 1.
#
# Ниже приведено начало списка.
# 1. ААААА
# 2. ААААБ
# 3. ААААР
# 4. ААААШ
# 5. АААБА
#
#
# Под каким последним номером идёт слово, в котором не более 3-х согласных
# и только одна буква повторяется дважды, а остальные не повторяются?
'''
s = 'БАРАШ'
print(set(s))  # {'Ш', 'Б', 'А', 'Р'}

s = sorted('БАРАШ')
my_set = set()
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    my_set.add(slovo)

k = 1
for slovo in sorted(my_set):
    sogl = [i for i in slovo if i in 'БРШ']
    if len(sogl) <= 3:
        if len(set(slovo)) == 4:
            print(k, slovo)
    k += 1
'''
# Result: 913


print('16 61 36 63 56 65 76 67'.split())
# for s in itertools.permutations('01234567', 6):


# № 6782 (Уровень: Средний)
# (PRO100 ЕГЭ) Определите количество шестизначных чисел, записанных в восьмеричной системе счисления,
# в записи которых есть ровно две цифры 6, при этом никакая нечётная цифра не стоит рядом с цифрой 6.
#
# Пример шестизначного числа, записанного в восьмеричной системе счисления – 1234568.
'''
import itertools
count = 0
for s in itertools.product('01234567', repeat=6):
    slovo = ''.join(s)
    if slovo[0] != '0':
        if slovo.count('6') == 2:
            # if slovo.count('36') == 0 and slovo.count('63') and ... :
            
            # if '36' not in slovo and '63' not in slovo and ... :

            # if all(x not in slovo for x in '16 61 36 63 56 65 76 67'.split()):
            
            for x in '1357':
                slovo = slovo.replace(x, '*')
            if '*6' not in slovo and '6*' not in slovo:
                count += 1
print(count)
'''
# Ответ: 5229


# № 7351 (Уровень: Средний)
# (Л. Шастин) Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
# На выполнение Редактору дана следующая программа:
#
# На вход программе подана строка из 512 подряд идущих символов 7.
# Сколько замен произойдет в ходе работы алгоритма?
'''
s = '7' * 512
count = 0
while '7777' in s or '1111' in s:
    if '7777' in s:
        s = s.replace('7777', '1', 1)
        count += 1
    else:
        s = s.replace('1111', '7', 1)
        count += 1
print(count)
'''
# Result: 170


#
# № 6854 (Уровень: Средний)
# На выполнение Редактору дана следующая программа:
#
# На вход программе подана строка из 256 подряд идущих символов 7.
# Сколько 7 будет заменено в ходе работы программы?
'''
s = '7' * 256
count = 0
while '7777' in s or '1111' in s:
    if '7777' in s:
        s = s.replace('7777', '1', 1)
        count += 4
    else:
        s = s.replace('1111', '7', 1)
print(count)
'''
# Result: 272


# № 6084 /dev/inf 02.2023 (Уровень: Средний)
# На вход программы поступает строка из n цифр, содержащая равное количество цифр 1, 2,
# расположенных в произвольном порядке. При каком минимальном значении n в строке,
# полученной в результате работы программы, количество цифр 1 будет больше 100?
'''
for n in range(2, 100, 2):
    s = '1' * (n//2) + '2' * (n//2)

    while '12' in s or '21' in s:
        if '12' in s:
            s = s.replace('12', '21', 1)
        else:
            s = s.replace('21', '111', 1)
    if s.count('1') > 100:
        print(n)
        break
'''
# Result: 68


# № 6066 (Уровень: Средний)
# Какое количество вариантов строки можно получить при выходе из Фиксика,
# если использовать четыре 1, три 3 и две 2 на входе.
#
#
# ПОКА нашлось (133) ИЛИ нашлось (221) ИЛИ нашлось (23)
# ЕСЛИ нашлось (133)
# ТО заменить (133, 1)
# ЕСЛИ нашлось (221)
# ТО заменить (221, 31)
# ЕСЛИ нашлось (23)
# ТО заменить (23, 21)
# КОНЕЦ ПОКА
'''
import itertools
my_set = set()
for x in itertools.permutations('111133322', 9):
    x = ''.join(x)
    my_set.add(x)

A = set()
for s in my_set:
    while '133' in s or '221' in s or '23' in s:
        if '133' in s:
            s = s.replace('133', '1', 1)
        if '221' in s:
            s = s.replace('221', '31', 1)
        if '23' in s:
            s = s.replace('23', '21', 1)
    A.add(s)

print(len(A))
'''
# Result: 640

#
# № 5062 (Уровень: Гроб)
# Известно, что исходная строка A содержала ровно два нуля – на первом и на последнем месте,
# а также поровну единиц и двоек. После выполнения данной программы получилась строка B,
# содержащая 47 единиц и меньше 70 двоек. Какое наибольшее количество двоек может быть в строке B?
'''
for n in range(1, 100000):
    s = '0' + '1' * n + '2' * n + '0'
    while '00' not in s:
        s = s.replace('011', '20', 1)
        s = s.replace('022', '10', 1)
        s = s.replace('02', '110', 1)
        s = s.replace('01', '220', 1)

    if s.count('1') == 47 and s.count('2') < 70:
        print(s.count('2'))
'''
# Result: 68


# Дана программа для редактора:
#
# НАЧАЛО
#     ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#         заменить (01, 2302)
#         заменить (02, 10)
#         заменить (03, 201)
#     КОНЕЦ ПОКА
# КОНЕЦ
#

# Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 40 единиц, 10 двоек и 8 троек.
# Сколько единиц было в исходной строке?
'''
for x in range(0, 80):
    for y in range(0, 80):
        for z in range(0, 80):
            s = '0' + '1' * x + '2' * y + '3' * z

            while '01' in s or '02' in s or '03' in s:
                s = s.replace('01', '2302', 1)
                s = s.replace('02', '10', 1)
                s = s.replace('03', '201', 1)
            if s.count('1') == 40 and s.count('2') == 10 and s.count('3') == 8:
                print(x)
 '''
# Result: 6
# endregion Урок: ******************************************************************



# todo: Валерия = [1, 2, 3, 5, 6, 7, 8, 9+, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25]
# на прошлом уроке: Разбирали 8 и 12 номера на прогу среднего уровня с КЕГЭ
# на следующем уроке:
