
# region Домашка

# 24.10

# Тип 14 № 17380
'''
# Значение выражения 3 * 216  4 + 2 * 36  6 - 648 записали в системе счисления с основанием 6.
# Сколько цифр 5 содержится в этой записи?

# Решение:
x = 3 * 216  4 + 2 * 36  6 - 648
M = []
while x >0:
    M.append(x % 6)
    x //= 6
M.reverse()
print(M.count(5))
'''
# Ответ: 8

# Тип 14 № 18085
'''
# Значение выражения 4  16 + 2  34 - 8 записали в системе счисления с основанием 2.
# Сколько цифр 1 содержится в этой записи?

# Решение:

x = 4  16 + 2  34 - 8
M = []
while x > 0:
    M.append(x % 2)
    x //= 2
M.reverse()
print(M.count(1))
'''
# Ответ: 30

# Тип 5 № 7917

# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
# 1.Складываются первая и вторая, а также вторая и третья цифры исходного числа.
# 2.Полученные два числа записываются друг за другом в порядке возрастания (без разделителей).

# Пример. Исходное число: 348. Суммы: 3+4 = 7; 4+8 = 12. Результат: 712.

# Укажите наименьшее число, в результате обработки которого автомат выдаст число 1115.

# Решение:
'''
for i in range(100, 1000):
    S = str(i)
    a = int(S[0]) + int(S[1])
    b = int(S[1]) + int(S[2])

    res = (str(min(a, b)) + str(max(a, b)))
    if res == '1115':
        print(i)
        break
'''
# Ответ: 296

# Тип 5 № 9792
'''
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
# 1. Перемножаются первая и вторая, а также вторая и третья цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 631. Произведение: 6 * 3 = 18; 3 * 1 = 3. Результат: 318.
#
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 621.

# Решение:
for i in range(1000, 100, -1):
     S = str(i)
     a = int(S[0]) * int(S[1])
     b = int(S[1]) * int(S[2])
     res = (str(min(a, b)) + str(max(a, b)))
     if res == '621':
         print(i)
         break
'''
# Ответ: 732

# Тип 6 № 47404
'''
#  Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 10 Направо 90]
# Направо 30
# Повтори 5 [Вперёд 6 Направо 60 Вперёд 6 Направо 120]

# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией,
# заданной данным алгоритмом: Повтори 4 [Вперёд 10 Направо 90] и находиться вне области, ограниченной линией,
# заданной данным алгоритмом: Повтори 5 [Вперёд 6 Направо 60 Вперёд 6 Направо 120]. Точки на линии учитывать не следует.

# Решение:

import turtle as t
t.left(90)
t.speed(30)
l = 30

for _ in range(4):
    t.fd(10 * l)
    t.right(90)
t.right(30)

t.color('green')
for _ in range(6):
    t.fd(6 * l)
    t.right(60)
    t.fd(6 * l)
    t.right(120)
t.left(30)

t.pu()
t.color('red')
for x in range(0, 11):
    for y in range(0, 11):
        t.goto(x * l, y * l)
        t.dot(3)
t.done()
'''
# Ответ: 51

# Тип 6 № 47403
'''
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 12 Направо 90]
# Направо 30
# Повтори 3 [Вперёд 8 Направо 60 Вперёд 8 Направо 120]

# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией,
# заданной данным алгоритмом: Повтори 4 [Вперёд 12 Направо 90]
# и находиться вне области, ограниченной линией, заданной данным алгоритмом:
# Повтори 3 [Вперёд 8 Направо 60 Вперёд 8 Направо 120]. Точки на линии учитывать не следует.

# Решение:

import turtle as t
t.left(90)
t.speed(40)
l = 30
for _ in range(4):
    t.fd(12 * l)
    t.right(90)
t.right(30)

t.color('green')
for _ in range(3):
    t.fd(8 * l)
    t.right(60)
    t.fd(8 * l)
    t.right(120)
t.left(30)

t.pu()
t.color('red')
for x in range(0, 13):
    for y in range(0, 13):
        t.goto(x * l, y * l)
        t.dot(3)
t.done()
'''
# Ответ: 73



# endregion Домашка


# region Урок

# Строки теория
'''
x = 5
s1 = '123'
s2 = '34'
s = s1 + s2  # конъюнкция - склеивание строк
print(s)

# переводить str в int мы можем, только если - строка состоит из чисел

print(s * 3)  # строки можно умножать на int значения

s = f'{s1}{x}{s2}'
print(s)


# тип данных строка str() очень похожи на списки list()
A = ['1', '2', '3', '4']
# i   0    1    2    3

a = '123 4'
# i  01234

for x in a:
    print(x, end=" ")
print()

for i in range(0, len(a)):
    print(a[i], end=" ")
print()

# a[0] = '5'  # менять элемент строки нельзя! 
'''

# Срезы строк - взятие подстроки
'''
s = '123456789'  # задача поменять '5' на 'A'
# s[4] = 'A' как в списках нельзя

s = s[0:3+1] + 'A' + s[5:]
print(s)

print(s[2:5])  # правая граница не входит в диапазон
print(s[:5])
print(s[5:])   # все, что стоят справа
print(s[:])
print(s[::2])  # с шагом два
s = s[::-1]  # аналог метода reverse() как у списков
print(s)
'''

# Решение через СРЕЗЫ
'''
n = int(input())
s = str(n)
l = len(s)
count = 0
r = ''
for i in range(l-1, -1, -1):
    if count == 3:
        r += ','
        count = 0
    r += s[i]
    count += 1
r = r[::-1]
print(r)
'''

# Через join
'''
n = int(input())
M = [i for i in str(n)]
M.reverse()
A = []
s = ''
for x in M:
    s += x
    if len(s) == 3:
        A.append(s)
        s = ''
if len(s) != 0:
    A.append(s)

A.reverse()
r = ','.join(A)
print(r)
'''

# n = int(input())
# M = [int(i) for i in str(n)]
# print(M)


# методы split() и join()
# Задача: проверить ip адрес на корректность и поменять точки на запятые

'''
ip = '123.43.222.9'
M = ip.split('.')

flag = True
for x in M:
    if not(0 <= int(x) <= 255):
        flag = False
        break

if flag == True:
    print('YES')
    r = ','.join(M)
    print(r)
else:
    print('NO')
'''

# Методы строк
'''
s = '123123412'
print(s.count('1'))

print(s.index('1'), s.rindex('1'), s.rindex('1') - s.index('1'))  # правое и левое вхождение элементов строки

s = 'dIJifjieoKpowD'
s = s.upper()
print(s)
s = s.lower()
print(s)

s = '123123412'
s = s.replace('1', '*')
print(s)

s = '123123412'
s = s.replace('12', '***', 1)
print(s)
'''


# Тип 8 № 33510
'''
# Тимофей составляет 5-буквенные коды из букв Т, И, М, О, Ф, Е, Й.
# Буква Т должна входить в код не менее одного раза, а буква Й — не более одного раза.
# Сколько различных кодов может составить Тимофей?

s = 'ТИМОФЕЙ'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('Т') >= 1 and temp.count('Й') <= 1:
                        count += 1
print(count)
'''
# Ответ: 8006








# endregion Урок




# todo: Валерия = [2, 5, 6, 8, 14], на следующем уроке: разбираем 12 номер