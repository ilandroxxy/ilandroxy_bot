
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# № 8511 Апробация 17.05 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

# Среди натуральных чисел, не превышающих 10**8, найдите все числа,
# соответствующие маске 12??15*6, делящиеся на 253 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце – соответствующие им результаты деления этих чисел на 253.
# Количество строк в таблице для ответа избыточно.
'''
import itertools
M = []
for l in range(0, 1+1):
    for s in itertools.product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)

R = []
for x in '0123456789':
    for y in '0123456789':
        for z in M:     # перебираем маску "*"
            A = int(f'12{x}{y}15{z}6')
            if A < 10**8:
                if A % 253 == 0:
                    R.append([A, A // 253])

for x in sorted(R):
    print(*x)
'''

# Вариант 2
'''
from fnmatch import *
for x in range(253, 10**8, 253):
    if fnmatch(str(x), '12??15*6'):
        print(x, x//253)
'''
# Ответ:
# 1278156 5052
# 12531596 49532
# 12741586 50362
# 12951576 51192



# № 6210 (Уровень: Средний)
# (Н. Сафронов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Найдите все натуральные числа, не превосходящие 107, для которых выполняются одновременно все условия:
#
# • соответствуют маске *2?2*;
# • являются палиндромами;
# • делятся на число 53 без остатка;
# • количество делителей больше 30.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — сумму делителей.
'''
from fnmatch import *
for x in range(53, 10**7, 53):
    if fnmatch(str(x), '*2?2*'):  # • соответствуют маске *2?2*;
        if str(x) == str(x)[::-1]: # • являются палиндромами;
            # делятся на число 53 без остатка; (уже выполнено)
            divisors = set()
            for j in range(1, int(x**0.5)+1):
                if x % j == 0:
                    divisors.add(j)
                    divisors.add(x//j)
            if len(divisors) > 30:  # • количество делителей больше 30.
                print(x, sum(divisors))
'''
# Показать ответ
# 212212 508032
# 2527252 5588352
# 4282824 13789440
# 4626264 11787120
# 8125218 19595520
# 8824288 19908504


#
# № 6095 /dev/inf 02.2023 (Уровень: Базовый)
# (А. Рогов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 108, найдите все числа,
# соответствующие маске *15*7424, которые делятся без остатка только на одно из чисел 111, 113, 127.
#
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце – соответствующие им результаты
# деления этих чисел на одно из чисел 111, 113, 127, на которое число делится без остатка.
'''
from fnmatch import *
R = []
for x in range(111, 10**8, 111):
    if fnmatch(str(x), '*15*7424'):
        R.append([x, x//111])

for x in range(113, 10**8, 113):
    if fnmatch(str(x), '*15*7424'):
        R.append([x, x//113])

for x in range(127, 10**8, 127):
    if fnmatch(str(x), '*15*7424'):
        R.append([x, x//127])

for x in sorted(R):
    print(x)
'''
# Показать ответ
# 1587424 14048
# 15147424 134048
# 15227424 137184
# 15457424 121712
# 28157424 221712
# 85157424 767184
'''
print(12 * 8)

import turtle as t
t.left(90)
t.speed(30)
l = 10

for _ in range(70):
    t.forward(8 * l)
    t.right(30)

t.done()
'''
# Ответ: 96

'''
import turtle as t

t.left(90)
t.speed(30)
l = 20

for _ in range(2):
    t.forward(9 * l)
    t.right(90)
    t.forward(15 * l)
    t.right(90)

t.up()
t.forward(12 * l)
t.right(90)
t.down()
for _ in range(2):
    t.forward(6 * l)
    t.right(90)
    t.forward(12 * l)
    t.right(90)

t.done()
'''

#16
'''
def F(n):
    if n >= 10000:
        return n
    if n < 10000 and n % 2 == 0:
        return F(n + 2) - 3
    if n < 10000 and n % 2 != 0:
        return F(n + 2) + 1

print(F(94) - F(80))  # RecursionError: maximum recursion depth exceeded
'''
'''
# F(80) = F(82) - 3
# F(82) = F(84) - 3
# F(84) = F(86) - 3
# F(86) = F(88) - 3
# F(88) = F(90) - 3
# F(90) = F(92) - 3
# F(92) = F(94) - 3   -  F(94)
print(-3 * 7)
'''
# Ответ: -21



#23
'''
def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a - 2, b) + F(a // 2, b)

print(F(28, 10) * F(10, 1))



def F(a, b):
    if a <= b:
        return a == b
    return F(a - 2, b) + F(a // 2, b)

print(F(28, 10) * F(10, 1))
'''
# Ответ:  36

#5
'''
count = 0
for n in range(1, 1000):
    s = bin(n)[2:]
    summ = s.count('1')
    if summ % 2 == 0:
        s = '10' + s
    else:
        s = '11' + s

    summ1 = s.count('1')

    if summ1 % 2 != 0:
        s = s + '11'
    else:
        s = s + '00'

    r = int(s, 2)
    if r < 860:
        count += 1
print(count)
'''
# Ответ: 47


# 5
'''
R = []
for n in range(1, 30):
    s = bin(n)[2:]
    summ = s.count('1')
    if summ % 2 == 0:
        s = '10' + s[:-2] + '00'
    else:
        s = '11' + s[:-2] + '11'
    r = int(s, 2)
    R.append(r)

print(max(R))
'''
# Ответ: 127


# 8 5218
'''
count = 0
s = 'АРБУЗ'
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        if temp.count('А') == 3:
                            if 'АА' in temp and 'ААА' not in temp:
                                count += 1
print(count)
'''
# Ответ: 768


# 8 4613
'''
count = 0
s = '012345678'
for a in '2468':    # строго кроме 0
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if int(a) % 2 == 0:
                        if e not in '18':  # if e != '1' or e != '8':
                            if temp.count('3') <= 1:
                                count += 1
print(count)
'''
# Ответ: 18944


#
# № 1950 (Уровень: Базовый)
# (И. Женецкий) Абдурахман составляет 8-буквенные слова из букв П, И, Т, О, Н, Я, Г, А,
# причём гласная буква не может стоять в начале слова, а также рядом с гласной буквой.
# Буквы в слове могут повторяться. Сколько таких слов может составить Абдурахман?
'''
from itertools import *
count = 0
for s in product('ПИТОНЯГА', repeat=8):
    temp = ''.join(s)
    if temp[0] not in 'ИОЯА':
        if all(x not in temp for x in 'ИИ ИО ОИ ИЯ ЯИ АИ ИА ОЯ ЯО АО ОА ЯА АЯ АА ОО ЯЯ'.split()):
            count += 1
print(count)
'''

'''
from itertools import *
count = 0
for s in product('ПИТОНЯГА', repeat=8):
    temp = ''.join(s)
    if temp[0] not in 'ИОЯА':
        if all(''.join(x) not in temp for x in product('ИОЯА', repeat=2)):
            count += 1
print(count)
'''
# Показать ответ: 2228224


# 14
'''
for x in '0123456789AB':
    for y in '0123456789AB':
        if int(y, 12) > 2 and int(x, 12) % 9 == 0:
            T = int(f'4A{x}', 12) + int(f'{y}1B23', 12)
            if T % 6 == 0:
                print(2 * (int(x, 12) + int(y, 12)))
                exit()
'''
# Ответ: 24


# 14
'''
def my_int(M: list, n):
    r = 0
    M.reverse()
    for i in range(0, len(M)):
        r += M[i] * n ** i
    return r

for x in range(0, 80):
    A = my_int([3, x, 7, 5], 80)
    B = my_int([1, 4, x, 0], 80)

    if (A + B) % 17 == 0:
        print((A + B) // 17)
'''
# Ответ: 146405





# endregion Урок: ******************************************************************



# todo: Валерия = [1, 2, 3, 5+, 6, 7, 8+, 9+, 11, 12+, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25]
# на прошлом уроке: Закрывали задачи с вопросами из домашней работы: 14, 8, 5, 6, 25 через новое решение fnmatch
# на следующем уроке:  #todo: Письменные, Эксель: 9, 19-21, 18, 22, 26
