
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

#
# № 7833 Danov2304 (Уровень: Средний)
# (А.Богданов) На вход алгоритма подается натуральное число N. Алгоритм строит по нему новое число R следующим образом:
#
# 1. Строится троичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число N чётное, тогда в конец дописывается два младших разряда полученной троичной записи,
# б) если число N нечетное, тогда в конец дописывается троичное представление суммы цифр полученной троичной записи.
#
# Полученная таким образом запись является троичной записью искомого числа R.
#
# Например, для исходного числа 1010 = 1013 результатом является число 101013 = 9110,
# а для числа 1110=1023 результатом является число 102103 = 10210.
# Укажите N, большее 9, после обработки которого с помощью этого алгоритма получается минимальное число R.
# В ответе запишите это число в десятичной системе счисления
'''
ALPHABET = '0123456789abcdef'

def Convert_Three(temp):
    N = []
    while temp > 0:
        # N.append(str(temp % 3))
        N.append(ALPHABET[temp % 3])
        temp //= 3
    N.reverse()
    s = ''.join(N)
    return s

R = []
for n in range(10, 100000):  # Укажите N, большее 9
    s = Convert_Three(n)

    if n % 2 == 0:
        s = s + s[-2:]
    else:
        summ = s.count('1') + s.count('2') * 2
        s = s + Convert_Three(summ)

    r = int(s, 3)
    R.append([r, n])

print(min(R))
'''
# Показать ответ: 27

# endregion Урок: ******************************************************************



# todo: Валерия = [1, 2, 3, 5+, 6, 7, 8+, 9+, 11, 12+, 13, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25]
# на прошлом уроке: Разбирали 5 номер на прогу среднего уровня с КЕГЭ
# на следующем уроке:
