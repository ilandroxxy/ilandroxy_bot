# Home work: 10.10
'''
# Задание 2 № 37137
# Логическая функция F задаётся выражением (¬a ∧ ¬b) ∨ (b ≡ c) ∨ d.
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий неповторяющиеся строки.
# Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных a, b, c, d.
# Решение:
print('a b c d')
for a in range(2):
    for b in range(2):
        for c in range(2):
            for d in range(2):
                F = ((not(a)) and (not(b))) or (b == c) or d
                if F == False:
                    print(a,b,c,d,F)
# Ответ: cabd
'''


# Задание с библиотекой
'''
import math
a = int(input("Введите число a: "))
b = int(input("Введите число b: "))
c = int(input("Введите число c: "))
if a == 0:
    print('Не квадратное уравнение')
else:
    diskriminant = b**2 - 4 * a * c
    print(diskriminant)
    if diskriminant > 0:
        x1 = (-b - math.sqrt(diskriminant)) / (2 * a)
        x2 = (-b + math.sqrt(diskriminant)) / (2 * a)
        # print("x1 =", x1, "x2 =", x2)
        print(f'x1 = {x1}, x2 = {x2}')
    elif diskriminant == 0:
            x = (-b + math.sqrt(diskriminant)) / (2 * a)
            print(f'Корень равен = {x}')
    else:
        print("Корней нет")
'''

'''
# Задание: Standart American Convention
# Решение:
n = int(input('Введите натуральное число:'))
if 0 < n < 10  100:
    print(f'{n:,}')
else:
    print('Error')
'''


'''
Alphabet = '0123456789ABCDEF'

while True:
    print(f'\ncase 1: Перевод из 10-ной в n-ную\ncase 2: Перевод из n-ной в 10-ную\ncase 0: exit\n')
    case = input('case: ')

    if case == '0':
        break

    elif case == '1':
        x = int(input('Введите 10-ное: '))
        n = int(input("Введите n-ую систему: "))
        temp = x
        M = []
        while x > 0:
            M.append(Alphabet[x % n])
            x //= n
        M.reverse()
        res = ''.join(M)
        print(f'Перевод числа {temp} в {n}-ную систему равен: {res}')

    elif case == '2':
        x = input('Введите число: ')
        n = int(input("Введите его n-ую систему: "))
        M = []
        for i in x:
            if i == 'A':
                M.append(10)
            elif i == 'B':
                M.append(11)
            elif i == 'C':
                M.append(12)
            elif i == 'D':
                M.append(13)
            elif i == 'E':
                M.append(14)
            elif i == 'F':
                M.append(15)
            else:
                M.append(int(i))
        print(M)

        M.reverse()
        res = 0
        for i in range(len(M)):
            res += M[i] * n ** i

        print(f'Перевод числа {x} из {n}-ной в 10-ную систему: {res}')
'''



# Тип 14 № 7460
"""
# Сколько единиц содержится в двоичной записи значения выражения: 4**2014 + 2**2015 − 8?
x = 4**2014 + 2**2015 - 8
M = []
while x > 0:
    M.append(x % 2)
    x //= 2
M.reverse()
print(M.count(1))
"""
# Ответ: 2013


# Тип 14 № 27545
"""
# Значение выражения 49**7*7**20 − 7**8 − 28 записали в системе счисления с основанием 7.
# Сколько цифр 6 содержится в этой записи?

x = 49**7*7**20 - 7**8 - 28
M = []
while x > 0:
    M.append(x % 7)
    x //= 7
M.reverse()
print(M.count(6))
"""
# Ответ: 31


# Тип 14 № 39243
"""
# Значение выражения 4**34 + 5*4**22 + 4**13 + 2*4**9 + 82 записали в системе счисления с основанием 16.
# Сколько разных цифр встречается в этой записи?

x = 4**34 + 5*4**22 + 4**13 + 2*4**9 + 82
M = []
while x > 0:
    M.append(x % 16)
    x //= 16
M.reverse()
print(M)

# вариант 1
A = []
for i in M:
    if i not in A:
        A.append(i)
print(A, len(A))

# вариант 2
A = set(M)
print(A, len(A))
"""


# Тип 14 № 47011
"""
# Значение выражения 3*343**8 + 5 * 49 ** 12 + 7 ** 15 - 49 записали в системе счисления с основанием 7 без незначащих нулей.
# Какая цифра чаще всего встречается в этой записи?
x = 3*343**8 + 5 * 49 ** 12 + 7 ** 15 - 49
M = []
while x > 0:
    M.append(x % 7)
    x //= 7
M.reverse()
print(M)

A = {}
for i in M:
    A[i] = M.count(i)
print(A)
"""


# Тип 5 № 35894
"""
# Алгоритм получает на вход натуральное число N>1 и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. Подсчитывается количество нулей и единиц в полученной записи.
# Если их количество одинаково, в конец записи добавляется её последняя цифра.
# В противном случае в конец записи добавляется та цифра, которая встречается реже.
# 3. Шаг 2 повторяется ещё два раза
# 4. Результат переводится в десятичную систему.
#
# Пример. Дано число N=19. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 10011.
# 2. В полученной записи нулей меньше, чем единиц, в конец записи добавляется 0. Новая запись: 100110.
# 3. В текущей записи нулей и единиц поровну, в конец записывается последняя цифра, это 0. Получается 1001100.
# В этой записи единиц меньше, в конец добавляется 1: 10011001.
# 4. Результат работы алгоритма R=153.

# При каком наименьшем числе N>104 в результате работы алгоритма получится число, кратное 4?

for n in range(105, 100000):
    temp = n

    N = []
    while n > 0:
        N.append(n % 2)  # 1. Строится двоичная запись числа N.
        n //= 2
    N.reverse()
    print(N)

    for i in range(3):  # 3. Шаг 2 повторяется ещё два раза
        if N.count(0) == N.count(1):
            N.append(N[-1])
        elif N.count(0) < N.count(1):
            N.append(0)
        elif N.count(0) > N.count(1):
            N.append(1)

    print(N)

    res = 0
    N.reverse()
    for i in range(0, len(N)):  # 4. Результат переводится в десятичную систему.
        res += N[i] * 2 ** i
    print(res)

    if res % 4 == 0:
        print(temp)
        break
"""
# Ответ: 107


# Тип 5 № 33084
"""
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. Складываются все цифры полученной двоичной записи. В конец записи (справа)
# дописывается остаток от деления суммы на 2.
# 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
# 4. Результат переводится в десятичную систему.
#
# Пример. Дано число N=13. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 1101.
# 2. Сумма цифр двоичной записи 3, остаток от деления на 2 равен 1, новая запись 11011.
# 3. Сумма цифр полученной записи 4, остаток от деления на 2 равен 0, новая запись 110110.
# 4. Результат работы алгоритма R=54.
#
# При каком наименьшем числе N в результате работы алгоритма получится R>154?
# В ответе запишите это число в десятичной системе счисления.

for n in range(0, 1000):
    temp = n

    N = []
    while n > 0:
        N.append(n % 2)
        n //= 2
    N.reverse()

    print(N)

    for _ in range(2):
        summ = sum(N)
        N.append(summ % 2)

    res = 0
    N.reverse()
    for i in range(0, len(N)):
        res += N[i] * 2 ** i

    if res > 154:
        print(temp)
        break
"""
# Ответ: 39


# Тип 5 № 10282
'''
# Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 63 179. Суммы: 6 + 1 + 9 = 16; 3 + 7 = 10. Результат: 1016.
#
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 723.

for n in range(10000, 100000):
    s = str(n)
    a = int(s[0]) + int(s[2]) + int(s[4])
    b = int(s[1]) + int(s[3])

    res = str(min(a, b)) + str(max(a, b))

    if res == '723':
        print(n)
        break
'''
# Ответ: 50979


