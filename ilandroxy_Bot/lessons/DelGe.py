
# region Домашка: ************************************************************


# endregion Домашка: ************************************************************


# region Урок: ************************************************************

# Повторение 14-ых и 12-ых номеров

# КЕГЭ № 8158 /dev/inf 05.23 (Уровень: Базовый) (А. Рогов)
# Операнды арифметического выражения записаны в системе счисления с основанием 15.
#
# 1x51_15 − 3x2_15
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита 15-ричной системы счисления.
# Определите наибольшее значение x, при котором значение данного выражения кратно 4.
# Для найденного x вычислите частное от деления данного выражения на 4 и запишите его в
# ответе в десятичной системе счисления. Основание системы счисления указывать не нужно.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
R = []
for x in alphabet[:15]:
    A = int(f'1{x}51', 15)  # Перевод из 15-ой в 10-ную систему счисления
    B = int(f'3{x}2', 15)
    if (A - B) % 4 == 0:
        R.append((A - B) // 4)
print(max(R))
'''
# Ответ: 1376


# КЕГЭ № 5632 (Уровень: Средний) (М. Ишимов)
# Операнды арифметического выражения записаны в системе счисления с основанием 21.
#
# 32yxA_21 + 16y18_21
#
# В записи чисел переменными х и у обозначены две неизвестные цифры из алфавита 21-ричной системы счисления.
# Определите наименьшее значение х, при котором значение данного арифметического
# выражения кратно 12 при любом нечётном значении у. Для найденного значения х вычислите частное от деления
# значения арифметического выражения на 12 при у = 7 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for x in alphabet[:21]:
    if all((int(f'32{y}{x}A', 21) + int(f'16{y}18', 21)) % 12 == 0 for y in alphabet[1:21:2]):
        print((int(f'32{7}{x}A', 21) + int(f'16{7}18', 21)) // 12)
        break
'''
# Ответ: 71524


# КЕГЭ № 6844 (Уровень: Средний)
# В системе счисления с основанием p выполняется равенство
#
# 5x83 + x9x9 = y20y
#
# Буквами x и y обозначены некоторые цифры из алфавита системы счисления с основанием p.
# Определите значение числа xyyx_p и запишите это значение в десятичной системе счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for p in range(10, 36):
    for x in alphabet[:p]:
        for y in alphabet[:p]:
            if int(f'5{x}83', p) + int(f'{x}9{x}9', p) == int(f'{y}20{y}', p):
                print(int(f'{x}{y}{y}{x}', p))
                exit()
'''
# Ответ: 18990


# КЕГЭ № 7083 OpenFIPI (Уровень: Базовый)
# Исполнитель Редактор получает на вход строку символов и преобразовывает её.
# Определите количество нулей в строке, получившейся в результате применения приведённой ниже программы
# к входной строке, состоящей из единицы, за которой следуют 55 нулей подряд.
#
# В ответе запишите только количество нулей в получившейся строке.
#
# НАЧАЛО
#   ПОКА нашлось (1)
#     ЕСЛИ нашлось (10)
#       ТО заменить (10, 001)
#       ИНАЧЕ заменить (1, 00)
#     КОНЕЦ ЕСЛИ
#   КОНЕЦ ПОКА
# КОНЕЦ
'''
s = '1' + '0' * 55
while '1' in s:
    if '10' in s: s = s.replace('10', '001', 1)
    else: s = s.replace('1', '00', 1)
print(s.count('0'))
'''
# Ответ: 112


# КЕГЭ № 2573 (Уровень: Средний)
# Дана программа для исполнителя Редактор:
# ПОКА нашлось(55555)
#    заменить(55555, 88)
#    заменить(888, 55)
# КОНЕЦ ПОКА

# Известно, что начальная строка состоит более чем из 300 цифр 5 и не содержит других цифр.
# При какой наименьшей длине исходной строки результат работы этой программы будет
# содержать наибольшее возможное число цифр 5?
'''
R = []
maxi = 0
for n in range(301, 1000):
    s = '5' * n

    while '55555' in s:
        s = s.replace('55555', '88', 1)
        s = s.replace('888', '55', 1)
    if maxi < s.count('5'):
        maxi = s.count('5')
        R.append(n)

print(max(R))
'''
# Ответ: 311


# КЕГЭ № 1751 Danov2102 (Уровень: Сложный) (А. Богданов)
# Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
#
# ПОКА нашлось(10) ИЛИ нашлось(20)
#    ЕСЛИ нашлось(20)
#       ТО заменить(20,00)
#       ИНАЧЕ заменить(10,200)
#    КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА

# Определите максимально возможное количество цифр 0,
# которое может получиться в результате применения представленного ниже алгоритма к строке,
# состоящей из 19 цифр 0, 13 цифр 1 и 17 цифр 2, идущих в произвольном порядке.


# КЕГЭ № 1751 Danov2102 (Уровень: Сложный) (А. Богданов)
# Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
#
# ПОКА нашлось(10) ИЛИ нашлось(20)
#    ЕСЛИ нашлось(20)
#       ТО заменить(20,00)
#       ИНАЧЕ заменить(10,200)
#    КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
# Определите максимально возможное количество цифр 0, которое может получиться в результате
# применения представленного ниже алгоритма к строке, состоящей из 19 цифр 0, 13 цифр 1 и 17 цифр 2,
# идущих в произвольном порядке.
'''
from itertools import permutations
R = []
M = ['0'*19, '1'*13, '2'*17]
for x in permutations(M):
    s = ''.join(x)

    while '10' in s or '20' in s:
        if '20' in s:
            s = s.replace('20', '00', 1)
        else:
            s = s.replace('10', '200', 1)
    R.append(s.count('0'))
print(max(R))
'''
# Ответ: 62


# endregion Урок: ************************************************************


# Евгений = [2.1, 8.1, 12.1, 14.1]
# КЕГЭ = []
# на следующем уроке:
