# region Домашка: ************************************************************
'''
num = 567
summa = 0
for x in str(num):
    x = int(x)
    summa += x
    print(x, type(x))
print(summa)
'''

'''
num = num
summa = sum([int(x) for x in str(num)])  # Получить сумму цифр от целого числа
print(summa)
'''
'''
s = '5ok6.7'
summa = sum([int(x) for x in s if x.isdigit()])  # Получить сумму цифр строки
print(summa)
'''

'''
def F(a,b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a - sum([int(x) for x in str(a)]), b) + F(a // 2, b) + F(a - 1, b)


print(F(40, 25) * F(25, 10))
'''
'''
def F(A1, A2, x):
    P = 13 <= x <= 19
    A = A1 <= x <= A2
    Q = 17 <= x <= 23
    # return not(not P) <= Q <= A * (not (not Q)) <= P
    return (not((not P) <= Q)) <= (A <= ((not Q) <= P))


M = [x / 4 for x in range(1 * 4, 30 * 4)]
R = []
for A1 in M:
    for A2 in M:
        if all(F(A1, A2, x) for x in M):
            R.append(A2-A1)
print(max(R))


print(10.0)  # -> 10
print(10.6)  # -> 11
print(10.2)  # -> 11
print(int(10.6))  # -> 10
print(round(10.6))   # округление по математическим правила
print(round(10.2))   # округление по математическим правила
'''
# endregion Домашка: ************************************************************


# region Урок: ************************************************************
'''
file = open('17.txt')
M = []
for x in file:
    M.append(int(x))
print(M)
'''

# Как считывать файл для 17 номера:
'''
M = [int(x) for x in open('17.txt')]
'''


# Рассмотри типы 17 номеров:
'''
M = [1, 2, 3, 4, 5]

# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(0, len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(0, len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''


# Тип 17 №37360
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000. Определите и запишите в ответе сначала количество
# пар элементов последовательности, у которых сумма элементов кратна 120,
# затем максимальную из сумм элементов таких пар. В данной задаче под парой
# подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 120 == 0:
            count += 1
            maxi = max(maxi, x + y)
print(count, maxi)


M = [int(x) for x in open('17.txt')]
R = []
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 120 == 0:
            R.append(x + y)
print(len(R), max(R))
'''
# Ответ: 414830 19920


# Тип 17 №55813
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от 1 до 100000 включительно.
# Определите количество пар последовательности, в которых только одно число трехзначное,
# и сумма элементов пары кратна минимальному трехзначному значению последовательности,
# оканчивающемуся на 5. В ответе запишите два числа: сначала количество найденных пар,
# затем минимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if len(str(x)) == 3 and str(x)[-1] == '5']
R = []
for i in range(0, len(M)-1):
    x, y = M[i], M[i+1]
    if (len(str(x)) == 3) != (len(str(y)) == 3):
        if (x + y) % min(A) == 0:
            R.append(x + y)
print(len(R), min(R))
'''
# Ответ: 2 33120


# endregion Урок: ************************************************************


# Евгений = [2.1, 5.1, 8.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1]
# КЕГЭ = []
# на следующем уроке:
