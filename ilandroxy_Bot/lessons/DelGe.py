# region Домашка: ************************************************************

# КЕГЭ № 6903 (Уровень: Базовый) (Д. Статный)
#
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
#     а) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 00,
#     а затем два левых разряда заменяются на 11;
#     б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 11,
#     а затем два левых разряда заменяются на 10.
# 3. Пункт 2 повторяется ещё раз к записи, полученной после второго пункта.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
# Найдите максимальное число R, которое получается при обработке N, меньших 100. В ответе укажите R.

'''
M = []
for n in range(1, 100):
    s = bin(n)[2:]

    for x in range(2):
        if s.count("1") % 2 == 0:
            s = "11" + s[2:] + "00"
        else:
            s = "10" + s[2:] + "11"

    r = int(s, 2)
    M.append(r)
print(max(M))
'''


# КЕГЭ № 7026 Danov2303 (Уровень: Базовый) (А.Богданов)
# На вход алгоритма подается натуральное число N.
# Алгоритм строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа еще несколько разрядов по следующему правилу:
#    а) если N четное, то к нему справа приписываются два нуля, а слева единица;
#    б) если N нечетное, то к нему справа приписывается в двоичном виде сумма цифр его двоичной записи;
#
# Полученная таким образом запись (в ней как минимум на один разряд больше, чем в записи исходного числа N)
# является двоичной записью искомого числа R.

# Укажите такое число N большее 8, для которого число R является наименьшим среди чисел, превышающих 88.
# В ответе это число запишите в десятичной системе счисления.
'''
M = []
for n in range(9, 10000):
    s = bin(n)[2:]

    if n % 2 == 0:
        s = '1' + s + '00'
    else:
        s = s + bin(s.count('1'))[2:]

    r = int(s, 2)
    if r > 88:
        M.append([r, n])
print(min(M)[1])
'''
# Ответ: 25


# КЕГЭ № 1516 (Уровень: Средний)
# Автомат обрабатывает натуральное число N по следующему алгоритму:
# 1) Строится двоичная запись числа N.
# 2) Из записи удаляются все нули.
# 3) Полученное число переводится в десятичную запись и выводится на экран.
# Сколько разных значений будет показано на экране автомата при последовательном
# вводе всех натуральных чисел от [100 до 1000]?
'''
M = []
for n in range(100, 1000+1):
    s = bin(n)[2:]
    s = s.replace('0', '')
    r = int(s, 2)
    M.append(r)
print(M)
print(set(M))
print(len(set(M)))  # Сколько разных значений
'''
# Ответ: 9

# endregion Домашка: ************************************************************


# region Урок: ************************************************************

# Тип 16 №6234
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(1) = 1;
# F(2) = 1;
# F(n) = F(n – 2) * (n + 1) при n > 2.
#
# Чему равно значение функции F(8)? В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n == 2:
        return 1
    if n > 2:
        return F(n - 2) * (n + 1)

print(F(8))
'''
# Ответ: 315


# Тип 16 №6779
# Алгоритм вычисления значений функций F(n) и G(n), где n — натуральное число, задан следующими соотношениями:
# F(1) = 1;
# G(1) = 1;
# F(n) = F(n – 1) – G(n – 1),
# G(n) = F(n–1) + G(n – 1), при n ≥ 2
# Чему равно значение величины F(5)/G(5)?
# В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n - 1) - G(n - 1)

def G(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n-1) + G(n - 1)


print(F(5) / G(5))
'''

# Тип 16 №36871
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:

# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
# Сколько существует таких чисел n, что 1 ≤ n ≤ 1000 и F(n) = 3?
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)


cnt = 0
for n in range(1, 1000+1):
    if F(n) == 3:
        cnt += 1
print(cnt)
'''
# Ответ: 120


# Тип 16 №57423
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n) = n, если n ≥2025,
# F(n) = n + F(n + 2), если n < 2025.
# Чему равно значение выражения F(2022) − F(2023)?

def F(n):
    if n >= 2025:
        return n
    if n < 2025:
        return n + F(n + 2)

print(F(2022) - F(2023))


# Тип 16 №60258
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n) = n при n > 2024;
# F(n) = n * F(n + 1), если n ≤ 2024.
# Чему равно значение выражения F(2022) / F(2024)?

def F(n):
    if n > 2024:
        return n
    if n <= 2024:
        return n * F(n + 1)

print(F(2022) / F(2024))


# Тип 16 №47220
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n) = 1 при n = 1;
# F(n) = n * F(n−1), если n>1.
# Чему равно значение выражения F(2023) / F(2020)?
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n - 1)

print(F(2023) / F(2020))

# F(2023) = 2023 * F(2022)
# F(2022) = 2022 * F(2021)
# F(2021) = 2021 * F(2020)  /  F(2020)
print(2023 * 2022 * 2021)
'''
# Ответ: 8266912626.0

# [Previous line repeated 996 more times]
# RecursionError: maximum recursion depth exceeded


# № 12248 ЕГКР 16.12.23 (Уровень: Базовый)
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)=1 при n≤3;
# F(n)=(n+3)×F(n−2), если n>3.
# Чему равно значение выражения F(2028)/F(2024)?

# endregion Урок: ************************************************************


# Евгений = [2.1, 5.1, 8.1, 12.1, 14.1, 16.1]
# КЕГЭ = []
# на следующем уроке:
