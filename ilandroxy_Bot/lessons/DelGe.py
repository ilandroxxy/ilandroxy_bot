# region Домашка: ************************************************************


# endregion Домашка: ************************************************************


# region Урок: ************************************************************


# Тип 5 №52176
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Если сумма цифр десятичной записи заданного числа нечётна,
# то в конец двоичной записи дописывается 1, если чётна — 0.
# 3−4. Пункт 2 повторяется для вновь полученных чисел ещё два раза.
# 5. Результатом работы алгоритма становится десятичная запись полученного числа R.
#
# Определите наименьшее возможное значение R > 2054,
# которое может получиться в результате работы алгоритма.
'''
R = []
for n in range(1, 10000):
    s = bin(n)[2:]  # Пункт 1. bin()[2:], cot()[2:], hex()[2:]

    for i in range(3):  # Пункты 3-4.
        summa = sum([int(x) for x in str(int(s, 2))])  # Пункт 2.
        # print(n, summa)  # 9990 27
        if summa % 2 != 0:
            s = s + '1'
        else:
            s = s + '0'

    r = int(s, 2)  # Пункт 5. Перевод из 2-ной в 10-ную систему
    if r > 2054:
        R.append(r)
print(min(R))
'''
# Ответ: 2057


# Тип 5 №18812
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу:
# а) в конец числа (справа) дописывается 1, если число единиц в двоичной записи числа чётно, и 0,
# если число единиц в двоичной записи числа нечётно;
# б) к этой записи справа дописывается 1, если остаток от деления количества единиц на 2 равен 0,
# и 0, если остаток от деления количества единиц на 2 равен 1.

# Укажите минимальное число R, которое превышает 54 и может являться результатом работы алгоритма.
# В ответе это число запишите в десятичной системе.
'''
R = []
for n in range(1, 10000):
    s = bin(n)[2:]

    for i in range(2):
        if s.count('1') % 2 == 0:
            s = s + '1'
        else:
            s = s + '0'
    r = int(s, 2)
    if r > 54:
        R.append(r)
print(min(R))
'''
# Ответ: 56


# Тип 5 №16809
# Автомат обрабатывает натуральное число N (0 ≤ N ≤ 255) по следующему алгоритму:
# 1. Строится восьмибитная двоичная запись числа N.
# 2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3. Полученное число переводится в десятичную запись.
# 4. Из нового числа вычитается исходное, полученная разность выводится на экран.
#
# Какое число нужно ввести в автомат, чтобы в результате получилось 133?
'''
for n in range(0, 255+1):
    s = bin(n)[2:]
    while len(s) < 8:
        s = '0' + s
    s = s.replace('0', '*').replace('1', '0').replace('*', '1')
    r = int(s, 2)
    if r - n == 133:
        print(n)
'''
# Ответ: 61


# Тип 5 №58472
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Если число N делится на 5, в конец двоичной записи добавляется двоичный код числа 5,
# в противном случае в конец двоичной записи добавляется 1.
# 3. Если полученное на предыдущем шаге число делится на 7, в конец двоичной записи
# добавляется двоичный код числа 7, в противном случае в конец двоичной записи добавляется 1.
# 4. Результатом работы алгоритма становится десятичная запись полученного числа R.
#
# Определите наибольшее возможное значение N, для которого в результате работы алгоритма получается R < 1728404.
'''
R = []
for n in range(1, 1000000):
    s = bin(n)[2:]
    if n % 5 == 0:
        s = s + bin(5)[2:]
    else:
        s = s + '1'

    if int(s, 2) % 7 == 0:
        s = s + bin(7)[2:]
    else:
        s = s + '1'
    r = int(s, 2)
    if r < 1728404:
        R.append(n)
print(max(R))
'''
# Ответ: 432098


# Тип 5 №59798
# На вход алгоритма подается натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится троичная запись числа N.
# 2) Если N не кратно 3, то остаток от деления на 3 умножается на 5,
# переводится в троичную запись и дописывается в конец числа.
# 3) Результат R переводится в десятичную систему счисления и выводится на экран.
#
# Укажите минимальное число N, после обработки которого автомат получается число, большее 146.
'''
def convert(number: int, system: int):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while number > 0:
        result += alphabet[number % system]
        number //= system
    return result[::-1]


for n in range(1, 1000):
    s = convert(n, 3)
    if n % 3 != 0:
        x = (n % 3) * 5
        s = s + convert(x, 3)
    r = int(s, 3)
    if r > 146:
        print(n)
        break
'''
# Ответ: 8


# Тип 5 №17324
# Автомат обрабатывает натуральное число N по следующему алгоритму:
# 1. Строится двоичная запись числа N.
# 2. Удаляется первая слева единица и все следующие непосредственно за ней нули.
# Если после этого в числе не остаётся цифр, результат этого действия считается равным нулю.
# 3. Полученное число переводится в десятичную запись.
# 4. Новое число вычитается из исходного, полученная разность выводится на экран.
#
# Сколько разных значений будет показано на экране автомата
# при последовательном вводе всех натуральных чисел от 10 до 1000?
'''
my_set = set()
for n in range(10, 1000+1):
    s = bin(n)[2:]
    s = s[1:]
    r = int(s, 2)
    result = r - n
    my_set.add(result)
print(len(my_set))
'''
# Ответ: 7

# endregion Урок: ************************************************************


# Евгений = [2.1, 5.1, 8.1, 12.1, 14.1]
# КЕГЭ = []
# на следующем уроке:
