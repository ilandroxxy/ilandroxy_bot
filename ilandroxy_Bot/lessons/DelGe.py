# region Домашка: ************************************************************

# endregion Домашка: ************************************************************


# region Урок: ************************************************************

# Тип 23 №60265
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Возвести в квадрат
# Сколько существует программ, для которых при исходном числе 2 результатом является число 20,
# при этом траектория вычислений не содержит числа 11?
'''
def F(a, b):
    if a > b or a == 11:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b) + F(a**2, b)


print(F(2, 20))

# Вариант 2
def F(a, b):
    if a >= b or a == 11:
        return a == b
    return F(a+1, b) + F(a*2, b) + F(a**2, b)


print(F(2, 20))
'''
# Ответ: 37


# Тип 23 №59846
# 1. Вычесть 2
# 2. Вычесть 3
# 3. Разделить нацело на 3.
# Сколько существует программ, для которых при исходном числе 20 результатом является число 3?
'''
def F(a, b):
    if a <= b:
        return a == b
    return F(a-2, b) + F(a-3, b) + F(a//3, b)


print(F(20, 3))
'''
# Ответ: 76


# Тип 23 №13471
# 1. прибавь 1
# 2. сделай нечётное
#
# Сколько существует таких программ, которые число 1 преобразуют в число 25,
# причём траектория вычислений не содержит число 24?
'''
def F(a, b):
    if a >= b or a == 24:
        return a == b
    return F(a+1, b) + F(a*2+1, b)


print(F(1, 25))
'''
# Ответ: 10


# Тип 23 №18503
# 1. Прибавить 1
# 2. Прибавить 2
# 3. Умножить на 3
# Сколько существует программ, которые преобразуют исходное число 1 в число 15,
# и при этом траектория вычислений содержит число 10 и не содержит числа 13?
'''
def F(a, b):
    if a >= b or a == 13:
        return a == b
    return F(a+1, b) + F(a+2, b) + F(a*3, b)


print(F(1, 10) * F(10, 15))
'''


# Тип 15 №27303
# Для какого наименьшего целого неотрицательного числа А выражение
# (4x + 3y < A) ∨ (x ≥ y) ∨ (y ≥ 13)
# тождественно истинно, т.е. принимает значение 1 при любых целых неотрицательных x и y?
'''
def F(x, y, A):
    return (4*x + 3*y < A) or (x >= y) or (y >= 13)


for A in range(0, 1000):
    flag = True
    for x in range(100):
        for y in range(100):
            if not F(x, y, A):
                flag = False
                break
    if flag:
        print(A)
        break


# Вариант 2
for A in range(300):
    k = 0
    for x in range(300):
        for y in range(300):
            if (4 * x + 3 * y < A) or (x >= y) or (y >= 13):
                k += 1
    if k == 90_000:
        print(A)
        break


# Вариант 3
def F(x, y, A):
    return (4*x + 3*y < A) or (x >= y) or (y >= 13)


for A in range(0, 1000):
    if all(F(x, y, A) for x in range(100) for y in range(100)):
        print(A)
        break


# Вариант 4
def F(x, y, A):
    return (4*x + 3*y < A) or (x >= y) or (y >= 13)

R = []
for A in range(0, 1000):
    if all(F(x, y, A) for x in range(100) for y in range(100)):
        R.append(A)
print(min(R))


# Вариант 5
print(min([A for A in range(0, 1000) if all(((4*x + 3*y < A) or (x >= y) or (y >= 13)) for x in range(100) for y in range(100))]))
'''
# Ответ: 81


# Тип 15 №27412
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наибольшего натурального числа А формула
# ¬ДЕЛ(x, А) → (ДЕЛ(x, 6) → ¬ДЕЛ(x, 9))
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?
'''
def F(x, A):
    return (x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))


R = []
for A in range(1, 1000):
    if all(F(x, A) for x in range(10000)):
        R.append(A)
print(max(R))  
'''
# Ответ: 18


# Тип 15 №34506
# Для какого наименьшего неотрицательного целого числа А формула
# x&25 ≠ 0 → (x&17 = 0 → x&А ≠ 0)
# тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении переменной х)?
'''
def F(x, A):
    return (x&25 != 0) <= ((x&17 == 0) <= (x&A != 0))


R = []
for A in range(0, 1000):
    if all(F(x, A) for x in range(10000)):
        R.append(A)
print(min(R))
'''
# Ответ: 8


# Тип 15 №40731
# На числовой прямой даны два отрезка: P=[19;84] и Q=[4;51].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
# (x∈Q)→(¬(x∈P)→¬((x∈Q)∧¬(x∈A)))
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).
'''
def F(x, a1, a2):
    P = 19 <= x <= 84
    Q = 4 <= x <= 51
    A = a1 <= x <= a2
    # return (4 <= x <= 51) <= ((not (19 <= x <= 84)) <= (not((4 <= x <= 51) and (not (a1 <= x <= a2)))))
    return Q <= ((not P) <= (not(Q and (not A))))


R = []
M = [x/10 for x in range(0*10, 90*10)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 14.75 -> 14.8 -> 14.8999 -> 15


# endregion Урок: ************************************************************


# Евгений = [2.1, 5.1, 8.1, 12.1, 14.1, 15.1, 16.1, 23.1]
# КЕГЭ = []
# на следующем уроке:
