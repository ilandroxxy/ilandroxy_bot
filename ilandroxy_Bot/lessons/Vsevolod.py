
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 25 № 33104
# Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Например, у числа 6 есть два нетривиальных делителя: 2 и 3.
# Найдите все натуральные числа, принадлежащие отрезку [289123456; 389123456]
# и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе его наибольший нетривиальный делитель.
# Ответы расположите в порядке возрастания.
'''
def F(x):
    dl = set()  # тип коллекции set() - множество - неповторяются копии значений
    if round(x ** 0.5) == (x ** 0.5):
        for j in range(2, int(x**0.5)+1):  # не равный единице и самому числу.
            if x % j == 0:
                dl.add(j)
                dl.add(x // j)
    return sorted(dl)  # возвращаем список отсортированных по возрастанию делителей числа х

for x in range(289123456, 389123456+1):
    dl = F(x)  # кладем результат функции в переменную dl
    if len(dl) == 3:
        print(x, dl[-1])
'''
# Ответ:
# 294499921 2248091
# 352275361 2571353
# 373301041 2685619


# Тип 25 № 47022
# Пусть M(N)  — пятый по величине делитель натурального числа N без учёта самого числа и единицы. Например, M(1000)  =  100.
#
# Если у числа N меньше 5 различных делителей, не считая единицы и самого числа, считаем, что M(N)  =  0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 300000000, для которых M(N) > 0. В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.
'''
def F(x):
    dl=set()
    for j in range(2,int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
    return sorted(dl)
count=0
for x in range(300_000_000+1,400_000_000):
    dl=F(x)
    if len(dl)>=5:
        M=dl[-5]
        print(M)
        count+=1
        if count==5:
            break
'''
# Ответ:
# 17
# 1119403
# 151
# 16666667
# 27272728



# Тип 25 № 36880 i
# Найдите все натуральные числа N, принадлежащие отрезку [400_000_000; 600_000_000],
# которые можно представить в виде N=2**m*3**n,
# где m — чётное число, n — нечётное число.
# В ответе запишите все найденные числа в порядке возрастания.

# print(600_000_000)
# print(2**28)
# print(3**17)
'''
R = []
for m in range(0, 28+1, 2):
    for n in range(1, 17+1, 2):
        N = 2 ** m * 3 ** n
        if 400_000_000 <= N <= 600_000_000:
            R.append(N)

for x in sorted(R):
    print(x)
'''
# Ответ:
# 408146688
# 452984832
# 516560652
# 573308928


#
# № 2407 (Уровень: Гроб)
# (PRO100 ЕГЭ) Найдите все натуральные числа, принадлежащие отрезку [1 000 000 000 ; 2 000 000 000],
# у которых больше 100 различных нечётных делителей, количество чётных делителей может быть любым.
# И при этом число должно делиться на каждое из чисел: 7, 13, 17, 23, 29, но не делиться ни на 3, ни на 5.
# В ответе запишите количество подходящих чисел.
'''
def F(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if j % 2 != 0:
                dl.add(j)
            if (x // j) % 2 != 0:
                dl.add(x // j)
    return sorted(dl)

count = 0
for x in range(1_000_000_000, 2_000_000_000+1):
    if x % 7 == 0 and x % 13 == 0 and x % 17 == 0 and x % 23 == 0 and x % 29 == 0:
        if x % 3 != 0 and x % 5 != 0:
            dl = F(x)
            if len(dl) > 100:
                count += 1
                print(count)
'''
# Ответ: 73


# Тип 25 № 47229 i
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 1?2139*4,
# делящиеся на 2023 без остатка. В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 2023.


# print(10 ** 10)  # Среди натуральных чисел, не превышающих 10**10
# print('1?2139***4')
'''
import itertools
M = []
for star in range(0, 3+1):
    for s in itertools.product('0123456789', repeat=star):
        s = ''.join(s)
        M.append(s)

R = []
for x in M:
    for y in range(0, 10):
        A = int(f'1{y}2139{x}4')
        if A % 2023 == 0:
            R.append([A, A// 2023])

for x in sorted(R):
    print(*x)
'''
# Ответ:
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048


# Тип 25 № 45259 i
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 109, найдите все числа,
# соответствующие маске 12345?7?8, делящиеся на число 23 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 23.
'''
for x in range(0, 10):
    for y in range(0, 10):
        A = int(f'12345{x}7{y}8')
        if A % 23 == 0:
            print(A, A//23)
'''
# Ответ:
# 123450798 5367426
# 123451718 5367466
# 123453788 5367556
# 123454708 5367596
# 123456778 5367686
# 123459768 5367816


# endregion Урок: ******************************************************************


# todo: Всеволод = [2, 5.1, 8, 12, 14, 15, 16, 23, 25.1]
# на прошлом уроке: Прорешивали вторую часть 25 номера с масками
# на следующем уроке:
