
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************


# Решетка это однострочный комментарий

'''
Многострочный комментарий
'''


X = 4  # переменная X принимает значение 4

# Типы данных переменных
'''
a = 5  # int (integer) - целочисленные значения
print(type(a * 3.2))

b = 5.0  # float - число с плавающей точкой (дроби)

c = '5'  # str (string) - строковый тип данных содержит в себе: буквы, цифры, символы, слова, предложения и тд
print(a*4, c*4)

d1 = True
d2 = False  # bool (boolean) - основы математической логики или Булевой алгебры

print(a == c)  # равно ли a переменной c?
# Результат: False
'''

# Типы данных коллекций
'''
A = [1, 2, 3]  # list() - список
# Позволяет хранить неограниченное кол-во значений внутри
# Все значения могут иметь разные типы данных
# Даже можно положить внутрь - другую коллекцию
# Каждый элемент списка имеет порядковый номер - индекс
# Счет индексов начинается с 0
# Через индексы можем брать значения элемента или изменять его

B = (1, 2, 3)  # tuple() - кортеж
# Все аналогично списку, но изменять элементы нельзя

C = {1, 2, 3}  # set() - множество
# множество не имеет точного порядка
# не может содержать одинаковые элементы, то есть будет удалять копии
"""
M = [1,2,1,4,12,1, 1,3,1,21,12,3]
print(set(M))
"""
 
D = {1: 'one', 2: 'two', 3: 'three'}  # dict() - словарь
print(D)
# элементы списка разбиты на две части: ключ и значение
# доступ к значению элемента словаря осуществляется через его ключ
# Ключи повторяться не могут, каждый новый - удалит старый
'''

'''
M = [1, 2, 3]
M.append(4)
print(M)
print(M.append.__doc__)

print(range.__doc__)  # способ достать документацию к функции
'''

# Конвертация типов данных
'''
a = 4
print(a, type(a))

a = str(a)
print(a, type(a))

a = float(a)
print(a, type(a))

a = int(a)
print(a, type(a))

# Из int и float можно конвертировать в любую другую, а из str можно конвертировать, если строка состоит только лишь из цифр
'''

# Оформление функции вывода print()
'''
# "Привет, Всеволод, сегодня отличная погода, облачно, а температура 24 градуса."
name = input('Введите имя: ')  # функция ввода с клавиатуры строки
weather = 'облачно'
temperature = int(input('Введите температуру: '))
print("Привет,", name, "сегодня отличная погода,", weather, "а температура,", temperature, "градуса.")
print("Привет, " + name + " сегодня отличная погода, " + weather + " а температура, " + str(temperature) + " градуса.")  # concatenate - сложение двух и более строк вместе
print("Привет, {} сегодня отличная погода, {} а температура, {} градуса.".format(name, weather, temperature))
print(f"Привет, {name} сегодня отличная погода, {weather} а температура, {temperature} градуса.")  # f-строка


x = int(input('x: '))  # ввод с клавиатуры числа int
print(type(x))

M = [int(i) for i in input('Введите числа через пробел: ').split()]  
print(M)  # ввод с клавиатуры списка, через списочное выражение
'''

# Базова арифметика
'''
a = 7
b = 2

print(f'{a} + {b} = {a + b}\n'
      f'{a} - {b} = {a - b}\n'
      f'{a} * {b} = {a * b}')

print(f'Возвести число {a} в квадрат: {a} ** 2 = {a ** 2}')
print(f'Возвести число {a} в степени {b}: {a} ** {b} = {a ** b}')
print(f'Взять корень от числа 16: 16 ** 0.5 = {16 ** 0.5}')
print(f'Взять кубический корень от числа 27: 27 ** (1/3) = {27 ** (1/3)}')

import math as m  # импортируем встроенную библиотеку математики
print(m.factorial(5))

print(f'{a} / {b} = {a / b}\n'  # обычное вещественное деление
      f'{a} // {b} = {a // b}\n'  # взятие целой части (без округления)
      f'{a} % {b} = {a % b}')  # остаток от деления (от обыкновенной дроби)

# Проверить, чтобы число x являлось четным:
x = int(input('x: '))
if x % 2 == 0:
    print('Число четное')
else:
    print("Число нечетное")
'''

# Условные операторы
'''
x = int(input('x: '))
y = int(input('y: '))
if x > 0 and y > 0:
    print('1')
elif x > 0 and y < 0:
    print('4')
elif x < 0 and y > 0:
    print('2')
elif x < 0 and y < 0:
    print('3')
else:
    print("Лежит на какой-то оси")
'''

# endregion Урок: ******************************************************************



# todo: Всеволод = []
# на прошлом уроке: Прошли темы: Базовая теория типов данных, арифметические действия, Условные операторы
# на следующем уроке: Говорить про циклы, списки и строки, и решать 2, 14, 5, 8, 12
