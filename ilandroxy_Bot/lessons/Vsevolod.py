
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 17 № 47221
# В файле содержится последовательность целых чисел. Элементы последовательности могут принимать целые
# значения от −10000 до 10000 включительно. Определите количество пар последовательности, в которых только одно
# число оканчивается на 3, а сумма квадратов элементов пары не меньше квадрата максимального элемента
# последовательности, оканчивающегося на 3. В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную из сумм квадратов элементов таких пар. В данной задаче под парой подразумевается два идущих
# подряд элемента последовательности.

# i  0  1  2  3  4
M = [1, 2, 3, 4, 5]
#-i -5 -4 -3 -2 -1

# print('123453'[-1])
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if abs(i) % 10 == 3]
MAXI = max(A)

count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (abs(M[i]) % 10 == 3 and abs(M[i+1]) % 10 != 3) or (abs(M[i]) % 10 != 3 and abs(M[i+1]) % 10 == 3):
    # if (str(M[i])[-1] == '3' and str(M[i+1])[-1] != '3') or (str(M[i])[-1] != '3' and str(M[i+1])[-1] == '3'):
        if (M[i] ** 2 + M[i+1] ** 2) >= MAXI ** 2:
            count += 1
            maxi = max(maxi, M[i] ** 2 + M[i+1] ** 2)
print(count, maxi)
'''
# Ответ: 180 190360573


# Тип 9 № 33088
# Электронная таблица содержит результаты ежечасного измерения температуры воздуха на протяжении трёх
# месяцев. Определите, сколько раз за время наблюдений суточные колебания температуры (разность между максимальной и
# минимальной температурой в течение суток) были меньше 14 градусов.

# ValueError: could not convert string to float: '13,7'
'''
count = 0
for s in open('9.txt'):
    M = sorted([float(i) for i in s.replace(',', '.').split()])  # .split() разбиваем числа по пробелам
    # if max(M) - min(M) < 14:
    if M[-1] - M[0] < 14:
        count += 1
print(count)
'''
# Ответ: 6


# Тип 9 № 40725
# В каждой строке электронной таблицы записаны три натуральных числа, задающих длины трёх взаимно
# перпендикулярных рёбер прямоугольного параллелепипеда. Определите, сколько в таблице троек, для которых у заданного
# ими параллелепипеда можно так выбрать три грани с общей вершиной, что сумма площадей двух из них будет меньше
# площади третьей.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    if M[2] * M[1] > M[1] * M[0] + M[0] * M[2]:
        count += 1
print(count)
'''
# Ответ: 3119


#  Тип 9 № 48457
# В каждой строке электронной таблицы записаны шесть натуральных чисел.
#
# Определите, сколько в таблице строк, для которых выполнены следующие условия:
#
# — в строке встречается ровно четыре различных числа; два из них по два раза, два — по одному;
# — сумма повторяющихся чисел (без учёта повторений, то есть каждое число входит в сумму один раз)
# больше суммы неповторяющихся.
#
# В ответе запишите число — количество строк, для которых выполнены эти условия.
'''
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    if len(set(M)) == 4 and all(M.count(i) <= 2 for i in M):
        copied = sum(M) - sum(set(M))
        if copied > sum(M) - copied * 2:
            count += 1
print(count)
'''
# Ответ: 456.


# 5. КЕГЭ № 6897 OpenFIPI (Уровень: Средний)
# Откройте файл электронной таблицы, содержащей в каждой строке четыре натуральных числа.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
#
# – наибольшее из четырёх чисел меньше суммы трёх других;
# – четыре числа нельзя разбить на две пары чисел с равными суммами.
'''
import itertools
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    if max(M) < sum(M) - max(M):  # – наибольшее из четырёх чисел меньше суммы трёх других;
        # if all(A[0] + A[1] != A[2] + A[3] for A in itertools.permutations(M, 4)):
        if all(sum(A[:2]) != sum(A[2:]) for A in itertools.permutations(M, 4)):
            count += 1
print(count)
'''
# Ответ: 2396


# Тип 24 № 27687
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Y.
# Хотя бы один символ Y находится в последовательности.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
# Вариант 1
s = open('24.txt').readline()
count = 1
Max_count = 0
for i in range(0, len(s)-1):
    if s[i] == 'Y' and s[i+1] == 'Y':
        count += 1
        Max_count = max(Max_count, count)
    else:
        count = 1
print(Max_count)

# Вариант 2.1
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Z', ' ')
M = [len(i) for i in s.split()]
print(max(M))

# Вариант 2.2
print(max([len(i) for i in open('24.txt').readline().replace('X', ' ').replace('Z', ' ').split()]))

# Вариант 3
s = open('24.txt').readline()
print(s)
print(len('YYYYYYYYYY'))
'''
# Ответ: 10


# endregion Урок: ******************************************************************


# todo: Всеволод = [2, 5.1, 8, 9, 12, 14, 15, 16, 17, 23, 25]
# на прошлом уроке: Прорешали все 9 номера  и затронули 24 номер первого типа.
# на следующем уроке:
