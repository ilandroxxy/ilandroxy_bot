
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************

# Тип 15 № 27412 i
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наибольшего натурального числа А формула
#
# ¬ДЕЛ(x, А) → (ДЕЛ(x, 6) → ¬ДЕЛ(x, 9))
#
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?

'''
# Вариант 1
def F(x, A):
    return (x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))

for A in range(1, 10000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)

# Вариант 1.2
def F(x, A):
    return (x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))

for A in range(10000, 1-1, -1):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break

# Вариант 1.3
def F(x, A):
    return (x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))
R = []
for A in range(10000, 1-1, -1):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        R.append(A)
print(max(R))

# Вариант 2
def F(x):
    return (x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))

for A in range(1, 10000):
    if all(F(x) for x in range(1, 1000)):
        print(A)

# Вариант 2.1
def F(x):
    return (x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))

R = []
for A in range(1, 10000):
    if all(F(x) for x in range(1, 1000)):
        R.append(A)
print(max(R))

# Вариант 3
R = []
for A in range(1, 10000):
    if all(((x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))) for x in range(1, 1000)):
        R.append(A)
print(max(R))

# Вариант 4
print(max([A for A in range(1, 10000) if all(((x % A != 0) <= ((x % 6 == 0) <= (x % 9 != 0))) for x in range(1, 1000))]))
'''
# Ответ: 18



# Тип 15 № 18499 i
# Для какого наименьшего целого неотрицательного числа A выражение
#
# (2m + 3n > 40) ∨ ((m < A) ∧ (n ≤ A))
#
# тождественно истинно при любых целых неотрицательных m и n?
'''
# Вариант 1
def F(m, n):
    return (2*m + 3*n > 40) or ((m < A) and (n <= A))

for A in range(0, 1000):
    if all(F(m, n) for m in range(0, 100) for n in range(0, 100)):
        print(A)
        break

# Вариант 2
def F(m, n):
    return (2*m + 3*n > 40) or ((m < A) and (n <= A))
M = [i for i in range(0, 100)]
for A in M:
    if all(F(m, n) for m in M for n in M):
        print(A)
        break

# Вариант 3
print(min([A for A in range(0, 100) if all(((2*m + 3*n > 40) or ((m < A) and (n <= A))) for m in range(0, 100) for n in range(0, 100))]))
'''
# Ответ: 21


# Тип 15 № 34510 i
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
#
# Например, 14 & 5 = 1110_2 & 0101_2 = 0100_2 = 4.
#
# Для какого наименьшего неотрицательного целого числа А формула
#
# x&25 ≠ 0 → (x&9 = 0 → x&А ≠ 0)
#
# тождественно истинна (то есть принимает значение 1 при любом неотрицательном целом значении переменной х)?
'''
# Вариант 1
def F(x):
    return (x & 25 != 0) <= ((x & 9 == 0) <= (x & A != 0))

for A in range(0, 10000):
    if all(F(x) for x in range(0, 1000)):
        print(A)
        break

# Вариант 2
print(min([A for A in range(0, 1000) if all(((x & 25 != 0) <= ((x & 9 == 0) <= (x & A != 0))) for x in range(0, 1000))]))
'''
# Ответ: 16


# Тип 15 № 36028 i
# На числовой прямой даны два отрезка: P = [17,54] и Q=[37,83].
# Какова наименьшая возможная длина интервала A, что формула
#
# (x ∈ P) → (((x ∈ Q) ∧ ¬(x ∈ A)) → ¬(x ∈ P))
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x):
    P = 17 <= x <= 54
    Q = 37 <= x <= 83
    A = a1 <= x <= a2
    return P <= ((Q and (not A)) <= (not P))
    # return (17 <= x <= 54) <= (((37 <= x <= 83) and (not(a1 <= x <= a2))) <= (not(17 <= x <= 54)))
R = []
M = [i/5 for i in range(0*5, 100*5)]
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 17

# Тип 15 № 38590 i
# На числовой прямой даны два отрезка: D=[17;58] и C=[29;80].
# Укажите наименьшую возможную длину такого отрезка A, для которого логическое выражение
#
# (x∈D)→((¬(x∈C)∧¬(x∈A))→¬(x∈D))
#
# истинно (т.е. принимает значение 1) при любом значении переменной х.
'''
def F(x):
    D = 17 <= x <= 58
    C = 29 <= x <= 80
    A = a1 <= x <= a2
    return D <= (((not C) and (not A)) <= (not D))

R = []
M = [i/5 for i in range(0*5, 100*5)]
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# Ответ: 12


# Тип 15 № 15803 i
# На числовой прямой задано множество A. Известно, что формула
#
# ((x ∈ A) → (x**2 ≤ 100)) ∧ ((x**2 ≤ 64) → (x ∈ A))
#
# тождественно истинна при любом вещественном x. Какую наибольшую длину может иметь отрезок A?
'''
a = set(range(-100, 100))
def F(x,a):
    return ((x in a) <= (x**2 <= 100)) and ((x**2 <= 64) <= (x in a))

for x in range(-100, 100):
    if F(x, a) == False:
        a.remove(x)
print(len(a) - 1)
'''
# Ответ: 20


#
# № 4283 (Уровень: Средний)
# Элементами множеств А, P, Q являются натуральные числа,
# причём P={1,3,4,9,11,13,15,17,19,21}, Q={3,6,9,12,15,18,21,24,27,30}. Известно, что выражение
#
# ((x ∈ P) → (x ∈ A)) ∨ ((x ∉ A) → (x ∉ Q))
#
# истинно (т.е. принимает значение 1 при любом значении переменной х.
# Определите наименьшее возможное произведение элементов в множестве A.
'''
a = set()

def F(x, a):
    P = x in {1,3,4,9,11,13,15,17,19,21}
    Q = x in {3, 6, 9, 12, 15, 18, 21, 24, 27, 30}
    A = x in a
    return (P <= A) or ((not A) <= (not Q))

for x in range(-100, 100):
    if F(x, a) == False:
        a.add(x)
print(a)

print(9 * 3 * 21 * 15)
'''
# Ответ: 8505

# endregion Урок: ******************************************************************



# todo: Всеволод = [2, 5.1, 8, 12, 14, 15]
# на прошлом уроке: Разбирали 15 номер - все 5 типов задач и 5ть вариантов решения.
# на следующем уроке:
