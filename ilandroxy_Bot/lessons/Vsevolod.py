
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************

# Тип 14 № 18822
'''
# Значение выражения 49**8 + 7**24 - 7, записали в системе счисления с основанием 7.
# Сколько нулей в этой записи?
x = 49**8 + 7**24 - 7
n = 7  # переменная отвечающая за систему счисления

M = []
while x > 0:
    M.append(x % n)  # добавляет в конец списка число
    x //= n
M.reverse()  # разворачивает список
print(M.count(0))  # метод возвращающий кол-во вхождений в список
'''
# Ответ: 9

# Тип 14 № 48388
'''
# Операнды арифметического выражения записаны в системах счисления с основаниями 12 и 14:
#
# x231y_12 + 78x98y_14
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите значения x и y, при которых значение данного арифметического выражения будет наименьшим и кратно 99.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 99 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789ab':
    for y in '0123456789ab':
        A = int(f'{x}231{y}', 12)
        B = int(f'78{x}98{y}', 14)
        if (A + B) % 99 == 0:
            print((A + B) // 99)
            exit()
'''

'''
for x in range(0, 11+1):
    for y in range(0, 11+1):
        A = [x, 2, 3, 1, y]
        B = [7, 8, x, 9, 8, y]

        a = 0
        A.reverse()
        for i in range(0, len(A)):
            a += A[i] * 12 ** i

        b = 0
        B.reverse()
        for i in range(0, len(B)):
            b += B[i] * 14 ** i

        if (a + b) % 99 == 0:
            print((a + b) // 99)
            exit()
'''

'''
def my_int(A, n):
    a = 0
    A.reverse()
    for i in range(0, len(A)):
        a += A[i] * n ** i
    return a

for x in range(0, 11+1):
    for y in range(0, 11+1):
        A = [x, 2, 3, 1, y]
        B = [7, 8, x, 9, 8, y]

        a = my_int(A, 12)
        b = my_int(B, 14)

        if (a + b) % 99 == 0:
            print((a + b) // 99)
            exit()
'''
# Ответ: 41428

# print(int('123213124', 37))  # ValueError: int() base must be >= 2 and <= 36, or 0


# Правила математической логики на Python:
#  ¬y    --->  (not a)    инверсия (отрицание)
# y ∧ z  --->  y and z    конъюнкция (логическое умножение)
# x ∨ y  --->  x or y     дизъюнкция (логическое сложение)
# x → y  --->  x <= y     импликация   --->  (not x) or y
# z ≡ w  --->  z == w     тождество (сравнение)

# Тип 2 № 27260
# Логическая функция F задаётся выражением ((x ∨ ¬y) ∧ (¬z ≡ w))→(y∧z).
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий неповторяющиеся строки.
# Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных x, y, z, w.
'''
print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = ((x or (not y)) and ((not z) == w)) <= (y and z)
                if F == False:
                    print(x, y, z, w, F)

'''

# Тип 2 № 35891
# (y → z) ∧ ¬((y ∨ w) → (z ∧ x))
'''
print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (y <= z) and (not((y or w) <= (z and x)))
                if F == True:
                    print(x, y, z, w, F)
'''

# Тип 5 № 14221 i
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
# 1. Складываются отдельно первая и вторая цифры, а также вторая и третья цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 872. Суммы: 8+7 = 15; 7+2 = 9. Результат: 915.
#
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 714.
'''
for n in range(100, 1000):
    M = [int(i) for i in str(n)]
    a = M[0] + M[1]
    b = M[1] + M[2]

    r = str(min(a, b)) + str(max(a, b))

    if r == '714':
        print(n)
        break 
'''
# Ответ: 168


# Тип 5 № 10380 i
# Автомат получает на вход четырёхзначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая и вторая цифры, вторая и третья цифры, а также третья и четвёртая цифры.
# 2. Из полученных трёх чисел выбираются два наибольших и записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 9575. Суммы: 9 + 5 = 14; 5 + 7 = 12; 7 + 5 = 12. Наибольшие суммы: 14, 12. Результат: 1214.
#
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 1517.
'''
for n in range(1000, 10000):
    M = [int(i) for i in str(n)]
    a = M[0] + M[1]
    b = M[1] + M[2]
    c = M[2] + M[3]

    maxi = max(a, b, c)
    mini = min(a, b, c)
    sred = (a + b + c) - maxi - mini

    r = str(sred) + str(maxi)

    if r == '1517':
        print(n)
'''

'''
for n in range(10000-1, 1000-1, -1):  # если надо найти наибольшее через break
    M = [int(i) for i in str(n)]
    a = M[0] + M[1]
    b = M[1] + M[2]
    c = M[2] + M[3]

    maxi = max(a, b, c)
    mini = min(a, b, c)
    sred = (a + b + c) - maxi - mini

    r = str(sred) + str(maxi)

    if r == '1517':
        print(n)
        break
'''

'''
for n in range(1000, 10000):
    M = [int(i) for i in str(n)]
    a = M[0] + M[1]
    b = M[1] + M[2]
    c = M[2] + M[3]

    A = sorted([a, b, c])
    r = str(A[1]) + str(A[2])  # A[0] - наименьшее

    if r == '1517':
        print(n)
'''

'''
for n in range(1000, 10000):
    M = [int(i) for i in str(n)]
    A = sorted([M[0] + M[1], M[1] + M[2], M[2] + M[3]])
    r = str(A[1]) + str(A[2])  # A[0] - наименьшее

    if r == '1517':
        print(n)
'''
# Ответ: 9878

# endregion Урок: ******************************************************************



# todo: Всеволод = [2, 5.1, 14]
# на прошлом уроке: Повторили 14 номера, прорешали 2 номера, 5.1 номера первого типа. Строки и списки изучает сам на Stepik
# на следующем уроке: Разбираем 5.2 и номера 8, 12 на строки
