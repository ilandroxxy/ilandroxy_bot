# region Домашка:  ******************************************************************************
'''
byte = bit/8
print(byte)
I = 3200 / 32
print(I)
# ответ 100
'''
'''
# Тип 11 № 8101
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль,
# состоящий из 15 символов и содержащий только символы из 12-символьного набора:
# А, В, C, D, Е, F, G, H, К, L, M, N.
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое
# и минимально возможное целое число байт. При этом используют посимвольное кодирование паролей,
# все символы кодируют одинаковым и минимально возможным количеством бит.
# Кроме собственно пароля, для каждого пользователя в системе хранятся дополнительные сведения,
# для чего отведено 12 байт на одного пользователя.
# Определите объём памяти (в байтах), необходимый для хранения сведений о 50 пользователях.
# В ответе запишите только целое число  — количество байт.
symbol = 15
alphabet = 12
i = 4
bit = symbol * i
byte = bit / 8
print(byte)
I = (8+12) * 50
print(I)
# ответ 1000
'''
'''
# Тип 11 №
# 5270
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль,
# состоящий из 6 символов и содержащий только символы из 7-буквенного набора Н, О, Р, С, Т, У, X.
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое целое число байт,
# при этом для хранения сведений о 100 пользователях используется 1400 байт.
# Для каждого пользователя хранятся пароль и дополнительные сведения.
# Для хранения паролей используют посимвольное кодирование, все символы кодируются одинаковым и минимально возможным количеством бит.
# Сколько бит отведено для хранения дополнительных сведений о каждом пользователе?
symbol = 6
alphabet = 7
i = 3
bit = symbol * i
print(bit)
A = (1400 / 100) * 8
print(A)
I = 112 - 18
print(I)
# ответ 94
'''
'''
# Тип 11 №  11114
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль,
# состоящий из 9 символов и содержащий только символы из 26-символьного набора прописных латинских букв.
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое и минимально возможное целое число байт.
# При этом используют посимвольное кодирование паролей, все символы кодируют одинаковым и минимально возможным количеством бит.
# Кроме собственно пароля, для каждого пользователя в системе хранятся дополнительные сведения,
# для чего выделено целое число байт; это число одно и то же для всех пользователей.
# Для хранения сведений о 20 пользователях потребовалось 400 байт.
# Сколько байт выделено для хранения дополнительных сведений об одном пользователе? В ответе запишите только целое число  — количество байт.
symbol = 9
alphabet = 26
i = 5
bit = symbol * i
byte = bit / 8
print(byte)
A = 400 / 20
print(A)
I = 20 - 6
print(I)
'''

# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************

# № 6884 OpenFIPI (Уровень: Базовый)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа и слева ещё по одному или два разряда по следующему правилу:
# если N чётное, то в конец числа (справа) дописывается нуль, а в начало числа (слева)
# дописывается единица; если N нечётное, то в конец числа (справа) и в начало числа (слева) дописываются по две единицы.
# Например, для числа 13 двоичная запись 1101 преобразуется в запись 11110111.
#
# Полученная таким образом запись (в ней на два или четыре разряда больше, чем в записи исходного числа N)
# является двоичной записью искомого числа R.
#
# Укажите наименьшее число R, превышающее 225, которое может являться результатом работы данного алгоритма.
# В ответе это число запишите в десятичной системе счисления.
'''
M = []
for n in range(1, 1000):
    s = bin(n)[2:]

    if n % 2 == 0:
        s = '1' + s + '0'
    else:
        s = '11' + s + '11'

    r = int(s, 2)

    if r > 225:
        M.append(r)
print(min(M))
'''
# Показать ответ: 228


# № 6889 OpenFIPI (Уровень: Базовый)
# Для хранения сжатого произвольного растрового изображения размером 320 на 512 пикселей
# отведено 50 Кбайт памяти без учёта размера заголовка файла. Файл оригинального изображения больше сжатого на 55%.
# Для кодирования цвета каждого пикселя используется одинаковое количество бит, коды пикселей записываются
# в файл один за другим без промежутков. Какое максимальное количество цветов можно использовать в изображении?
'''
pixels = 320 * 512
I = 50 * 2 ** 13  # бит - сжатый
I2 = (I / 100) * 155
# I = pixels * i
print(I2 / pixels)
i = 3
Colors = 2 ** i
print(f'Кол-во цветов: {Colors}')
'''
# Показать ответ: 8


# № 7087 OpenFIPI (Уровень: Базовый)
# При регистрации в компьютерной системе каждому объекту присваивается идентификатор,
# состоящий из 250 символов и содержащий только десятичные цифры и символы из
# 1650-символьного специального алфавита. В базе данных для хранения каждого идентификатора
# отведено одинаковое и минимально возможное целое число байт.
# При этом используется посимвольное кодирование идентификаторов, все символы кодируются
# одинаковым и минимально возможным количеством бит. Определите объём памяти (в Кбайт),
# необходимый для хранения 65 536 идентификаторов. В ответе запишите только целое число – количество Кбайт.
'''
symbols = 250
alphabet = 1650 + 10
# alphabet = 2 ** i
i = 11  # бит на 1 символ
bit = symbols * i
print(bit / 8)  # 343.75 - прям точно точно вверх округялем
byte = 344  # на 1 ID
print((65536 * byte) / (2**10))  # 22016
'''
# Показать ответ: 22016


# № 6892 OpenFIPI (Уровень: Базовый)
# Определите количество шестизначных чисел, записанных в шестеричной системе счисления,
# в записи которых ровно одна цифра 2, при этом никакая нечётная цифра не стоит рядом с цифрой 2.

s = '012345'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        if slovo.count('2') == 1 and a != '0':
                            if all(x not in slovo for x in '12 21 23 32 25 52'.split()):  # ['12', '21', '23', '32', '25', '52']
                                count += 1
print(count)



# Показать ответ: 3700



# endregion Урок:  ******************************************************************************

# todo: беда: 5, 7, 8, 11, //  9, 15, 17, 24, 25
# todo: Екатерина = [1, 2, 3, 5, 6, 7.1, 8, 9.1, 11, 12, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 25.2]
# todo:    КЕГЭ   = [12]
# на прошлом уроке:  Повторяли 5, 7, 8, 11 номера
# на следующем уроке:


