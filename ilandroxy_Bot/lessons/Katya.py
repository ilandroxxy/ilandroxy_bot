# region Домашка:  ******************************************************************************


# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************

# № 8508 Апробация 17.05 (Уровень: Базовый)
# A. Прибавить 1
# B. Прибавить 2
# C. Умножить на 2
# Сколько существует программ, для которых при исходном числе 2 результатом является число 17,
# при этом траектория вычислений содержит число 9 и не содержит 12?
'''
def F(a, b):
    if a > b or a == 12:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a*2, b)

print(F(2, 9) * F(9, 17))



def F(a, b):
    if a >= b or a == 12:
        return a == b
    return F(a+1, b) + F(a+2, b) + F(a*2, b)

print(F(2, 9) * F(9, 17))
'''
# Показать ответ: 350


# № 8479 (Уровень: Базовый)
# 1. Вычти 5
# 2. Вычти 4
# 3. Раздели на 2
# Сколько существует программ, для которых при исходном числе 100 результатом является число 2,
# а траектория вычислений обязательно содержит числа 73, 22 и не содержит число 50?
'''
def F(a, b):
    if a <= b or a == 50:
        return a == b
    return F(a-5, b) + F(a-4, b) + F(a/2, b)

print(F(100, 73) * F(73, 22) * F(22, 2))
'''
# Показать ответ:
# 133760


#
# № 4711 Демоверсия 2023 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10**10, найдите все числа,
# соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в
# порядке возрастания, а во втором столбце – соответствующие им результаты деления этих чисел на 2023.
'''
from fnmatch import *
for x in range(2023, 10**10, 2023):  # делящиеся на 2023 без остатка
    if fnmatch(str(x), '1?2139*4'):  # соответствующие маске 1?2139*4
        print(x, x // 2023)
'''
# Показать ответ
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048


# № 4310 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# - символ "?" означает ровно одну произвольную цифру.
# - символ "*" означает любую последовательность цифр произвольной длины.
# Кроме того, "*" может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10**9, найдите все числа,
# соответствующие маске 2?34?56?8, делящиеся на число 151 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце - соответствующие им результаты деления этих чисел на 151.
'''
from fnmatch import *
for x in range(151, 10**9, 151):
    if fnmatch(str(x), '2?34?56?8'):
        print(x, x//151)
'''
# Показать ответ:
# 233445698 1545998
# 243405658 1611958
# 243485688 1612488
# 253445648 1678448
# 263405608 1744408
# 263485638 1744938


# № 8481 (Уровень: Базовый)
# (В. Рыбальченко) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 13*4?5 соответствуют числа 13405 и 1300425.
# Найдите все натуральные числа меньшие 10**8, которые кратны 237,
# соответствуют маске «81?2*80», но не соответствуют маске «*9*».
# В ответ в первом столбике перечислите все найденные числа
# в порядке возрастания, а во втором столбце – соответствующие им результаты деления этих чисел на 237.

'''
from fnmatch import *
for x in range(237, 10**8, 237):
    if fnmatch(str(x), '81?2*80'):
        if not fnmatch(str(x), '*9*'):
            print(x, x//237)
'''
# Показать ответ
# 815280 3440
# 8162280 34440
# 81324180 343140
# 81727080 344840
# 81821880 345240


# № 6210 (Уровень: Средний)
# (Н. Сафронов) Назовём маской числа последовательность цифр, в которой
# также могут встречаться следующие символы:
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Найдите все натуральные числа, не превосходящие 10**7, для которых выполняются одновременно все условия:

# • соответствуют маске *2?2*;
# • являются палиндромами;
# • делятся на число 53 без остатка;
# • количество делителей больше 30.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — сумму делителей.
'''
from fnmatch import *
for x in range(53, 10**7, 53):
    if fnmatch(str(x), '*2?2*'):
        if str(x) == str(x)[::-1]:
            divisors = set()
            for j in range(1, int(x**0.5)+1):
                if x % j == 0:
                    divisors.add(j)
                    divisors.add(x // j)
            if len(divisors) > 30:
                print(x, sum(divisors))
'''
# Ответ:
# 212212 508032
# 2527252 5588352
# 4282824 13789440
# 4626264 11787120
# 8125218 19595520
# 8824288 19908504



# № 8510 Апробация 17.05 (Уровень: Средний)
# Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов,
# среди которых никакие две буквы из набора букв N, O и P (с учетом повторений) не записаны подряд.
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
for x in 'NN NO ON NP PN OO OP PO PP'.split():
    s = s.replace(x, '* *')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 58



# № 7824 (Уровень: Средний)
# (М. Ишимов) Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов,
# среди которых никакие три буквы из набора букв A, B и С (с учетом повторений) не записаны подряд.
# Для выполнения этого задания следует написать программу.
'''
import itertools
M = []
for s in itertools.product('ABC', repeat=3):
    M.append(''.join(s))

s = open('24.txt').readline()
for x in M:
    s = s.replace(x, '** **')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 87


# № 8427 (Уровень: Средний)
# Файл содержит последовательность натуральных чисел, не превышающих 20 000.
# Назовём парой два идущих подряд элемента последовательности.

# Определите количество пар, для которых выполняются следующие условия:
# – ровно одно число в паре четырёхзначное;
# – сумма квадратов элементов пары без остатка делится на наименьшее
# в последовательности трёхзначное число, запись которого заканчивается цифрой 3.

# В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную из сумм квадратов элементов таких пар.
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if len(str(abs(i))) == 3 and abs(i) % 10 == 3]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (len(str(abs(M[i]))) == 4 and len(str(abs(M[i+1]))) != 4) or (len(str(abs(M[i]))) != 4 and len(str(abs(M[i+1]))) == 4):
        if (M[i] ** 2 + M[i+1] ** 2) % min(A) == 0:
            count += 1
            maxi = max(maxi, M[i] ** 2 + M[i+1] ** 2)
print(count, maxi)
'''
# Ответ: 74 433966217


# endregion Урок:  ******************************************************************************

# todo: Екатерина = [1, 2, 3, 5, 6, 7.1, 8, 9.1, 11, 12, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 25.2]
# todo:    КЕГЭ   = [8, 12, 15]
# на прошлом уроке:
# на следующем уроке: todo: не решаем: 23, 24, 25, 17


