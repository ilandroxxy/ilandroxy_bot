# region Домашка:  ******************************************************************************


# № 8467 (Уровень: Средний)
# (В. Рыбальченко) В каждой строке файла содержится 5 натуральных чисел.
# Необходимо посчитать количество строк, в которых выполняется только одно условие из:
# – Все числа различны;
# – Удвоенная сумма максимального и минимального меньше суммы трех оставшихся чисел.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    flag1 = False
    flag2 = False
    if len(set(M)) == len(M):
        flag1 = True
    if 2 * (M[0] + M[4]) < (M[1] + M[2] + M[3]):
        flag2 = True
    if flag1 + flag2 == 1:  # выполняется только одно условие из
        count += 1
print(count)
'''
# Ответ: 4720

# № 5946 (Уровень: Средний)
# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
#
# – в строке все числа различны;
# – количество чётных чисел превышает количество нечётных чисел.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    if len(set(M)) == len(M):
        chet = [i for i in M if i % 2 == 0]
        nechet = [i for i in M if i % 2 != 0]
        if len(chet) > len(nechet):
            count += 1
print(count)
'''
# Ответ: 1078

# № 5947 (Уровень: Базовый)

#    ПОКА нашлось(>1) ИЛИ нашлось(>2) ИЛИ нашлось(>3)
#       ЕСЛИ нашлось(>1)
#          ТО заменить(>1, 22>3)
#       ЕСЛИ нашлось(>2)
#          ТО заменить(>2, 2>)
#       ЕСЛИ нашлось(>3)
#          ТО заменить(>3, 11>2)

# На вход приведённой выше программы поступает строка, начинающаяся с символа «>»,
# а затем содержащая n цифр 1, n цифр 2 и n цифр 3 (3 ≤ n ≤ 50), расположенных в произвольном порядке.
# Определите количество значений n, при котором сумма числовых значений цифр строки,
# получившейся в результате выполнения программы кратна 7.
'''
count = 0
for n in range(3, 50+1):  # (3 ≤ n ≤ 50)
    s = '>' + '1'*n + '2'*n + '3'*n
    while '>1' in s or '>2' in s or '>3' in s:
        if '>1' in s:
            s = s.replace('>1', '22>3', 1)
        if '>2' in s:
            s = s.replace('>2', '2>', 1)
        if '>3' in s:
            s = s.replace('>3', '11>2', 1)
    # summ = s.count('1') + s.count('2') * 2 + s.count('3') * 3  # сумма числовых значений цифр строки
    summ = sum([int(i) for i in s if i.isdigit()])
    if summ % 7 == 0:
        count += 1
print(count)
'''
# Ответ: 48


# № 4986 (Уровень: Базовый)
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m»;
# и пусть на числовой прямой дан отрезок B = [50; 70].

# Для какого наибольшего натурального числа А формула
#
# ДЕЛ(x, A) ∨ (ДЕЛ(x, 23) → ¬(x ∈ B))
# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?
'''
def F(x, A):
    B = 50 <= x <= 70
    return (x % A == 0) or ((x % 23 == 0) <= (not B))

for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 1000)):
        print(A)
'''
# Показать ответ: 69


# № 5954 (Уровень: Базовый)
# Алгоритм вычисления значения функции
# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)=1 при n=1;
# F(n)=n×F(n−1), если n>1.
# Чему равно значение выражения (F(2023)−F(2022))/F(2020)?
'''
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n-1)


print((F(2023) - F(2022))/F(2020))  # RecursionError: maximum recursion depth exceeded
'''
# (F(2023) - F(2022))/F(2020)
# (F(2023) / F(2020)) - (F(2022) / F(2020))

# F(2023) = 2023 * F(2022)
# F(2022) = 2022 * F(2021)
# F(2021) = 2021 * F(2020) / F(2020)  # 2023 * 2022 * 2021

# F(2022) = 2022 * F(2021)
# F(2021) = 2021 * F(2020) / F(2020)  # 2022 * 2021
'''
print((2023 * 2022 * 2021) - (2022 * 2021))
'''
# Показать ответ: 8262826164



#
# № 7618 Досрочная волна 2023 (Уровень: Базовый)
# Алгоритм вычисления значения функции

# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)=n при n≥2025;
# F(n)=n+F(n+2), если n<2025.
#
# Чему равно значение выражения F(2022)−F(2023)?
'''
def F(n):
    if n >= 2025:
        return n
    if n < 2025:
        return n + F(n + 2)

print(F(2022) - F(2023))
'''


# № 2491 (Уровень: Базовый)
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от –10 000 до 10 000 включительно.
# Определите количество троек, в которых хотя бы один из трёх элементов меньше,
# чем среднее арифметическое всех чисел в файле, и десятичная запись всех трёх элементов тройки
# содержит цифру 9. В ответе запишите два числа: сначала количество найденных троек,
# а затем – максимальную сумму элементов таких троек. В данной задаче под тройкой
# подразумевается три идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
sred = sum(M) / len(M)  # чем среднее арифметическое всех чисел в файле
count = 0
maxi = 0
for i in range(0, len(M)-2):
    if M[i] < sred or M[i+1] < sred or M[i+2] < sred:
        if '9' in str(M[i]) and '9' in str(M[i+1]) and '9' in str(M[i+2]):
            count += 1
            maxi = max(maxi, M[i] + M[i+1] + M[i+2])
print(count, maxi)



M = [int(i) for i in open('17.txt')]
sred = sum(M) / len(M)  # чем среднее арифметическое всех чисел в файле
count = 0
maxi = 0
for i in range(0, len(M)-2):
    # if any(x < sred for x in M[i:i+2+1]):
    if any(x < sred for x in [M[i], M[i+1], M[i+2]]):
        if all('9' in str(x) for x in [M[i], M[i+1], M[i+2]]):
            count += 1
            maxi = max(maxi, M[i] + M[i+1] + M[i+2])
print(count, maxi)
'''
# Ответ: 345 17460





# endregion Урок:  ******************************************************************************

# todo: беда: 5, 7, 9, 11, 17, 24, 25
# todo: Екатерина = [1, 2, 3, 5, 6, 7.1, 8, 9.1, 11, 12, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 25.2]
# todo:    КЕГЭ   = [8, 12, 15]
# на прошлом уроке: Потупили над 17 номером, но успели за урок повторить: 9, 12, 15, 16
# на следующем уроке:


