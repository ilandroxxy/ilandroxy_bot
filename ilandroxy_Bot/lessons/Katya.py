# region Домашка:  ******************************************************************************

'''
# Тип 17 № 37369
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых разность элементов кратна 80, затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.

M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] - M[j]) % 80 == 0:
            count += 1
            maxi = max(maxi, M[i] - M[j])
print(count, maxi)

# ответ: 625876 9920
'''


'''
# Тип 17 № 39763 Добавить в вариант
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём тройкой три идущих подряд элемента последовательности.
# Определите количество троек чисел таких, которые могут являться сторонами остроугольного треугольника.
# В ответе запишите два числа: сначала количество найденных троек,
# а затем— максимальную сумму элементов таких троек.
# Если таких троек не найдётся— следует вывести 00.

M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-2):
    A = sorted([M[i], M[i+1], M[i+2]])
    if A[2]  2 < A[0]  2 + A[1] ** 2:
        count += 1
        maxi = max(maxi, sum(A))
print(count, maxi)
# ответ: 1175 29451
'''


# Тип 17 № 40733
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности. Определите количество пар,
# в которых хотя бы один из двух элементов делится на 3
# и хотя бы один из двух элементов меньше среднего арифметического всех чётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар,
# а затем— максимальную сумму элементов таких пар.

A = [int(i) for i in open('17.txt') if int(i) % 2 == 0]
sred = sum(A) / len(A)
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-1):
        if ((M[i] % 3 == 0) or (M[i+1] % 3 == 0)) and ((M[i] < sred) or (M[i+1] < sred)):
            count += 1
            maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# Ответ: 2288 14875.


'''
# Тип 17 № 37347 Добавить в вариант
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# для которых произведение элементов не кратно 14, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.

M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    for j in range(i + 1, len(M)):
        if ((M[i] * M[j]) % 14 != 0):
            count += 1
            maxi = max(maxi,(M[i] + M[j]))
print(count, maxi)

# ответ: 40436496 19999
'''

# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# Тип 24 № 27688
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Z.
# Хотя бы один символ Z находится в последовательности.

# Вариант 1
'''
s = open('24.txt').readline()
count = 1
max_count = 0
for i in range(0, len(s)-1):
    if s[i] == 'Z' and s[i+1] == 'Z':
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)
'''

# Вариант 2
'''
print(max([len(i) for i in open('24.txt').readline().replace('X', ' ').replace('Y', ' ').split()]))
# Ответ: 7
'''

# Вариант 3
'''
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Y', ' ')
M = [len(i) for i in s.split()]
print(max(M))
'''

# Вариант 4
# Открыть файл и нажать сочетание клавиш (в консоли) ctrl+f  (поиск)
'''
s = open('24.txt').readline()
print(s)
print(len('ZZZZZZZ'))
'''
# Ответ: 7


# Тип 24 № 36037 i
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд символов, среди которых нет подстроки 444.
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
# Вариант 1
print(3+max(len(i) for i in open('24.txt').readline().replace('XZZY', ' ').split())+3)
# Ответ: 1713

# Вариант 2
s = open('24.txt').readline()
count = 3
max_count = 0
for i in range(0, len(s)-3):
    if s[i] == 'X' and s[i+1] == 'Z' and s[i+2] == 'Z' and s[i+3] == 'Y':
        count = 3
    else:
        count += 1
        max_count = max(max_count, count)
print(max_count)

# Вариант 3
s = open('24.txt').readline()
count = 3
max_count = 0
for i in range(0, len(s)-3):
    if s[i:i+4] == 'XZZY':
        count = 3
    else:
        count += 1
        max_count = max(max_count, count)
print(max_count)
'''
# Ответ: 1713




# endregion Урок:  ******************************************************************************


# todo: Екатерина = [2, 5, 8, 9.1, 12, 14+, 15+, 16, 17, 23, 25.2]
# на прошлом уроке: Начали разбирать 24 номер, прорешали задачи на строки (базовые)
# на следующем уроке:


