# region Домашка:  ******************************************************************************
'''
byte = bit/8
print(byte)
I = 3200 / 32
print(I)
# ответ 100
'''
'''
# Тип 11 № 8101
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль,
# состоящий из 15 символов и содержащий только символы из 12-символьного набора:
# А, В, C, D, Е, F, G, H, К, L, M, N.
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое
# и минимально возможное целое число байт. При этом используют посимвольное кодирование паролей,
# все символы кодируют одинаковым и минимально возможным количеством бит.
# Кроме собственно пароля, для каждого пользователя в системе хранятся дополнительные сведения,
# для чего отведено 12 байт на одного пользователя.
# Определите объём памяти (в байтах), необходимый для хранения сведений о 50 пользователях.
# В ответе запишите только целое число  — количество байт.
symbol = 15
alphabet = 12
i = 4
bit = symbol * i
byte = bit / 8
print(byte)
I = (8+12) * 50
print(I)
# ответ 1000
'''
'''
# Тип 11 №
# 5270
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль,
# состоящий из 6 символов и содержащий только символы из 7-буквенного набора Н, О, Р, С, Т, У, X.
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое целое число байт,
# при этом для хранения сведений о 100 пользователях используется 1400 байт.
# Для каждого пользователя хранятся пароль и дополнительные сведения.
# Для хранения паролей используют посимвольное кодирование, все символы кодируются одинаковым и минимально возможным количеством бит.
# Сколько бит отведено для хранения дополнительных сведений о каждом пользователе?
symbol = 6
alphabet = 7
i = 3
bit = symbol * i
print(bit)
A = (1400 / 100) * 8
print(A)
I = 112 - 18
print(I)
# ответ 94
'''
'''
# Тип 11 №  11114
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль,
# состоящий из 9 символов и содержащий только символы из 26-символьного набора прописных латинских букв.
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое и минимально возможное целое число байт.
# При этом используют посимвольное кодирование паролей, все символы кодируют одинаковым и минимально возможным количеством бит.
# Кроме собственно пароля, для каждого пользователя в системе хранятся дополнительные сведения,
# для чего выделено целое число байт; это число одно и то же для всех пользователей.
# Для хранения сведений о 20 пользователях потребовалось 400 байт.
# Сколько байт выделено для хранения дополнительных сведений об одном пользователе? В ответе запишите только целое число  — количество байт.
symbol = 9
alphabet = 26
i = 5
bit = symbol * i
byte = bit / 8
print(byte)
A = 400 / 20
print(A)
I = 20 - 6
print(I)
'''

# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************

# Тип 8 № 35466
# Вероника составляет 3-буквенные коды из букв В, Е, Р, О, Н, И, К, А,
# причём буква В должна входить в код ровно один раз.
# Все полученные коды Вероника записала в алфавитном порядке и пронумеровала.

# Начало списка выглядит так:
# 1. ААВ
# 2. АВА
# 3. АВЕ
#
# На каком месте будет записан первый код, не содержащий ни одной буквы А?
'''
# s = sorted(['В','Е','Р','О','Н','И','К','А'])
s = sorted('ВЕРОНИКА')  # нет смысла разбивать строчку на список самостоятельно
SpisokSlov = ['0']  # пусть элемент под индексом 0 равен '0'. Первое слово начнется с 1.
for a in s:
    for b in s:
        for c in s:
            temp = a+b+c
            if temp.count('В') == 1:
                SpisokSlov.append(temp)

for i in range(1, len(SpisokSlov)):  # начинаем перебор с 1, чтобы не трогать '0'
    if SpisokSlov[i].count('А') == 0:  # если найдется слово без букв А, то прервем перебор
        print(i, SpisokSlov[i])
        break
'''
# Ответ: 23


# № 7700 (Уровень: Базовый)
# (Грачев Н.) Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
# Дана программа для Редактора:
#
# НАЧАЛО
#    ПОКА нашлось(31) ИЛИ нашлось(32) ИЛИ нашлось(30)
#       ЕСЛИ нашлось(31)
#          ТО заменить(31, 223)
#       КОНЕЦ ЕСЛИ
#       ЕСЛИ нашлось(32)
#          ТО заменить(32, 23)
#       КОНЕЦ ЕСЛИ
#       ЕСЛИ нашлось(30)
#          ТО заменить(30, 13)
#       КОНЕЦ ЕСЛИ
#    КОНЕЦ ПОКА
#    заменить(3,0)
# КОНЕЦ

# На вход приведённой выше программе поступает строка, начинающаяся с тройки,
# а затем содержащая 40 цифр «0», n цифр «1» и 40 цифр «2».
#
# Определите наименьшее значение n, при котором сумма числовых значений цифр строки,
# получившейся в результате выполнения программы, является трехзначным числом, состоящем из трех одинаковых цифр.
'''
for n in range(1, 1000):
    s = '3' + '0' * 40 + '1' * n + '2' * 40  #  начинающаяся с тройки

    while '31' in s or '32' in s or '30' in s:
        if '31' in s:
            s = s.replace('31', '223', 1)
        if '32' in s:
            s = s.replace('32', '23', 1)
        if '30' in s:
            s = s.replace('30', '13', 1)
    s = s.replace('3', '0', 1)

    summ = sum([int(i) for i in s])
    if 100 <= summ <= 999:
        A = [int(i) for i in str(summ)]
        if A.count(A[0]) == 3:
            print(A, summ)
            print(n)
            break
'''
# Показать ответ: 81

#
# № 6854 (Уровень: Средний)
#
# На выполнение Редактору дана следующая программа:
#
# ПОКА нашлось(7777) ИЛИ нашлось(1111)
#   ЕСЛИ нашлось(7777)
#     ТО заменить(7777,1)
#     ИНАЧЕ заменить(1111,7)
#   КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА

# На вход программе подана строка из 256 подряд идущих символов 7.
# Сколько 7 будет заменено в ходе работы программы?
'''
s = '7' * 256
count = 0
while '7777' in s or '1111' in s:
    if '7777' in s:
        s = s.replace('7777', '1', 1)
        count += 4
    else:
        s = s.replace('1111', '7', 1)
print(count)
'''
# Показать ответ: 272

# endregion Урок:  ******************************************************************************


# todo: Екатерина = [1, 2, 3, 5, 6, 7.1, 8, 9.1, 11, 12, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 25.2]
# todo:    КЕГЭ   = [12]
# на прошлом уроке: Повторяли 8, 12 номера (брали задачи с КЕГЭ)
# на следующем уроке:


