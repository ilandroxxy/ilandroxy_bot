# Домашка:

# количество пятерок
'''
a = 0
x = int(input('x: '))
while x <= 5 and x > 0:
    if x == 5:
        a += 1
    x = int(input('x: '))
print(a)
'''


'''
# пока делимся
x = int(input())
while x % 7 == 0:
    print(x)
    x = int(input())
'''

# квадрат числа
'''
x = int(input())
n = x ** 2
print('Kвадрат числа', x, 'равен', n)
print(f'Kвадрат числа {x} равен {n}')
'''


# Правила алгебры логики на Python
#  ¬y    <--->  (not(y))    - инверсия (отрицание)
# w ∧ z  <--->  w and z  - конъюнкция (логическое умножение)
# x ∨ z  <--->  x or z   - дизъюнкция (логическое сложение)
# z → x  <--->  z <= x   - импликация
# x ≡ w  <--->  x == w   - тождество (равны ли)


# Тип 2 № 38534
"""
# Миша заполнял таблицу истинности логической функции F
# ¬(y→(x≡w))∧(z→x),
# но успел заполнить лишь фрагмент из трёх различных её строк,
# даже не указав, какому столбцу таблицы соответствует каждая из переменных w, x, y, z.

print('x y z w F')
for x in range(2):  # [0, 2)
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (not(y <= (x == w))) and (z <= x)  # ¬(y→(x≡w))∧(z→x)
                if F == True:
                    print(x, y, z, w, F)
"""

# Тип 2 № 46999
# Логическая функция F задаётся выражением (x ≡ (y → z)) ∧ (¬w → (x ≡ y)).
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F,
# содержащий неповторяющиеся строки. Определите, какому столбцу таблицы
# истинности функции F соответствует каждая из переменных x, y, z, w.

print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (x == (y <= z)) and ((not(w)) <= (x == y))
                if F == True:
                    print(x, y, z, w, F)




# todo: на следующем уроке разбираем списки и начало 14 номера

