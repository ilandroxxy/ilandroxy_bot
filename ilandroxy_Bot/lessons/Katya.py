# region Домашка:  ******************************************************************************



# Тип 25 № 41000
'''
# Пусть M(N)— сумма двух наибольших различных натуральных делителей натурального числа N,
# не считая самого числа и единицы. Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 11000000,
# для которых 0<M(N)<10000.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 4:
                return sorted(dl)
    return sorted(dl)

k = 0
for n in range(11_000_000+1, 22_000_000):
    dl = D(n)
    if len(dl) >= 2:
        M = dl[-2] + dl[-1]
        if 0 < M < 10000:
            print(n, M)
            k += 1
            if k == 5:
                break

# Ответ:
# 8672
# 8388
# 8532
# 7042
# 7364
'''




# Тип 25 № 40741
''' 
# Пусть M(N)— сумма двух наибольших различных натуральных делителей натурального числа N,
# не считая самого числа.
# Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 10000000, для которых 0<M(N)<10000.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел
# N.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 4:
                return sorted(dl)
    return sorted(dl)

k = 0
for n in range(10_000_000+1, 20_000_000):
    dl = D(n)
    if len(dl) >= 2:
        M = dl[-2] + dl[-1]
        if 0 < M < 10000:
            print(n, M)
            k += 1
            if k == 5:
                break
# Ответ: 
# 6876
# 6374
# 6924
# 8024
# 8358
'''


'''
# Тип 25 № 28120 Добавить в вариант
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [201455; 201470],
# числа, имеющие ровно 4 различных натуральных делителя.
# Выведите эти четыре делителя для каждого найденного числа в порядке возрастания.
def D(x):
    dl = set()
    for j in range(1, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 4:
                return sorted(dl)
    return sorted(dl)

for n in range(201455, 201470+1):
    dl = D(n)
    if len(dl) == 4:
        print(*dl)

# ответ:
# 1 3 67153 201459
# 1 13 15497 201461
# 1 29 6947 201463
# 1 2 100733 201466
'''

# Тип 25 № 46983
'''
# Пусть M(N) — пятый по величине делитель натурального числа N без учёта самого числа и единицы.
#
# Если у числа N меньше 5 различных делителей, не считая единицы и самого числа, считаем, что M(N) = 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 460000000, для которых M(N) > 0.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 10:
                return sorted(dl)
    return sorted(dl)

k = 0
for n in range(460_000_000+1, 500_000_000):
    dl = D(n)
    if len(dl) >= 5:
        M = dl[-5]
        if M > 0:
            print(n, M)
            k += 1
            if k == 5:
                break
'''
# Ответ:
# 41818182
# 261959
# 5
# 271
# 57500001


# Тип 25 № 36038
'''
# Пусть M — сумма минимального и максимального натуральных делителей целого числа,
# не считая единицы и самого числа. Если таких делителей у числа нет, то считаем значение M равным нулю.
#
# Напишите программу, которая перебирает целые числа, большие 452021,
# в порядке возрастания и ищет среди них такие, для которых значение M при делении на 7 даёт в остатке 3.
# Вывести первые 5 найденных чисел и соответствующие им значения M.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число,
# затем — значение М
# Строки выводятся в порядке возрастания найденных чисел.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 10:
                return sorted(dl)
    return sorted(dl)

k = 0
for n in range(452021+1, 500_000_000):
    dl = D(n)
    if len(dl) >= 5:
        M = dl[0] + dl[-1]
        if M % 7 == 3:
            print(n, M)
            k += 1
            if k == 5:
                break
'''
# Ответ:
# 452025 150678
# 452029 23810
# 452034 226019
# 452048 226026
# 452062 226033

# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# Тип 25 № 47229
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**10,
# найдите все числа, соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.

# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 2023.

# print(10**10)
# print('1?2139***4')

my_dict = {}  # создаем свой словарь
for x in '0123456789':
    for y in range(0, 1000):
        A = int(f'1{x}2139{y}4')
        if A % 2023 == 0:
            my_dict[A] = A // 2023

for key in sorted(my_dict):
    print(key, my_dict[key])
'''
# Ответ:
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048



# Тип 25 № 33495
'''
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения двух натуральных чисел
# и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [2000000;3000000],
# у которых составленное описанным способом множество разностей будет содержать не меньше трёх элементов, не превышающих 115.
# В ответе перечислите найденные числа в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if (x//j) - j <= 115:  # не превышающих 115.
                dl.add((x//j) - j)
                if len(dl) >= 3:
                    return sorted(dl)
    return sorted(dl)

for x in range(2000000, 3000000+1):
    dl = D(x)
    if len(dl) >= 3:
        print(x)
'''
# Ответ:
# 2053440
# 2098080
# 2328480
# 2638944



# Тип 25 № 27856
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632; 95650],
# числа, имеющие ровно шесть различных нечётных натуральных делителей (при этом количество четных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if j % 2 != 0:
                dl.add(j)
            if (x // j) % 2 != 0:
                dl.add(x//j)
            if len(dl) > 6:
                return sorted(dl)
    return sorted(dl)

for x in range(95632, 95650+1):
    dl = D(x)
    if len(dl) == 6:
        print(*dl)
'''
# Ответ:
# 1 3 9 10627 31881 95643
# 1 7 49 61 427 2989
# 1 5 25 1913 9565 47825



# № 4900 (Уровень: Базовый) (А. Агафонцев)
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди чисел не превышающих 10**7, найдите 5 наибольших чисел, удовлетворяющих маске 9?*55*7.
# Выведите эти числа в порядке возрастания, справа от каждого числа выведите остаток от деления суммы его делителей на 21.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
    return dl

M = set()
for x in '9':
    for y in range(9, 100):
        A = int(f'9{x}{y}557')
        if A <= 10**7:
            M.add(A)

M = sorted(M)
for x in M[-5:]:
    dl = D(x)
    print(x, sum(dl) % 21)
'''
# 9995597 18
# 9996557 12
# 9997557 12
# 9998557 17
# 9999557 0





# endregion Урок:  ******************************************************************************


# todo: Екатерина = [2, 5, 8, 12, 14+, 15+, 16, 23, 25.2]
# на прошлом уроке: Ответили на вопросы по 25 и разбираем 17
# на следующем уроке:



