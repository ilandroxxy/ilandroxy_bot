# region Домашка:  ******************************************************************************


# Тип 15 № 11119
'''
# На числовой прямой даны два отрезка: P = [20, 50] и Q = [30,65]. Отрезок A таков, что формул
# ¬(x ∈ A) → ((x ∈ P) →¬ (x ∈ Q))
# истинна при любом значении переменной x. Какова наименьшая возможная длина отрезка A?
def F(x):
    P = 20 <= x <= 50
    Q = 30 <= x <= 65
    A = a1 <= x <= a2
    return (not A) <= (P <= (not Q))

M = [i/4 for i in range(1*4, 80*4)]
Result = []

for a1 in M:
    for a2 in M:
        if all(F(x) for x in M) == True:
            Result.append(a2 - a1)
print(min(Result))
# Ответ: 20
'''

'''
# Тип 15 № 8106 
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наибольшего натурального числа А формула
# ¬ДЕЛ(x, А) → (ДЕЛ(x, 6) → ¬ДЕЛ(x, 4))
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?
def F(x, A):
    Q = (x % A != 0)
    W = (x % 6 == 0)
    R = (x % 4 != 0)
    return Q <= (W <= R)

for A in range(1, 10000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
#ответ: 12
'''

'''
# Тип 15 № 34513 
# Обозначим через m & n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Например, 14 & 5 = 1110_2 & 0101_2 = 0100_2 = 4.
# Для какого наименьшего неотрицательного целого числа А формул
# x&33 = 0 → (x&45 != 0 → x&А != 0)
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной х)?

def F(x, A):
    Q = (x & 33 == 0)
    W = (x & 45 != 0)
    R = (x & A != 0)
    return Q <= (W <= R)

for A in range(0, 1000):
    flag = True
    for x in range(0, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
# ответ: 12
'''

'''
# Тип 15 № 16894 
# Для какого наименьшего целого неотрицательного числа A выражение
# (2x + 3y ≠ 60) ∨ (A ≥ x) ∨ (A ≥ y)
# тождественно истинно при любых целых неотрицательных x и y?
def F(x, y, A):
    return ((2 * x + 3 * y) != 60) or (A >= x) or (A >= y)
for A in range(0, 1000):
    flag = True
    for x in range(0, 1000):
        for y in range(0, 1000):
            if F(x, y, A) == False:
                flag = False
                break
    if flag == True:
        print(A)
#ответ: 12
'''

# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************


# Тип 25 № 27852
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [185311;185330],
# числа, имеющие ровно четыре различных натуральных делителя.
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 4:
                return sorted(dl)
    return sorted(dl)


for n in range(185311, 185330+1):
    dl = D(n)
    if len(dl) == 4:
        print(*dl)
'''
# Ответ:
# 1 2 92657 185314
# 1 47 3943 185321
# 1 241 769 185329




# Тип 25 № 27856
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632;95650],
# числа, имеющие ровно шесть различных нечётных натуральных делителей (при этом количество четных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if j % 2 != 0:
                dl.add(j)
            if (x//j) % 2 != 0:
                dl.add(x//j)
            if len(dl) > 6:
                return sorted(dl)
    return sorted(dl)

for n in range(95632, 95650+1):
    dl = D(n)
    if len(dl) == 6:
        print(*dl)
'''
# Ответ:
# 1 3 9 10627 31881 95643
# 1 7 49 61 427 2989
# 1 5 25 1913 9565 47825


# Тип 25 № 27851
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [210235;210300], числа,
# имеющие ровно четыре различных натуральных делителя, не считая единицы и самого числа.
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 4:
                return sorted(dl)
    return sorted(dl)


for n in range(210235, 210300+1):
    dl = D(n)
    if len(dl) == 4:
        print(*dl)
'''
# Ответ:
# 2 4 52561 105122
# 2 4 52567 105134
# 2 4 52571 105142



# Тип 25 № 28121
'''
# Напишите программу, которая ищет среди целых чисел,
# принадлежащих числовому отрезку [2422000; 2422080], простые числа.
# Выведите все найденные простые числа в порядке возрастания, слева от каждого числа
# выведите его номер по порядку, считая, что первое найденное число имеет номер «1», второе — «2», и т.д.

def Simpler(x):
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            return False
    return True

for n in range(2422000, 2422080+1):
    if Simpler(n) == True:
        print(n)
      '''
# Ответ:
# 2422027
# 2422033
# 2422037
# 2422073



# Тип 25 № 38603
'''
# Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то значение M считается равным нулю.
#
# Напишите программу, которая перебирает целые числа, бо́льшие 700000,
# в порядке возрастания и ищет среди них такие, для которых значение M оканчивается на 8.
# Выведите первые пять найденных чисел и соответствующие им значения M.
#
# Формат вывода: для каждого из пяти таких найденных чисел
# в отдельной строке сначала выводится само число, затем — значение М.
#
# Строки выводятся в порядке возрастания найденных чисел.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)

    return sorted(dl)

k = 0
for n in range(700000, 10000000):
    dl = D(n)
    if len(dl) >= 2:
        M = dl[0] + dl[-1]
        if M % 10 == 8:
            print(n, M)
            k += 1
            if k == 5:
                break
'''
# Ответ:
# 700005 233338
# 700007 100008
# 700012 350008
# 700015 140008
# 700031 241688


# Тип 25 № 38959
'''
# Пусть M(N)— произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы.
# Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
#
# Найдите 5 наименьших натуральных чисел, превышающих 200_000_000, для которых 0<M(N)<N.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 10:
                return sorted(dl)
    return sorted(dl)

k = 0
for n in range(200_000_000+1, 400_000_000):
    dl = D(n)
    if len(dl) >= 5:
        M = dl[0] * dl[1] * dl[2] * dl[3] * dl[4]
        if 0 < M < n:
            print(n, M)
            k += 1
            if k == 5:
                break
'''
# Ответ:
# 200000004 1728
# 200000008 21632
# 200000010 1260
# 200000016 1152
# 200000019 4127787



# Тип 25 № 33495
'''
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения двух
# натуральных чисел и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [2000000;3000000],
# у которых составленное описанным способом множество разностей будет содержать не меньше трёх элементов,
# не превышающих 115.
# В ответе перечислите найденные числа в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if (x//j) - j <= 115:
                dl.add((x//j) - j)
                if len(dl) >= 3:
                    return sorted(dl)
    return sorted(dl)

for n in range(2000000, 3000000+1):
    dl = D(n)
    if len(dl) >= 3:
        print(n)
'''
# Ответ:
# 2053440
# 2098080
# 2328480
# 2638944


# Тип 25 № 45259
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10**9, найдите все числа, соответствующие маске 12345?7?8, делящиеся на число 23 без остатка.

# 12345?7?8
for x in '0123456789':
    for y in '0123456789':
        r = int(f'12345{x}7{y}8')
        if r % 23 == 0:
            print(r, r // 23)
'''
# Ответ:
# 123450798 5367426
# 123451718 5367466
# 123453788 5367556
# 123454708 5367596
# 123456778 5367686
# 123459768 5367816



# Тип 25 № 47229
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
#
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 2023.

# 1?2139***4
# 10000000000
# 10000000000
print(10**10)

for x in '0123456789':
    for y in range(0, 1000):
        r = int(f'1{x}2139{y}4')
        if r % 2023 == 0:
            print(r, r//2023)
'''
# Ответ:
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048
# 162139404 80148


# endregion Урок:  ******************************************************************************


# todo: Екатерина = [2, 5, 8, 12, 14+, 15+, 16, 23, 25.1], на следующем уроке: Ответить на вопросы по 25 и разбираем 17


