# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# Теория для номера 17 номера

# Как открывать файлы .txt
'''
f = open('17.txt')
M = [int(i) for i in f]
print(M)

M = [int(i) for i in open('17.txt')]

with open('17.txt', 'r') as f:  # если работать с файлами при хорошем тоне.
    M = [int(i) for i in f]
'''

# Как перебирать пары
'''
M = [1, 2, 3, 4, 5]

# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(0, len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')
print('\n')

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(0, len(M)-2):
    print(f'{M[i]}{M[i+1]}{M[i+2]}', end=' ')
print('\n')

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        print(f'{M[i]}{M[j]}', end=' ')
    print()
'''



# Тип 17 № 38951
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 3, а их сумма делится на 5.
# В ответе запишите два числа: сначала количество найденных пар, а затем – максимальную сумму элементов таких пар.

M = [int(i) for i in open('17.txt')]

count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 3 == 0 or M[i+1] % 3 == 0) and (M[i] + M[i+1]) % 5 == 0:
        count += 1
        maxi = max(maxi, M[i] + M[i+1])
        # if maxi < M[i] + M[i+1]:
        #     maxi = M[i] + M[i+1]
print(count, maxi)
'''
# Ответ: 635 19730




# Тип 17 № 39764
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём тройкой три идущих подряд элемента последовательности.
# Определите количество троек чисел таких, которые могут являться сторонами прямоугольного треугольника.
# В ответе запишите два числа: сначала количество найденных троек, а затем — максимальную сумму элементов таких троек.
# Если таких троек не найдётся — следует вывести 00.

M = [int(i) for i in open('17.txt')]

count = 0
maxi = 0
for i in range(0, len(M)-2):
    A = sorted([M[i], M[i+1], M[i+2]])
    if A[2] ** 2 == A[0] ** 2 + A[1] ** 2:
        count += 1
        maxi = max(maxi, sum(A))
print(count, maxi)
'''


# Тип 17 № 46975
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых один из двух элементов делится на 3,
# а другой меньше среднего арифметического всех чётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.

# Вариант 1
'''
M = [int(i) for i in open('17.txt')]

summ = 0
kol = 0
for i in range(0, len(M)):
    if M[i] % 2 == 0:
        summ += M[i]
        kol += 1
sred = summ / kol


count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 3 == 0 and M[i+1] < sred) or (M[i+1] % 3 == 0 and M[i] < sred):
        count += 1
        maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''

# Вариант 2
'''
A = [int(i) for i in open('17.txt') if int(i) % 2 == 0]
sred = sum(A) / len(A)

M = [int(i) for i in open('17.txt')]

count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 3 == 0 and M[i+1] < sred) or (M[i+1] % 3 == 0 and M[i] < sred):
        count += 1
        maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# Ответ: 1711 14666



# Тип 17 № 37373
'''
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых разность элементов кратна 36 и хотя бы один из элементов кратен 13, затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.

M = [int(i) for i in open('17.txt')]

count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] - M[j]) % 36 == 0 and (M[i] % 13 == 0 or M[j] % 13 == 0):
            count += 1
            maxi = max(maxi, M[i] - M[j])
print(count, maxi)
'''
#  Ответ: 212587 9972



# Тип 17 № 47221
'''
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от −10000 до 10000 включительно.
# Определите количество пар последовательности, в которых только одно число оканчивается на 3,
# а сумма квадратов элементов пары не меньше квадрата максимального элемента последовательности, оканчивающегося на 3.
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную из сумм квадратов элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.

A = [int(i) for i in open('17.txt') if int(i) % 10 == 3]
max_elem = max(A)


M = [int(i) for i in open('17.txt')]

count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (str(M[i])[-1] == '3' and str(M[i+1])[-1] != '3') or (str(M[i])[-1] != '3' and str(M[i+1])[-1] == '3'):
        if M[i]**2 + M[i+1]**2 >= max_elem**2:
            count += 1
            maxi = max(maxi, M[i]**2 + M[i+1]**2)
print(count, maxi)
'''
# 180 190360573.




# Тип 17 № 37340
'''
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# разность которых четна и хотя бы одно из чисел делится на 31, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.

M = [int(i) for i in open('17.txt')]

count = 0
maxi = 0
for i in range(len(M)):
    for j in range(i+1, len(M)):
        if (M[i] - M[j]) % 2 == 0:
            if M[i] % 31 == 0 or M[j] % 31 == 0:
                count += 1
                maxi = max(maxi, M[i] + M[j])
print(count, maxi)
'''
# Ответ: 1569269 19982


# endregion Урок:  ******************************************************************************


# todo: Екатерина = [2, 5, 8, 12, 14+, 15+, 16, 17, 23, 25.2]
# на прошлом уроке: Разобрали 17 номер, все типы задач с РЕШУ ЕГЭ
# на следующем уроке:



