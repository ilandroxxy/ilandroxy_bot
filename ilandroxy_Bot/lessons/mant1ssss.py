# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Единицы измерения информации
# 1 бит
# 1 байт = 8 бит (2**3 бит)
# 1 Кбайт = 1024 байт (2**10 байт) или (2**13 бит)
# 1 Мбайт = 1024 Кбайт (2**10 Кбайт) или (2**23 бит)
# 1 Гбайт = 1024 Мбайт (2**10 Мбайт) или (2**33 бит)

# Тип 7 №9759
# Какой минимальный объём памяти (в Кбайт) нужно зарезервировать, чтобы можно было сохранить
# любое растровое изображение размером 128×128 пикселей при условии, что в изображении
# могут использоваться 256 различных цветов?
# В ответе запишите только целое число, единицу измерения писать не нужно.

# I = pixels * i   (i - кол-во бит на 1 пиксель)
# Colors = 2 ** i  (128 цветов, то i == 7 бит на 1 пиксель) (130 цветов, то i == 8 бит на 1 пиксель)
'''
print((128*128*8) / 2**13)  # 16.0
'''

# Тип 7 №59712
# Сколько секунд потребуется модему, передающему сообщения со скоростью 28800 бит/с,
# чтобы передать цветное растровое изображение размером 1280х760 пикселей, при условии,
# что цвет каждого пикселя кодируется четырьмя байтами?
'''
# что цвет каждого пикселя кодируется четырьмя байтами
i = 32
I = 1280*760*i
print(I / 28800)  # 1080.888888888889 -> 1081
'''


# Тип 7 №36862
# В информационной системе хранятся изображения размером 2048 ×1536пк.
# При кодировании используется алгоритм сжатия изображений, позволяющий
# уменьшить размер памяти для хранения одного изображения в среднем
# в 4 раза по сравнению с независимым кодированием каждого пикселя.
# Каждое изображение дополняется служебной информацией, которая занимает 128 Кбайт.
# Для хранения 32 изображений потребовалось 16 Мбайт.
# Сколько цветов использовано в палитре каждого изображения?
'''
pixels = 2048 * 1536  # сжимать в 4 раза

I = (16*2**23) / 32  # вес одного изображения в битах
I = I - 128*2**13  # вес одного изображения в битах без доп. информации
I = I * 4  # расзархивировали данные - увеличли в 4 раза)
i = I / pixels
Colors = 2**i
print(Colors)  # 16
'''


# endregion Урок: ******************************************************************


# Марк = [1.1, 2.1, 6.1, 4.1, 5.1, 7.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
