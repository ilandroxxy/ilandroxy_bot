# region Домашка: ******************************************************************

# КЕГЭ № 5496 (Уровень: Средний)
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите длину самой длинной цепочки символов, которая начинается и заканчивается буквой D,
# а между двумя последовательными буквами D содержит не более двух букв O и произвольное количество других букв.

# todo: Как это можно оптимизировать задачу
'''
s = open('24.txt').readline()
s = s.replace('A', '*').replace('C', '*').replace('F', '*')
s = s.replace('D', 'D D')
for x in s.split():
    if x.count('O') > 2:
        s = s.replace(x, '0', 1)
print(s)
'''

'''
s = open('24.txt').readline()
s = s.replace('A', '*').replace('C', '*').replace('F', '*')
s = s.replace('D', ' D ').split()
print(s)
maxi = 0
for i in range(len(s)):
    if s[i].count('O') <= 2:
        s[i] = '*' * len(s[i])
    if s[i].count('O') > 2:
        s[i] = ' '
print(s)
s = ''.join(s).split()
for i in s:
    maxi = max(maxi, len(i))
print(maxi)
'''

# КЕГЭ № 862 (Уровень: Базовый)
# Текстовый файл состоит не более чем из 10**6 символов S, T, O, C, K.
# Сколько раз встречается в файле комбинация «OKTOS»?
'''
print(open('24.txt').readline().count('OKTOS'))
'''


# Тип 24 №33526
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите символ, который чаще всего встречается в файле между двумя одинаковыми символами.
'''
s = open('24.txt').readline()
M = []
for i in range(len(s)-2):
    if s[i] == s[i+2]:
        M.append(s[i+1])

print(max(set(M), key=M.count))
'''
# Ответ: D


# № 10105 Демоверсия 2024 (Уровень: Средний)
# Текстовый файл состоит из символов T, U, V, W, X, Y и Z.
# Определите в прилагаемом файле максимальное количество идущих подряд символов
# (длину непрерывной подпоследовательности), среди которых символ T встречается ровно 100 раз.
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
for x in 'UVWXYZ':
    s = s.replace(x, ' ')
print(max(len(i) for i in s.split()))
'''

# № 9791 Основная волна 20.06.23 (Уровень: Средний)
# Текстовый файл состоит из символов, обозначающих заглавные буквы латинского алфавита
# и цифры от 1 до 9 включительно. Определите в прилагаемом файле максимальное количество
# идущих подряд символов, которые могут представлять запись числа в шестнадцатеричной системе счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
s = open('24.txt').readline()
for x in alphabet[16:]:
    s = s.replace(x, ' ')
print(max([len(i) for i in s.split()]))
'''
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
s = open('24.txt').readline()
for x in alphabet[16:]:
    s = s.replace(x, ' ')
print(max([len(i) for i in s.split()]))
'''
# print(hex(max([int(i, 16) for i in s.split()]))[2:].upper())
# print(len('49EFABAE774DE5B21C7C8'))
# Ответ: 21


#
# № 9753 Основная волна 19.06.23 (Уровень: Сложный)
# Текстовый файл состоит из символов T, U, V, W, X, Y и Z.
# Определите в прилагаемом файле максимальное количество идущих подряд символов
# (длину непрерывной подпоследовательности), среди которых символ Y встречается не более 150 раз.

'''
s = open('24.txt').readline()
maxi = 0
r = ''
left = 0
for i in range(len(s)):
    r += s[i]
    if r.count('Y') == 150:
        if maxi < len(r):
            maxi = len(r)
            print(maxi)
        r = r[r.index('Y')+1:]
'''

'''
s = open('24.txt').readline()
maxi = 0
r = ''
left = 0
for i in range(len(s)):
    r += s[i]
    if r.count('Y') == 150:
        maxi = max(maxi, len(r))
        r = r[r.index('Y')+1:]
        print(len(r), maxi)
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# endregion Урок: ******************************************************************


# Марк = [2.1, 6.1, 5.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1]
# КЕГЭ  = []
# на следующем уроке:
