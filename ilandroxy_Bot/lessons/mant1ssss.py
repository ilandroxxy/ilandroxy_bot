
# region Домашка: ******************************************************************


# № 8952 Джобс 02.06.2023 (Уровень: Базовый) (Е. Джобс)
#
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Так, например, 14&5 = 11102&01012 = 01002 = 4. Найдите минимальное значение А, при котором значение выражения
# (x & 103 = 0) ∧ (x & 94 ≠ 0) → (x & A ≠ 0)
# ((x and y) <= z)
'''
# Вариант 1
def F(x, A):
    return ((x & 103 == 0) and (x & 94 != 0)) <= (x & A != 0)


for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 10000)):
        print(A)
        break

# Вариант 2
print(min([A for A in range(0, 1000) if all(F(x, A) for x in range(0, 10000))]))
'''


# № 7846 Danov2304 (Уровень: Базовый) (А.Богданов)
#
# На числовой прямой даны два отрезка: P = [13; 19] и Q = [17; 23].
# Укажите наибольшую возможную длину такого отрезка A, что формула
#
# ¬(¬(x ∈ P) → (x ∈ Q)) → ((x ∈ A) →(¬(x ∈ Q)→(x ∈ P)))
'''
def f(x, A1, A2):
    P = 13 <= x <= 19
    Q = 17 <= x <= 23
    A = A1 <= x <= A2
    return (not((not P) <= Q)) <= (A <= ((not Q) <= P))


N = [x/5 for x in range(10*5, 30*5)]
R = []
for A1 in N:
    for A2 in N:
        if all(f(x, A1, A2) for x in N):
            R.append(A2 - A1)
print(min(R))
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************
'''
file = open('17.txt', 'r')
print(file)  # <_io.TextIOWrapper name='17.txt' mode='r' encoding='UTF-8'>
for s in file.readlines():
    print(int(s))
file.close()

with open('17.txt') as file:
    print(file)  # <_io.TextIOWrapper name='17.txt' mode='r' encoding='UTF-8'>
    for s in file.readlines():
        print(int(s))
# Значит тут файл закрылся


M = [int(x) for x in open('17.txt')]
'''


# Пары и тройки в 17-ом номере
"""
M = [1, 2, 3, 4, 5]

# Назовём парой два идущих подряд элемента последовательности.
''' 12 23 34 45 '''
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()

# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
''' 123 234 345 '''
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print('\n')

# В данной задаче под парой подразумевается два различных элемента последовательности.
'''
    12 13 14 15
    23 24 25
    34 35
    45
'''
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()

# Вариант 2
from itertools import permutations
for s in permutations(M, 2):
    x, y = s[0], s[1]
    if x < y:
        print(f'{x}{y}', end=' ')
"""


# Тип 17 №39762
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар чисел, произведение которых кратно 15, а их сумма делится на 7.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.
"""
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x * y) % 15 == 0 and (x + y) % 7 == 0:
        count += 1

        # Вариант 1
        '''
        if maxi < x + y:
            maxi = x + y
        '''

        # Вариант 2
        maxi = max(maxi, x + y)
print(count, maxi)
"""
# Ответ: 170 18662.


# todo Отправить в разборы
# Тип 17 №59842
# В файле содержится последовательность целых чисел.

# Элементы последовательности могут принимать целые значения от —1000000 до 1000000 включительно.
#
# Определите количество троек элементов, в которых из трех элементов тройки пятизначными числами являются только два,
# а сумма элементов тройки не больше максимального элемента последовательности, оканчивающегося на 29.
# В ответе запишите два числа: сначала количество найденных троек, а затем максимальную из сумм таких троек.
# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
# A = max([x for x in M if abs(x) % 100 == 29])  # Вариант 1
A = max([x for x in M if str(x)[-2:] == '29'])  # Вариант 2

count = 0
maxi = 0
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    B = [len(str(abs(x))) == 5, len(str(abs(y))) == 5, len(str(abs(z))) == 5]
    if sum(B) == 2:
        if (x + y + z) <= A:
            count += 1
            maxi = max(maxi, x + y + z)
print(count, maxi)
'''
# Ответ: 157 973622


# Тип 17 № 55634
# Файл содержит последовательность целых чисел, модуль которых находится в интервале от 100 до 10000.
# Назовём парой два идущих подряд элемента последовательности.

# Определите количество пар, для которых выполняются следующие условия:
# — последняя цифра записи одного из элементов пары совпадает с предпоследней цифрой записи другого элемента;
# — ровно один элемент из пары делится без остатка на 13;
# — сумма квадратов элементов пары не превышает квадрат наименьшего из элементов последовательности,
# две последние цифры в записи которого одинаковы.
#
# В ответе запишите два числа:
# сначала количество найденных пар, затем максимальную величину суммы квадратов элементов этих пар.
'''
M = [int(x) for x in open('17.txt')]
A = min([x for x in M if str(x)[-2] == str(x)[-1]])
count = 0
maxi = 0
for i in range(len(M)-1):
    x, y = M[i], M[i + 1]
    if str(x)[-1] == str(y)[-2] or str(y)[-1] == str(x)[-2]:
        if (x % 13 == 0 and y % 13 != 0) or (x % 13 != 0 and y % 13 == 0):
            if (x ** 2 + y ** 2) <= A ** 2:
                count += 1
                maxi = max(maxi, x ** 2 + y ** 2)
print(count, maxi)
'''
# Ответ: 115 96944186


# endregion Урок: ******************************************************************


# todo: Марк = [2.1, 6.1, 5.1, 8.1, 12.1, 14.1, 16.1, 15.1, , 17.1, 23.1]
# todo: КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке:
