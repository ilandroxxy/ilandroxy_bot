
# region Домашка: ******************************************************************

'''
s = 'АЕКНС'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b +c +d +e + f
                        count +=1
                        if slovo == 'СЕНЕКА':
                            print(count)
'''


# № 8417 (Уровень: Базовый)
# Ярослав составляет коды из букв, входящих в слово ЯРОСЛАВ.
# Код должен состоять из 5 букв, буквы в коде не должны повторяться,
# согласных в коде должно быть больше, чем гласных, две гласные буквы нельзя ставить рядом.
#
# Сколько кодов может составить Ярослав?

'''
from itertools import permutations
s = sorted('ЯРОСЛАВ')
count = 0
for s in permutations(s, 5):
    x = ''.join(s)  # превратил кортеж s в строчку
    sogl = [b for b in x if b in 'РСЛВ']
    glas = [a for a in x if a in 'ОЯА']
    if len(sogl) > len(glas):
    # if (x.count('Р')+x.count('С')+x.count('Л')+x.count('В') > x.count('Я')+x.count('О')+x.count('А')):
        #if 'ЯА' not in x and 'АЯ' not in x and '':
        if all(pair not in x for pair in 'АЯ ЯА АО ОА ЯО ОЯ'.split()):
            count += 1
            print(*x)
print(count)
'''

# Все шестибуквенные слова, в составе которых могут быть
# только русские буквы М, А, Р, К, С, Л записаны в алфавитном порядке
# и пронумерованы начиная с 1.
#
# Ниже приведено начало списка.
# 1. АААААА
# 2. АААААК
# 3. АААААЛ
# 4. АААААМ
# 5. АААААР
# 6. АААААС
#
# Под каким последним номером идёт слово, в котором буквы К не стоят
# рядом с буквой С и одна буква повторяется трижды, а остальные не повторяются?
'''
from itertools import product
count = 0
numbers = []
for s in product(sorted('МАРКСЛ'), repeat=6):
    count += 1
    x = ''.join(s)
    if all(a not in x for a in ('СК', 'КС')):
    # if 'КС' not in x and 'СК' not in x:
        if len(set(x)) == 4 and any(x.count(a) == 3 for a in x):
            numbers.append(count)
# print(numbers[-1])
print(max(numbers))
'''


'''
from itertools import product
s = sorted('МАРКСЛ')
count = 0
numbers = []
for x in product(s, repeat = 6):

    count += 1
    if "KC СК" not in x and ((len(set(x))==4) and (x.count('М')== 3  or x.count('А')== 3 or
                             x.count('Р')== 3 or x.count('К')== 3  or x.count('С')== 3) ):
        y = f'{count} {x}'
        numbers.append(y)
print(numbers[-1])
'''

'''
x = 'ККСМО СК   КС ШКАОКРС КССК KC СК'

if "KC СК" not in x:
    print('YES')
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Разбираем 12-ый номер

# Тип 12 №15136
# Какая строка получится в результате применения приведённой
# ниже программы к строке, состоящей из 99 единиц?

# ПОКА нашлось (111)
#   ЕСЛИ нашлось (222)
#       ТО заменить (222, 1)
#       ИНАЧЕ заменить (111, 2)

'''
s = '1' * 99

while '111' in s:
    if '222' in s:
        s = s.replace('222', '1', 1)
    else:
        s = s.replace('111', '2', 1)
print(s)
'''
# Ответ: 22211

# Тип 12 №35901
# Дана программа для редактора:
#
#     ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#         заменить (01, 2302)
#         заменить (02, 10)
#         заменить (03, 201)
#     КОНЕЦ ПОКА
#
# Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 50 единиц, 12 двоек и 7 троек.
# Сколько единиц было в исходной строке?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z

            while '01' in s or '02' in s or '03' in s:
                s = s.replace('01', '2302', 1)
                s = s.replace('02', '10', 1)
                s = s.replace('03', '201', 1)

            if s.count('1') == 50 and s.count('2') == 12 and s.count('3') == 7:
                print(x)
'''
# Ответ: 2


# Тип 12 №40728
# Дана программа для редактора:

#     ПОКА нашлось (1111)
#         заменить (1111, 22)
#         заменить (222, 1)

# Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр.
# При какой наименьшей длине исходной строки результат работы
# данной программы будет содержать наибольшее возможное число единиц?
'''
maxi = -99999
for x in range(201, 1000):
    s = '1' * x

    while '1111' in s:
        s = s.replace('1111', '22', 1)
        s = s.replace('222', '1', 1)
    # maxi = max(maxi, s.count('1'))
    if maxi < s.count('1'):
        maxi = s.count('1')
        print(x)
'''
# Ответ: 201


# Дана программа для Редактора:
#
# ПОКА нашлось (72) ИЛИ нашлось (522) ИЛИ нашлось (2222)
#     ЕСЛИ нашлось (72)
#       ТО заменить (72, 2)
#     ЕСЛИ нашлось (522)
#        ТО заменить (522, 27)
# ЕСЛИ нашлось (2222)
#      ТО заменить (2222, 5)

# На вход приведённой выше программе поступает строка, начинающаяся с цифры «5»,
# а затем содержащая n цифр «2» (3<n<10 000).
#
# Определите наименьшее значение n, при котором сумма цифр в строке,
# получившейся в результате выполнения программы, равна 63.
'''
for n in range(4, 10000):
    s = '5' + '2' * n

    while '72' in s or '522' in s or '2222' in s:
        if '72' in s:
            s = s.replace('72', '2', 1)
        if '522' in s:
            s = s.replace('522', '27', 1)
        if '2222' in s:
            s = s.replace('2222', '5', 1)
            
    summ = sum([int(x) for x in s if x.isdigit()])
    if summ == 63:
        print(n)
        break
'''
# Ответ: 186


# endregion Урок: ******************************************************************


# todo: Марк = [2.1, 6.1, 8.1, 12.1, 14.1]
# todo: КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке:
