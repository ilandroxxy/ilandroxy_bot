# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Дана программа для исполнителя Редактор:
#
# ПОКА нашлось(01) ИЛИ нашлось(02) ИЛИ нашлось(03)
#   заменить(01, 30)
#   заменить(02, 3103)
#   заменить(03, 1201)

# Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 31 единицу, 24 двойки и 46 троек.
# Сколько троек было в исходной строке?
'''
for x in range(1, 100):
    for y in range(1, 100):
        for z in range(1, 100):
            strok = '0' + '1' * x + '2' * y + '3' * z
            while '01' in strok or '02' in strok or '03' in strok:
                strok = strok.replace('01', '30', 1)
                strok = strok.replace('02', '3103', 1)
                strok = strok.replace('03', '1201', 1)
            if strok.count('1') == 31 and strok.count('2') == 24 and strok.count('3') == 46:
                print(z)
                exit()
'''


# Дана программа для Редактора:

# ПОКА нашлось(>1) ИЛИ нашлось(>2) ИЛИ нашлось(>3)
#    ЕСЛИ нашлось(>1)
#       ТО заменить(>1,2>)
#    КОНЕЦ ЕСЛИ
#    ЕСЛИ нашлось(>2)
#       ТО заменить(>2,3>)
#    КОНЕЦ ЕСЛИ
#    ЕСЛИ нашлось(>3)
#       ТО заменить(>3,11>)
#    КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА

# На вход программы поступает строка, начинающаяся с символа «>», а затем содержащая 15 цифр 1, 35 цифры 2 и m цифр 3,
# расположенных в произвольном порядке. Определите минимальное значение m, при котором сумма
# числовых значений цифр строки, получившейся в результате выполнения программы,
# будет иметь ровно 3 различных натуральных делителя, не включая единицы и самого значения суммы.

def divisors(x):
    divisors = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            divisors.add(j)
            divisors.add(x//j)
    return sorted(divisors)


for m in range(0, 1000):
    s = '>' + '1' * 15 + '2' * 35 + '3' * m

    while '>1' in s or '>2' in s or '>3' in s:
        if '>1' in s:
            s = s.replace('>1', '2>', 1)
        if '>2' in s:
            s = s.replace('>2', '3>', 1)
        if '>3' in s:
            s = s.replace('>3', '11>', 1)
    summa = sum([int(x) for x in s if x.isdigit()])
    if len(divisors(summa)) == 3:
        print(m)

# endregion Урок: *******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Марк = [1.1, 2.1, 3.1, 6.1, 4.1, 5.1, 7.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 22.1, 23.1, 24.1, 25.1]
# КЕГЭ  = [5.1, 8.1, 9.1, 14.1, 16.1, 23.1]
# на следующем уроке:
