
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Списки list()
# - Содержит неограниченное кол-во элементов
# - Различных типов данных
# - Каждый элемент имеет порядковый номер - индекс, начинающийся с нуля
# - Мы можем брать элементы списков и менять их

'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

M[2] = 100
print(M)  # ['a', 'b', 100, 'd', 'e']
'''

# Заменять элементы строки можно через срез (или метод .replace())
'''
s = 'abcde'
s = s[:2] + '100' + s[3:]  
print(s)  # ab100de
'''

# Взаимодействие с элементами списка через их индексы
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

for i in range(len(M)):
    # print(i, end=' ')  # 0 1 2 3 4
    print(M[i], end=' ')  # a b c d e
print()

for i in range(len(M)):
    M[i] = M[i] * i
print(M)  # ['', 'b', 'cc', 'ddd', 'eeee']
print(*M)  # b cc ddd eeee
'''


# Как ввести список с клавиатуры

# x = int(input('x: '))
'''
n = int(input('Введите длину списка: '))
M = []
for i in range(n):
    x = int(input(f'{i}-ый элемента: '))
    M.append(x)
print(M)
'''

# Фунции списков
'''
M = [1, 2, 3, 4, 5]
print(sum(M))  # сумма элементов
print(max(M))  # максимальный элемент
print(min(M))  # минимальный элемент 
print(len(M))  # кол-во элементов / длина
print(set(M))  # конвертирует в множество, что позволяет узнать кол-во или избавить от копий
print(sorted(M))
'''

# Методы списков
"""
M = ['a', 'b', 'c', 'd', 'e', 'a']

M.append('a')
M.append('b')
print(M)  # ['a', 'b', 'c', 'd', 'e', 'a', 'a', 'b']

M.reverse()
print(M)  # ['b', 'a', 'a', 'e', 'd', 'c', 'b', 'a']

M.sort()
print(M)  # ['a', 'a', 'a', 'b', 'b', 'c', 'd', 'e']

'''
A = M  # так нельзя скопировать элемент списка 
M.clear()
print(A, M)  # [] [] 
'''

'''
A = M.copy()  # А тут мы реально создали копию числа.
print(A)  
M.clear()
print(A, M)  # ['a', 'a', 'a', 'b', 'b', 'c', 'd', 'e'] []
'''

print(M.count('a'))  # 1 - кол-во вхождений элемента
print(M.index('a'))  # 0 - выводит индекс первого найденного элемента
"""


# Срезы списков/строки
'''
# i  0  1  2  3  4
M = [1, 2, 3, 4, 5]
print(M[2])  # 3
print(M[2:])  # [3, 4, 5]
print(M[:2])  # [1, 2]
print(M[::2])  # [1, 3, 5]
print(M[::-1])  # [5, 4, 3, 2, 1]
'''


# Генераторы списков (списочные выражения):
'''
ip = '192.45.67.9'
print(ip.split('.'))   # ['192', '45', '67', '9']
'''

'''
M = [x for x in range(10)]
print(M)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]


M = [x for x in range(10+1) if x % 2 == 0]
print(M)  # [0, 2, 4, 6, 8, 10]

M = [x**2 for x in range(10+1) if x % 2 == 0]
print(M)  # [0, 4, 16, 36, 64, 100]


M = [x for x in input('Введите число: ')]
print(M)  # ['1', '2', '4', '3', '2', '3']


M = [int(x) for x in input('Введите числа через пробел: ').split() if x.isdigit() and int(x) % 2 == 0]
print(M)  # [56, 767, 234, 566]
'''


# Тип 9 № 59714
# В файле находится таблица, которая содержит в каждой из строк по 7 натуральных чисел.
# Ваша задача состоит в том, чтобы посчитать количество таких строк,
# в которых два числа повторяются по 2 раза, а три других различны,
# и среднее арифметическое неповторяющихся чисел больше среднего арифметического повторяющихся.
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]     
    if len(set(M)) == 5 and all(M.count(a) <= 2 for a in M):  
        POV = [a for a in M if M.count(a) == 2]
        NEPOV = [a for a in M if M.count(a) != 2]
        print(POV, NEPOV)
        if (sum(NEPOV) / len(NEPOV)) > (sum(POV) / len(POV)):
            count += 1
print(count)
'''
# Ответ: 96


# endregion Урок: ******************************************************************


# todo: Марк = [2.1, 6.1]
# todo: КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке:
