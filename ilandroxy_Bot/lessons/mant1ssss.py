
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

'''
M = ['a', 'b', 'c']
del M[1]  # удалить элемент под 1 индексом, то есть букву 'b'
print(M)  # ['a', 'c']

M = ['a', 'b', 'c']
x = M.pop(1)  # метод .pop() забирает элемент из списка
print(M, x)  # ['a', 'c'] b
'''

# Строки str(): string
'''
# i  01234
s = 'abcde'
# отрицательные индексы тоже есть

print(s[1])  # можем брать элементы списков, но не можем их изменять
print(len(s))  # функция len() возвращает длину строки
print(sorted(s))  # ['a', 'b', 'c', 'd', 'e'] - возвращает отсортированный список
'''

# Срезы строк
'''
s = 'abcde'

print(s[:2])  # ab
print(s[2:])  # cde
print(s[1:3])  # bc
print(s[::2])  # ace
print(s[::-1])  # edcba - вывод строки в обратном порядке (аналог метода .reverse())
'''

# Если захотим изменить символ 'c' на другой, то придется воспользоваться срезами
'''
s = 'abcde'
s = s[:2] + '0' + s[3:]
print(s)  # ab0de
'''

# Библиотека string
'''
import string
print(string.punctuation)  # !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~

alphabet = string.digits + string.ascii_uppercase
print(alphabet)  # 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
'''

# Методы строк
'''
weather = 'облачно'
print('Сегодня хорошая богода, но {}'.format(weather))

s = 'abcdedcba'
print(s.count('b'))  # 2
print(s.index('b'))  # 1 - индекс первого вхождения (слева)
print(s.rindex('b'))  # 7 - индекс последнего вхождения (справа)

s = s.replace('b', '0')  # все вхождения заменяет
print(s)  # a0cdedc0a
s = s.replace('d', '*', 2)  # первые 2 вхождения заменяет
print(s)  # a0c*edc0a

a = 'abcdefg'
a = a.upper()
print(a)  # ABCDEFG

a = a.lower()
print(a)  # abcdefg

# Пример использования метода .isdigit()
# Задача: есть строка, надо получить сумму цифр строки, но в строке есть буквы.
s = 'ghbdtn 389247u nrjikoegj 3924i ghn jture234'
summ = sum([int(x) for x in s if x.isdigit()])
print(summ)  # 60

# Пример использования метода .split()
s = 'Заказ: шкаф - 3500 руб, холодильник - 25000 руб'
print([x for x in s.split()])  # ['Заказ:', 'шкаф', '-', '3500', 'руб,', 'холодильник', '-', '25000', 'руб']
print([int(x) for x in s.split() if x.isdigit()])  # [3500, 25000]
summ = sum([int(x) for x in s.split() if x.isdigit()])
print(summ)  # 28500


# Пример использования метода .spit() и .join()
import string as st
ALPHABET = st.digits + st.ascii_uppercase
# '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'

def my_bin_convert(x: int) -> str:
    s: str = ''
    while x > 0:
        s += ALPHABET[x % 2]  # нужно для замены больших цифр на буквы: 10-A, 11-B, 12-C
        x //= 2
    s = s[::-1]
    return s


ip = '123.43.245.8'
IP = ip.split('.')
print(IP)  # ['123', '43', '245', '8']
IP2 = [int(x) for x in ip.split('.')]
print(IP2)  # [123, 43, 245, 8]

for i in range(0, len(IP2)):
    IP2[i] = my_bin_convert(IP2[i])
print(IP2)  # ['1111011', '101011', '11110101', '1000']

# А как склеить элементы списка в строку?
NEW_BIN_IP = ','.join(IP2)
print(NEW_BIN_IP)  # 1111011,101011,11110101,1000
'''


# 14 номер ЕГЭ или КЕГЭ


# Тип 14 № 27274
# Сколько единиц содержится в двоичной записи значения выражения 16**5 + 8**6 + 4**9 - 128?
'''
# Вариант 1
x = 16**5 + 8**6 + 4**9 - 128
s = ''
while x > 0:
    s += str(x % 2)
    x //= 2
s = s[::-1]
print(s.count('1'))  # 13


# Вариант 2
x = 16**5 + 8**6 + 4**9 - 128
print(bin(x))  # 0b101111111111110000000
print(bin(x)[2:])  # 101111111111110000000
print(bin(x)[2:].count('1'))  # 13
'''
# Ответ: 13

# Тип 14 № 27015
# Значение арифметического выражения: 49**7 + 7**20 − 28 — записали в системе счисления с основанием 7.
# Сколько цифр «0» содержится в этой записи?
'''
x = 49**7 + 7**20 - 28
M = []
while x > 0:
    M.append(x % 7)
    x //= 7
M.reverse()
print(M.count(0))
'''


# Тип 14 №28552
# Значение выражения 2166 + 2164 + 366 − 614 − 24 записали в системе счисления с основанием 6.
# Сколько различных цифр содержит эта запись?
'''
x = 216**6 + 216**4 + 36**6 - 6**14 - 24

M = []
while x > 0:
    M.append(x % 6)
    x //= 6
M.reverse()
print(len(set(M)))  # Ответ: 4
'''

# Тип 14 №48339
# Операнды арифметического выражения записаны в системе счисления с основанием 11:
#
# 982x8_11 + 194x7_11
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита одиннадцатиричной
# системы счисления. Определите наименьшее значение x, при котором значение данного
# арифметического выражения кратно 58. Для найденного значения x вычислите частное
# от деления значения арифметического выражения на 58 и укажите его в ответе
# в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')

for x in alphabet[:11]:
    A = int(f'982{x}8', 11)
    B = int(f'194{x}7', 11)
    if (A + B) % 58 == 0:
        print((A + B) // 58)
        break
'''
# Ответ: 2931


# Тип 14 №48389
# Операнды арифметического выражения записаны в системах счисления с основаниями 7 и 9:
#
# yx320_7 + 1x3y3_9
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления
# неизвестные цифры. Определите значения x и y, при которых значение данного арифметического
# выражения будет наименьшим и кратно 181.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for x in alphabet[:7]:
    for y in alphabet[:7]:
        A = int(f'{y}{x}320', 7)
        B = int(f'1{x}3{y}3', 9)
        if (A + B) % 181 == 0:
            print((A + B) // 181)
'''
# Ответ: 148

# endregion Урок: ******************************************************************


# todo: Марк = [2.1, 6.1, 14.1]
# todo: КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке:
