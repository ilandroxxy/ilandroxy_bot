# region Домашка: ******************************************************************

# КЕГЭ № 5496 (Уровень: Средний)
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите длину самой длинной цепочки символов, которая начинается и заканчивается буквой D,
# а между двумя последовательными буквами D содержит не более двух букв O и произвольное количество других букв.

# todo: Как это можно оптимизировать задачу
'''
s = open('24.txt').readline()
s = s.replace('A', '*').replace('C', '*').replace('F', '*')
s = s.replace('D', 'D D')
for x in s.split():
    if x.count('O') > 2:
        s = s.replace(x, '0', 1)
print(s)
'''

'''
s = open('24.txt').readline()
s = s.replace('A', '*').replace('C', '*').replace('F', '*')
s = s.replace('D', ' D ').split()
print(s)
maxi = 0
for i in range(len(s)):
    if s[i].count('O') <= 2:
        s[i] = '*' * len(s[i])
    if s[i].count('O') > 2:
        s[i] = ' '
print(s)
s = ''.join(s).split()
for i in s:
    maxi = max(maxi, len(i))
print(maxi)
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# № 3376 Джобс 22.04.2022 (Уровень: Базовый)
#
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
#
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**9, найдите все числа, соответствующие маске 1*5*9,
# значения разрядов в которых идут в строго возрастающем порядке, и делящиеся на 21 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце — соответствующие им частные от деления на 21.
'''
from fnmatch import *
k = 0
for x in range(21, 10**9, 21):
    if fnmatch(str(x), '1*5*9'):
        if len(set(str(x))) == len(str(x)):
            if list(str(x)) == sorted(str(x)):
                print(x, x // 21)
                k += 1
                if k == 5:
                    exit()
'''

# 13614
'''
from itertools import permutations
GRAPH = 'ВА АВ ВГ ГВ АГ ГА АБ БА БД ДБ ГД ДГ ГЕ ЕГ ЕК КЕ ГК КГ'
TABLE = '13 17 26 27 31 37 45 46 54 57 62 64 67 71 72 73 75 76'

for elem in permutations('АБВГДЕК'):
    new_table = TABLE
    for i in range(1, 7+1):
        new_table = new_table.replace(str(i), elem[i-1])
    if set(new_table.split()) == set(GRAPH.split()):
        print('1 2 3 4 5 6 7')
        print(*elem)
'''
# 1 2 3 4 5 6 7
# Е В К Б Д А Г

# 15619
'''
from itertools import permutations
GRAPH = 'DC CD DE ED EB BE BD DB CB BC BA AB BG GB AG GA'
TABLE = '12 14 21 24 26 34 35 41 42 43 45 46 53 54 62 64'

for elem in permutations('ABCDEG'):
    new_table = TABLE
    for i in range(1, 6+1):
        new_table = new_table.replace(str(i), elem[i-1])
    if set(new_table.split()) == set(GRAPH.split()):
        print('1 2 3 4 5 6')
        print(*elem)
'''
# 1 2 3 4 5 6
# C D A B G E


# endregion Урок: ******************************************************************


# Марк = [2.1, 6.1, 5.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
