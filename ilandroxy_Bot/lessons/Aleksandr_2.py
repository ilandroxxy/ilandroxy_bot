# region Домашка: ******************************************************************************

# Тип 9 № 27406
'''
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного измерения температуры воздуха на протяжении трёх месяцев.
# Найдите разность между максимальным значением температуры и её средним арифметическим значением.
# В ответе запишите только целую часть получившегося числа.

A = []
for s in open('9.txt'):
    M = [float(i) for i in s.replace(',', '.').split()]
    A += M
print(max(A) - (sum(A) / len(A)))
'''
# Ответ: 14


# Тип 9 № 27517
'''
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного измерения температуры воздуха на протяжении трёх месяцев.
# Найдите разность между максимальным значением температуры и её средним арифметическим значением.
# В ответе запишите только целую часть получившегося числа.

A = []
for s in open('9.txt'):
    M = [float(i) for i in s.replace(',', '.').split()]
    A += M
print(max(A) - (sum(A) / len(A)))
'''
# Ответ: 15


# Тип 9 № 27518
'''
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного измерения температуры воздуха на протяжении трёх месяцев.
# Найдите разность между минимальным значением температуры и её средним арифметическим значением.
# Ответ округлите до целого числа.

A = []
for s in open('9.txt'):
    M = [float(i) for i in s.replace(',', '.').split()]
    A += M
print(min(A) - (sum(A) / len(A)))
'''
# Ответ: -16


# Тип 9 № 27519
'''
# Откройте файл электронной таблицы, содержащей вещественные числа — результаты ежечасного измерения температуры воздуха на протяжении трёх месяцев.
# Сколько раз встречалась температура, равная округленному до десятых среднему арифметическому значению всех измерений в таблице?

# count = 0 - хотел закидывать A[i] == sred в отдельный список и записать счетчик как ответ, а потом я вспоминл про CTRL + F в txt)
A = []
for s in open('9.txt'):
    M = [float(i) for i in s.replace(',', '.').split()]
    A += M
    print(A) # проверка
x = float(sum(A) / len(A))
sred = round(x,1)
print(sred) # проверка
'''
# Ответ: 0

# Тип 24 № 27421
'''
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

s = open('24.txt').readline()
count = 1
max_count = 0
for i in range(0, len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)
'''
# Ответ: 35


# Тип 24 № 27687
'''
# Текстовый файл состоит не более чем из 106 символов X, Y и Z. Определите длину самой длинной последовательности, состоящей из символов Y.
# Хотя бы один символ Y находится в последовательности.
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

s = open('24.txt').readline()
count = 1
max_count = 0
for i in range(0, len(s)-1):
    if s[i] == 'Y' and s[i+1] == 'Y':
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)
'''
# Ответ: 10


# Тип 24 № 27689
'''
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите максимальную длину цепочки вида XYZXYZXYZ... (составленной из фрагментов XYZ, последний фрагмент может быть неполным).
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

s = open('24.txt').readline()
count = 2
max_count = 0
for i in range(0, len(s)-2):
    # if (s[i] == 'X' and s[i+1] == 'Y' and s[i+2] == 'Z') or (s[i] == 'Y' and s[i+1] == 'Z' and s[i+2] == 'X') or (s[i] == 'Z' and s[i+1] == 'X' and s[i+2] == 'Y'):
    if s[i:i+3] == 'XYZ' or s[i:i+3] == 'YZX' or s[i:i+3] == 'ZXY':
        count += 1
        max_count = max(max_count, count)
    else:
        count = 2
print(max_count)  # Шаблон не прокатил..

print(len('XYZXYZXYZXYZX'))  # CTRL + F)))
'''
# Ответ: 13

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 24 № 35482 i
# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# Необходимо найти строку, содержащую наименьшее количество букв G
# (если таких строк несколько, надо взять ту, которая находится в файле раньше), и определить, какая буква встречается в этой строке чаще всего.
# Если таких букв несколько, надо взять ту, которая позже стоит в алфавите.
'''
M = open('24.txt').readlines()
mini = 9999
r = ''
for s in M:
    if mini > s.count('G'):
        mini = s.count('G')
        r = s

# import string
# alphabet = string.ascii_uppercase

alphabet = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])
print(alphabet)

maxi = -9999
l = ''
for a in alphabet:
    if maxi <= r.count(a):
        maxi = r.count(a)
        l = a
print(maxi, l)
'''


# Тип 24 № 33196
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите символ, который чаще всего встречается в файле сразу после буквы A.
'''
s = open('24.txt').readline()
M = []
for i in range(0, len(s)-1):
    if s[i] == 'A':
        M.append(s[i+1])

alphabet = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])

maxi = 0
r = ''
for a in alphabet:
    if maxi < M.count(a):
        maxi = M.count(a)
        r = a
print(maxi, r)
'''
# Ответ: G


# Тип 24 № 33526
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите символ, который чаще всего встречается в файле между двумя одинаковыми символами.
'''
s = open('24.txt').readline()
M = []
for i in range(0, len(s)-2):
    if s[i] == s[i+2]:
        M.append(s[i+1])

alphabet = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])

maxi = 0
r = ''
for a in alphabet:
    if maxi < M.count(a):
        maxi = M.count(a)
        r = a
print(maxi, r)
'''
# Ответ: D


# Тип 24 № 33769
'''
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите символ, который чаще всего встречается в файле после двух одинаковых символов.

s = open('24.txt').readline()
M = []
for i in range(0, len(s)-2):
    if s[i] == s[i+1]:
        M.append(s[i+2])

alphabet = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])

maxi = 0
r = ''
for a in alphabet:
    if maxi < M.count(a):
        maxi = M.count(a)
        r = a
print(maxi, r)
'''
# Ответ: К



# Тип 24 № 36879
# Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# В строках, содержащих менее 25 букв G, нужно определить и вывести максимальное расстояние между одинаковыми буквами в одной строке.
'''
M = open('24.txt').readlines()
A = []
for s in M:
    if s.count('G') < 25:
        A.append(s)

alphabet = sorted([i for i in 'QWERTYUIOPASDFGHJKLZXCVBNM'])
maxi = -9999
for s in A:
    for a in alphabet:
        maxi = max(maxi, s.rindex(a) - s.index(a))
        #  maxi = max(maxi, s.rfind(a) - s.find(a))
print(maxi)
'''
# Ответ: 1001


# endregion Урок: ******************************************************************************


# todo: Александр_2 = [2, 5, 6, 8, 9.1, 12, 14+, 15+, 16, 17, 23, 24, 25.2]
# на прошлом уроке: Доразобрали 14 номер с разными строками.
# на следующем уроке: 10 минут добавим к след. уроку; Переходим к ЭКСЕЛЬ задачкам: 3, 9, 10, 18, 19-21, 22







