# region Домашка: ******************************************************************************

# # Тип 12 № 10388
# '''
# # Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
# # Ниже приведена программа для исполнителя Редактор.
# #
# # НАЧАЛО
# # ПОКА нашлось (722) ИЛИ нашлось (557)
# # ЕСЛИ нашлось (722)
# # ТО заменить (722, 57)
# # ИНАЧЕ заменить (557, 72)
# # КОНЕЦ ЕСЛИ
# # КОНЕЦ ПОКА
# #
# # КОНЕЦ
# # На вход этой программе подается строка, состоящая из 55 цифр; последняя цифра в строке — цифра 7, а остальные цифры — пятёрки.
# # Какая строка получится в результате применения программы к этой строке? В ответе запишите полученную строку.
#
# s = '5' * 54 + '7'
# while '722' or '557' in s:
#     if '722' in s:
#         s = s.replace('722', '57', 1)
#     else:
#         s = s.replace('557', '72', 1)
# print(s)
# '''
# # Ответ: 572
#
#
# # Тип 12 № 33514
# '''
# # Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
# # Дана программа для редактора:
# #
# # НАЧАЛО
# # ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
# # заменить (01, 30)
# # заменить (02, 101)
# # заменить (03, 202)
# # КОНЕЦ ПОКА
# # КОНЕЦ
# #
# # Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки.
# # После выполнения данной программы получилась строка, содержащая 15 единиц, 10 двоек и 60 троек. Сколько единиц было в исходной строке?
#
# for x in range(1, 50):
#     for y in range(1, 50):
#         for z in range(1, 50):
#             s = '0' + '1' * x + '2' * y + "3" * z
#             temp = s
#
#             while '01' in s or '02' in s or '03' in s:
#                 s = s.replace('01', '30', 1)
#                 s = s.replace('02', '101', 1)
#                 s = s.replace('03', '202', 1)
#
#             if s.count('1') == 15 and s.count('2') == 10 and s.count('3') == 60:
#                 print(temp.count('1'))
# '''
# # Ответ: 45
#
#
# № 4770
'''
# На числовой прямой даны два отрезка: P=[35,55] и Q=[45,65].
# Определите наименьшую возможную длину отрезка A, при котором формулы
#
# (x ∈ P) → (x ∈ А)
# (x ∉ A) → (x ∉ Q)
#
# тождественно истинны, то есть принимают значение 1 при любом значении переменной х.

def F(x):
    P = 35 <= x <= 55
    Q = 45 <= x <= 65
    A = a1 <= x <= a2
    return (P <= A) == ((not A) <= (not Q))

M = [i/5 for i in range(1*5, 75*5)]
Result = []
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M) == True:
            Result.append(a2-a1)
print(min(Result))
'''
# Ответ: 30
#
#
# # № 5490
# '''
# # Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# #
# # Укажите наименьшее целое значение A, для которого формула
# #
# # (ДЕЛ(108, x)→ ¬ДЕЛ(x, y)) ∨ (x + y > 80) ∨ (A – y > x)
# #
# # тождественно истинна при любых натуральных значениях переменных x и y.
#
# def F(x, y, A):
#     return (108 % x == 0) <= (x % y != 0) or (x + y > 80) or (A - y > x)
#
# for A in range(0, 1000):
#     flag = True
#     for x in range(1, 100):
#         for y in range(1, 100):
#             if F(x, y, A) == False:
#                 flag = False
#                 break
#     if flag == True:
#         print(A)
# '''
# # Ответ: 73
#
#
# # № 4987
# '''
# # Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m»; и пусть на числовой прямой дан отрезок B = [160; 180].
# #
# # Для какого количества различных натуральных значений числа А формула
# #
# # (x ∈ B) → (ДЕЛ(x, 35) → ДЕЛ(x, A))
# #
# # тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?
#
# def F(x, A):
#     B = 160 <= x <= 180
#     return B <= (x % 35 ==0) <= (x % A ==0)
#
# M = []
# for A in range(1, 1000):
#     flag = True
#     for x in range(1, 1000):
#         if F(x, A) == False:
#             flag = False
#             break
#     if flag == True:
#         M.append(A)
# print(M) # выдает пустой список
# '''
#
#
# # № 4769
# '''
# # Укажите наименьшее целое значение А, при котором выражение
# #
# # (7y + x < A) ∨ (2x + 3y > 98)
# #
# # истинно для любых целых положительных значений x и y.
#
# def F(x, y, A):
#     return (7 * y + x < A) or (2 * x + 3 * y > 98)
#
# M = []
# for A in range(1, 1000):
#     flag = True
#     for x in range(1, 1000):
#         for y in range(1, 1000):
#             if F(x, y, A) == False:
#                 flag = False
#                 break
#         if flag == True:
#             M.append(A)
#             break
# print(min(M))
# '''
# # Ответ: 226
#
#
# # № 4675
# '''
# # Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». Для какого наименьшего натурального числа А формула
# #
# # (ДЕЛ(x, 6) → ¬ДЕЛ(x, 10)) \/ (x + A > 121)
# #
# # тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?
#
# def F(x, A):
#     N = x % 10 != 0
#     return (x % 6 ==0) <= N or (x + A > 121)
#
# M = []
# for A in range(1, 1000):
#     flag = True
#     for x in range(1, 1000):
#         if F(x, A) == False:
#             flag = False
#             break
#     if flag == True:
#         M.append(A)
#         break
# print(min(M))
# '''
# # Ответ: 92



# № 3736
'''
# # На числовой прямой даны два отрезка: P = [117; 158] и Q = [129; 180].
# Укажите наименьшую возможную длину такого отрезка A, что формула
# #
# # (x ∈ P) → (((x ∈ Q) /\ ¬(x ∈ A)) → ¬(x ∈ P))
# #
# # истинна, т.е. принимает значение 1 при любом значении переменной х.

def F(x):
    P = 117 <= x <= 158
    Q = 129 <= x <= 180
    A = a1 <= x <= a2
    return P <= ((Q and (not A)) <= (not P))

M = [i/4 for i in range(100*4, 200*4)]

Result = []
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            Result.append(a2-a1)
print(min(Result))
'''
# Ответ: 29

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 25 № 27852
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [185311;185330],
# числа, имеющие ровно четыре различных натуральных делителя.
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 4:
                return sorted(dl)
    return sorted(dl)

for x in range(185311, 185330+1):
    dl = D(x)
    if len(dl) == 4:
        print(*dl)
'''
# Ответ:
# 1 2 92657 185314
# 1 47 3943 185321
# 1 241 769 185329



# Тип 25 № 33495
'''
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами
# в виде произведения двух натуральных чисел и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [2000000;3000000], у которых
# составленное описанным способом множество разностей будет содержать не меньше трёх элементов, не превышающих 115.
# В ответе перечислите найденные числа в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if (x // j) - j <= 115:  # не превышающих 115.
                dl.add((x//j)-j)
                if len(dl) > 2:
                    return sorted(dl)
    return sorted(dl)

for x in range(2000000, 3000000+1):
    dl = D(x)
    if len(dl) > 2:
        print(x)
'''

# Ответ:
# 2053440
# 2098080
# 2328480
# 2638944



# Тип 25 № 38959
'''
# Пусть M(N) — произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы.
# Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
#
# Найдите 5 наименьших натуральных чисел, превышающих 200_000_000, для которых 0<M(N)<N.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 10:
                return sorted(dl)
    return sorted(dl)

k = 0
for n in range(200_000_000+1, 400_000_000):
    dl = D(n)
    if len(dl) >= 5:
        M = dl[0] * dl[1] * dl[2] * dl[3] * dl[4]
        if 0 < M < n:
            print(n, M)
            k += 1
            if k == 5:
                break
'''
# 1728
# 21632
# 1260
# 1152
# 4127787



# Тип 25 № 46983
'''
# Пусть M(N) — пятый по величине делитель натурального числа N без учёта самого числа и единицы.
#
# Если у числа N меньше 5 различных делителей, не считая единицы и самого числа, считаем, что M(N)=0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 460_000_000, для которых M(N)>0.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x//j)
            if len(dl) > 10:
                return sorted(dl)
    return sorted(dl)

k = 0
for n in range(460_000_000+1, 500_000_000):
    dl = D(n)
    if len(dl) >= 5:
        M = dl[-5]
        if M > 0:
            print(M)
            k += 1
            if k == 5:
                break
'''
# Ответ:
# 41818182
# 261959
# 5
# 271
# 57500001



# Тип 25 № 37160
'''
# Найдите 5 чисел больших 500000, таких, что среди их делителей есть число,
# оканчивающееся на 8, при этом этот делитель не равен 8 и самому числу.
# В качестве ответа приведите 5 наименьших чисел, соответствующих условию.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число,
# затем минимальный делитель, оканчивающийся на 8, не равный 8 и самому числу.


def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            if j % 10 == 8 and j != 8:
                dl.add(j)
            if (x // j) % 10 == 8:
                dl.add(x//j)
    return sorted(dl)

k = 0
for n in range(500000+1, 5000000):
    dl = D(n)
    if len(dl) > 0:
        print(n, dl[0])
        k += 1
        if k == 5:
            break
'''
# Ответ:
# 500002 178
# 500004 18
# 500016 48
# 500018 58
# 500020 4348



# Тип 25 № 47229
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**10, найдите все числа,
# соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.

# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 2023.

# print(10**10)
# print('1?2139***4')
my_dict = {}
for x in '0123456789':
    for y in range(0, 1000):
        A = int(f'1{x}2139{y}4')
        if A <= 10**10:
            if A % 2023 == 0:
                my_dict[A] = A // 2023

for key in sorted(my_dict):
    print(key, my_dict[key])
'''
# Ответ:
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048


# Тип 14 № 46972
'''
# Значение выражения 5*343**8 + 4*49**12 + 7**14 - 98 записали в системе счисления с основанием 7 без незначащих нулей.
# Какая цифра чаще всего встречается в этой записи?
x = 5*343**8 + 4*49**12 + 7**14 - 98
M = []
while x > 0:
    M.append(x % 7)
    x //= 7
M.reverse()

my_dict = {}  # diсt() - словарь 
for x in M:
    my_dict[M.count(x)] = x
# print(my_dict)

print(max(my_dict.items()))
'''



# endregion Урок: ******************************************************************************


# todo: Александр_2 = [2, 5, 6, 8, 12, 14+, 15+, 16, 23, 25.2]
# на прошлом уроке: Ответили на вопросы по 15 и разобрали задачи 25.2 маски, остатки, сомножители, Мки
# на следующем уроке:







