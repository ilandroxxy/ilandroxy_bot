# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# № 5640 (Уровень: Средний)
# (М. Ишимов) Исполнитель преобразует число на экране.
#
# У исполнителя есть две команды, которые обозначены латинскими буквами:
# A. Вычти 4
# B. Вычти сумму цифр числа

# Сколько существует программ, для которых при исходном числе 36 результатом является число 2,
# и при этом траектория вычислений содержит число 14?

# Вариант 1
'''
def MySum(x: int):
    return sum([int(i) for i in str(x)])

def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a-4, b) + F(a - MySum(a), b)

print(F(36, 14) * F(14, 2))
'''

# Вариант 2
'''
def MySum(x: int):
    return sum([int(i) for i in str(x)])

def F(a, b):
    if a <= b:
        return a == b
    return F(a-4, b) + F(a - MySum(a), b)

print(F(36, 14) * F(14, 2))
'''
# Показать ответ: 7


# № 5641 (Уровень: Средний)
# (М. Ишимов) Текстовый файл состоит из символов N, R, O и P.
#
# Определите максимальную длину последовательности, в которых нет подряд идущих символов NP или PO в прилагаемом файле.
#
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
s = s.replace('NP', ' ').replace('PO', ' ')
M = [len(i) for i in s.split()]
print(max(M)+2)


s = open('24.txt').readline()
s = s.replace('NP', 'N P').replace('PO', 'P O')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 123


# № 5642 (Уровень: Средний)
# (М. Ишимов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
#
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, больших 500 000, найдите 5 наименьших
# чисел у которых есть ровно три соответствующих маске *1?3 делителя.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им максимальные делители, не считая самого числа.
# Количество строк в таблице для ответа избыточно.
'''
def Divisors(x):
    divisors = set()
    count = 0
    for j in range(2, int(x ** 0.5)+1):
        if x % j == 0:
            divisors.add(j)
            divisors.add(x // j)
            if len(str(j)) >= 3 and str(j)[-1] == '3' and str(j)[-3] == '1':
                count += 1
            if len(str(x // j)) >= 3 and str(x//j)[-1] == '3' and str(x//j)[-3] == '1':
                count += 1
            if count > 3:
                return 0
    return sorted(divisors), count

k = 0
for x in range(500_001, 100000000):
    divisors, count = Divisors(x)
    if count == 3:
        print(x, max(divisors))
        k += 1
        if k == 5:
            break
'''
# Показать ответ
# 500786 250393
# 501963 167321
# 503006 251503
# 503217 167739
# 506142 253071



# endregion Урок: ******************************************************************************

import useful
print(useful.Who_Is_Name())

# todo:    Александр2   = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 11, 12, 14+, 15+, 16, 17, 18, 19-21, 23, 24, 25.2]
# todo: Александр2 КЕГЭ = [9, 15, 17, 24]
# на прошлом уроке: Дорешали вариант Ишимов 1, начиная с 18 номера и все до 25-го.
# на следующем уроке:
