# region Домашка: ******************************************************************************

# Тип 16 № 6266
'''
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n) = n при n ≤ 2;
# F(n) = F(n − 1) × F(n − 2) при n> 2.
# Чему равно значение функции F(6)? В ответе запишите только натуральное число.

def F(n):
    if n <= 2:
        return n
    if n > 2:
        return F(n-1) * F(n-2)
print(F(6))
'''
# Ответ: 32


# Тип 16 № 4692
'''
# Алгоритм вычисления значения функции F(n). где n — натуральное число, задан следующими соотношениями:
#
# F(1) = 1;
# F(n) = F(n-1) * (n+1), при n >1.
#
# Чему равно значение функции F(4)? В ответе запишите только натуральное число.

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) * (n+1)
print(F(4))
'''
# Ответ: 60


# Тип 16 № 47220
'''
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n) = 1 при n = 1;
# F(n) = n · F(n − 1), если n > 1.
#
# Чему равно значение выражения F(2023) / F(2020)?

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n-1)
print(F(2023) / F(2020)) # RecursionError: maximum recursion depth exceeded in comparison
'''

# print(2021 * 2022 * 2023)
# Ответ: 8266912626




# Тип 23 № 36036
'''
# Исполнитель Минус преобразует число на экране.
# У исполнителя есть две команды, которым присвоены номера:
#
# 1. Вычесть 2
# 2. Вычесть 5
#
# Сколько существует программ, которые число 23 преобразуют в число 2?

def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a-2, b) + F(a-5, b)
print(F(23, 2))
'''
# Ответ: 29


# Тип 23 № 40739
'''
# Исполнитель преобразует число на экране. У исполнителя есть три команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Прибавить 2
# 3. Умножить на 3
#
# Сколько существует программ, которые преобразуют исходное число 1 в число 15, и при этом траектория вычислений содержит число 8?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a*3, b)
print(F(1, 8) * F(8, 15))
'''
# Ответ: 651


# Тип 23 № 27280
'''
# Исполнитель РазДва преобразует число на экране. У исполнителя есть две команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Умножить на 2
#
# Сколько существует программ, которые преобразуют исходное число 2 в число 50, и при этом траектория вычислений содержит число 12 и не содержит числа 47?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    elif a == 47:
        return 0
    else:
        return F(a+1, b) + F(a*2, b)
print(F(2, 12) * F(12, 50))
'''
# Ответ: 40


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 7 № 13736
'''
# Автоматическая фотокамера производит растровые изображения размером 640×480 пикселей.
# При этом объём файла с изображением не может превышать 320 Кбайт, упаковка данных не производится.
# Какое максимальное количество цветов можно использовать в палитре?

# I = i * a * b
# N = 2**i

i = (320 * 2**13) / (640 * 480)
i = int(i)  # округляем вниз - 8
print(i)

N = 2**i
print(N)
'''

# Тип 7 № 13620
'''
# Производится звукозапись музыкального фрагмента в формате стерео (двухканальная запись) с частотой дискретизации 32 кГц и 32-битным разрешением.
# Результаты записываются в файл, сжатие данных не производится; размер полученного файла – 64 Мбайт.
# Затем производится повторная запись этого же фрагмента в формате моно (одноканальная запись) с частотой дискретизации 16 кГц и 16-битным разрешением.
# Сжатие данных не производилось.
# Укажите размер файла в Мбайт, полученного при повторной записи.
# В ответе запишите только целое число, единицу измерения писать не нужно.

# I = a * b * c * t
t = (64 * 2**23) / (2 * 32000 * 32)
t = int(t)
print(t)

I2 = (1 * 16000 * 16 * t) / (2**23)
print(I2)
'''


# Тип 11 № 6258
'''
# Для регистрации на сайте некоторой страны пользователю требуется придумать пароль.
# Длина пароля — ровно 11 символов.
# В качестве символов могут быть использованы десятичные цифры и 32 различные буквы местного алфавита,
# причём все буквы используются в двух начертаниях: как строчные, так и прописные (регистр буквы имеет значение!).
# Под хранение каждого такого пароля на компьютере отводится одинаковое и минимально возможное целое количество байтов.
# При этом используется посимвольное кодирование, и все символы кодируются одинаковым и минимально возможным количеством битов.
# Определите объём памяти, который используется для хранения 50 паролей. (Ответ дайте в байтах.)

symbols = 11
alphabet = 10 + 32 * 2
print(alphabet)  # округлить вверх
print(2**7) # i = 7
i = 7
I = symbols * i  # бит на 1 пароль
print(I)
I = int(I / 8) +1
print(I)  # байт на 1 пароль

print(I * 50)
'''



# Тип 25 № 27850
''' 
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [245690;245756] простые числа.
# Выведите на экран все найденные простые числа в порядке возрастания, слева от каждого
# числа выведите его порядковый номер в последовательности.
# Каждая пара чисел должна быть выведена в отдельной строке.

def Simpler(x):
    for j in range(2, x):
        if x % j == 0:
            return False
    return True

k = 1
for x in range(245690, 245756+1):
    if Simpler(x) == True:
        print(k, x)
    k += 1
'''
# Ответ:
# 22 245711
# 30 245719
# 34 245723
# 52 245741
# 58 245747
# 64 245753



# Тип 25 № 27857
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [84052;84130],
# число, имеющее максимальное количество различных натуральных делителей, если таких чисел несколько
# — найдите минимальное из них.
# Выведите на экран количество делителей такого числа и само число.

def D(x):
    dl = set()
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)

A = {}
for x in range(84052, 84130+1):
    dl = D(x)
    A[len(dl)] = x
print(max(A.items()))
'''
# Ответ: 72 84084



# Тип 25 № 33770
'''
# Найдите все натуральные числа, принадлежащие отрезку [106_000_000;107_000_000],
# у которых ровно три различных чётных делителя. В ответе перечислите найденные числа в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x ** 0.5)+1):
        if x % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (x // j) % 2 == 0:
                dl.add(x//j)
            if len(dl) > 3:
                return sorted(dl)
    return sorted(dl)

for x in range(106_000_000, 107_000_000+1):
    dl = D(x)
    if len(dl) == 3:
        print(x)
'''
# Ответ: но долго
# 106084178
# 106492418
# 106784498
# 106842962



# Тип 25 № 37160
'''
# Найдите 5 чисел больших 500000, таких, что среди их делителей есть число, оканчивающееся на 8, при этом этот делитель не равен 8 и самому числу.
# В качестве ответа приведите 5 наименьших чисел, соответствующих условию.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала
# выводится само число, затем минимальный делитель, оканчивающийся на 8, не равный 8 и самому числу.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            if j % 10 == 8 and j != 8:
                dl.add(j)
            if (x//j) % 10 == 8:
                dl.add(x//j)
            if len(dl) > 10:
                return sorted(dl)
    return sorted(dl)
k = 0
for x in range(500000+1, 100000000):
    dl = D(x)
    if len(dl) != 0:
        print(x, dl[0])
        k += 1
        if k == 5:
            break
'''
# Ответ:
# 500002 178
# 500004 18
# 500016 48
# 500018 58
# 500020 4348



# endregion Урок: ******************************************************************************


# todo: Александр_2 = [2, 5, 6, 8, 12, 14+, 16, 23], на следующем уроке: Продолжаем 25, 15






