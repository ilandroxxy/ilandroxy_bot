# region Домашка: ******************************************************************************



# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************



# Тип 8.1 № 5087
'''
# Все 6-буквенные слова, составленные из букв С, В, Е, Т, записаны в алфавитном порядке и пронумерованы.
#
# Вот начало списка:
# 1. ВВВВВB
# 2. ВВВВВЕ
# 3. ВВВВВС
# 4. ВВВВВТ
# 5. ВВВВЕВ
#
# Под каким номером стоит первое из слов, которое начинается с буквы Т?

s = 'ВЕСТ'
k = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        if a == 'Т':
                            print(k, temp)
                            exit()
                        k += 1
'''
# Ответ: 3073




# Тип 8.1 № 3194
'''
# Все 5-буквенные слова, составленные из букв А, О, У, записаны в алфавитном порядке. Вот начало списка:
#
# 1. ААААА
# 2. ААААО
# 3. ААААУ
# 4. АААОА
#
# Запишите слово, которое стоит на 101-м месте от начала списка.

# Вариант 1
s = 'АОУ'
k = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if k == 101:
                        print(k, temp)
                    k += 1

# Вариант 2
s = 'АОУ'
M = ['0']
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    M.append(temp)

print(M[101])
'''
# Ответ: О А У А О




# Тип 8.2 № 28685
'''
# Петя составляет 6-буквенные коды из букв П, Е, Т, Я.
# Каждую букву можно использовать любое количество раз или совсем не использовать, при этом нельзя ставить подряд две гласные или две согласные.
# Сколько различных кодов может составить Петя?

s = 'ПЕТЯ'

s1 = 'ЕЯ'
s2 = 'ПТ'

count = 0
for a in s1:
    for b in s2:
        for c in s1:
            for d in s2:
                for e in s1:
                    for f in s2:
                        temp = a + b + c + d + e + f
                        count += 1

for a in s2:
    for b in s1:
        for c in s2:
            for d in s1:
                for e in s2:
                    for f in s1:
                        temp = a + b + c + d + e + f
                        count += 1

print(count)  # или сделать один перебор и count * 2
'''
# Ответ: 128




# Тип 8.2 № 16886
'''
# Матвей составляет 6-буквенные коды из букв М, А, Т, В, Е, Й.
# Каждую букву нужно использовать ровно 1 раз, при этом код не может начинаться с буквы Й и не может содержать сочетания АЕ.
# Сколько различных кодов может составить Матвей?


s = 'МАТВЕЙ'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        if a != 'Й' and 'АЕ' not in temp:
                            M = [i for i in temp]
                            if len(set(M)) == len(temp):  # Каждую букву нужно использовать ровно 1 раз
                                count += 1
print(count)
'''
# Ответ: 504






# Тип 8.3 № 35897
'''
# Валерия составляет 3-буквенные коды из букв В, А, Л, Е, Р, И, Я, причём буква В должна входить в код ровно один раз.
# Все полученные коды Валерия записала в алфавитном порядке и пронумеровала.

# Начало списка выглядит так:
# 1. ААВ
# 2. АВА
# 3. АВЕ
#
# На каком месте будет записан первый код, не содержащий ни одной буквы А?

s = 'АВЕИЛРЯ'
k = 1
for a in s:
    for b in s:
        for c in s:
            temp = a + b + c
            if temp.count("В") == 1:  
                if 'А' not in temp:  # или temp.count("А") == 0
                    print(k, temp)
                    exit()
                k += 1
'''
# Ответ: 20





# Тип 8.4 № 10473
'''
# Шифр кодового замка представляет собой последовательность из пяти символов, каждый из которых является цифрой от 1 до 4.
# Сколько различных вариантов шифра можно задать, если известно, что цифра 1 встречается ровно два раза, а каждая
# из других допустимых цифр может встречаться в шифре любое количество раз или не встречаться совсем?

s = '1234'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('1') == 2:
                        count += 1
print(count)
'''
# Ответ: 270




# Тип 8 № 26982
'''
# Сколько существует шестизначных чисел, делящихся на 5, в которых каждая цифра может встречаться только один раз,
# при этом никакие две чётные и две нечётные цифры не стоят рядом.

s = '0123456789'
s1 = '13579'
s2 = '02468'
count = 0
for a in s1:
    for b in s2:
        for c in s1:
            for d in s2:
                for e in s1:
                    for f in s2:
                        temp = a + b + c + d + e + f
                        if f == '0' or f == '5':  # шестизначных чисел, делящихся на 5
                            M = [i for i in temp]
                            if len(set(M)) == len(temp):  # каждая цифра может встречаться только один раз
                                count += 1

for a in '2468':
    for b in s1:
        for c in s2:
            for d in s1:
                for e in s2:
                    for f in s1:
                        temp = a + b + c + d + e + f
                        if f == '0' or f == '5':  # шестизначных чисел, делящихся на 5
                            M = [i for i in temp]
                            if len(set(M)) == len(temp):  # каждая цифра может встречаться только один раз
                                count += 1
print(count)  # Ответ: 1296
'''
# Ответ: 1296


# Тип 12 № 46970
'''
# Дана программа для редактора:
#
#     ПОКА НЕ нашлось (00)
#         заменить (01, 210)
#         заменить (02, 3101)
#         заменить (03, 2012)
#     КОНЕЦ ПОКА
#
# Известно, что исходная строка начиналась с нуля и заканчивалась нулём, а между ними содержала только единицы,
# двойки и тройки. После выполнения данной программы получилась строка, содержащая 70 единиц, 56 двоек и 23 тройки.
# Сколько цифр было в исходной строке?

for x in range(1, 50):
    for y in range(1, 50):
        for z in range(1, 50):
            s = '0' + '1' * x + '2' * y + "3" * z + '0'
            temp = s

            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '3101', 1)
                s = s.replace('03', '2012', 1)

            if s.count('1') == 70 and s.count('2') == 56 and s.count('3') == 23:
                print(x + y + z + 2)
                print(len(temp))
'''
# Ответ: 40





# Тип 12 № 47216
'''
# Дана программа для Редактора:
#

# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>0)
#     ЕСЛИ нашлось (>1)
#         ТО заменить (>1, 22>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>2)
#         ТО заменить (>2, 2>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>0)
#         ТО заменить (>0, 1>)
#     КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
#
# На вход приведённой выше программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 39 цифр «0», n цифр «1» и 39 цифр «2», расположенных в произвольном порядке.
#
# Определите наименьшее значение n, при котором сумма числовых значений цифр строки, получившейся в результате выполнения программы, является простым числом.
def  Simpler(x):
    for j in range(2, x):
        if x % j == 0:
            return False
    return True

for n in range(1, 1000):
    s = '>' + '0' * 39 + '1' * n + '2' * 39

    while '>1' in s or '>2' in s or '>0' in s:
        if '>1' in s:
            s = s.replace('>1', '22>', 1)
        if '>2' in s:
            s = s.replace('>2', '2>', 1)
        if '>0' in s:
            s = s.replace('>0', '1>', 1)

    summ = s.count('1') + s.count('2') * 2 + s.count('3') * 3
    if Simpler(summ) == True:
        print(n)
        break
'''
# Ответ: 5




# endregion Урок: ******************************************************************************


# todo: Александр_2 = [2, 5, 6, 14+], на следующем уроке: Закрыли 5 номер, разбираем строки и 8, 12 номера






