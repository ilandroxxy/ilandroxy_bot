# region Домашка: ******************************************************************************

# Тип 5 № 28542 (которое ДЗ: через списки!)
'''
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится троичная запись числа N.
# 2. В конец записи (справа) дописывается остаток от деления числа N на 3.
# 3. Результат переводится из троичной системы в десятичную и выводится на экран.
#
# Пример. Дано число N = 11. Алгоритм работает следующим образом:
# 1. Троичная запись числа N: 102.
# 2. Остаток от деления 11 на 3 равен 2, новая запись 1022.
# 3. На экран выводится число 35.
#
# Какое наименьшее четырёхзначное число может появиться на экране в результате работы автомата?

for n in range(1, 10000):
    x = n

    M = []
    while x > 0:
        M.append(x % 3)
        x //= 3
    M.reverse()  # Перевел число в троичную систему счисления

    M.append(n % 3)  # Дописал справа остаток от деления числа n на 3

    r = 0
    M.reverse()
    for i in range(0, len(M)):
        r += M[i] * 3 ** i  # Перевел в десятичную

    if r > 999:
        print(r)
        exit()
'''
# Ответ: 1003


# Тип 5 № 10282
'''
# Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам.

# 1. Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.

# Пример. Исходное число: 63 179. Суммы: 6 + 1 + 9 = 16; 3 + 7 = 10. Результат: 1016.
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 723.

for n in range(10000, 100000):
    M = [int(i) for i in str(n)]
    a = M[0] + M[2] + M[4]
    b = M[1] + M[3]

    maxi = max(a, b)
    mini = min(a, b)
    r = str(mini) + str(maxi)
    if r == '723':
        print(n)
        break
'''
# Ответ: 50979


# Тип 5 № 17324
''' '''
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится двоичная запись числа N.
# 2. Удаляется первая слева единица и все следующие непосредственно за ней нули. Если после этого в числе не остаётся цифр, результат этого действия считается равным нулю.
# 3. Полученное число переводится в десятичную запись.
# 4. Новое число вычитается из исходного, полученная разность выводится на экран.
#
# Пример. Дано число N = 11. Алгоритм работает следующим образом.
#
# 1. Двоичная запись числа N: 1011.
# 2. Удаляется первая единица и следующий за ней ноль: 11.
# 3. Десятичное значение полученного числа 3.
# 4. На экран выводится число 11 – 3 = 8.
#
# Сколько разных значений будет показано на экране автомата при последовательном вводе всех натуральных чисел от 10 до 1000?

# Вариант 1
'''
Setter = set()
for n in range(10, 1000+1):
    x = n

    M = []
    while x > 0:
        M.append(x % 2)
        x //= 2
    M.reverse()

    del M[0]  # 2. Удаляется первая слева единица и все следующие непосредственно за ней нули.

    r = 0
    M.reverse()
    for i in range(0, len(M)):
        r += M[i] * 2 ** i

    res = n - r  # 4. Новое число вычитается из исходного, полученная разность выводится на экран.

    Setter.add(res)

print(len(Setter), Setter)
print(sorted(Setter))
'''

# Вариант 2
'''
Setter = set()
for n in range(10, 1000+1):
    s = bin(n)[2:]  # отбросили элементы под индексами 0, 1

    s = s[1:]  # отбросили элемент под индексом 0 (новый), то есть избавились от '1'

    r = int(s, 2)

    res = n - r

    Setter.add(res)
print(len(Setter))
'''
# Ответ: 7





# Тип 5 № 10309
'''
# Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 63 179. Суммы: 6 + 1 + 9 = 16; 3 + 7 = 10. Результат: 1016.
#
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 621.

for n in range(10000, 100000):
    M = [int(i) for i in str(n)]
    a = M[0] + M[2] + M[4]
    b = M[1] + M[3]

    maxi = max(a, b)
    mini = min(a, b)
    r = str(mini) + str(maxi)
    if r == '621':
        print(n)
        break
'''
# Ответ: 30969


# Тип 5 № 27375
'''
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится троичная запись числа N.
# 2. В конец записи (справа) дописывается остаток от деления числа N на 3.
# 3. Результат переводится из троичной системы в десятичную и выводится на экран.
#
# Пример. Дано число N=11. Алгоритм работает следующим образом:
#
# 1. Троичная запись числа N: 102.
# 2. Остаток от деления 11 на 3 равен 2, новая запись 1022.
# 3. На экран выводится число 35.
#
# Какое наименьшее трёхзначное число может появиться на экране в результате работы автомата?

for n in range(1, 10000):
    x = n
    M = []
    while x > 0:
        M.append(x % 3)
        x //= 3
        M.reverse()

        for _ in range(1):
            M.append(x % 3)
            x //= 3

        r = 0
        M.reverse()
        for i in range(0, len(M)):
            r += M[i] * 3 ** i
            if r >= 100:
                print(r)
                exit()
'''
# Ответ 243 (неправильно)


# Тип 5 № 9792
'''
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Перемножаются первая и вторая, а также вторая и третья цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 631. Произведение: 6 * 3 = 18; 3 * 1 = 3. Результат: 318.
#
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 621.

for n in range(100, 1000):
    M = [int(i) for i in str(n)]
    a = M[0] * M[1]
    b = M[1] * M[2]

    maxi = max(a, b)
    mini = min(a, b)
    r = str(mini) + str(maxi)
    if r == '621':
        print(n)
'''
# Ответ: 732

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

'''
s = '10001000'  # при переводе 136

s = s[1:]
print(int(s, 2))

s = '10001000'

s = s.replace('1', '', 1)  # избавились от первой единицы
print(int(s, 2))

'''



# region Тип 5 № 18618
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится двоичная запись числа N.
# 2. Запись «переворачивается», то есть читается справа налево. Если при этом появляются ведущие нули, они отбрасываются.
# 3. Полученное число переводится в десятичную запись и выводится на экран.
#
# Пример. Дано число N = 58. Алгоритм работает следующим образом.
# 1. Двоичная запись числа N: 111010.
# 2. Запись справа налево: 10111 (ведущий ноль отброшен).
# 3. На экран выводится десятичное значение полученного числа 23.
#
# Какое наибольшее число, не превышающее 100, после обработки автоматом даёт результат 11?
'''
M = []
for n in range(1, 100+1):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.

    s = s[::-1]  # 2. Запись «переворачивается», то есть читается справа налево.

    r = int(s, 2)

    if r == 11:
        M.append(n)
print(max(M))
'''
# Ответ: 52
# endregion Тип 5 № 18618


# region Тип 5 № 28681
'''
# Автомат обрабатывает натуральное число N (128 ≤ N ≤ 255) по следующему алгоритму:
#
# 1. Строится восьмибитная двоичная запись числа N.
# 2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3. Полученное число переводится в десятичную запись.
# 4. Из исходного числа вычитается полученное, разность выводится на экран.
#
# Пример. Дано число N = 131. Алгоритм работает следующим образом:
# 1. Восьмибитная двоичная запись числа N: 10000011.
# 2. Все цифры заменяются на противоположные, новая запись: 01111100.
# 3. Десятичное значение полученного числа: 124.
# 4. На экран выводится число: 131 – 124 = 7.
#
# Какое число нужно ввести в автомат, чтобы в результате получилось 105?

for n in range(128, 255+1):
    s = bin(n)[2:]

    while len(s) < 8:
        s = '0' + s

    s = s.replace('0', '*')
    s = s.replace('1', '0')
    s = s.replace('*', '1')

    r = int(s, 2)

    if (n - r) == 105:
        print(n)
'''
# Ответ: 180
# endregion Тип 5 № 28681


# region Тип 5 № 47209
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу:
# а) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 0, а затем два левых разряда заменяются на 10;
# б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 1, а затем два левых разряда заменяются на 11.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
#
# Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число R, большее 40. В ответе запишите это число в десятичной системе счисления.



for n in range(1, 10000):
    s = bin(n)[2:]

    summ = s.count('1')
    if summ % 2 == 0:
        s += '0'
        s = '10' + s[2:]
    else:
        s += '1'
        s = '11' + s[2:]

    r = int(s, 2)

    if r > 40:
        print(n)
        break
'''
# Ответ: 16
# endregion Тип 5 № 47209


# Тип 12 № 15136
'''
# Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 99 единиц?
#
# НАЧАЛО
#     ПОКА нашлось (111)
#         ЕСЛИ нашлось (222)
#             ТО заменить (222, 1)
#             ИНАЧЕ заменить (111, 2)
#         КОНЕЦ ЕСЛИ
#     КОНЕЦ ПОКА
# КОНЕЦ

s = '1' * 99
while '111' in s:  # ПОКА нашлось (111)
    if '222' in s:  # ЕСЛИ нашлось (222)
        s = s.replace('222', '1', 1)  # ТО заменить (222, 1)
    else:
        s = s.replace('111', '2', 1)

print(s)
'''
# Ответ: 22211



# endregion Урок: ******************************************************************************


# todo: Александр_2 = [2, 5, 6, 14], на следующем уроке: Если вопросов по 5-тому нет, то разбираем списки и номер 8






