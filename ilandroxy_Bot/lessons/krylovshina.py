# region Домашка: ******************************************************************

# КЕГЭ № 376 (Уровень: Базовый)
#
# НАЧАЛО
#    ПОКА нашлось (11)
#       заменить (112, 4)
#       заменить (113, 2)
#       заменить (42, 3)
#       заменить (43, 1)
#    КОНЕЦ ПОКА
# КОНЕЦ

# Какая строка получится в результате применения приведённой программы
# к строке вида 1…13…32…2 (170 единиц, 100 троек и 7 двоек)?
'''
s = '1' * 170 + '3' * 100 + '2' * 7
while '11' in s:
    s = s.replace('112', '4', 1)
    s = s.replace('113', '2', 1)
    s = s.replace('42', '3', 1)
    s = s.replace('43', '1', 1)
print(s)
'''
# Ответ: 22


# КЕГЭ № 1751 Danov2102 (Уровень: Сложный) (А. Богданов)
# Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
#
# ПОКА нашлось(10) ИЛИ нашлось(20)
#    ЕСЛИ нашлось(20)
#       ТО заменить(20,00)
#       ИНАЧЕ заменить(10,200)
#    КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА

# Определите максимально возможное количество цифр 0,
# которое может получиться в результате применения представленного ниже алгоритма к строке,
# состоящей из 19 цифр 0, 13 цифр 1 и 17 цифр 2, идущих в произвольном порядке.
'''
s = '2' * 17 + '1' * 13 + '0' * 19

while '10' in s or '20' in s:
    if '20' in s:
        s = s.replace('20', '00', 1)
    else:
        s = s.replace('10', '200', 1)

print(s.count('0'))
'''
# Ответ: 62

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Комментарии в Python
# - однострочный комментарий (то есть программа эту строчку игнорирует)

'''
"""
- многострочные комментарии (если необходимо закомментировать сразу блок кода) 
"""
'''

X = 5  # переменная - это способ доступа к данным
# print(X, type(X))  # 5 <class 'int'>

# Типы данных переменных
'''
a = 5  # int (integer) - целочисленные значения
print(type(2+2))   # <class 'int'>

b = 5.0  # float (число с плавающей точкой) - вещественное число / дробь
print(7 / 2)  # 3.5

c = '5'  # str (string) - строковый тип данных содержит в себе буквы, символы, слова и тд
print(a*4, c*4)  # 20 5555
print('8' * 100)
print('hello' + ', world')   # hello, world

d1 = True  # bool (Boolean) - основы Булевой алгебры / основы математической логики 
d2 = False
'''

# Типы данных коллекций
'''
A = [1, 2, 3]  # list (список)
# Списки хранят в себе неограниченное кол-во элементов разных типов данных
# Все элементы списка пронумерованны через индексы (счет начинается с нуля)
# Через индексы можно брать элементы списка или изменять их
print(A[0])  # 1
A[0] = 100
print(A)  # [100, 2, 3]

B = (1, 2, 3)  # tuple (кортеж)
# Полностью идентичен спискам, кроме: нельзя менять элементы кортежа

C = {1, 2, 3, 2, 3}  # set (множество)
# В множествах не может быть копий одного и того же значения
print(C)  # {1, 2, 3}

D = {1: 'один', 2: 'два', 3: 'три'}   # dict (словарь)
# Элемент словаря состоит из двух частей: ключ и значение
print(D[1])  # один
D[1] = 100
print(D)  # {1: 100, 2: 'два', 3: 'три'}
'''

'''
M = [2, 2.0, '2', True, 2+2, 7/2, '2'*4, 4<10, [1, 2, 3], (1, 2, 3), {1, 2, 3},  {1: 'один', 2: 'два', 3: 'три'}]
for elem in M:
    print(elem, type(elem))
    
    # 2 <class 'int'>
    # 2.0 <class 'float'>
    # 2 <class 'str'>
    # True <class 'bool'>
    # 4 <class 'int'>
    # 3.5 <class 'float'>
    # 2222 <class 'str'>
    # True <class 'bool'>
    # [1, 2, 3] <class 'list'>
    # (1, 2, 3) <class 'tuple'>
    # {1, 2, 3} <class 'set'>
    # {1: 'один', 2: 'два', 3: 'три'} <class 'dict'>
'''

# Конвертацию типов данных
'''
a = 5
print(a, type(a))  # 5 <class 'int'>

a = str(a)
print(a, type(a))  # 5 <class 'str'>

a = float(a)
print(a, type(a))  # 5.0 <class 'float'>

a = int(a)
print(a, type(a))   # 5 <class 'int'>

print()

A = [1, 2, 3]
print(A, type(A))  # [1, 2, 3] <class 'list'>

A = tuple(A)
print(A, type(A))  # (1, 2, 3) <class 'tuple'>

A = set(A)
print(A, type(A))  # {1, 2, 3} <class 'set'>

A = list(A)
print(A, type(A))  # [1, 2, 3] <class 'list'>
'''

# Ввод переменных с клавиатуры
'''
a = input('Введите символ: ')
print(a, type(a))  # <class 'str'>

a = int(input('Введите число: '))
print(a, type(a))  # <class 'int'>
'''

# Функция print() и f-строки
# Задача: Написать текст "Сегодня отличная погода, хотя на улице облачно, но температуру 24 градуса!"
'''
weather = 'облачно'
temperature = int(input('Введите температуру: '))
print("Сегодня отличная погода, хотя на улице", weather, ", но температуру ", temperature, " градуса!")
print("Сегодня отличная погода, хотя на улице" + weather + ", но температуру " + str(temperature) + " градуса!")
print("Сегодня отличная погода, хотя на улице {}, но температуру {} градуса!".format(weather, temperature))
print(f"Сегодня отличная погода, хотя на улице {weather}, но температуру {temperature} градуса!")
'''

# Базовая арифметика в Python
'''
a = 7
b = 2
print(f'{a} + {b} = {a+b}\n'
      f'{a} - {b} = {a-b}\n'
      f'{a} * {b} = {a*b}')
print()
print(f'{a} / {b} = {a/b} - вещественное деление \n'
      f'{a} // {b} = {a//b} - целочисленное деление (берем только целую часть) \n'
      f'{a} % {b} = {a%b} - остаток от деления (в виде обыкновенной дроби) ')
print()
print(f'Возведите {a} в степень {b}: {a} ** {b} = {a**b}\n'
      f'Возьмем квадратный корень от 16: 16 ** (1/2) = {16 ** (1/2)}\n'
      f'Возьмем кубический корень от 27: 27 ** (1/3) = {27 ** (1/3)}')


import math
print(math.sqrt(16))
'''

# endregion Урок: ******************************************************************


# todo: Анастасия = [1.1, 2.1, 3.1, 4.1, 5.1, 7.1, 11.1, 12.1, 13.1, 14.1]
# todo:  КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке:
