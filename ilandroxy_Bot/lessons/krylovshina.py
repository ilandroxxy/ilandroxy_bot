# region Домашка: ***************************************************************


# endregion Домашка: ************************************************************


# region Урок: ******************************************************************

# № 6844 (Уровень: Средний)
# В системе счисления с основанием p выполняется равенство
#
# 5x83 + x9x9 = y20y
#
# Буквами x и y обозначены некоторые цифры из алфавита системы счисления с основанием p.
# Определите значение числа xyyx_p и запишите это значение в десятичной системе счислени
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for p in range(10, 36):
    for x in alphabet[:p]:
        for y in alphabet[:p]:
            A = int(f'5{x}83', p)
            B = int(f'{x}9{x}9', p)
            C = int(f'{y}20{y}', p)
            if (A + B) == C:
                print(int(f'{x}{y}{y}{x}', p))
'''
# Ответ: 18990


# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1



# Тип 5 №55801
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
#
# 2. Далее эта запись обрабатывается по следующему правилу:
#
# а) если число N кратно 3, тогда в конец дописывается три младших разряда
# полученной двоичной записи,
#
# б) если число N не кратно 3, тогда в конец дописывается двоичная последовательность,
# являющаяся результатом умножения 3 на остаток от деления числа N на 3.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
#
# Укажите наибольшее число N, после обработки которого с помощью
# этого алгоритма получается число R, меньшее 100.
# В ответе запишите это число в десятичной системе счисления.
'''
for n in range(1, 1000):

    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.

    if n % 3 == 0:
        # s = s + s[-3] + s[-2] + s[-1]
        s += s[-3:]
    else:
        x = (n % 3) * 3
        s += bin(x)[2:]

    r = int(s, 2)

    if r < 100:
        print(n)
'''


'''
def my_convert(n, k):
    s = ''
    while n > 0:
        s += str(n % k)
        n //= k
    s = s[::-1]
    return s


for n in range(1, 1000):

    s = my_convert(n, 2)  # 1. Строится двоичная запись числа N.

    if n % 3 == 0:
        # s = s + s[-3] + s[-2] + s[-1]
        s += s[-3:]
    else:
        x = (n % 3) * 3
        s += my_convert(x, 2)

    r = int(s, 2)

    if r < 100:
        print(n)
'''

# Ответ: 22


# Тип 5 №26978
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1) Строится двоичная запись числа N.
# 2) К этой записи дописываются разряды по следующему правилу:
# а) если число четное, то к двоичной записи числа в конце дописываются 1 и 0;
# б) если число нечетное, то к двоичной записи числа в конце дописывается 01.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
# Укажите наибольшее число R меньшее 109, которое может получиться после обработки этого алгоритма.
# В ответе это число запишите в десятичной системе.
'''
R = []
for n in range(1, 1000):

    s = bin(n)[2:]  # str

    if n % 2 == 0:
        s += '10'  # добавить справа (в конец) элемент '10'
        # s = s + '10  # добавить справа (в конец) элемент '10'
        # s = '10' + s  # добавить слева (в начало) элемент '10'
    else:
        s = s + '01'

    r = int(s, 2)  # перевод в 10-ную из 2-ной

    if r < 109:
        R.append(r)
print(max(R))
'''
# Ответ: 106


# Тип 5 № 8094
# На вход алгоритма подаётся натуральное число N.
# Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится двоичная запись числа N.
# 2) К этой записи дописываются справа ещё два разряда по следующему правилу:
# а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец числа (справа).
# б) над этой записью производятся те же действия — справа дописывается остаток от деления суммы цифр на 2.
#
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
# является двоичной записью искомого числа R.
#
# Укажите минимальное число R, которое превышает 43 и может являться результатом работы алгоритма.
# В ответе это число запишите в десятичной системе.

for n in range(1, 1000):
    s = bin(n)[2:]

    for i in range(2):
        s += str(s.count('1') % 2)

    r = int(s, 2)
    if r > 43:
        print(r)
        break


for n in range(1, 1000):
    s = bin(n)[2:]

    s += str(s.count('1') % 2)
    s += str(s.count('1') % 2)

    r = int(s, 2)
    if r > 43:
        print(r)
        break

# Ответ: 46.

# endregion Урок: ***************************************************************


# todo: Анастасия = [1.1, 2.1, 3.1, 4.1, 5.1, 7.1, 11.1, 12.1, 13.1, 14.1]
# todo:  КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке: Списки и строки
