# region Домашка: ******************************************************************

# КЕГЭ № 376 (Уровень: Базовый)
#
# НАЧАЛО
#    ПОКА нашлось (11)
#       заменить (112, 4)
#       заменить (113, 2)
#       заменить (42, 3)
#       заменить (43, 1)
#    КОНЕЦ ПОКА
# КОНЕЦ

# Какая строка получится в результате применения приведённой программы
# к строке вида 1…13…32…2 (170 единиц, 100 троек и 7 двоек)?
'''
s = '1' * 170 + '3' * 100 + '2' * 7
while '11' in s:
    s = s.replace('112', '4', 1)
    s = s.replace('113', '2', 1)
    s = s.replace('42', '3', 1)
    s = s.replace('43', '1', 1)
print(s)
'''
# Ответ: 22


# КЕГЭ № 1751 Danov2102 (Уровень: Сложный) (А. Богданов)
# Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
#
# ПОКА нашлось(10) ИЛИ нашлось(20)
#    ЕСЛИ нашлось(20)
#       ТО заменить(20,00)
#       ИНАЧЕ заменить(10,200)
#    КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА

# Определите максимально возможное количество цифр 0,
# которое может получиться в результате применения представленного ниже алгоритма к строке,
# состоящей из 19 цифр 0, 13 цифр 1 и 17 цифр 2, идущих в произвольном порядке.
'''
s = '2' * 17 + '1' * 13 + '0' * 19

while '10' in s or '20' in s:
    if '20' in s:
        s = s.replace('20', '00', 1)
    else:
        s = s.replace('10', '200', 1)

print(s.count('0'))
'''
# Ответ: 62

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# todo Разобрать номера: 1-7, 10-14 (Письменные задачи: 1, 4, 7, 11, 13; Excel: 3, 10; Python: 2, 5, 12, 14)


# Единицы измерения информации
# Компьютеры бинарные - то есть используют для работы только 0 и 1

# минимальная единица измерения: 1 бит
# 1 байт = 8 бит = 2**3 бит
# 1 Кбайт = 1024 байт = 2**10 байт = 2**13 бит
# 1 Мбайт = 1024 Кбайт = 2**10 Кбайт = 2**20 байт = 2**23 бит
# 1 Гбайт = 1024 Мбайт = 2**10 Мбайт = 2**30 байт = 2**33 бит


# Тип 7 №37142
# Изображение размером 315×3072 пикселей сохраняется в памяти компьютера.
# Для его хранения выделяется не более 735 Кбайт без учёта заголовка файла.
# Все пиксели кодируются одинаковым количеством бит и записываются в файл один за другим.
# Какое максимальное количество цветов можно использовать в изображении? В ответе запишите только число.
'''
pixels = 315 * 3072
I = 735 * 2**13  # сколько уходит на запись одной картинки

# I = pixels * i
i = I / pixels
# print(i)  # 6.222222 бит выделяемое на 1 пиксель
# Округлим вниз до 6, так как нам нельзя превышать 735 Кбайт

print(2 ** 6)
'''
# Ответ: 64


# Тип 7 №57414
# Голосовое сообщение продолжительностью 90с было записано в формате стерео
# и оцифровано с глубиной кодирования 16 бит и частотой дискретизации 48000 измерений в секунду.
# Сжатие данных не использовалось. Файл с оцифрованным голосовым сообщением был передан по каналу связи,
# пропускная способность которого 3200 бит/с.
# Сколько секунд длилась передача файла? В ответе запишите целое число, единицу измерения указывать не нужно.
'''
# I = a * b * c * t
t = 90  # длина музыкального фрагмента
a = 2
b = 16
c = 48000
I = a * b * c * t    # бит

T = I / 3200  # скорость передачи файла
print(T)
'''
# Ответ: 43200


# Тип 7 №13620
# Производится звукозапись музыкального фрагмента в формате стерео (двухканальная запись)
# с частотой дискретизации 32 кГц и 32-битным разрешением. Результаты записываются в файл,
# сжатие данных не производится; размер полученного файла – 64 Мбайт.
# Затем производится повторная запись этого же фрагмента в формате моно
# (одноканальная запись) с частотой дискретизации 16 кГц и 16-битным разрешением.
# Сжатие данных не производилось. Укажите размер файла в Мбайт, полученного при повторной записи.
# В ответе запишите только целое число, единицу измерения писать не нужно.
'''
# I = (a * b * c) * t
a = 2
c = 32000
b = 32
# t - ?
I = 64 * 2**23
t = I / (a * b * c)

a1 = 1
c1 = 16000
b1 = 16
I = (a1 * b1 * c1 * t) / (2**23)
print(I)
'''
# Ответ: 8


# Тип 11 № 33090
# При регистрации на сервере каждый пользователь получает уникальный персональный код,
# состоящий из 19 символов, каждый из которых может быть одной из 26 заглавных латинских букв
# или одной из 10 цифр. При этом в базе данных сервера формируется запись,
# содержащая этот код и дополнительную информацию о пользователе.
# Для представления кода используют посимвольное кодирование,
# все символы кодируют одинаковым минимально возможным количеством битов,
# а для кода в целом выделяется минимально возможное целое количество байт.
#
# Для хранения данных о 40 пользователях потребовалось 2800 байт.
# Сколько байт выделено для хранения дополнительной информации об одном пользователе?
# В ответе запишите только целое число — количество байтов.
'''
symbols = 19
alphabet = 36  # alphabet = 2 ** i
i = 6  # кол-во бит на символ
bit = symbols * i
byte = bit / (2**3)
print(byte)  # 14.25
byte = 15

I = 2800 / 40
print(I)

# I = дополнительной информации + код
print(I - byte)
'''
# Ответ: 55


# Тип 11 №6885
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль,
# состоящий из 16 символов и содержащий только заглавные символы среднего ряда
# латинской раскладки клавиатуры: A, S, D, F, G, H, J, K, L.
# Каждый такой пароль в компьютерной программе записывается минимально возможным
# и одинаковым целым количеством байт (при этом используют посимвольное кодирование
# и все символы кодируются одинаковым и минимально возможным количеством бит).
# Определите объём памяти, отводимый этой программой для записи 20 паролей. (Ответ дайте в байтах.)
'''
symbols = 16
alphabet = 9  # alphabet = 2 ** i
i = 4
bit = symbols * i
byte = bit / 8
print(byte)

print(byte * 20)
'''
# Ответ: 160


# Тип 11 №46969
'''
# Каждый объект, зарегистрированный в информационной системе, получает уникальный код из трёх частей.

# Первая часть кода определяет категорию объекта.
# Всего выделяется 6 категорий, которые обозначаются латинскими буквами A, B, C, D, E, F.

symbols1 = 1
i1 = 3
bit1 = 3

# Вторая часть кода описывает группу, к которой принадлежит объект.
# Эта часть состоит из 11 символов, каждый из которых может быть любой из 20 заглавных
# латинских букв (буквы, задающие категории, не используются).

symbols2 = 11
alphabet2 = 20
i2 = 5
bit2 = i2 * symbols2

# Третья часть кода задаёт порядковый номер объекта внутри категории
# и может быть целым числом от 1 до 1999.

symbols3 = 1
alphabet3 = 1999  # < 2**11
i3 = 11
bit3 = i3 * symbols3


bit = bit3 + bit1 + bit2
byte = bit / 8
print(byte)
byte = 9

# Каждая из трёх частей кодируется независимо.
# Для представления категории и группы используют посимвольное кодирование, все символы
# в пределах каждой части кода кодируют одинаковым минимально возможным количеством битов.
# Порядковый номер кодируется как двоичное целое число с использованием минимально возможного количества битов.
# Для кода в целом выделяется минимально возможное целое количество байтов.
# Кроме того, для каждого объекта выделен одинаковый объём памяти для хранения дополнительных регистрационных данных.
#
# Для хранения кода и дополнительных регистрационных данных 36 объектов потребовалось 1188 байт.
# Сколько байтов выделено для хранения дополнительных регистрационных данных одного объекта?
# В ответе запишите только целое число  — количество байтов.


I = 1188 / 36
print(I - byte)
'''
# Ответ: 24



# endregion Урок: ******************************************************************


# todo: Анастасия = [1.1, 2.1, 4.1, 7.1, 11.1, 12.1, 14.1]
# todo:  КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке: На след. уроке продолжаем 13; Excel: 3, 10
