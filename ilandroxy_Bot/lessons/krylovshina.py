# region Домашка: ***************************************************************


# endregion Домашка: ************************************************************


# region Урок: ******************************************************************

# Тип 5 №16882
# Автомат обрабатывает натуральное число N (0 ≤ N ≤ 255) по следующему алгоритму:
#
# 1. Строится восьмибитная двоичная запись числа N.
# 2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3. Полученное число переводится в десятичную запись.
# 4. Из нового числа вычитается исходное, полученная разность выводится на экран.
#
# Пример. Дано число N = 13. Алгоритм работает следующим образом.
# 1. Восьмибитная двоичная запись числа N: 00001101.
# 2. Все цифры заменяются на противоположные, новая запись 11110010.
# 3. Десятичное значение полученного числа 242.
# 4. На экран выводится число 242 − 13 = 229.
#
# Какое число нужно ввести в автомат, чтобы в результате получилось 111?
'''
for n in range(0, 255+1):
    s = bin(n)[2:]
    while len(s) < 8:
        s = '0' + s

    # s = s.replace('0', '*').replace('1', '0').replace('*', '1')

    s = s.replace('0', '*')
    s = s.replace('1', '0')
    s = s.replace('*', '1')

    r = int(s, 2)

    if r - n == 111:
        print(n)
'''
# Ответ: 72


# Тип 8 №3205
# Все 5-буквенные слова, составленные из букв А, О, У, записаны в алфавитном порядке.
# Вот начало списка:
# 1. ААААА
# 2. ААААО
# 3. ААААУ
# 4. АААОА
#
# Укажите номер первого слова, которое начинается с буквы О.
'''
s = sorted('АУО')
k = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if slovo[0] == 'О':
                        print(k, slovo)
                        exit()
                    k += 1
'''

# Вариант 2
'''
from itertools import product
k = 1
for s in product(sorted('АУО'), repeat=5):
    slovo = ''.join(s)
    if slovo[0] == 'О':
        print(k, slovo)
        exit()
    k += 1
'''
# Ответ: 82


# Тип 8 №11239
# Максим составляет таблицу кодовых слов для передачи сообщений, каждому
# возможному сообщению соответствует своё кодовое слово.
# В качестве кодовых слов Максим использует четырёхбуквенные слова, в которых
# есть только буквы A, B, C, D, E, F, X, причём буква X появляется ровно 1 раз.
# Сколько различных кодовых слов может использовать Максим?
'''
s = 'ABCDEFX'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                slovo = a + b + c + d
                if slovo.count('X') == 1:
                    count += 1
print(count)
'''
# Ответ: 864


# Тип 8 №51977
# Вероника составляет коды из букв слова ВЕРОНИКА.
# Код должен состоять из 6 букв, любую букву можно использовать
# произвольное число раз или не использовать вовсе.
# Вероника хочет, чтобы гласных в каждом коде было больше, чем согласных.
# Сколько кодов, удовлетворяющих этому условию, она сможет составить?
'''
s = 'ВЕРОНИКА'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        glas = [x for x in slovo if x in 'ЕОИА']
                        sogl = [x for x in slovo if x in 'ВРНК']
                        if len(glas) > len(sogl):
                            count += 1
print(count)
'''
# Ответ: 90112


# Тип 8 №59713
# Составляют 5-буквенные слова из букв слова ПЯТНИЦА.
# Найти количество слов, которые не начинаются с Н и в которых есть только одна буква Я.
# Буквы в слове могут повторяться.
'''
s = 'ПЯТНИЦА'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if slovo[0] != 'Н':
                        if slovo.count('Я') == 1:
                            count += 1
print(count)
'''
# Ответ: 5616


# Тип 8 №58235
# Сколько существует различных трёхзначных чисел, записанных в четверичной системе счисления,
# в записи которых сумма первой и последней цифры строго больше цифры стоящей по середине?
'''
s = '0123'
count = 0
for a in s:
    for b in s:
        for c in s:
            num = a + b + c
            if num[0] != '0':
                if int(a) + int(c) > int(b):
                    count += 1
print(count)
'''
# Ответ: 38


# todo Записать в шаблоны для статей
# Тип 8 №58240
# Сколько существует различных пятизначных чисел, записанных в девятеричной системе счисления,
# в записи которых цифры следуют слева направо в убывающем порядке?
'''
s = '012345678'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    num = a + b + c + d + e
                    if num[0] != '0':
                        if num == ''.join(sorted(num, reverse=True)):
                            if len(set(num)) == len(num):
                                count += 1
print(count)  # 126


from itertools import permutations
count = 0
for num in permutations('012345678', 5):
    if num[0] != '0' and list(num) == sorted(num, reverse=True):
        count += 1
print(count)
'''

'''
from itertools import product
alphabet = '012345678'
ap=[]
for i in product(alphabet, repeat=5):
    if  i[0] != '0' and int(i[0]) > int(i[1]) > int(i[2]) > int(i[3]) > int(i[4]):
        ap.append(i)
        print(i)
print(len(ap))
'''


# endregion Урок: ***************************************************************


# todo: Анастасия = [1.1, 2.1, 3.1, 4.1, 5.1, 7.1, 8.1, 11.1, 12.1, 13.1, 14.1]
# todo:  КЕГЭ  = []
# на прошлом уроке:
# на следующем уроке: Списки и строки
