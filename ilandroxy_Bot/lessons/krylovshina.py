# region Домашка: ***************************************************************


# endregion Домашка: ************************************************************


# region Урок: ******************************************************************

'''
def convert(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    ostat = ''
    while number > 0:
        ostat += alphabet[number % system]
        number //= system
    ostat = ostat[::-1]
    return ostat

print(convert(8, 2))  # 1000
print(int('1000', 2))  # 8
'''

'''
def convert(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    ostat = ''
    while number > 0:
        ostat += alphabet[number % system]
        number //= system
    ostat = ostat[::-1]
    return ostat


for n in range(1, 10000):
    s = convert(n, 3)
    s = s + str(n % 3)
    r = int(s, 3)
    if r > 99:
        print(r)
        break
'''


# Тип 5 №19055
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу:
# а) складываются все цифры двоичной записи числа N, и остаток от деления суммы
# на 2 дописывается в конец числа (справа). Например, запись 11100 преобразуется в запись 111001;
# б) над этой записью производятся те же действия — справа дописывается
# остаток от деления суммы её цифр на2.
#
# Укажите минимальное число R, которое превышает число 97 и может являться результатом работы данного алгоритма.
# В ответе это число запишите в десятичной системе счисления.
'''
def convert(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    ostat = ''
    while number > 0:
        ostat += alphabet[number % system]
        number //= system
    ostat = ostat[::-1]
    return ostat


for n in range(1, 10000):
    s = convert(n, 2)
    s = s + str(s.count('1') % 2)
    s = s + str(s.count('1') % 2)

    r = int(s, 2)
    if r > 97:
        print(r)
        break
'''
'''
for n in range(1, 10000):
    s = bin(n)[2:]
    s = s + str(s.count('1') % 2)
    s = s + str(s.count('1') % 2)

    r = int(s, 2)
    if r > 97:
        print(r)
        break
'''


# Тип 12 №39241
# Дана программа для редактора:
#  ПОКА нашлось (111) ИЛИ нашлось (222)
#   заменить (111, 22)
#   заменить (222, 1)

# Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр,
# а после выполнения программы получилась строка, содержащая только двойки.
# Какое наименьшее количество единиц могло быть в исходной строке?
'''
for n in range(201, 1000):
    s = '1' * n  # исходная строка

    while '111' in s or '222' in s:
        s = s.replace('111', '22', 1)
        s = s.replace('222', '1', 1)
    if s.count('1') == 0:
        print(n)
        break
'''


# Тип 12 №14775
# Какая строка получится в результате применения приведённой ниже программы
# к строке вида 1…12…2 (8 единиц, затем 8 двоек)?
# В ответе запишите полученную строку.
#
# ПОКА нашлось (111) ИЛИ нашлось (222)
#   ЕСЛИ нашлось (111)
#       ТО заменить (111, 2)
#   ЕСЛИ нашлось (222)
#       ТО заменить (222, 1)
'''
s = '1' * 8 + '2' * 8
while '111' in s or '222' in s:
    if '111' in s:
        s = s.replace('111', '2', 1)
    if '222' in s:
        s = s.replace('222', '1', 1)
print(s)
'''
# Ответ: 1122

# TypeError: replace() argument 1 must be str, not int


# Ниже приведена программа для исполнителя Редактор.
# ПОКА нашлось (133) ИЛИ нашлось (881)
#   ЕСЛИ нашлось (133)
#       ТО заменить (133, 81)
#   ИНАЧЕ заменить (881, 13)

# На вход этой программе подается строка, состоящая из 100 цифр;
# последняя цифра в строке — цифра 1, а остальные цифры — восьмёрки.
# Какая строка получится в результате применения программы к этой строке?
'''
s = '8' * 99 + '1' * 1
while '133' in s or '881' in s:
    if "133" in s:
        s = s.replace('133', '81', 1)
    else:
        s = s.replace('881', '13', 1)
print(s)  
'''
# Ответ: 813


# Тип 12 №33514
# Дана программа для редактора:
#     ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#         заменить (01, 30)
#         заменить (02, 101)
#         заменить (03, 202)
#
# Известно, что исходная строка начиналась с нуля, а далее содержала только единицы,
# двойки и тройки. После выполнения данной программы получилась строка,
# содержащая 15 единиц, 10 двоек и 60 троек.
# Сколько единиц было в исходной строке?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z
            while '01' in s or '02' in s or '03' in s:
                s = s.replace('01', '30', 1)
                s = s.replace('02', '101', 1)
                s = s.replace('03', '202', 1)
            if s.count('1') == 15 and s.count('2') == 10 and s.count('3') == 60:
                print(x)
'''
# Ответ: 45


# Тип 12 №36867
# Дана программа для редактора:
#  ПОКА НЕ нашлось (00)
#   заменить (01, 210)
#   заменить (02, 320)
#   заменить (03, 3012)

# Известно, что исходная строка начиналась с нуля и заканчивалась нулём,
# а между ними содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 26 единиц, 54 двойки и 48 троек.
# Сколько цифр было в исходной строке?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'
            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '320', 1)
                s = s.replace('03', '3012', 1)
            if s.count('1') == 26 and s.count('2') == 54 and s.count('3') == 48:
                print(x+y+z+2)
'''
# Ответ: 36


# Дана программа для Редактора:
# ПОКА нашлось (25) ИЛИ нашлось (355) ИЛИ нашлось (555)
#   ЕСЛИ нашлось (25)
#       ТО заменить (25, 5)
#   ЕСЛИ нашлось (355)
#       ТО заменить (355, 52)
#   ЕСЛИ нашлось (555)
#       ТО заменить (555, 3)

# На вход приведённой выше программе поступает строка, начинающаяся с цифры «2»,
# а затем содержащая n цифр «5» (n > 3).
#
# Определите наименьшее значение n, при котором сумма цифр в строке,
# получившейся в результате выполнения программы, равна 17.
'''
for n in range(4, 1000):
    s = '2' + '5' * n
    while '25' in s or '355' in s or '555' in s:
        if '25' in s:
            s = s.replace('25', '5', 1)
        if '355' in s:
            s = s.replace('355', '52', 1)
        if '555' in s:
            s = s.replace('555', '3', 1)

    summ = sum([int(x) for x in s])
    if summ == 17:
        print(n)
        break
'''

# endregion Урок: ***************************************************************


# Анастасия = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1, 16.1, 17.1, 23.1]
# КЕГЭ  = []
# todo на следующем уроке: Разбираем 7 и 11 номера
