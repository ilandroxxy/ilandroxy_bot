# region Домашка: ***************************************************************


# endregion Домашка: ************************************************************


# region Урок: ******************************************************************


# set() - множество, не может хранить копий элементов, копии удаляются

# Тип 8 №27268
# Руслан составляет 6-буквенные коды из букв Р, У, С, Л, А, Н.
# Каждую букву нужно использовать ровно один раз, при этом нельзя ставить рядом две гласные.
# Сколько различных кодов может составить Руслан?
'''
s = 'РУСЛАН'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        # if all(slovo.count(x) == 1 for x in slovo):
                        if len(set(slovo)) == len(slovo):  # Каждую букву нужно использовать ровно один раз
                            if all(pair not in slovo for pair in ['АУ', 'УА']):
                                count += 1
print(count)
'''
# all(условие для переменной | перебираем переменные)


# Добавил шаблон в список на разбор
# Тип 8 №59746
# Сколько существует десятичных чисел, которые делятся на 5, при условии что все цифры числа различные?

from itertools import permutations

count = 0
for l in range(1, 10+1):
    for x in permutations('0123456789', l):
        if x[0] != '0' and (x[-1] == '5' or x[-1] == '0'):
            count += 1
print(count + 1)

# Ответ: 1863219


# Тип 16 №5778
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n) = n при n ≤ 2;
# F(n) = F(n − 1) + 2×F(n − 2) при n > 2.
#
# Чему равно значение функции F(6)? В ответе запишите только натуральное число.
'''
def F(n):
    if n <= 2:  # F(n) = n при n ≤ 2;
        return n
    if n > 2:  # F(n) = F(n − 1) + 2×F(n − 2) при n > 2.
        return F(n - 1) + 2 * F(n - 2)


print(F(6))  
'''
# Ответ: 32


# Тип 16 №39245
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 900 и F(n)=9?
'''
def F(n):
    if n == 0:  # F(0) = 0;
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)


count = 0
for n in range(1, 900+1):
    if F(n) == 9:
        count += 1
print(count)
'''

# Тип 16 №4656
# Алгоритм вычисления значения функции F(n) и G(n), где n – натуральное число, задан следующими соотношениями:
#
# F(1) = 0
# F(n) = F(n–1) + n, при n > 1
#
# G(1) = 1
# G(n) = G(n–1) * n, при n > 1
#
# Чему равно значение функции F(5) + G(5)?
# В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 0
    if n > 1:
        return F(n-1) + n

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return G(n - 1) * n

print(F(5) + G(5))
'''
# Ответ: 134


# Тип 16 №59694
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n)=n, при n<11;
# F(n)=n+F(n−1), если n≥11.
#
# Чему равно значение выражения F(2024)−F(2021)?
'''
import sys
sys.setrecursionlimit(10000)
def F(n):
    if n < 11:
        return n
    if n >= 11:
        return n + F(n - 1)


print(F(2024) - F(2021))
# RecursionError: maximum recursion depth exceeded


# Ручное (письменное решение):
# F(2024) = 2024 + F(2023)
# F(2023) = 2023 + F(2022)
# F(2022) = 2022 + F(2021)  - F(2021)

print(2024 + 2023 + 2022)
'''
# Ответ: 6069

# endregion Урок: ***************************************************************


# Анастасия = [1.1, 2.1, 3.1, 4.1, 5.1, 7.1, 8.1, 11.1, 12.1, 14.1]
# КЕГЭ  = []
# на следующем уроке:
