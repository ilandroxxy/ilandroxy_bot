# region Домашка: ******************************************************************

# #ДЗ № 7619 Досрочная волна 2023 (Уровень: Базовый)
# В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от 1 до 10 000 включительно.
# Определите количество пар последовательности, в которых только одно число является двухзначным,
# а сумма элементов пары кратна максимальному двухзначному элементу последовательности.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# Файлы к заданию:17.txt (https://kompege.ru/files/bLdMiRLC1.txt)
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if len(str(i)) == 2]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (len(str(M[i])) == 2 and len(str(M[i+1])) != 2) or (len(str(M[i])) != 2 and len(str(M[i+1])) == 2):
        if (M[i] + M[i+1]) % max(A) == 0:
            count += 1
            maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# Показать ответ: 1 2970


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************




# Тип 24 № 27687i
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Y.
# Хотя бы один символ Y находится в последовательности.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# Вариант 1
'''
s = open('24.txt').readline()
count = 1
maxi_count = 0
for i in range(0, len(s)-1):
    if s[i] == 'Y' and s[i+1] == 'Y':
        count += 1
        maxi_count = max(maxi_count, count)
    else:
        count = 1
print(maxi_count)
'''

# Вариант 2.1
'''
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Z', ' ')
M = [len(i) for i in s.split()]
print(max(M))


# Вариант 2.2
print(max([len(i) for i in open('24.txt').readline().replace('X', ' ').replace('Z', ' ').split()]))
'''

# Вариант 3.1
'''
s = open('24.txt').readline()
print(s)  # ctrl + F
print(len('YYYYYYYYYY'))  
'''

# Вариант 3.2
'''
s = open('24.txt').readline()
for n in range(1, 1000):
    if 'Y' * n not in s:
        print(n - 1)
        break
'''
# Ответ: 10


# Тип 24 № 37159i
# Текстовый файл состоит не более, чем из 107 строчных букв английского алфавита.
# Найдите максимальную длину подстроки, в которой символы «a» и «d» не стоят рядом.
'''
# adoooooda -> doooood  
s = open('24.txt').readline().upper()

s = s.replace('AD', ' ').replace('DA', ' ')
M = [len(i) for i in s.split()]
print(1 + max(M) + 1)
'''
# Ответ: 2252



# Тип 24 № 27694i
# Текстовый файл состоит не более чем из 10**6 символов A, B и C.
# Определите максимальную длину цепочки вида ABABAB...
# (составленной из фрагментов AB, последний фрагмент может быть неполным).

# Вариант 3.1
'''
s = open('24.txt').readline()
print(s)
print(len('ABABABABABABABABABABABAB'))  # ctrl + F
'''

# Вариант 3.2
'''
s = open('24.txt').readline()
r = ''
for i in range(0, 1000):
    if i % 2 == 0:
        r += 'A'
    else:
        r += 'B'

    if r not in s:
        print(i)
        break
'''
# Ответ: 24



# Тип 24 № 27421i
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.
'''
s = open('24.txt').readline()
count = 1
maxi_count = 0
for i in range(0, len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        maxi_count = max(maxi_count, count)
    else:
        count = 1
print(maxi_count)
'''
# Ответ: 35


# Тип 24 № 48445
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите максимальное количество идущих подряд групп символов вида
#
# согласная + согласная + гласная.
'''
import itertools
M = []
for s in itertools.product('ACDFO', repeat=3):
    if s[0] in 'CDF' and s[1] in 'CDF' and s[2] in 'AO':
        s = ''.join(s)
        M.append(s)

s = open('24.txt').readline()
for x in M:
    s = s.replace(x, '*')
for x in 'ACDFO':
    s = s.replace(x, ' ')
print(s)
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 5



# endregion Урок: ******************************************************************


# todo: Никита3 = [2, 5, 8, 9, 12, 14, 15, 16, 17, 23, 25]
# на прошлом уроке: Разбирали домашку с номерами 9, 17 и Разобрали 24 номер на 1 строку.
# на следующем уроке:
