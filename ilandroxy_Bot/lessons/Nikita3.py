# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************
'''
def Div(x):
    divisors = []
    for j in range(1, x+1):
        if x % j == 0:
            divisors.append(j)
    return divisors
'''


# Тип 25 № 36038
# Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то считаем значение M равным нулю.
#
# Напишите программу, которая перебирает целые числа, большие 452021, в порядке возрастания и ищет среди них такие,
# для которых значение M при делении на 7 даёт в остатке 3.
# Вывести первые 5 найденных чисел и соответствующие им значения M.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала
# выводится само число, затем — значение М. Строки выводятся в порядке возрастания найденных чисел.
#
# Например, для числа 20 М=2+10=12, остаток при делении на 7 не равен 3;
# для числа 21 М=3+7=10, остаток при делении на 7 равен 3.
'''
def Divisors(x):
    divisors = set()
    for j in range(2, int(x**0.5)+1):  # не считая единицы и самого числа
        if x % j == 0:
            divisors.add(j)
            divisors.add(x // j)
    return sorted(divisors)

k = 0
for x in range(452021+1, 10**10):
    divisors = Divisors(x)
    if len(divisors) >= 2:
        M = max(divisors) + min(divisors)
        if M % 7 == 3:
            print(x, M)
            k += 1
            if k == 5:
                break
'''
# 452025 150678
# 452029 23810
# 452034 226019
# 452048 226026
# 452062 226033


#
# № 8511 Апробация 17.05 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**8, найдите все числа,
# соответствующие маске 12??15*6, делящиеся на 253 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 253.
'''
from fnmatch import *
for x in range(253, 10**8, 253):  # не превышающих 10**8 and делящиеся на 253 без остатка
    if fnmatch(str(x), '12??15*6'):   # соответствующие маске 12??15*6
        print(x, x//253)
'''
# Показать ответ
# 1278156 5052
# 12531596 49532
# 12741586 50362
# 12951576 51192


# № 8481 (Уровень: Базовый)
# (В. Рыбальченко) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Найдите все натуральные числа меньшие 10**8, которые кратны 237,
# соответствуют маске «81?2*80», но не соответствуют маске «*9*».
# В ответ в первом столбике перечислите все найденные числа в
# порядке возрастания, а во втором столбце – соответствующие им результаты деления этих чисел на 237.
'''
from fnmatch import *
for x in range(237, 10**8, 237):
    if fnmatch(str(x), '81?2*80'):
        if not fnmatch(str(x), '*9*'):
            print(x, x//237)
'''
# Показать ответ
# 815280 3440
# 8162280 34440
# 81324180 343140
# 81727080 344840
# 81821880 345240


# № 6210 (Уровень: Средний)
# (Н. Сафронов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
# Найдите все натуральные числа, не превосходящие 10**7, для которых выполняются одновременно все условия:
#
# • соответствуют маске *2?2*;
# • являются палиндромами;
# • делятся на число 53 без остатка;
# • количество делителей больше 30.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — сумму делителей.
'''
from fnmatch import *
for x in range(53, 10**7, 53):
    if fnmatch(str(x), '*2?2*'):
        if str(x) == str(x)[::-1]:
            divisors = set()
            for j in range(2, int(x ** 0.5) + 1):
                if x % j == 0:
                    divisors.add(j)
                    divisors.add(x // j)
            if len(divisors) > 30:
                print(x, sum(divisors))
'''
# Показать ответ
# 212212 508032
# 2527252 5588352
# 4282824 13789440
# 4626264 11787120
# 8125218 19595520
# 8824288 19908504

# endregion Урок: ******************************************************************

# todo: 18 и 26 номера в столбик

# todo: Никита3 = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# на прошлом уроке: Разобрали вопросики с домашки, номера: 9, 17. И разобрали 25 номера на делители и маски нового типа.
# на следующем уроке:
