# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

#
# № 6740 Апробация 10.03.23 (Уровень: Базовый)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число чётное, то к двоичной записи числа слева дописывается 10;
# 6) если число нечётное, то к двоичной записи числа слева дописывается 1 и справа дописывается 01.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
# Например, для исходного числа 4_10 = 100_2, результатом является число 20_10 = 10100_2,
# а для исходного числа 5_10 = 101_2 результатом является число 53_10 = 110101_2
# Укажите максимальное число R, которое может быть результатом работы данного алгоритма, при условии, что N не больше 8.
# В ответе запишите это число в десятичной системе счисления.
'''
Reslut = []
for n in range(1, 8+1):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.

    if n % 2 == 0:
        s = s + '10'  # а) если число чётное, то к двоичной записи числа слева дописывается 10;
    else:
        s = '1' + s + '01'  # 6) если число нечётное, то к двоичной записи числа слева дописывается 1 и справа дописывается 01.

    r = int(s, 2)
    Reslut.append(r)
print(max(Reslut))
'''
# Показать ответ: 61


# № 6749 Апробация 10.03.23 (Уровень: Базовый)
# Значение арифметического выражения
#
# 2 * 729**1021 - 2 * 243**1022 + 81**1023 - 2 * 27**1024 - 1025
#
# записали в системе счисления с основанием 3. Определите количество значащих нулей в записи этого числа.
'''
x = 2 * 729**1021 - 2 * 243**1022 + 81**1023 - 2 * 27**1024 - 1025
M = []
while x > 0:
    M.append(x % 3)  # .append() - метод списоков, добавляет новый элемент в конец списка
    x //= 3
M.reverse()  # .reverse() - метод списоков, разворачивающий список на 180 градусов
print(M.count(0))
'''
# Ответ: 1021


# № 6747 Апробация 10.03.23 (Уровень: Базовый)
# Какая строка получится в результате применения приведённой ниже программы к строке,
# состоящей из 104 идущих подряд цифр 7? В ответе запишите полученную строку.
'''
s = '7' * 104
while '33333' in s or '777' in s:
    if '33333' in s:
        s = s.replace('33333', '7', 1)
    else:
        s = s.replace('777', '3', 1)
print(s)
'''
# Ответ: 33


# № 6743 Апробация 10.03.23 (Уровень: Базовый)
# Все пятибуквенные слова, в составе которых могут быть только русские буквы С, О, Й, К, А,
# записаны в алфавитном порядке и пронумерованы начиная с 1.
#
# Ниже приведено начало списка.
# 1. ААААА
# 2. ААААЙ
# 3. ААААК
# 4. ААААО
# 5. ААААС
# 6. АААЙА
#
# Под каким номером в списке идёт последнее слово, которое содержит
# не более одной буквы О и не содержит букв С, стоящих рядом?
'''
s = 'АЙКОС'
count = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('О') <= 1 and 'СС' not in temp:
                        print(count, temp)
                    count += 1
'''

# Как формулу математической логики перенести на язык Python:
# ¬z   - (not z)   отрицание
#  ∧   -  and          конъюнкция
#  ∨  -  or              дизъюнкция
#  →  -  <=            импликация
#  ≡  -  ==             тождество
#
# Приоритет операций:
# отрицание > конъюнкция > дизъюнкция > импликация
#
# Полезные формулы Алгебры высказываний:
# 1. A → B ≡ ¬A ∨ B
# 2. A ∧ B ≡ B ∧ A
# 3. ¬(A ∨ B) ≡ ¬A ∧ ¬B
# Где A и B любые сколь угодно сложные формулы.

# № 6737 Апробация 10.03.23 (Уровень: Базовый)
# Миша заполнял таблицу истинности логической функции F = (x → ¬ (y → z)) ∨ w,
# но успел заполнить лишь фрагмент из трёх различных её строк, даже не указав,
# какому столбцу таблицы соответствует каждая из переменных w, x, y, z.
'''
print('x y z w')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (x <= (not (y <= z)) or w)
                if F == False:
                    print(x, y, z, w)
 '''

# region Тип 2 № 17366
# Логическая функция F задаётся выражением ((x ∧ w) ∨ (w ∧ z)) ≡ ((z → y) ∧ (y → x)).
'''
print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = ( ((x and w) or (w and z)) == ((z <= y) and (y <= x)) )
                if F == True:
                    print(x, y, z, w, F)
'''


# Тип 23 № 15990 i
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 2
# 2. Умножить на 2
# 3. Прибавить 3
#
# Сколько существует программ, которые преобразуют исходное число 2 в число 22
# и при этом траектория вычислений содержит число 11?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+2, b) + F(a*2, b) + F(a+3, b)

print(F(2, 11) * F(11, 22))


def F(a, b):
    if a >= b:
        return int(a == b)
    else:
        return F(a+2, b) + F(a*2, b) + F(a+3, b)

print(F(2, 11) * F(11, 22))


# Тип 23 № 15117 i
# Исполнитель Фибо преобразует число на экране.
# 1. Прибавить 1
# 2. Прибавить 2

# Сколько существует программ, которые преобразуют исходное число 3 в число 20
# и при этом траектория вычислений содержит число 9 и не содержит числа 15?

def F(a, b):
    if a >= b or a == 15:
        return int(a == b)
    else:
        return F(a+2, b) + F(a+1, b)

print(F(3, 9) * F(9, 20))

# endregion Урок: ******************************************************************


# todo: Никита3 = [2, 5, 12, 14, 23]
# на прошлом уроке: Прорешивали задания с апробации: 2, 5, 8, 12, 14 и разобрали 23 номер.
# на следующем уроке:
