# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# M = []
# M.append(4)
# print(M)
# M.append(3)
# print(M)


# Тип 23 № 25852 i
# У исполнителя есть две команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Умножить на 2
#
# Сколько существует программ, для которых при исходном числе 1 результатом является число 22
# и при этом траектория вычислений содержит число 10 и не содержит числа 15?
'''
def F(a, b):
    if a > b or a == 15:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b)

print(F(1, 10) * F(10, 22))


def F(a, b):
    if a >= b or a == 15:
        return a == b
    else:
        return F(a+1, b) + F(a*2, b)

print(F(1, 10) * F(10, 22))
'''
# Ответ: 28


# Тип 16 № 5089 i
# Алгоритм вычисления значения функции F(n), где n - натуральное число, задан следующими соотношениями:
#
# F(1) = 5;
# F(2) = 5;
# F(n) = 5*F(n − 1) − 4*F(n − 2) при n >2.
#
# Чему равно значение функции F(13)? В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1 or n == 2:
        return 5
    # if n == 2:
    #     return 5
    if n > 2:
        return 5 * F(n - 1) - 4 * F(n - 2)

print(F(13))
'''
# Ответ: 5



# Тип 16 № 4657 i
# Алгоритм вычисления значения функции F(n) и G(n), где n – натуральное число, задан следующими соотношениями:
#
# F(1) = 1
# F(n) = 2 * G(n–1) + 5 * n, при n >1
#
# G(1) = 1
# G(n) = F(n–1) + 2 * n, при n >1
#
# Чему равно значение функции F(4) + G(4)?
# В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return 2 * G(n-1) + 5 * n

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) + 2 * n

print(F(4) + G(4))
'''
# Ответ: 89


# Тип 16 № 33188 i
# Обозначим через a mod b остаток от деления натурального числа a на натуральное число b.
# Алгоритм вычисления значения функции F(n), где n  — натуральное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = n + F(n − 3), если n mod 3 = 0, и n > 0;
# F(n) = n + F(n − (n mod 3)), если n mod 3 > 0.
#
# Чему равно значение функции F(22)?
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 3 == 0:
        return n + F(n - 3)
    if n % 3 > 0:
        return n + F(n - (n % 3))

print(F(22))


# Вариант 2
def mod(a, b):
    return a % b
def F(n):
    if n == 0:
        return 0
    if n > 0 and mod(n, 3) == 0:
        return n + F(n - 3)
    if n % 3 > 0:
        return n + F(n - (mod(n, 3)))


print(F(22))
'''
# Ответ: 106


# № 6596 Пробник ИМЦ СПб (Уровень: Базовый)
# Алгоритм вычисления функции F(n), где n – натуральное число, задан следующими соотношениями:
#
# F(n) = 1, если n = 1
# F(n) = F(n – 1) · (2n – 3), если n > 1.
#
# Чему равно значение выражения F(516) / F(513)?

# F(516) = F(515) · (2*516 – 3)
# F(515) = F(514) · (2*515 – 3)
# F(514) = F(513) · (2*514 – 3)
'''
print((2*516 - 3) * (2*515 - 3) * (2*514 - 3))
'''
# Ответ: 1083202575


# № 5954 (Уровень: Базовый)
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
#
# F(n) = 1 при n = 1;
# F(n) = n × F(n − 1), если n > 1.

#  Чему равно значение выражения (F(2023) - F(2022)) / F(2020)?
# F(2023) / F(2020) - F(2022) / F(2020)

# F(2023) = 2023 × F(2022)
# F(2022) = 2022 × F(2021)
# F(2021) = 2021 × F(2020)

# F(2022) = 2022 × F(2021)
# F(2021) = 2021 × F(2020)
'''
print((2023 * 2022 * 2021) - (2022 * 2021))
'''
# Ответ: 8262826164

# № 4739 (Уровень: Средний)
# (А. Куканова) Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
#
# F(n) = n − 10000 при n > 10000;
# F(n) = F(n + 1) + F(n + 2), если 1 ≤ n ≤ 10000.
#
# Чему равно значение выражения F(12345) × (F(10) − F(12)) / F(11) + F(10101)?
'''
def F(n):
    if n > 10000:
        return n - 10000
    if 1 <= n <= 10000:
        return F(n + 1) + F(n + 2)

print(F(12345))  # 2345
print(F(10101))  # 101
'''
# 2345 × (F(10) − F(12)) / F(11) + 101
# F(10) = F(11) + F(12)
# 2345 × (F(11) + F(12) − F(12)) / F(11) + 101
# 2345 × (F(11) + 0) / F(11) + 101
# 2345 × 1 + 101

# Ответ: 2446


# Тип 15 № 14704
# Сколько существует целых значений числа A, при которых формула
#
# ((x < 6) → (x**2 < A)) ∧ ((y**2 ≤ A) → (y ≤ 6))

# тождественно истинна при любых целых неотрицательных x и y?
'''
# Вариант 1
def F(x, y, A):
    return ((x < 6) <= (x**2 < A)) and ((y**2 <= A) <= (y <= 6))

count = 0
for A in range(0, 10000):
    flag = True
    for x in range(0, 100):
        for y in range(0, 100):
            if F(x, y, A) == False:
                flag = False
                break
        if flag == False:
            break
    if flag == True:
        count += 1
print(count)


# Вариант 2
def F(x, y, A):
    return ((x < 6) <= (x**2 < A)) and ((y**2 <= A) <= (y <= 6))

count = 0
for A in range(0, 10000):
    if all(F(x, y, A) for x in range(0, 100) for y in range(0, 100)):
        count += 1
print(count)


# Вариант 3
R = []
for A in range(0, 10000):
    if all((((x < 6) <= (x**2 < A)) and ((y**2 <= A) <= (y <= 6))) for x in range(0, 100) for y in range(0, 100)):
        R.append(A)
print(len(R))

# Вариант 4
print(len([A for A in range(0, 10000) if all((((x < 6) <= (x**2 < A)) and ((y**2 <= A) <= (y <= 6))) for x in range(0, 100) for y in range(0, 100))]))
'''


# Тип 15 № 9804 i
# Обозначим через m & n поразрядную конъюнкцию неотрицательных целых чисел m и n.
#
# Так, например, 14 & 5 = 11102 & 01012 = 01002 = 4. Для какого наименьшего неотрицательного целого числа А формула
#
# x & 29 ≠ 0 → (x & 17 = 0 → x & А ≠ 0)
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной x)?
'''
def F(x, A):
    Q = x & 29 != 0
    W = x & 17 == 0
    R = x & A != 0
    return Q <= (W <= R)
    # return (x & 29 != 0) <= ((x & 17 == 0) <= (x & A != 0))

for A in range(0, 100000):
    if all(F(x, A) for x in range(0, 100)):
        print(A)
        break
'''
# Ответ: 12


# endregion Урок: ******************************************************************


# todo: Никита3 = [2, 5, 8, 12, 14, 16, 23]
# на прошлом уроке: Прорешивали задания с апробации: 2, 5, 8, 12, 14 и разобрали 23 номер.
# на следующем уроке:
