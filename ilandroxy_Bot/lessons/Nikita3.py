# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 15 № 17382 i
# Для какого наименьшего целого неотрицательного числа A выражение
#
# (5x + 3y ≠ 60) ∨ ((A > x) ∧ (A > y))
#
# тождественно истинно при любых целых неотрицательных x и y?
'''
def F(x, y, A):
    return (5*x + 3*y != 60) or ((A > x) and (A > y))

for A in range(0, 10000):
    if all(F(x, y, A) for x in range(100) for y in range(100)):
        print(A)
        break
'''
# Ответ: 21


# Тип 15 № 34546
# На числовой прямой даны два отрезка: P = [23, 58] и Q = [1, 39].
#
# Какова наименьшая возможная длина интервала A, что формула
# ((x ∈ P) ∨ (x ∈ А)) → ((x ∈ Q) ∨ (x ∈ А))
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    # return ((23 <= x <= 58) or (a1 <= x <= a2)) <= ((1 <= x <= 39) or (a1 <= x <= a2))
    P = 23 <= x <= 58
    Q = 1 <= x <= 39
    A = a1 <= x <= a2
    return (P or A) <= (Q or A)

R = []
M = [i/10 for i in range(0*10, 60*10)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))
'''

# #Тип 25 № 28122
# #Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [489 421; 489 440],
# #числа, имеющие ровно четыре различных натуральных делителя. Для каждого найденного числа запишите эти
# #четыре делителя в четыре соседних столбца на экране с новой строки.
# #Делители в строке должны следовать в порядке возрастания.
'''
for x in range(489_421, 489_440+1):
    M = []
    for g in range(1, x+1):
        if x % g == 0:
            M.append(g)
    if len(M) == 4:
        print(*M)
'''
'''
def F(x):
    M = set()
    for g in range(1, int(x**0.5) + 1):
        if x % g == 0:
            M.add(g)
            M.add(x // g)
    return sorted(M)

for x in range(489_421, 489_440+1):
    dl = F(x)
    if len(dl) == 4:
        print(*dl)
'''
# Ответ:
# 1 19 25759 489421
# 1 2 244711 489422
# 1 13 37649 489437


# Тип 25 № 35914
# Найдите все натуральные числа, принадлежащие отрезку [45000000; 50000000], у которых ровно
# пять различных нечётных делителей (количество чётных делителей может быть любым). В ответе перечислите найденные
# числа в порядке возрастания.
'''
def F(x):
    M = set()
    for g in range(1, int(x**0.5) + 1):
        if x % g == 0:
            if g % 2 != 0:
                M.add(g)
            if (x // g) % 2 != 0:
                M.add(x // g)
            if len(M) > 5:
                return sorted(M)
    return sorted(M)

for x in range(45000000, 50000000+1):
    dl = F(x)
    if len(dl) == 5:
        print(x)
'''

# 45212176
# 45265984
# 47458321
# 48469444


# Тип 25 № 38959 i
# Пусть M(N) — произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы.
# Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
#
# Найдите 5 наименьших натуральных чисел, превышающих 200000000, для которых 0<M(N)<N.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.
'''
def F(x):
    M = set()
    for g in range(2, int(x**0.5) + 1):  # не считая единицы.
        if x % g == 0:
            M.add(g)
            M.add(x // g)
    return sorted(M)

count = 0
for x in range(200000000+1, 200000000000+1):
    dl = F(x)
    if len(dl) >= 5:
        M = dl[0] * dl[1] * dl[2] * dl[3] * dl[4]
        if 0 < M < x:
            print(M)
            count += 1
            if count == 5:
                break
'''
# 1728
# 21632
# 1260
# 1152
# 4127787

# endregion Урок: ******************************************************************


# todo: Никита3 = [2, 5, 8, 12, 14, 15, 16, 23, 25.1]
# на прошлом уроке: Добили 15 номера с отрезками и начали решать 25 номера с поиском делителей
# на следующем уроке:
