# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# Теория списков list()
# - Хранит в себе неограниченное кол-во элементов разных типов данных
# - Каждый элемент списка имеет порядковый номер - индекс
# - Индексы могут считаться слева-направо начиная с 0 или справа-налево начиная с -1
# - В списках можно изменять значение элементов через индексы, а в кортжех нельзя
'''
# i   0    1    2    3    4
L = ['a', 'b', 'c', 'd', 'e']  # list
T = ('a', 'b', 'c', 'd', 'e')  # tuple
# -i -5   -4   -3   -2   -1

print(f'Первый элемент списка: {L[0]} \n'
      f'Последний элемент списка: {L[-1]}')
'''

# Срезы списков/строк/кортежей
'''
# i   0    1    2    3    4
L = ['a', 'b', 'c', 'd', 'e']  # list

print(L[1:3])  # ['b', 'c']
print(L[1:])  # ['b', 'c', 'd', 'e']
print(L[:3])  # ['a', 'b', 'c']
print(L[:])  # ['a', 'b', 'c', 'd', 'e']
print(L[::2])  # ['a', 'c', 'e']
print(L[::-1])  # ['e', 'd', 'c', 'b', 'a']

s = 'abcde'  # строку и кортеж можно развернуть только через срез
print(s[::-1])  # edcba
'''

# Функции списков:
'''
L = [24, 2, 13, 23, 12, 23, 23, 12]

print(len(L))  # 8 - возвращает длину списка (кол-во элементов)
print(sum(L))  # 132
print(max(L))  # 24
print(min(L))  # 2

print(set(L))  # {2, 12, 13, 23, 24}
print(len(set(L)))  # 5 - Сколько различных значений? Все буквы различны

print(sorted(L))  # [2, 12, 12, 13, 23, 23, 23, 24]
print(sorted(L, reverse=True))  # [24, 23, 23, 23, 13, 12, 12, 2]

s = '3y4g23y4ga'
print(sorted(s))  # ['2', '3', '3', '4', '4', 'a', 'g', 'g', 'y', 'y']
'''

# Методы списков (Метод - это частный случай функции, направленной на определенный тип данных)
'''
L = [12, 3, 4, 6, 2, 3]

print(L.count(3))  # 2 - возвращает кол-во вхождений элементов в список
print(L.index(3))  # 1 - возвращает индекс первого найденного элемента в списке

L.append(4)
L.append(5)
L.append(6)
print(L)  # [12, 3, 4, 6, 2, 3, 4, 5, 6]

L = L + [7, 8, 9]
print(L)  # [12, 3, 4, 6, 2, 3, 4, 5, 6, 7, 8, 9]

L = [0, 1, 2] + L
print(L)  # [0, 1, 2, 12, 3, 4, 6, 2, 3, 4, 5, 6, 7, 8, 9]

L.sort()
print(L)  # [0, 1, 2, 2, 3, 3, 4, 4, 5, 6, 6, 7, 8, 9, 12]

L.reverse()
print(L)  # [12, 9, 8, 7, 6, 6, 5, 4, 4, 3, 3, 2, 2, 1, 0]
'''


'''
def my_func(x):
    return None


class my_list():
    
    def __int__(self):
        return self
    
    def my_reverse(self):
        return 
'''


# Генераторы списков

# endregion Урок: ******************************************************************


# Славик = [2.1, 6.1]
# КЕГЭ  = []
# на следующем уроке:
