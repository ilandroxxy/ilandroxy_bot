# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# Тип 17 №37350
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых сумма нечётна, а произведение делится на 3, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
a = [int(x) for x in open("17.txt")]
q = 0
d = 0
for i in range(len(a)):
    for j in range(i + 1, len(a)):
        x, y = a[i], a[j]
        if (x + y) % 2 != 0 and (x * y) % 3 == 0:
            d += 1
            q = max(q, x + y)
            # if (x + y) > q:
            #     q = x + y

print(d, q)
'''

'''
a = [int(x) for x in open("17.txt")]
r = []
for i in range(len(a)):
    for j in range(i + 1, len(a)):
        x, y = a[i], a[j]
        if (x + y) % 2 != 0 and (x * y) % 3 == 0:
            r.append(x + y)
print(len(r), max(r))
'''
# 13931722 19993


# Открытие файла для 17 номера:
'''
M = [int(x) for x in open("17.txt")]
'''

# Типы задач 17 номера:
'''
M = [1, 2, 3, 4, 5]

# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()

# 2. В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()

for i in range(len(M)-2):
    x, y, z = M[i:i+3]
    print(f'{x}{y}{z}', end=' ')
print()

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''

# Тип 17 №47221
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые
# значения от −10000 до 10000 включительно.
# Определите количество пар последовательности, в которых только
# одно число оканчивается на 3, а сумма квадратов элементов пары
# не меньше квадрата максимального элемента последовательности,
# оканчивающегося на 3. В ответе запишите два числа: сначала количество
# найденных пар, затем максимальную из сумм квадратов элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-1] == '3']
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (str(x)[-1] == '3') != (str(y)[-1] == '3'):
        if (x ** 2 + y ** 2) >= max(A) ** 2:
            R.append(x ** 2 + y ** 2)
print(len(R), max(R))
'''
# Ответ: 180 190360573


# Тип 17 №61397
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.
#
# Определите количество троек, для которых выполняются следующие условия:
# — ровно два числа в тройке четырёхзначные;
# — хотя бы одно число в тройке делится на 5;
# — сумма элементов тройки больше максимального элемента последовательности,
# запись которого заканчивается на 17. (Гарантируется, что в последовательности
# есть хотя бы один элемент, запись которого заканчивается на 17.)
#
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-2:] == '17']
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if len([p for p in [x, y, z] if len(str(abs(p))) == 4]) == 2:
        if len([p for p in [x, y, z] if p % 5 == 0]) > 0:
            if (x + y + z) > max(A):
                R.append(x + y + z)
print(len(R), max(R))
'''
# Ответ: 21 114132

# endregion Урок: *************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Славик = [2.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
