# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# Файл содержит последовательность целых чисел, по модулю не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество таких пар, в которых запись меньшего элемента заканчивается цифрой 3,
# а сумма квадратов элементов пары меньше, чем квадрат наименьшего из
# элементов последовательности, запись которых заканчивается цифрой 3.
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную сумму квадратов элементов этих пар.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-1] == '3']
R = []
for i in range(0, len(M)-1):
    x, y = M[i], M[i+1]
    # if abs(min(x, y)) % 10 == 3:
    if str(min(x, y))[-1] == '3':
        if (x ** 2 + y ** 2) < min(A) ** 2:
            R.append(x ** 2 + y ** 2)
print(len(R), max(R))
'''


# КЕГЭ № 3691 (Уровень: Базовый) (Калинин А.)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Напишите программу, которая ищет среди целых чисел, превышающих 320400,
# первые пять чисел, которые делятся на все чётные числа, соответствующие маске 1?.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им частные от деления на максимальное из чётных чисел, соответствующие маске 1?.
'''
k = 0
for i in range(320400+1, 10**20):
    if all(i % y == 0 for y in range(10, 20, 2)):
        print(i, i // 18)
        k += 1
        if k == 5:
            break
'''

# КЕГЭ № 12255 ЕГКР 16.12.23 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# символ «?» означает ровно одну произвольную цифру;
# символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**12, найдите все числа,
# соответствующие маске 12?3*456??9, делящиеся на 98591 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие результаты деления этих чисел на 98591.
'''
from fnmatch import *
for x in range(98591, 10**12, 98591):
    if fnmatch(str(x), '12?3*456??9'):
        print(x, x // 98591)
'''


# КЕГЭ № 11672 (Уровень: Базовый)
# (Л. Шастин) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# символ «?» означает ровно одну произвольную цифру;
# символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 12*34?5,
# делящиеся на 21025 без остатка и состоящие из одинакового количества чётных и нечётных цифр.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 21025.
# Количество строк в таблице для ответа избыточно.
'''
from fnmatch import *
for x in range(21025, 10**10, 21025):
    if fnmatch(str(x), '12*34?5'):
        chet = [a for a in str(x) if a in '02468']
        nechet = [a for a in str(x) if a in '13579']
        if len(chet) == len(nechet):
            print(x, x // 21025)
'''


# КЕГЭ № 8696 (Уровень: Средний)
# (Л. Шастин) Пусть M – сумма всех натуральных делителей целого числа,
# не считая единицы и самого числа. Если число простое, тогда M = 0.
#
# Напишите программу, которая перебирает целые числа, большие 1 273 547,
# в порядке возрастания и ищет среди них такие, для которых значение M
# при делении на 100 000 даёт в остатке простое число. Вывести первые 5 найденных чисел и соответствующие им значения M.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке
# сначала выводится само число, затем – значение М. Строки выводятся в порядке возрастания найденных чисел.

def is_prime(x):
    if x <= 1:
        return False
    for j in range(2, int(x ** 0.5)+1):  # не считая единицы и самого числа
        if x % j == 0:
            return False
    return True

def divisors(x):
    div = []
    for j in range(2, int(x ** 0.5)+1):  # не считая единицы и самого числа
        if x % j == 0:
            div += [j, x // j]
    return sorted(set(div))


k = 0
for x in range(1_273_547+1, 10**12):
    d = divisors(x)
    M = sum(d)
    if is_prime(M % 100_000):
        print(x, M)
        k += 1
        if k == 5:
            break


# endregion Урок: *************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Славик = [2.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
