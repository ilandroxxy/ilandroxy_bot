# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ********************************************************************

# Адрес сети = IP-адрес узла & Маска

# IP адрес это 4 числа разбитые точкой, на каждое число выделяется по 1 байту (то есть по 8 бит)
# Исходя из этого числа лежат в диапазоне от 0 (00000000) до 255 (11111111)
'''
mask = '.'.join([bin(int(x))[2:].zfill(8) for x in '255.255.224.0'.split('.')])
print(mask)  # 11111111.11111111.11100000.00000000
'''
# Маска сети имеет длину 32 символа и вид: 1111..000, например: 11111111.11111111.11100000.00000000

# Тип 13 №6009
# По заданным IP-адресу узла и маске определите адрес сети.
# IP-адрес узла: 64.128.208.194
# Маска: 255.255.224.0
'''
from ipaddress import *
net = ip_network('64.128.208.194/255.255.224.0', 0)
print(net)  # 64.128.192.0/19, где 19 - кол-во единиц в маске числа
# 11111111.11111111.11100000.00000000
'''
# Ответ: BCDA


# Тип 13 №18440
# Для узла с IP-адресом 111.81.176.27 адрес сети равен 111.81.160.0.
# Чему равен третий слева байт маски? Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'111.81.176.27/{mask}', 0)
    print(net, net.netmask)
    # 111.81.160.0/19 255.255.224.0
'''
# Ответ: 224


# Тип 13 №61359
# Узлы с IP-адресами 120.91.176.213 и 120.91.174.205 находятся в одной сети.
# Укажите наибольшее возможное значение третьего слева байта маски этой сети.
# Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'120.91.176.213/{mask}', 0)
    net2 = ip_network(f'120.91.174.205/{mask}', 0)
    if net1 == net2:
        print(net1.netmask)
        # 255.255.128.0
        # 255.255.192.0
        # 255.255.224.0
'''
# Ответ: 224


# № 12922 PRO100 ЕГЭ 26.01.24 (Уровень: Базовый)
# Сеть задана IP-адресом 136.36.240.16 и маской сети 255.255.255.248.
# Сколько в этой сети IP-адресов, в которых в двоичной записи IP-адреса не встречается 101?
# В ответе укажите только число.
'''
from ipaddress import *
net = ip_network('136.36.240.16/255.255.255.248', 0)
cnt = 0
for ip in net:
    if '101' in f'{ip:b}':  # f'{ip:b}' - перевод в двоичную систему счисления 
        cnt += 1
print(cnt)
'''


# № 12467 PRO100 ЕГЭ 29.12.23 (Уровень: Средний)
# Адрес сети равен 183.192.A.0, где А — некоторое допустимое для
# записи адреса сети число, а маска сети 255.255.252.0.
# Определите минимальное значение А, для которого для всех
# IP-адресов этой сети в двоичной записи IP-адреса суммарное
# количество единиц в правых двух байтах больше трёх.
'''
from ipaddress import *
for A in range(0, 255+1):
    net = ip_network(f'183.192.{A}.0/255.255.252.0', 0)
    if all(f'{ip:b}'[16:].count('1') > 3 for ip in net):
        print(A)
        break
'''
# Ответ: 60


from ipaddress import *

for i in range(32+1):
    net = ip_network(f"93.138.161.49/{i}", 0)
    print(net, net.netmask)

# endregion Урок: *************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Славик = [2, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 23, 24, 25]
# КЕГЭ  = []
# на следующем уроке:
