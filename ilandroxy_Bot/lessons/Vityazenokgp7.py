# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Рандомные числа от 20 до 100, нужно вывести сумму цифр в порядке убывания
'''
from random import randint

numbers = [randint(20, 100) for _ in range(randint(10, 20))]
numbers_summ = sorted([sum([int(i) for i in str(x)]) for x in numbers], reverse=True)
print(f'Список чисел: {numbers}')
print(f'Отсортированные по убыванию суммы цифр элементов списка numbers:\n{numbers_summ}')

# Список чисел: [53, 85, 55, 23, 43, 61, 62, 95, 93, 52, 32, 67, 49, 47, 55, 89, 64, 26, 35]
# Отсортированные по убыванию суммы цифр элементов списка numbers:
# [17, 14, 13, 13, 13, 12, 11, 10, 10, 10, 8, 8, 8, 8, 7, 7, 7, 5, 5]
'''


# Тип 16 №33761
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом n чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Назовите минимальное значение n, для которого F(n) = 11.
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)

for n in range(1, 10000):
    if F(n) == 11:
        print(n)
        break
'''
# Ответ: 2047


# Тип 16 №4657
# Алгоритм вычисления значения функции F(n) и G(n), где n – натуральное число, задан следующими соотношениями:
#
# F(1) = 1
# F(n) = 2 * G(n–1) + 5 * n, при n >1
#
# G(1) = 1
# G(n) = F(n–1) + 2 * n, при n >1
#
# Чему равно значение функции F(4) + G(4)?
'''
def F(n):
    if n == 1:  # F(1) = 1
        return 1
    if n > 1:
        return 2 * G(n-1) + 5 * n

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) + 2 * n

print(F(4) + G(4))
'''
# Ответ: 89


# Тип 16 №57423
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n)=n, если n≥2025,
# F(n)=n+F(n+2), если n<2025.
#
# Чему равно значение выражения F(2022) − F(2023)?
'''
def F(n):
    if n >= 2025:
        return n
    if n < 2025:
        return n + F(n+2)

print(F(2022)- F(2023))
'''
# Ответ: 2024


# Тип 16 № 
# 59721
# i
# Алгоритм вычисления значения функции F(n), где n  — натуральное число, задан следующими соотношениями:
#
# F(n)  =  n, если n  =  1;
#
# F(n)  =  n − 1 + F(n − 1), если n > 1.
#
# Чему равно значение выражения F(2024) − F(2022)?
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n == 1:
        return n
    if n > 1:
        return n - 1 + F(n-1)

print(F(2024) - F(2022))
# [Previous line repeated 996 more times]
# RecursionError: maximum recursion depth exceeded

# Решение руками:
# F(2024) = 2023 + F(2023)
# F(2023) = 2022 + F(2022) - F(2022)
print(2023 + 2022)
'''
# Ответ: 4045
'''
from functools import *

@lru_cache(None)
def F(n):
    if n < 3:
        return n
    if n > 2 and n % 2 != 0:
        return F(n-1) + F(n-2) + 1
    if n > 2 and n % 2 == 0:
        return sum([F(i) for i in range(1, n)])

print(F(38))
'''
# Ответ: 9182657279


# endregion Урок: **********************************************************


# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************


# Михаил = [2, 5, 6, 8, 12, 14, 16]
# КЕГЭ  = []
# на следующем уроке:
