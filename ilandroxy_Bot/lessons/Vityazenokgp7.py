# region Домашка: ******************************************************************

# № 6786
'''
def prime(x):
    if x <= 1:
        return False
    for j in range(2, x):
        if x % j == 0:
            return False
    return True


for n in range(1, 1000):
    s = '>' + '0' * 39 + '1' * n + '2' * 39
    while '>1' in s or '>2' in s or '>0' in s:
        if '>1' in s:
            s = s.replace('>1', '22>', 1)
        if '>2' in s:
            s = s.replace('>2', '2>', 1)
        if '>0' in s:
            s = s.replace('>0', '1>', 1)
    summa = (s.count('1') + s.count('2') * 2)
    if prime(summa):
        print(n)
        break
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# № 15338 Досрочная волна 2024 (Уровень: Базовый)
# У исполнителя есть две команды, которым присвоены номера:
# A. Прибавить 1
# B. Умножить на 2
# Сколько существует программ, для которых при исходном числе 4 результатом
# является число 15, и при этом траектория вычислений содержит числа 8 и 10?
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b)


print(F(4, 8) * F(8, 10) * F(10, 15))


# Вариант 2
def F(a, b):
    if a >= b:
        return a == b
    return F(a+1, b) + F(a*2, b)


print(F(4, 8) * F(8, 10) * F(10, 15))
'''
# Ответ: 2


# № 11272 (Уровень: Базовый)
# (М. Ишимов) Исполнитель преобразует число на экране.
#
# У исполнителя есть две команды, которые обозначены латинскими буквами:
# A. Вычесть 3
# B. Найти целую часть от деления на 2
#
# Сколько существует программ, для которых при исходном числе 28 результатом является число 3?
'''
def F(a, b):
    if a <= b:
        return a == b
    return F(a - 3, b) + F(a // 2, b)

print(F(28, 3))
'''


#
# № 11262 (Уровень: Базовый)
# У исполнителя есть две команды, которые обозначены латинскими буквами:
# A. Прибавить 3
# B. Прибавить 2
#
# Сколько существует программ, для которых при исходном числе 17 результатом является число 43,
# и при этом траектория вычислений содержит число 35, но не содержит число 36?
'''
def F(a, b):
    if a >= b or a == 36:
        return a == b
    return F(a+3, b) + F(a+2, b)


print(F(17, 35) * F(35, 43))
'''


# У исполнителя есть три команды, которые обозначены буквами:
# A. Вычесть 1
# B. Разделить на 2
# С. Разделить на 3
#
# Команда B может быть исполнена только для чётного числа, команда C –
# только для числа, кратного 3.
#
# Сколько существует программ, которые преобразуют исходное число 19
# в число 1 и при этом траектория вычислений не содержит чисел 12 и 15?

def F(a, b):
    if a <= b or a == 12 or a == 15:
        return a == b
    M = []
    M.append(F(a-1, b))
    if a % 2 == 0:
        M.append(F(a // 2, b))
    if a % 3 == 0:
        M.append(F(a // 3, b))
    return sum(M)

print(F(19, 1))

# Ответ: 43

# endregion Урок: **********************************************************


# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************


# Михаил = [2, 5, 6, 8, 12, 14, 16, 23]
# КЕГЭ  = []
# на следующем уроке:
