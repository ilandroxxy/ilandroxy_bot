
# region Домашка: ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

'''
# Задание 22. Тип 6 № 47316.
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 5 [Вперёд 9 Направо 90 Вперёд 3 Направо 90]
# Определите количество точек с целочисленными координатами, лежащих внутри или на границе области, которую ограничивает заданная алгоритмом линия.

from turtle import *
color('black', 'red')
speed(10)
m = 100
begin_fill()
left(90)

for _ in range(2):
    forward(9 * m)
    right(90)
    forward(3 * m)
    right(90)
end_fill()

canvas = getcanvas()
count = 0

for x in range(-1000 * m, 1000 * m, m):
    for y in range(-1000 * m, 1000 * m, m):
        item = canvas.find_overlapping(x, y, x, y)
        if len(item) >= 1:
            count += 1
print(count)
# Ответ: 40
'''




# Задание 32. Тип 6 № 47407.(Не получилось, т.к. первая фигура больше второй)
'''
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 8 Направо 90]
# Повтори 3 [Вперёд 12 Направо 120]
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом:Повтори 4 [Вперёд 8 Направо 90]
# и находиться вне области, ограниченной линией, заданной данным алгоритмом: Повтори 3 [Вперёд 12 Направо 120]. Точки на линии учитывать не следует.

from turtle import *
color('black', 'red')
speed(5)
m = 30

left(90)

begin_fill()
for _ in range(4):
    forward(8 * m)
    right(90)
end_fill()

begin_fill()
for _ in range(3):
    forward(12 * m)
    right(120)
end_fill()

canvas = getcanvas()
count = 0

for x in range(-1000 * m, 1000 * m, m):
    for y in range(-1000 * m, 1000 * m, m):
        item = canvas.find_overlapping(x, y, x, y)
        if len(item) == 1 and item[0] == 5:
            count += 1
print(count)
'''



# Задание 31. Тип 6 № 47406.
'''
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 12 Направо 90]
# Повтори 3 [Вперёд 12 Направо 120]
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом: Повтори 4 [Вперёд 12 Направо 90]
# и находиться вне области, ограниченной линией, заданной данным алгоритмом: Повтори 3 [Вперёд 12 Направо 120]. Точки на линии учитывать не следует.

from turtle import *
color('green')
speed(5)
m = 30

left(90)
begin_fill()
for _ in range(4):
    forward(12 * m)
    right(90)
end_fill()

begin_fill()
for _ in range(3):
    forward(12 * m)
    right(120)
end_fill()

canvas = getcanvas()
count = 0

for x in range(-100 * m, 100 * m, m):
    for y in range(-100 * m, 100 * m, m):
        item = canvas.find_overlapping(x, y, x, y)
        if len(item) == 1 and item[0] == 5:
            print(item[0], item)
            count += 1
print(count)

done()

# Ответ: 65
'''

# Тип 9 № 33511
'''
# Электронная таблица содержит результаты ежечасного измерения температуры воздуха на протяжении трёх месяцев. 
# Определите величину самого большого повышения температуры между двумя соседними измерениями. Ответ округлите до целого числа. 
# Например, с 3:00 до 4:00 1 апреля температура повысилась на 1,4 градуса. Если это повышение окажется максимальным, в ответе надо записать 1.
f = open('9.txt')
A = []
for s in f:
    M = [float(i) for i in s.replace(',', '.').split()]
    A += M

maxi = 0
for i in range(0, len(A)-1):
    maxi = max(maxi, A[i+1] - A[i])
print(maxi)
'''
# Ответ: 9



# Тип 9 № 45243
'''
# Откройте файл электронной таблицы, содержащей в каждой строке пять натуральных чисел.
#
# Определите количество строк таблицы, в которых квадрат суммы максимального и минимального чисел в строке больше суммы квадратов трёх оставшихся.

f = open('9.txt')
count = 0
for s in f:
    M = sorted([int(i) for i in s.split()])
    if (M[0] + M[4]) ** 2 > M[1] ** 2 + M[2] ** 2 + M[3] ** 2:
        count += 1
print(count)
'''
# Ответ: 2640




# Тип 9 № 46967
'''
# В каждой строке электронной таблицы записаны четыре натуральных числа.
# Определите, сколько в таблице таких четвёрок, из которых можно выбрать три числа, которые не могут быть сторонами никакого треугольника,
# в том числе вырожденного (вырожденным называется треугольник, у которого сумма длин двух сторон равна длине третьей стороны).

f = open('9.txt')
count = 0
for s in f:
    M = sorted([int(i) for i in s.split()])
    if M[3] > M[0] + M[1]:
        count += 1
print(count)
'''
# Ответ: 3094

# endregion Урок:  ******************************************************************************


# todo: Слава = [2, 5, 6, 8, 9, 12, 14+, 15, 16, 17, 23, 24+, 25.1], на следующем уроке: Прорешиваем сложные задачи