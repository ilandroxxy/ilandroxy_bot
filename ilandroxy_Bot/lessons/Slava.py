
# region Домашка: ******************************************************************************




# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# Тип 25 № 27855
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632; 95700],
# числа, имеющие ровно шесть различных чётных натуральных делителей
# (при этом количество нечётных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

# Вариант 1
'''
for n in range(95632, 95700+1):
    D = []
    for j in range(2, n+1, 2):
        if n % j == 0:
            D.append(j)
            if len(D) > 6:
                break
    if len(D) == 6:
        print(D)
'''

# Вариант 2
'''
def D(n):
    dl = set()
    for j in range(1, int(n ** 0.5)+1):
        if n % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (n // j) % 2 == 0:
                dl.add(n // j)
            if len(dl) > 6:
                return dl
    return sorted(dl)


for n in range(95632, 95700 + 1):
    dl = D(n)
    if len(dl) == 6:
        print(dl)
'''

# Ответ:
# 2 10 50 3826 19130 95650
# 2 26 338 566 7358 95654
# 2 4 8 23918 47836 95672



# Тип 25 № 27422
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [174457;174505],
# числа, имеющие ровно два различных натуральных делителя, не считая единицы и самого числа.
# Для каждого найденного числа запишите эти два делителя в два соседних столбца на экране с новой
# строки в порядке возрастания произведения этих двух делителей.
# Делители в строке также должны следовать в порядке возрастания.


def D(n):
    dl = set()
    for j in range(2, int(n ** 0.5) + 1):
        if n % j == 0:
            dl.add(j)
            dl.add(n // j)
            if len(dl) > 2:
                return dl
    return sorted(dl)

dic = {}
for n in range(174457, 174505+1):
    dl = D(n)
    if len(dl) == 2:
        # print(dl, dl[0] * dl[1])
        dic[dl[0] * dl[1]] = dl

for key in sorted(dic.keys()):
    print(dic[key])
'''
# Ответ:
# 3 58153
# 7 24923
# 59 2957
# 13 13421
# 149 1171
# 5 34897
# 211 827
# 2 87251



# Тип 25 № 40741
'''
# Пусть M(N) — сумма двух наибольших различных натуральных делителей натурального числа N, не считая самого числа.
# Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 10000000, для которых 0<M(N)<10000.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(n):
    dl = set()
    for j in range(2, int(n ** 0.5) + 1):
        if n % j == 0:
            dl.add(j)
            dl.add(n // j)
            if len(dl) > 4:
                break
    return sorted(dl)

count = 0
for n in range(10_000_000+1, 20_000_000):
    dl = D(n)

    if len(dl) >= 2:
        M = dl[-1] + dl[-2]
        if 0 < M < 10000:
            print(M)
            count += 1
            if count == 5:
                break
'''
# Ответ:
# 6876
# 6374
# 6924
# 8024
# 8358


# Тип 25 № 45259
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**9, найдите все числа, соответствующие маске 12345?7?8, делящиеся на число 23 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 23.
# Количество строк в таблице для ответа избыточно.


for x in '0123456789':
    for y in '0123456789':
        a = int(f'12345{x}7{y}8')
        if a % 23 == 0:
            print(a, a // 23)
'''
# Ответ:
# 123450798 5367426
# 123451718 5367466
# 123453788 5367556
# 123454708 5367596
# 123456778 5367686
# 123459768 5367816


# Тип 25 № 47229
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10*10, найдите все числа, соответствующие маске 1?2139*4,
# делящиеся на 2023 без остатка. В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце — соответствующие им результаты деления этих чисел на 2023.
#
# Количество строк в таблице для ответа избыточно.
dic = {}
for y in range(0, 1000):
    for x in '0123456789':
        a = int(f'1{x}2139{y}4')
        if a % 2023 == 0:
            # print(a, a // 2023)
            dic[a] = a // 2023

for key in sorted(dic.keys()):
    print(key, dic[key])
'''
# Ответ:
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048



# Тип 25 № 36880
'''
# Найдите все натуральные числа N, принадлежащие отрезку [400_000_000;600_000_000],
# которые можно представить в виде N=2**m * 3**n, где m — чётное число, n — нечётное число.
# В ответе запишите все найденные числа в порядке возрастания.

# print(2**28)  # 30 уже много, а 29 - нечетное (не должно превышать 10**9)
# print(3 ** 17)  # 19 уже много, а 18 - четное (не должно превышать 10**9)

M = []
for m in range(2, 28+1, 2):
    for n in range(1, 17+1, 2):
        N = 2 ** m * 3 ** n
        if 400_000_000 <= N <= 600_000_000:
            M.append(N)
M.sort()
for x in M:
    print(x)
'''
# 408146688
# 452984832
# 516560652
# 573308928


# endregion Урок:  ******************************************************************************


# todo: Слава = [2, 5, 6, 8, 12, 14+, 15, 16, 17, 23, 24], на следующем уроке: Теория игр. Разбираем 25 номер (второй урок)