# Домашка:

'''
# Тип 14 № 18497
# Значение выражения 6*343**5 + 5*49**7 - 50 записали в системе счисления с основанием 7.
# Сколько цифр 6 содержится в этой записи?
x = 6*343**5 + 5*49**7 - 50
M = []
while x > 0:
    M.append(x%7)
    x //= 7
M.reverse()
print(M.count(6))
'''

'''
# Тип 14 № 23914
# Значение арифметического выражения: 9**11*3**20 - 3**9 - 27 записали в системе счисления с основанием 3.
# Сколько цифр 2 содержится в этой записи?
x = 9**11*3**20 - 3**9 - 27
M = []
while x > 0:
    M.append(x%3)
    x //= 3
M.reverse()
print(M.count(2))
'''

'''
# Тип 14 № 29201
# Значение выражения 49**6*7**19 - 7**9 - 21 записали в системе счисления с основанием 7.
# Cколько цифр 6 содержится в этой записи?
x = 49**6*7**19 - 7**9 - 21
M = []
while x > 0:
    M.append(x%7)
    x //= 7
M.reverse()
print(M.count(6))
'''



# Тип 5 № 8094
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится двоичная запись числа N.
# 2) К этой записи дописываются справа ещё два разряда по следующему правилу:
#   а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец числа (справа). Например, запись 11100 преобразуется в запись 111001;
#   б) над этой записью производятся те же действия — справа дописывается остаток от деления суммы цифр на 2.
#
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R.
# Укажите минимальное число R, которое превышает 43 и может являться результатом работы алгоритма. В ответе это число запишите в десятичной системе.

for n in range(1, 10000):
    temp = n

    N = []
    while n > 0:
        N.append(n % 2)  # 1) Строится двоичная запись числа N.
        n //= 2
    N.reverse()

    for _ in range(2):
        summ = sum(N)
        N.append(summ % 2)

    r = 0
    N.reverse()
    for i in range(0, len(N)):
        r += N[i] * 2 ** i

    if r > 43:
        print(r)
        break
'''
# Ответ 46




# Тип 6 № 47305
'''
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.

# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 9 Направо 90 Вперёд 7 Направо 90]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом.
# Точки на линии учитывать не следует.

import turtle as t

t.left(90)
t.speed(10)
l = 30

for _ in range(4):
    t.fd(9 * l)
    t.right(90)
    t.fd(7 * l)
    t.right(90)

t.pu()  # pen up - поднять перо
t.color('red')
for x in range(0, 8):
    for y in range(0, 10):
        t.goto(x * l, y * l)
        t.dot(3)
t.done()
'''
# Ответ: 48

# Тип 6 № 47406
'''
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.

# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 12 Направо 90]
# Повтори 3 [Вперёд 12 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом: Повтори 4 [Вперёд 12 Направо 90]
# и находиться вне области, ограниченной линией, заданной данным алгоритмом: Повтори 3 [Вперёд 12 Направо 120].
# Точки на линии учитывать не следует.

import turtle as t
t.left(90)
t.speed(100)
l = 30

for _ in range(4):
    t.fd(12 * l)
    t.right(90)

t.color('red')
for _ in range(3):
    t.fd(12 * l)
    t.right(120)

t.pu()
t.color('blue')
for x in range(0, 13):
    for y in range(0, 13):
        t.goto(x * l, y * l)
        t.dot(3)
t.done()
'''
# Ответ: 65



# todo: на следующем уроке разбираем 6 номер turtle и повторить 5?