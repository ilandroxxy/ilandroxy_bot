
# region Домашка: ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# Тип 15 № 38590
'''
# На числовой прямой даны два отрезка: D=[17;58] и C=[29;80].
# Укажите наименьшую возможную длину такого отрезка A, для которого логическое выражение
#
# (x∈D)→((¬(x∈C)∧¬(x∈A))→¬(x∈D))
#
# истинно (т.е. принимает значение 1) при любом значении переменной х.

def F(x):
    D = 17 <= x <= 58
    C = 29 <= x <= 80
    A = a1 <= x <= a2
    return D <= (((not C) and (not A)) <= (not D))

L = [i/4 for i in range(10*4, 90*4)]

M = []
for a1 in L:
    for a2 in L:
        if all(F(x) for x in L) == True:
            M.append(a2-a1)
print(min(M))
'''
# Ответ: 12 (округляем вверх)


# Тип 15 № 34537
'''
# На числовой прямой даны три отрезка: P = [10,15], Q = [10,20] и R=[5,15].
# Какова наименьшая возможная длина интервала A, что формулы
#
# (x ∈ A) → (x ∈ P) и
# (x ∈ Q) → (x ∈ R)
#
# тождественно равны, то есть принимают равные значения при любом значении переменной х (за исключением, возможно, конечного числа точек).

def F(x):
    P = 10 <= x <= 15
    Q = 10 <= x <= 20
    R = 5 <= x <= 15
    A = a1 <= x <= a2
    return (A <= P) == (Q <= R)

L = [i/10 for i in range(1*10, 30*10)]

M = []
for a1 in L:
    for a2 in L:
        if all(F(x) for x in L) == True:
            M.append(a2-a1)
print(min(M))
'''
# Ответ: 5



# № 4283
'''
# Элементами множеств А, P, Q являются натуральные числа, причём P={1,3,4,9,11,13,15,17,19,21}, Q={3,6,9,12,15,18,21,24,27,30}.
# Известно, что выражение
#
# ((x ∈ P) → (x ∈ A)) ∨ ((x ∉ A) → (x ∉ Q))
#
# истинно (т.е. принимает значение 1 при любом значении переменной х.
# Определите наименьшее возможное произведение элементов в множестве A.


a = set()

def F(x):
    P = x in {1, 3, 4, 9,11,13,15,17,19,21}
    Q = x in {3, 6, 9, 12,15,18,21,24,27,30}
    A = x in a
    return (P <= A) or ((not A) <= (not Q))

for x in range(1, 1000):
    if F(x) == False:
        a.add(x)

print(a)
print(9 * 3 * 21 * 15)
'''
# Ответ: 8505



# № 3156
'''
# Элементами множеств А, P и Q являются натуральные числа, причём P = { 2, 4, 6, 8, 10, 12, 14, 16, 18, 20}
# и Q = { 5, 10, 15, 20, 25, 30, 35, 40, 45, 50}. Известно, что выражение
#
# ((x ∈ A) → (x ∈ P)) ∧ ((x ∈ Q) → ¬(x ∈ A))
#
# истинно (т. е. принимает значение 1) при любом значении переменной х.
# Определите наибольшее возможное количество элементов множества A.

a = set(range(1, 1000))

def F(x):
    P = x in {2, 4, 6, 8, 10, 12, 14, 16, 18, 20}
    Q = x in {5, 10, 15, 20, 25, 30, 35, 40, 45, 50}
    A = x in a
    return (A <= P) and (Q <= (not A))

for x in range(1, 1000):
    if F(x) == False:
        a.remove(x)

print(a, len(a))
'''
# Ответ: 8

'''
print(10000**2 + 2*9999 + 2*9997)  # 100039992
print((5*3+2) + (5*4+2) + (5*5+2) + (5*6+2))  # 98


def F(n):
    if n < 50:
        return n
    if n > 49:
        return 2*G(50 - n//2)

def G(n):
    if n > 40:
        return 10
    if n < 41:
        return 30+F(n + 600//n)

print(F(80))
'''



'''
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:

# F(n) = n − 10000 при n > 10000;
# F(n) = F(n + 1) + F(n + 2), если 1 ≤ n ≤ 10000.
#
# Чему равно значение выражения F(12345) × (F(10) − F(12)) / F(11) + F(10101)?


def F(n):
    if n > 10000:
        return n - 10000
    if 1 <= n <= 10000:
        return F(n+1) + F(n+2)

print(F(12345))  # 2345
print(F(10101))  # 101

# 2345 + 101  = 2446
print(2345+101)
'''



#
# № 4328, Пробный 06.2022 /dev/inf advanced
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
#
# F(n) = 2 при n ≤ 2;
# F(n) = F(n − 1) - 2 × F(n − 2) если n > 2.
#
# Определите, сколько раз будет выполняться функция при вызове F(57)?
'''
from functools import *
@lru_cache(None)

def F(n):
    if n <= 2:
        return 2
    if n > 2:
        return F(n-1) - 2 * F(n-2)


print(F(57))
'''




# endregion Урок:  ******************************************************************************


# todo: Слава = [2, 5, 6, 8, 9, 12, 14+, 15+, 16, 17, 19, 20, 21, 23, 24+, 25.1], на следующем уроке: Разбираем 18 номер
# todo: сложности 8, 25,