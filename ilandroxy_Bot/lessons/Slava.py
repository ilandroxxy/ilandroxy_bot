
# region Домашка: ******************************************************************************


# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************


# № 8481 (Уровень: Базовый)
# (В. Рыбальченко) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Найдите все натуральные числа меньшие 10**8, которые кратны 237,
# соответствуют маске «81?2*80», но не соответствуют маске «*9*».
# В ответ в первом столбике перечислите все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 237.
'''
from fnmatch import *
for x in range(237, 10**8, 237):  # которые кратны 237
    if fnmatch(str(x), '81?2*80'):  # соответствуют маске «81?2*80»
        print(x, x//237)
'''
# Показать ответ
# 815280 3440
# 8162280 34440
# 81324180 343140
# 81727080 344840
# 81821880 345240


# № 7724 (Уровень: Базовый)
# (Грачев Н.) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Найдите все натуральные числа, не превосходящие 10**9, для которых выполнены все условия:
# - соответствуют маске *18??18;
# - делятся на 18 и на 1018 без остатка;
#
# В ответе запишите в первом столбце таблицы первые пять найденных чисел в
# порядке возрастания, справа от каждого числа кол-во его делителей.
'''
from fnmatch import *
for x in range(1018, 10**9, 1018):
    if fnmatch(str(x), '*18??18'):
        if x % 18 == 0:
            divisors = set()
            for j in range(1, int(x**0.5)+1):
                if x % j == 0:
                    divisors.add(j)
                    divisors.add(x//j)
            print(x, len(divisors))
'''
# Показать ответ:
# 2189718 24
# 13184118 24
# 84189618 40
# 95184018 32
# 166189518 96


# № 7013 (Уровень: Средний)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# - символ «?» означает ровно одну произвольную цифру;
# - символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Найдите все натуральные числа, не превосходящие 109, для которых выполнены все условия:
#
# - соответствуют маске *31*65?;
# - делятся на 31 и 2031 без остатка;
# - количество делителей числа является результатом любой степени двойки
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# справа от каждого числа их частное от деления на 2031.

M = [2**i for i in range(1, 100)]

# Показать ответ:
# 53831655 26505
# 333126651 164021
# 512313657 252247
# 647931651 319021
# 831966654 409634




# Тип 27 № 48448
# Дана последовательность натуральных чисел.
# Назовём парой любые два числа из последовательности.
# Необходимо определить количество пар, в которых сумма чисел
# в паре делится без остатка на 3, а их произведение — на 1024.
'''
M = [int(i) for i in open('27-A.txt')]
count = 0
for i in range(len(M)):
    for j in range(i+1, len(M)):
        if (M[i] + M[j]) % 3 == 0:
            if (M[i] * M[j]) % 1024 == 0:
                count += 1
print(count)
'''
# Ответ: 529


# Тип 27 № 57434

# По каналу связи передаётся последовательность целых неотрицательных чисел — показания прибора,
# полученные с интервалом в 1 мин. в течение T мин. (T — целое число).
# Прибор измеряет количество атмосферных осадков, полученное регистратором за минуту,
# предшествующую моменту регистрации, и передаёт это значение в условных единицах измерения
#
# Определите два таких переданных числа, чтобы между моментами их передачи прошло не менее K мин.,
# а их сумма была максимально возможной. Укажите найденное суммарное количество осадков.
'''
f = open('27-A.txt')
k = int(f.readline())
n = int(f.readline())
M = [int(i) for i in f]
maxi = 0
for i in range(n):
    for j in range(i+k, n):
        maxi = max(maxi, M[i] + M[j])
print(maxi)
'''
# Ответ: 1608


# Тип 27 № 55823
# Метеорологическая станция ведёт наблюдение за количеством выпавших осадков.
# Показания записываются каждую минуту в течение N минут.
#
# Определяется пара измерений, между которыми прошло не менее K минут.
# Найдите максимальную сумму показаний среди таких пар.
'''
f = open('27-A.txt')
n = int(f.readline())
k = int(f.readline())
M = [int(i) for i in f]
maxi = 0
for i in range(n):
    for j in range(i+k, n):
        maxi = max(maxi, M[i] + M[j])
print(maxi)
'''
# Ответ: 174902


# Тип 27 № 47024
# Дана последовательность натуральных чисел.
# Необходимо определить количество её непрерывных подпоследовательностей, сумма элементов которых кратна 1111.
'''
f = open('27-A.txt')
n = int(f.readline())
M = [int(i) for i in f]
count = 0
for i in range(n):
    summ = M[i]
    for j in range(i+1, n):
        summ += M[j]
        if summ % 1111 == 0:
            count += 1
print(count)
'''
# Ответ: 344


# Тип 27 № 40743
# Дана последовательность целых чисел. Необходимо найти максимально возможную сумму её непрерывной подпоследовательности,
# в которой количество положительных чётных элементов кратно k = 30.
'''
f = open('27-A.txt')
n = int(f.readline())
M = [int(i) for i in f]
maxi = 0
for i in range(n):
    k = 0
    summ = M[i]
    for j in range(i+1, n):
        summ += M[j]
        maxi = max(maxi, summ)
        if M[i] % 2 == 0 and M[j] > 0:
            k += 1
            if k % 30 == 0:
                summ = 0
print(maxi)
'''
# Ответ: 97011



# Тип 27 №  38604
# Дана последовательность из N натуральных чисел.
# Рассматриваются все её непрерывные подпоследовательности, такие что сумма элементов каждой из них кратна k=43.
# Найдите среди них подпоследовательность с максимальной суммой, определите её длину.
# Если таких подпоследовательностей найдено несколько, в ответе укажите количество элементов самой короткой из них.
'''
f = open('27-A.txt')
n = int(f.readline())
M = [int(i) for i in f]

maxi = 0
result = 1
for i in range(n):
    summ = M[i]
    count = 0
    for j in range(i + 1, n):
        summ += M[j]
        count += 1
        if summ % 43 == 0:
            if maxi < summ:
                maxi = summ
                result = count
                count = 0
print(result)
'''
#  185

# endregion Урок:  ******************************************************************************

# todo: РЕШУ ЕГЭ = [1, 2, 5, 6, 8, 9, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 23, 24+, 25.2]
# todo: КЕГЭ [1, 5, 8, 9, 13, 14, 17, 24, 25] # рассмотреть: 6, 9, 22, 17 КЕГЭ
# на прошлом уроке: Порешали 27 номера первую часть, было сложно, но половину, точно осилили.
# на следующем уроке:
