
# region Домашка: ******************************************************************************



# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# Тип 24 № 27687
'''
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов Y. Хотя бы один символ Y находится в последовательности.
#
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# Вариант 1
s = open('24.txt').readline()
s = s.replace('X', ' ').replace('Z', ' ')
M = [len(i) for i in s.split()]
print(max(M))

# Вариант 2
print(max([len(i) for i in open('24.txt').readline().replace('X', ' ').replace('Z', ' ').split()]))

# Вариант 3
s = open('24.txt').readline()
count = 1
maxcount = 1
for i in range(len(s)-1):
    if s[i] == 'Y' and s[i+1] == 'Y':
        count += 1
        maxcount = max(maxcount, count)
    else:
        count = 1
print(maxcount)
'''
# Ответ: 10



# Тип 24 № 35998
'''
# Текстовый файл содержит строки различной длины.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# В строках, содержащих менее 25 букв A, нужно определить и вывести максимальное расстояние между одинаковыми буквами в одной строке.
Alphabet = 'QWERTYUIOPASDFGHJKLZXCVBNM'
s = open('24.txt').readlines()

for x in s:
    maxi = 0
    if x.count('A') < 25:
        for a in Alphabet:
            maxi = max(maxi, x.rindex(a) - x.index(a))
        print(maxi)
'''
# Ответ: 1004


# Тип 24 № 27695
'''
# Текстовый файл состоит не более чем из 106 символов L, D и R.
# Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

s = open('24.txt').readline()
count = 1
maxcount = 0
for i in range(0, len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        maxcount = max(maxcount, count)
    else:
        count = 1
print(maxcount)
'''
# Ответ: 45


# Тип 24 № 27694
'''
# Текстовый файл состоит не более чем из 106 символов A, B и C.
# Определите максимальную длину цепочки вида ABABAB... (составленной из фрагментов AB, последний фрагмент может быть неполным).
#
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

print(max([len(i) for i in open('24.txt').readline().replace('AB', '**').replace('A', ' ').replace('B', ' ').replace('C', ' ').split()]))
'''
# s = open('24.txt').readline()
# print(s)
# ABABABAB A



# Тип 24 № 37159
'''
# Текстовый файл состоит не более, чем из 10**7 строчных букв английского алфавита.
# Найдите максимальную длину подстроки, в которой символы «a» и «d» не стоят рядом.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

s = open('24.txt').readline().replace('ad', ' ').replace('da', ' ').split()
M = [len(i) for i in s]
print(max(M)+2)
'''
# +2, чтобы обрабатывать такие события
# adrjijgiad
# --rjijgi--  +2

# XYZHEFIFHXYZ
# ---HEFIFH---  +4

# XYZWHEFIFHXYZW
# ----HEFIFH----  +6


# Тип 24 № 39253
'''
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). 
# Определите максимальное количество идущих подряд символов, среди которых не более одной буквы D.
# 
# Для выполнения этого задания следует написать программу. 
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

s = open('24.txt').readline().split('D')
# s = 'GYHDGFKOREDJKOKDYJIOPYT'.split('D')
# GYHD  GFKORE JKOK
# GYHD+GFKORE   GFKORE+JKOK

maxi = 0
for i in range(0, len(s)-1):
    maxi = max(maxi, len(s[i]) + len(s[i+1]))

print(maxi+1)
'''
# Ответ: 354


# Тип 24 № 47021
'''
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество групп из идущих подряд не менее 10 символов, которые начинаются и заканчиваются буквой A и не содержат других букв A (кроме первой и последней) и букв B.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

s = open('24.txt').readline().split('A')
count = 0
for x in s:
    if 'B' not in x and len(x) >= 8:
        count += 1
print(count)
'''

# Вариант 2
'''
with open('24.txt') as f:
    s = f.readline()
    s = s.split('A')
    ans = list(filter(lambda x: (not 'B' in x) and len(x) >= 8, s))
    print(len(ans))
'''
# Ответ: 11138

# Теория анонимные функции
'''
num = [1, 23, 12, 321, 432, 1213, 213, 21, 412, 3, 13,12,312]
print(list(filter(lambda x: x if x % 2 == 0 else None, num)))
print(list(filter(lambda x: x % 2 == 0, num)))

print(list(map(lambda x: x**2, num)))

def F(M):
    for i in range(0, len(M)):
        M[i] = M[i] ** 2
    return M
'''

# endregion Урок:  ******************************************************************************


# todo: Слава = [2, 5, 6, 8, 9, 12, 14+, 15, 16, 17, 23, 24+, 25.1], на следующем уроке:
# todo: сложности 8, 24, 25, 15 - на отрезки и множества