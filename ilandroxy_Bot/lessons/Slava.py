
# region Домашка: ******************************************************************************

'''
#  Тип 15 № 34509.
# Для какого наименьшего неотрицательного целого числа А формула

# ((x&28 != 0) or (x&45 != 0)) <= ((x&17 == 0) <= (x&A != 0)

# тождественно истинна (то есть принимает значение 1 при любом неотрицательном целом значении переменной x)?

def F(x, A):
    return ((x&28 != 0) or (x&45 != 0)) <= ((x&17 == 0) <= (x&A != 0))

for A in range(0, 300):
    flag = True
    for x in range(0, 300):
        if F(x, A) == False:
            flag = False
            break
    if flag:
        print(A)
        break
# Ответ: 44
'''

'''
# Тип 15 № 45249.
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
#
# Для какого наименьшего натурального числа А формула

# (ДЕЛ(x, 3)→ ¬ДЕЛ(x, 5)) ∨ (x+A ≥ 90)

# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной x?

def F(x, A):
    return ((x % 3 == 0) <= (x % 5 != 0)) or ((x + A) >= 90)
for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if not(F(x, A)):
            flag = False
            break
    if flag == True:
        print(A)
        break
# Ответ: 75
'''



# Задание 1. Тип 15 № 7763
'''
# На числовой прямой даны два отрезка: P = [5, 30] и Q = [14, 23].
# Укажите наибольшую возможную длину промежутка A, для которого формула

# ((x ∈ P) ≡ (x ∈ Q)) → ¬(x ∈ A)

# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.

def F(x, a1, a2):
    return ((5 <= x <= 30) == (14 <= x <= 23)) <= (not(a1 <= x <= a2))
A = []
for a1 in range(0, 300):
    for a2 in range(0, 300):
        flag = True
        for x in range(0, 300):
            if F(x, a1, a2) == False:
                flag = False
                break
        if flag:
            A.append(a2-a1)
            print(a2-a1)
print(max(A) + 1)
# Ответ: 9
'''

'''
# Задание 2. Тип 15 № 8666
# На числовой прямой даны два отрезка: P = [25; 50] и Q = [32; 47]. 
Укажите наибольшую возможную длину промежутка A, для которого формула

# ((not(a1 <= a <= a2)) <= (25 <= x <= 50)) <= ((a1 <= x <= a2) <= (32 <= x <= 47))

# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.

def F(x, a1, a2):
    return ((not(a1 <= x <= a2)) <= (25 <= x <= 50)) <= ((a1 <= x <= a2) <= (32 <= x <= 47))
A = []
for a1 in range(0, 300):
    for a2 in range(0, 300):
        flag = True
        for x in range(0, 300):
            if F(x, a1, a2) == False:
                flag = False
                break
        if flag:
            A.append(a2-a1)
            print(a2-a1)
print(max(A))
# Ответ: 15
'''

# endregion Домашка:  ******************************************************************************



# region Урок:  ******************************************************************************

# В данной задаче под парой подразумевается два различных элемента последовательности.
M = [1, 2, 3, 4, 5]
# 12 13 14 15
# 23 24 25
# 34 35
# 45


# Назовём парой два идущих подряд элемента последовательности.
M = [1, 2, 3, 4, 5]
# 12 23 34 45


# Тип 17 № 39762
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар чисел, произведение которых кратно 15, а их сумма делится на 7.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.

f = open('17.txt', 'r')
M = [int(i) for i in f]

count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] * M[i+1]) % 15 == 0 and (M[i] + M[i+1]) % 7 == 0:
        count += 1
        if maxi < (M[i] + M[i+1]):
            maxi = (M[i] + M[i+1])
print(count, maxi)
'''
# Ответ: 170 18662




# Тип 17 № 37350
'''
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, у которых сумма нечётна,
# а произведение делится на 3, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.


f = open('17.txt', 'r')
M = [int(i) for i in f]

# M = [1, 2, 3, 4, 5]

count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] + M[j]) % 2 != 0:
            if (M[i] * M[j]) % 3 == 0:
                count += 1
                if maxi < (M[i] + M[j]):
                    maxi = (M[i] + M[j])
print(count, maxi)
'''
# ответ: 13931722 19993





# endregion Урок:  ******************************************************************************


# todo: Слава = [2, 5, 6, 8, 12, 14+, 15, 16, 23], на следующем уроке: Разбирать номер 47221