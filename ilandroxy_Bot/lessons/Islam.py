# region Домашка:  ******************************************************************************

# 48396 - решу егэ(14(2))
"""
for x in '0123456789abcdef':
    a = int(f'2{x}84', 19)
    b = int(f'2B3{x}', 16)

    if (a + b) % 88 == 0:
        print((a + b) // 88)
        break
"""
# 48387 - решу егэ(14(2))
"""
for x in '0123456789a':
    for y in '0123456789a':
        a = int(f'{x}341{y}', 11)
        b = int(f'56{x}1{y}', 19)

        if (a + b) % 305 == 0:
            print((a + b) // 305)
            exit()
#Ответ:2778
"""
# 48385 - решу егэ(14(2))
"""
for x in '0123456789abc':
    for y in '0123456789abc':
        a = int(f'8{x}78{y}', 13)
        b = int(f'79{x}{y}7', 18)

        if (a + b) % 9 == 0:
            print((a + b) // 9)
            exit()
#Ответ: 113024
"""
# 11262 решу егэ № 5
"""
for n in range(1000, 10000):
    M = [int(i) for i in str(n)]

    a = M[0] + M[1]
    b = M[1] + M[2]
    c = M[2] + M[3]

    maxi = max(a, b, c)

    sred = (a + b + c) - (max(a, b, c) + min(a, b, c))

    r = str(sred) + str(maxi)

    if r == '1517':
        print(n)
        break
"""


# Тип 5 № 9298
"""
# Автомат получает на вход трёхзначное число.
# По этому числу строится новое число по следующим правилам.
#
# 1. Складываются первая и вторая, а также вторая и третья цифры исходного числа.
# 2. Полученные два числа записываются друг за другом в порядке убывания (без разделителей).
#
# Пример. Исходное число: 348. Суммы: 3 + 4 = 7; 4 + 8 = 12. Результат: 127.
#
# Сколько существует чисел, в результате обработки которых автомат выдаст число 1715?

count = 0
for n in range(100, 1000):
    M = [int(i) for i in str(n)]

    a = M[0] + M[1]
    b = M[1] + M[2]

    r = str(max(a, b)) + str(min(a, b))

    if r == '1715':
        count += 1
print(count)
# Ответ: 4
"""


# Тип 5 № 13590
'''
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
# 1. Перемножаются отдельно первая и вторая цифры, а также вторая и третья цифры.
# 2. Полученные два числа записываются друг за другом в порядке невозрастания без разделителей.
#
# Пример. Исходное число: 179. Произведения: 1*7 = 7; 7*9 = 63. Результат: 637.
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 205.

for n in range(100, 1000):
    M = [int(i) for i in str(n)]

    a = M[0] * M[1]
    b = M[1] * M[2]

    r = str(max(a, b)) + str(min(a, b))

    if r == '205':
        print(n)
        break
'''

# endregion Домашка: ******************************************************************************



# region Урок:  ******************************************************************************


# Тип 5 № 16435
# Автомат обрабатывает натуральное число N > 1 по следующему алгоритму.
#
# 1. Строится двоичная запись числа N.
# 2. Последняя цифра двоичной записи удаляется.
# 3. Если исходное число N было нечётным, в конец записи (справа) дописываются цифры 10, если четным — 01.
# 4. Результат переводится в десятичную систему и выводится на экран.
#
# Пример. Дано число N = 13. Алгоритм работает следующим образом.
# 1. Двоичная запись числа N: 1101.
# 2. Удаляется последняя цифра, новая запись: 110.
# 3. Исходное число нечётно, дописываются цифры 10, новая запись: 11010.
# 4. На экран выводится число 26.
#
# Какое число нужно ввести в автомат, чтобы в результате получилось 2017?

'''
for n in range(2, 10000):
    temp = n

    M = []
    while n > 0:
        M.append(n % 2)  # 1. Строится двоичная запись числа N.
        n //= 2
    M.reverse()

    del M[-1]  # 2. Последняя цифра двоичной записи удаляется.

    if temp % 2 != 0:
        M.append(1)  # 3. Если исходное число N было нечётным, в конец записи (справа) дописываются цифры 10
        M.append(0)
    else:
        M.append(0)  # если четным — 01.
        M.append(1)

    r = 0
    M.reverse()
    for i in range(0, len(M)):
        r += M[i] * 2 ** i

    if r == 2017:
        print(temp)
        break
'''
# Ответ: 1008

# Вариант 2
'''
for n in range(2, 10000):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.

    s = s[:-1]  # 2. Последняя цифра двоичной записи удаляется.

    if n % 2 != 0:
        s += '10'
    else:
        s += '01'

    r = int(s, 2)

    if r == 2017:
        print(n)
'''
# Ответ: 1008


# Тип 5 № 16882
'''
# Автомат обрабатывает натуральное число N (0 ≤ N ≤ 255) по следующему алгоритму:
#
# 1. Строится восьмибитная двоичная запись числа N.
# 2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3. Полученное число переводится в десятичную запись.
# 4. Из нового числа вычитается исходное, полученная разность выводится на экран.
#
# Пример. Дано число N = 13. Алгоритм работает следующим образом.
# 1. Восьмибитная двоичная запись числа N: 00001101.
# 2. Все цифры заменяются на противоположные, новая запись 11110010.
# 3. Десятичное значение полученного числа 242.
# 4. На экран выводится число 242 − 13 = 229.
#
# Какое число нужно ввести в автомат, чтобы в результате получилось 111?

for n in range(0, 255+1):
    s = bin(n)[2:]
    while len(s) < 8:  # 1. Строится восьмибитная двоичная запись числа N.
        s = '0' + s

    s = s.replace('0', '*')
    s = s.replace('1', '0')  # 2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
    s = s.replace('*', '1')

    r = int(s, 2)

    res = r - n

    if res == 111:
        print(n)
        break
'''
# Ответ: 72


s = '0001000'
print(int(s, 2))











# endregion Урок:  ******************************************************************************


# todo: Ислам = [2, 5, 6, 14+], на следующем уроке: Добиваем 5 номер второго типа, Как получить сумму цифр строки. Можно на примере 12 номера + Теория строк
