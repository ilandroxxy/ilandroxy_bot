# region Домашка:  ******************************************************************************


# 28681
"""
for n in range(128, 255+1):
    s = bin(n)[2:]
    while len(s) < 8:
        s = '0' + s

    s = s.replace('0', '*')
    s = s.replace('1', '0')
    s = s.replace('*', '1')

    r = int(s, 2)

    res = n - r

    if res == 105:
        print(n)
        break
# Ответ: 180
"""

# 29113
"""
for n in range(128, 255+1):
    s = bin(n)[2:]
    while len(s) < 8:
        s = '0' + s

    s = s.replace('0', '*')
    s = s.replace('1', '0')
    s = s.replace('*', '1')

    r = int(s, 2)

    res = n - r

    if res == 185:
        print(n)
        break
# Ответ: 220
"""

# 16381
"""
for n in range(1, 10000):
    s = bin(n)[2:]

    s = s[:-1]

    if n % 2 != 0:
        s += '10'
    else:
        s += '01'

    r = int(s, 2)

    if r == 2018:
        print(n)
# Ответ: 1009
"""

# 37140
"""
M = []
for n in range(1, 100):
    s = bin(n)[2:]

    s = str(s)

    if n % 2 == 0:
        s = '1' + s + '0'
    else:
        s = '11' + s + '11'
    r = int(s, 2)
    if r > 52:
        M.append(r)
print(min(M))
# Ответ: 56
"""

# 33475
"""
for n in range(2, 100):
    s = bin(n)[2:]

    s = str(s)

    s += s[-2]
    s += s[1]

    r = int(s, 2)
    if r > 180:
        print(n)
        break
# Ответ: 46
"""

# endregion Домашка: ******************************************************************************


# region Урок:  ******************************************************************************

# Как получить сумму строки
'''
# Вариант 1
s = '12342143'
summ1 = 0
for x in s:
    summ1 += int(x)
print(summ1)

# Вариант 2
M = [int(x) for x in s]
print(sum(M))


# Вариант 3
print(s.count('1') + s.count('2') * 2 + s.count('3') * 3 + s.count('4') * 4)
'''

# Тип 12 № 14700
'''
# Какая строка получится в результате применения приведённой ниже программы к строке вида 1…12…2 (7 единиц, затем 7 двоек)?
# В ответе запишите полученную строку.
#
# ПОКА нашлось (111) ИЛИ нашлось (222)
#     ЕСЛИ нашлось (111)
#         ТО заменить (111, 2)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (222)
#         ТО заменить (222, 1)
#     КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА

s = '1' * 7 + '2' * 7
while '111' in s or '222' in s:  # ПОКА нашлось (111) ИЛИ нашлось (222)
    if '111' in s:  # ЕСЛИ нашлось (111)
        s = s.replace('111', '2', 1)  # ТО заменить (111, 2)
    if '222' in s:
        s = s.replace('222', '1', 1)
print(s)
'''
# Ответ: 12


# Теория строк - строки очень похожи на списки, за исключением: мы не можем менять элементы строк
'''
s = '1231241421426'
print(s[0], s[-1])  # первый и последний элемент строки

for x in s:
    print(x, end=' ')
print()

for i in range(0, len(s)):
    print(s[i], end=' ')
print()

# Что если, я хочу поменять элемент * на +?
s = '123*23423'
s = s[:3] + '+' + s[4:]  # срезы - с списками работают точно также
print(s)


print(s[3:7])  # крайний правый индекс не включается
print(s[3:])
print(s[:3])

print(s[::2])  # выводим через одного
print(s[::-1])  # аналог reverse() из списков
'''

# Методы строк
'''
s = '12312412321'

print(s.count('1'))  # выводит кол-во вхождений
print(s.index('1'), s.rindex('1'))  # выводит индексы первого вхождения и крайнего правого вхождения элемента

s = s.replace('1', '*')  # все '1' заменили на звездочки
print(s)

s = s.replace('*', '1', 2)  # Заменили только первые две звездочки
print(s)

alphabet = '   wiofjiej   EHJNRi  owjer  IOWJwrtfi    '
print(alphabet.lower())
print(alphabet.upper())
print(alphabet.strip())
alphabet = alphabet.lower().strip()
print(alphabet)


ip = '123.214.43.77'
M = ip.split('.')
print(M)

M = [int(i) for i in ip.split('.')]
print(M)


A = ['23', '234', '78', '123']
r = '.'.join(A)
print(r)
'''



# endregion Урок:  ******************************************************************************


# todo: Ислам = [2, 5, 6, 14+], на следующем уроке: Разобрать 12 номер на перебор строк и на письменную задачу, И разбираем 8 номер
