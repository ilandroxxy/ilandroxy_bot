
# Это однострочный комментарий

'''
Многострочный комментарий
'''

# Типа данных

# Типы данных переменных
'''
x = 5  # переменная обеспечивает доступ к данным (5) через имя (x)
# переменная хранит в себе одно значение

a = 4  # int (integer) - целочисленные значения
print(type(a))
print(a * 5)

b = 4.0  # float (число с плавающей точкой) - по сути дроби
print(type(7 / 2))  # Питон определяет автоматически типы данных даже для арифметических действий
# Стоит обратить внимание, что результат деления двух int-овых значений - получился float

c = '4'  # str (string) - строковый тип данных, хранит символы, цифры, слова, предложения, текст...
print(c * 6)  # при умножении строки на целое число - строка дублируется n-раз
# Примечание 1: разницы между одинарной и двойной кавычкой нет
s1 = 'hello,'
s2 = ' Islam'
print(s1 + s2)  # строки между собой конкатенируют (склеиваются) 

d1 = True  # bool (boolean) - основы Булевой алгебры (или Математической логики)
d2 = False
s1 = 'hello,'
s3 = 'hello, '
print(s1 == s3) # False, потому что " " - пробел тоже строка

M = [4, 4.0, "4", True, 4-2j]
for i in M:
    print(i, "  <---->  ", type(i))

print()
M = [3+4, 7 / 2, '4' * 5, 1 < 10, 4-2j + 5+1j]  # Результаты арифметических действий автоматически типизируются Питоном
for i in M:
    print(i, "  <---->  ", type(i))
'''

# Типы данных коллекций
'''
# Коллекция - это набор различных значений (безразмерный)

M = [[1, 2, 3], (1, 2, 3), {1, 2, 3}, {1: "один", 2: "два", 3: "три"}]
for i in M:
    print(i, "  <---->  ", type(i))
'''


# Типы данных переменных определяются автоматически, кроме случая использования функции input()
# функция input() - это ввод с клавиатуры значений, НО в строчном типе данных
'''
x = input('Введите число (str): ')
print(x, x*5, type(x), '\n')

# получается, чтобы ввести другой тип данных с клавиатуры - нужно конвертировать
x = int(input('Введите число (int): '))
print(x, x*5, type(x), '\n')

x = float(input('Введите число (float): '))
print(x, x*5, type(x), '\n')
'''

# Конвертируемые типы данных
'''
x = 4
print(x, "  <---->  ", type(x))

x = str(x)
print(x, "  <---->  ", type(x))

x = float(x)
print(x, "  <---->  ", type(x))

x = int(x)
print(x, "  <---->  ", type(x))

# Типы данных int, float - можно спокойно переводить в любые другие
# Строчный же тип (str) можно переводить, если он состоит только лишь из цифр


M = [1, 2, 3]
print(M, "  <---->  ", type(M))

M = tuple(M)
print(M, "  <---->  ", type(M))

M = set(M)
print(M, "  <---->  ", type(M))

M = list(M)
print(M, "  <---->  ", type(M))
'''

# Оформление консольного вывода функции print()
# Вывод: Сегодня облачно, а температура за бортом 24
'''
weather = 'облачно'
temperature = 24
print('Сегодня', weather, ', а температура за бортом', temperature)
print('Сегодня ' + weather + ', а температура за бортом ' + str(temperature))
print('Сегодня {}, а температура за бортом {}'.format(weather, temperature))
print('Сегодня %s, а температура за бортом %d'%(weather, temperature))  # для float - %f
print(f'Сегодня {weather}, а температура за бортом {temperature}')  # f-строки
'''


# Базова арифметика
'''
a = 7
b = 2

print(f'{a} + {b} = {a+b}\n{a} - {b} = {a-b}\n{a} * {b} = {a*b}\n')

print(f'Возведем {a} в степень {b}: {a} ** {b} = {a**b}')
print(f'Получить квадратный корень от 16:  {16**(1/2)}')
print(f'Получить кубический корень от 27:  {27**(1/3)}\n')

print(f'Вещественное деление: {a} / {b} = {a/b}\n'
      f'Целочисленное деление (без округлений) : {a} // {b} = {a//b}\n'
      f'Остаток от деления (от обыкновенной дроби): {a} % {b} = {a%b}\n')
'''