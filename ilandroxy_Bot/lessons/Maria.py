
# region Домашка

'''
# Значение выражения 36**8 + 6**20 − 12? записали в системе счисления с основанием 6.
# Сколько цифр 0 содержится в этой записи?

x = 36**8 + 6**20 - 12
M = []
while x > 0:
    M.append(x % 6)
    x //=6
M.reverse()
print(M.count(0))
'''


'''
# Значение выражения 49**7·7**20 − 7**8 − 28 записали в системе счисления с основанием 7.
# Сколько цифр 6 содержится в этой записи?

x = 49**7*7**20 - 7**8 - 28
M = []
while x > 0:
    M.append(x % 7)
    x //= 7
M.reverse()
print(M.count(6))
'''

'''
# Сколько единиц в двоичной записи числа, являющимся результатом следующего выражения?
# 4**14 + 2**32 - 4.

x = 4**14 + 2**32 - 4
M = []
while x > 0:
    M.append(x % 2)
    x //=2
M.reverse()
print(M.count(1))
'''

'''
# Автомат получает на вход четырёхзначное число. По этому числу строится новое число по следующим правилам.
# 1.Складываются отдельно первая и вторая цифры, вторая и третья цифры, а также третья и четвёртая цифры.
# 2.Из полученных трёх чисел выбираются два наибольших и записываются друг за другом в порядке неубывания без разделителей.
# Пример. Исходное число: 9575. Суммы: 9 + 5 = 14; 5 + 7 = 12; 7 + 5 = 12. Наибольшие суммы: 14, 12. Результат: 1214.
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 1418.

for n in range(1000, 10000):
    s = str(n)
    a = int(s[0]) + int(s[1])
    b = int(s[1]) + int(s[2])
    c = int(s[2]) + int(s[3])

    sred = (a + b + c) - max(a, b, c) - min(a, b, c)

    r = str(sred) + str(max(a, b, c))
    if r == '1418':
        print(n)
        break
'''

'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1.Строится двоичная запись числа N.
# 2.Далее эта запись обрабатывается по следующему правилу:
# а)если число чётное, то к двоичной записи числа слева дописывается 1, а справа 0.
# Например, для исходного числа 1002 результатом будет являться число 11000;
# б)если число нечётное, то к двоичной записи числа слева дописывается 11 и справа дописывается 11.
# Полученная таким образом запись является двоичной записью искомого числа R.
# Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число, большее, чем 52.
# В ответе запишите это число в десятичной системе счисления.

for n in range(1, 1000):
    s = bin(n)[2:]
    if n % 2 == 0:
        s = '1' + s + '0'
    else:
        s = '11' + s + '11'
    r = int(s, 2)
    if r> 52:
        print(n)
        break
'''


#Автомат получает на вход четырёхзначное десятичное число, в котором все цифры нечётные.
# По этому числу строится новое число по следующим правилам.
# 1.Складываются первая и вторая, а также третья и четвёртая цифры.
# 2.Полученные два числа записываются друг за другом в порядке неубывания (без разделителей).
#Пример. Исходное число: 7511. Суммы: 7 + 5 = 12; 1 + 1 = 2. Результат: 212.
# Сколько существует чисел, в результате обработки которых автомат выдаст число 616?
'''
count = 0
for n in range(1000, 10000):
    s = str(n)
    if int(s[0])%2!=0 and int(s[1])%2!=0 and int(s[2])%2!=0 and int(s[3])%2!=0:
        a = int(s[0]) + int(s[1])
        b = int(s[2]) + int(s[3])

        r = str(min(a, b)) + str(max(a, b))
        if r == '616':
            count += 1
print(count)
'''

# endregion Домашка


# region Урок
'''
s = '4356'
# i  0123

print(len(s))

print(s[0], s[-1])

for x in s:
    print(x, end=' ')
print()

for i in range(0, len(s)):
    print(s[i], end=' ')
print()
# в строках нельзя поменять элемент строки (как это можно делать в списках) 
'''


'''

# Поменять элемент строки 5 на *
s = '123456789'

M = [i for i in s]
for i in range(0, len(s)):
    if M[i] == '5':
        M[i] = '*'
print(M)
# Срезы
s = '123456789'
s = s[:4] + "*" + s[5:]
print(s)

print(s[2:4])
print(s[:4])
print(s[4:])
print(s[::2])
print(s[::-1])  # аналог reverse для строки
'''


# Методы строк
'''
s = '12345678911цшуоаУАОлавууШОАУШЩАО'
print(s.count('1'))

print(s.index('1'), s.rindex('1'))  # индексы первого и последнего элемента строки

s = s.upper()
print(s)

s = s.lower()
print(s)

s = s.replace('1', '*')
print(s)

s = s.replace('*', '1', 2)
print(s)

ip = '129.12.245.9'
M = ip.split('.')
print(M)

A = [int(i) for i in ip.split('.')]
print(A)

r = ','.join(M)
print(r)

r = int('1000', 2)  # перевод из 2-ной системы в 10-нуюо
'''



# Тип 14 № 48339
'''
# Операнды арифметического выражения записаны в системе счисления с основанием 11:
#
# 982x8_11 + 194x7_11
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита одиннадцатиричной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 58.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 58 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.


for x in '0123456789a':
    a = int(f'982{x}8', 11)
    b = int(f'194{x}7', 11)

    if (a + b) % 58 == 0:
        print((a + b) // 58)
        break
'''
# Ответ: 2931


# Тип 14 № 48401
'''
# Операнды арифметического выражения записаны в системе счисления с основаниями 13 и 18:
#
# xA04_13 + 1Dx3_18
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита десятичной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 184.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 184 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789abc':
    a = int(f'{x}A04', 13)
    b = int(f'1D{x}3', 18)

    if (a + b) % 184 == 0:
        print((a + b) // 184)
        break
'''
# Ответ: 124


# Тип 14 № 48386
'''
# Операнды арифметического выражения записаны в системах счисления с основаниями 15 и 16:
#
# 90x4y_15 + 91xy2_16
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите наименьшие значения x и y, при которых значение данного арифметического выражения кратно 56.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 56 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789abcde':
    for y in '0123456789abcde':
        a = int(f'90{x}4{y}', 15)
        b = int(f'91{x}{y}2', 16)

        if (a + b) % 56 == 0:
            print((a + b) // 56)
            exit()
'''
# Ответ: 18754


'''
# Тип 14 № 48381
# Числа M и N записаны в системе счисления с основанием 14 соответственно.
#
# M = 8x12x_14, N = 8x542_14
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита четырнадцатеричной системы счисления.
# Определите наименьшее значение натурального числа A, при котором существует такой x, что M + A кратно N.


# for A in range(100000-1, -1, -1): Наибольшее
for A in range(1, 10000):
    for x in '0123456789abcd':
        m = int(f'8{x}12{x}', 14)
        n = int(f'8{x}542', 14)

        if (A + m) % n == 0:
            print(A)
            exit()
# Ответ: 801.
'''


# Тип 8 № 3570
'''
# Все 4-буквенные слова, составленные из букв С, Л, О, Н записаны в алфавитном порядке и пронумерованы.
#
# Вот начало списка:
# 1.ЛЛЛЛ
# 2.ЛЛЛН
# 3.ЛЛЛО
# 4.ЛЛЛС
# 5.ЛЛНЛ
#
# Запишите слово, которое стоит под номером 250.

s = 'ЛНОС'
M = []
count = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                temp = a + b + c + d
                M.append(temp)
                # print(count, temp)
                if count == 250:
                    print(temp)
                count += 1
print(M[250-1])  # потому что счет слов должен начинаться с 1, а не с 0 как у нас в списке M
'''
# Ответ: ССОН



# Тип 8 № 16385
'''
# Михаил составляет 5-буквенные коды.
# В кодах разрешается использовать только буквы А, Б, В, Г, Д, при этом код не может начинаться с гласной и не может содержать двух одинаковых букв подряд.
# Сколько различных кодов может составить Михаил?

s = 'АБВГД'
count = 0
for a in 'БВГД':
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if a != b and b != c and c != d and d != e:
                        count += 1
print(count)
'''
# Ответ: 1024


# Тип 8 № 26982
'''
# Сколько существует шестизначных чисел, делящихся на 5, в которых
# каждая цифра может встречаться только один раз, при этом никакие две чётные и две нечётные цифры не стоят рядом.

s = '0123456789'
s1 = '02468'
s2 = '13579'
count = 0
for a in '2468':
    for b in s2:
        for c in s1:
            for d in s2:
                for e in s1:
                    for f in '5':
                        M = [a, b, c, d, e, f]
                        A = set(M)
                        if len(A) == 6:
                            count += 1

for a in s2:
    for b in s1:
        for c in s2:
            for d in s1:
                for e in s2:
                    for f in '0':
                        M = [a, b, c, d, e, f]
                        A = set(M)
                        if len(A) == 6:
                            count += 1
print(count)
'''
# Ответ: 1296.


# endregion Урок


# todo: Мария = [2, 5, 14], на следующем уроке: Продолжаем 8 и разбираем 12 номера