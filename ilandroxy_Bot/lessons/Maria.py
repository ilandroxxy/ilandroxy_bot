
# Домашка


# количество пятерок
'''
a = 0
x = int(input('x: '))
while x <= 5 and x > 0:  # 0 < x <= 5
    if x == 5:
        a += 1
    x = int(input('x: '))

print(a)
'''


# наименьший делитель
"""
n = int(input('n: '))

for x in range(2, n+12):
    if n % x == 0:
        print(x)
        break
"""
# Проверка числа на простоту
"""
n = int(input('n: '))
M = []
for i in range(2, n):
    if n % i == 0:
        M.append(i)
if len(M) == 0:
    print('Число простое', M)
else:
    print('Число не простое', M)
"""


'''
# следуй правилам
n = int(input('n : '))
for i in range(1 , n+1) :
    if i >= 5 and i <= 9 :
        continue
    if i >= 17 and i <= 37 :
        continue
    if i >= 78 and i <= 87 :
        continue
    print(i)
'''


# СПИСКИ
# СПИСОК это тип коллекций - list()
# 1. Поддерживает индексацию - каждый элемент списка имеет порядковый номер - индекс
# 2. Индексация начинается с нуля
# 3. list() - изменяемый тип данных, то есть элементы списка можно менять
"""
M = []  # пустой список

print(M)
M = [1, 2, 3]
# i  0  1  2

print(M[0])

M[0] = 9
print(M)

print(len(M))  # len() - выводит длину списка (кол-во элементов в нем)
"""

# Меняем элементы списка через for
'''
A = [3, 4, 5, 7, 8, 9]  # len(A) == 6
# i  0  1  2  3  4  5

# цикл for удобен для пробегания списка по индексам
for i in range(0, len(A)):  # [0, 6)  или [0, 5]
    print(f'Элемент списка A[{i}] = {A[i]}')
print()  # в функции print() есть переход на новую строку /n

# Здесь мы просто пробегаем элементы списка, х принимает их значения на себя
for x in A:
    print(x, end=" ")
print()

# Пробегая список через индексы мы можем менять элементы списка
for i in range(0, len(A)):
    A[i] = A[i] ** 2
print(A)  
'''




# Функции списков
"""
M = [3, 5, 7, 8, 5, 7, 9, 45]
print(len(M))
print(sum(M))
print(min(M))
print(max(M))
A = set(M)  # переводя список в тип данных множество (set) мы избавляемся от повторяющихся элементов
print(A, len(A))
"""


# Тип 14 № 38948
"""
# Значение выражения 4**36 + 3*4**20 + 4**15 + 2*4*7 + 49 записали в системе счисления с основанием 16.
# Сколько разных цифр встречается в этой записи?
n = 4**36 + 3*4**20 + 4**15 + 2*4*7 + 49
N = []
while n > 0:
    N.append(n % 16)
    n //= 16
N.reverse()
print(N)

A = set(N)
print(A, len(A))
"""
# Ответ: 6


# Методы списков
# Методы - это функции направленные на определенный объект/тип данных
"""
M = [3, 5, 7, 8]
print(M)
M.append(0)  # добавление элемента в конец списка
M.append(1)
M.append(1)
M.append(1)
print(M)

M.sort()  # отсортировали элементы списка по возрастанию
print(M)

M.reverse()  # перевернули список значений
print(M)

print(M.count(1))  # выводит кол-во элементов по заданному ключу в списке
print(M.index(1))  # индекс первого вхождения элемента по ключу
"""


# Split() и join()
"""
ip = '194.54.234.8'
M = ip.split('.')  # разделить по заданному знаку
print('M = ', M)

STR = '.'.join(M)  #  Если split() разбил строку на список, то join() склеил список в строку
print(STR)

A = [int(i) for i in ip.split('.')]
print('A = ', A)

A = [int(i) for i in input('Введите числа через пробелы: ').split()]  # делит через пробелы
print('A = ', A)
"""

# Списочные выражения
"""
text = 'eir'
M = [i*3 for i in text]
print(M)

M = [i for i in range(0, 10+1)]
print(M)

M = [i**2 for i in range(0, 10+1)]
print(M)

M = [i for i in range(0, 10+1) if i % 2 == 0]  # ввели в одну строку список четных элементов
print(M)
"""


# Сортировка чисел
"""
M = [int(i) for i in input().split()]
M.sort()
print(M)
M.reverse()
print(M)
"""

# todo: на следующем уроке разбираем 14, 5 номер
