# region Домашка:  **************************************************


# endregion Домашка: **************************************************




# region Урок:  **************************************************

# M = [1, 2, 3, 4, 5]  # list()
'''
# Функции
print(len(M))
print(sum(M))
print(max(M))
print(min(M))
# range()
print(int('1000', 2))
'''

# Методы (это функции направленные на определенный объект)
'''
M.append(4)  # добавляет элемент в конец списка M
print(M.count(2))
print(M.index(2))
M.reverse()
'''

'''
print(f'Документация функции len(): {len.__doc__}')
print(f'Документация функции range(): {range.__doc__}')
'''

# Тип 14 № 38948
# Значение выражения 4**36 + 3*4**20 + 4**15 + 2*4**7 + 49 записали в системе счисления с основанием 16.
# Сколько разных цифр встречается в этой записи?

def my_bin(x: int, n: int) -> str:
    '''
Функция для перевода 10-ного числа в любую n-ную систему счисления
:param x: Принимает значение 10-но числа
:param n: Принимает значение системы счисления, в которую будем переводить
:return: Возвращает число в n-ной системе счисления в виде строки
    '''
    alphabet = '0123456789abcdef'
    M = []
    while x > 0:
        M.append(alphabet[x % n])
        x //= n
    M.reverse()
    return ''.join(M)


'''
s = my_bin(4**36 + 3*4**20 + 4**15 + 2*4**7 + 49, 16)
print(s)
print(int(s, 16))

print(my_bin(8, 2))


x = 4**36 + 3*4**20 + 4**15 + 2*4**7 + 49
print(x)
M = []
while x > 0:
    M.append(x % 16)
    x //= 16
M.reverse()
print(M)

print(int('1000000030040008031', 16))
'''


# Тип 16 № 38591 i
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n)=1 при n=1;
# F(n)=n+F(n−1), если n чётно,
# F(n)=2*F(n−2), если n>1 и при этом n нечётно.
# Чему равно значение функции F(26)?
'''
def F(n):
    if n == 1:
        return 1
    if n % 2 == 0:
        return n + F(n-1)
    if n > 1 and n % 2 != 0:
        return 2 * F(n-2)

print(F(26))
'''
# Ответ: 4122


# Тип 16 № 4657 i
# Алгоритм вычисления значения функции F(n) и G(n), где n – натуральное число, задан следующими соотношениями:
# F(1) = 1
# F(n) = 2 * G(n–1) + 5 * n, при n >1
# G(1) = 1
# G(n) = F(n–1) + 2 * n, при n >1
# Чему равно значение функции F(4) + G(4)?
'''
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return 2 * G(n-1) + 5 * n

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) + 2 * n

print(F(4) + G(4))
'''
# Ответ: 89


# Тип 16 № 35905
# Обозначим через mod(a, b) остаток от деления натурального числа a на натуральное число b.
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n / 3), если n > 0 и при этом mod(n, 3) = 0;
# F(n) = mod(n, 3) + F(n − mod(n, 3)), если mod(n, 3) > 0.
#
# Назовите минимальное значение n, для которого F(n) = 9.
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 3 == 0:  # mod(n, 3) = 0
        return F(n / 3)
    if n % 3 > 0:
        return (n % 3) + F(n - (n % 3))

for n in range(0, 1000):
    if F(n) == 9:
        print(n)
        break
'''
# Ответ: 161


# Тип 16 № 47220 i
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n) = 1 при n=1;
# F(n) = n * F(n−1), если n>1.

# Чему равно значение выражения F(2023) / F(2020)?

# def F(n):
#     if n == 1:
#         return 1
#     if n > 1:
#         return n * F(n-1)
#
# print(F(2023) / F(2020))  # RecursionError: maximum recursion depth exceeded in comparison

# print(2023*2022*2021)
# Ответ: 8266912626


# (№ 5545) (К. Багдасарян)
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
# F(n) = 1, если n < 3
# F(n) = F(n – 1) + F(n – 2), если n > 2.
# Чему равно значение выражения (F(1006) – F(1004)) / F(1005)?

# F(1006) = F(1005) + F(1004)

# (F(1005) + F(1004) – F(1004)) / F(1005)
# (F(1005) + 0) / F(1005)
# (F(1005) / F(1005) = 1
# Ответ: 1


# (№ 5539) (А. Куканова)
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
# F(n) = 1, если n = 1
# F(n) = (3·n + 5)·F(n – 1), если n > 1.
# Чему равно значение выражения F(2073) / F(2070)

# F(2073) = (3*2073 + 5) * F(2072)
# F(2072) = (3*2072 + 5) * F(2071)
# F(2071) = (3*2071 + 5) * F(2070)

# print((3*2073 + 5) * (3*2072 + 5) * (3*2071 + 5))
# Ответ: 240757875872

'''
def F(n):
    if n == 1:
        return 2
    if n > 1:
        return 2 * F(n - 1)

print(F(10))
'''


# Тип 23 № 13606
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Умножить на 3
# Сколько существует программ, для которых при исходном числе 2 результатом является число 28
# и при этом траектория вычислений содержит число 14?
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b) + F(a*3, b)

print(F(2, 14) * F(14, 28))
'''

# Тип 23 № 15959
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Умножить на 3
#
# Сколько существует программ, которые преобразуют исходное число 3 в число 50
# и при этом траектория вычислений содержит число 15 и не содержит числа 33?
'''
def F(a, b):
    if a > b or a == 33:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b) + F(a*3, b)

print(F(3, 15) * F(15, 50))
'''
# Ответ: 121

# endregion Урок:  **************************************************


# todo: Кирилл = [1, 2, 4, 5, 8, 12, 13, 14+, 16, 23], на следующем уроке:
# на прошлом уроке: Поговорили про функции и прорешали 16, 23 номера.
# на следующем уроке: Разбираем 15 номер.
