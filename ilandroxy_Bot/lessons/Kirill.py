# region Домашка:  **************************************************



# endregion Домашка: **************************************************




# region Урок:  **************************************************

# Списки - тип данных коллекции list()
# У каждого элемента есть порядковый номер - index
# index-ы считаются с нуля
# Через индексы мы можем получать значения элементов списка
# Через индексы мы можем изменять элементы списка
'''
# i  0  1  2  3
M = [5, 3, 6, 7]
#-i -4 -3 -2 -1
print(M[0], M[-1])  # Способ взять первый и последний элементы списка

# Строки - тип данных переменных str()
# У каждого элемента есть порядковый номер - index
# index-ы считаются с нуля
# Через индексы мы можем получать значения элементов строки
# Нельзя изменять элементы

# i  01234
s = '536 7'
#-i -5 ..
print(s[0], s[-1])  # Способ взять первый и последний элементы строки
'''

# Работа с циклами в списках и строках
'''
M = [5, 3, 6, 7]
s = '5367'

# цикл проходящий напрямую
for x in M:  # x принимает на себя значение элемента списка
    print(x, end=' ')
print()

for x in s:  # x принимает на себя значение элемента списка
    print(x, end=' ')
print()

# функция len() - возвращает длину списка, строки, кортежа, множества, словаря (то есть кол-во элементов в нем)
# цикл проходящий через индексы
for i in range(0, len(M)):  # [0, 4)   4-ка не входит в диапазон
    print(M[i], end=' ')
print()

for i in range(0, len(s)):  # [0, 4)   4-ка не входит в диапазон
    print(s[i], end=' ')
print()

# В списке, можем менять значение элементов:
M[0] = 99
print(M)
M[0] = 33
print(M)
M[-1] = M[-1] * 10
print(M)

A = [1, 2, 3, 4, 5, 6]
print(A)
for i in range(0, len(A)):
    A[i] = A[i] ** 2
print(A)
'''

# Срезы списков и строк
'''
M = [1, 2, 3, 4, 5]
s = '12345'

print(M[1:3], s[1:3])
print(M[:3], s[:3])
print(M[3:], s[3:])
print(M[::2], s[::2])
print(M[::-1], s[::-1])  # развернули список через строки

# если все таки нам захотелось изменить строку, то на помощь приходят срезы

s = '12345'  # задача заменить тройку 
s = s[:2] + '*' + s[3:]
print(s)
'''


# Методы списков - метод это функция направленная на один определенный тип данных (объект)
'''
M = [1, 2, 3, 4]

M.append(5)
M.append(1)  # добавить новый элемент в список
M.append(3)
print(M)

print(M.count(1))  # выводит кол-во вхождений элемента в строку

print(M.index(1))  # возвращает индекс первого вхождения элемента

M.reverse()  # переворачиваем список - аналог M[::-1]
print(M)

M.sort()  # сортируем список по возрастанию
print(M)

A = [123, 12, 433, -4, 5, 65, 34, 23, 1, 23, 423, 2322, 34]
A = sorted(A, reverse=True)  # может сортировать любую коллекцию, но значение вернет в виде списка list()
print(A)
'''

# Методы строк
'''
s = '2345234234532423'

print(s.count('2'))
print(s.index('2'), s.rindex('2'))  # вывели индексы первого и последнего элемента строки - можно найти длину между двумя одинаковыми элементами строки

s = s.replace('2', '*')  # поменяет все '2' на '*'
print(s)
s = s.replace('*', '2', 3)   # поменяет первые три '*' на '2'
print(s)

s = '  SDFJWEHiw oejfmWAID jkeiwfjk   '
print(s.lower())
print(s.upper())
print(s.strip())  # удалил пробелы по бокам

ip = '192.123.23.9'
M = ip.split('.')
print('M1: ', M)

M = [int(i) for i in ip.split('.')]
print('M2: ', M)
'''

# Тип 24 № 27696
'''
# Текстовый файл состоит не более чем из 10**6 символов L, D и R.
# Определите длину самой длинной последовательности, состоящей из символов L.
# Хотя бы один символ L находится в последовательности.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

print(max([len(i) for i in open('24.txt').readline().replace('D', ' ').replace('R', ' ').split()]))

# f = open('24.txt')
# s = f.readline()
# s = s.replace('D', ' ')
# s = s.replace('R', ' ')
# M = [len(i) for i in s.split()]
# print(max(M))
'''
# Ответ: 7


# Тип 14 № 40989
'''
# Значение выражения 2*216**8 + 4*36**12 + 6**15 − 1296 записали в системе счисления с основанием 6.
# Сколько значащих нулей содержится в этой записи?
x = 2*216**8 + 4*36**12 + 6**15 - 1296
M = []
while x > 0:
    M.append(x % 6)
    x //= 6
M.reverse()
print(M.count(0))
'''
# Ответ: 14


# Тип 14 № 28552
'''
# Значение выражения 216*6 + 216*4 + 36*6 − 6*14 − 24 записали в системе счисления с основанием 6.
# Сколько различных цифр содержит эта запись?
#
# Пример. Запись 1222337 содержит три различные цифры: 1, 2 и 3.


x = 216*6 + 216*4 + 36*6 - 6*14 - 24
M = []
while x > 0:
    M.append(x % 6)
    x //= 6
M.reverse()
print(M)
print(set(M), len(set(M)))  # set() - это типа данных коллекции МНОЖЕСТВО, не может хранить в себе копии
'''
# Ответ: 4



# Тип 14 № 48394
'''
# Операнды арифметического выражения записаны в системе счисления с основаниями 15 и 13:
#
# 4Cx4_15 + x62A_13
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита десятичной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 121.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 121 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789abc':
    a = int(f'4C{x}4', 15)
    b = int(f'{x}62A', 13)

    if (a + b) % 121 == 0:
        print((a+b) // 121)
        break
'''
# Ответ: 234




# Тип 14 № 48384
'''
# Операнды арифметического выражения записаны в системах счисления с основаниями 9 и 11:
#
# 88x4y_9 + 7x44y_11
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите значения x и y, при которых значение данного арифметического выражения будет наименьшим и кратно 61.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 61 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '012345678':
    for y in '012345678':
        a = int(f'88{x}4{y}', 9)
        b = int(f'7{x}44{y}', 11)

        if (a + b) % 61 == 0:
            print((a + b) // 61)
            exit()
'''
# Ответ: 2715



# Тип 14 № 48381
'''
# Числа M и N записаны в системе счисления с основанием 14 соответственно.
#
# M = 8x12x_14, N = 8x542_14
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита четырнадцатеричной системы счисления.
# Определите наименьшее значение натурального числа A, при котором существует такой x, что M + A кратно N.

for A in range(1, 10000):
    for x in '0123456789abcd':
        M = int(f'8{x}12{x}', 14)
        N = int(f'8{x}542', 14)

        if (M + A) % N == 0:
            print(A)
            exit()
'''
# Ответ: 801

# endregion Урок:  **************************************************


# todo: Кирилл = [ ], на следующем уроке: Ответить на вопросы по 14 номеру и теории списков/строк. Если вопросов нет, то 5, 8, 12 номера