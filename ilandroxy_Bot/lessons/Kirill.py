# region Домашка:  **************************************************


# endregion Домашка: **************************************************


# region Урок:  **************************************************


# Тип 23 № 6965 i
# У исполнителя три команды, которым присвоены номера:
#
# 1. прибавь 1,
# 2. сделай чётное,
# 3. сделай нечётное.
#
# Первая из них увеличивает на 1 число x на экране, вторая умножает это число на 2, третья переводит число x в число
# 2x + 1. Например, вторая команда переводит число 10 в число 20, а третья переводит число 10 в число 21.
#
# Программа для исполнителя – это последовательность команд.
# Сколько существует программ, которые число 2 преобразуют в число 16?
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b) + F(a*2 + 1, b)

print(F(2, 16))


def F(a, b):
    if a >= b:
        return a == b
    else:
        return F(a+1, b) + F(a*2, b) + F(a*2 + 1, b)

print(F(2, 16))
'''
# Ответ: 40


# Теория перебора для 17 номера
'''
# i  0  1  2  3  4
M = [1, 2, 3, 4, 5]

# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(0, len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')
print('\n')

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(0, len(M)-2):
    print(f'{M[i]}{M[i+1]}{M[i+2]}', end=' ')
print('\n')

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
# Вариант 1
for i in range(0, len(M)):
    for j in range(0, len(M)):
        if i < j:
            print(f'{M[i]}{M[j]}', end=' ')
    print()

# Вариант 2
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        print(f'{M[i]}{M[j]}', end=' ')
    print()
'''


# Открытие .txt файлов
'''
f = open('17.txt').read()
f = open('17.txt').readline()
f = open('17.txt').readlines()
print(f)
f.close()
'''
'''
with open('17.txt', 'r') as f:
    M = [int(i) for i in f]
'''

# M = [int(i) for i in open('17.txt')]




# Тип 17 № 37357
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не
# превышает 10000. Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых сумма элементов кратна 8, затем максимальную из сумм элементов таких пар. В данной задаче под парой
# подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.
'''
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] + M[j]) % 8 == 0:
            count += 1
            if maxi < M[i] + M[j]:
                maxi = M[i] + M[j]
print(count, maxi)
'''
# Ответ: 6243772 19992


# Тип 17 № 40992
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём парой
# два идущих подряд элемента последовательности. Определите количество пар, в которых хотя бы один из двух элементов
# делится на 5 и хотя бы один из двух элементов меньше среднего арифметического всех элементов последовательности,
# значение которых нечетно. В ответе запишите два числа: сначала количество найденных пар, а затем  — максимальную
# сумму элементов таких пар.
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if i % 2 != 0]
sred = sum(A) / len(A)
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if M[i] % 5 == 0 or M[i+1] % 5 == 0:
        if M[i] < sred or M[i+1] < sred:
            count += 1
            maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# Ответ: 1531 14932.


# endregion Урок:  **************************************************


# todo: Кирилл = [1, 2, 3, 4, 5, 8, 12, 13, 14+, 15, 16, 17, 19-21, 22, 23, 25.1], на следующем уроке:
# на прошлом уроке: Разобрали задачи 17 номера
# на следующем уроке:
