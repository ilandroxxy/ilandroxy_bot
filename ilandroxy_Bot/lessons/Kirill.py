# region Домашка:  **************************************************
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число следующим образом.
# 1)Строится двоичная запись числа N.
# 2)К этой записи дописываются справа ещё два разряда по следующему правилу: если N чётное,
# в конец числа (справа) дописываются два нуля в противном случае справа дописываются две единицы.
# Например, двоичная запись 1001 числа 9 будет преобразована в 100111.
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью числа — результата работы данного алгоритма.
# Укажите максимальное число N, для которого результат работы алгоритма будет меньше 134. В ответе это число запишите в десятичной системе счисление

Result = []
for n in range(1000, 1, -1):
    s = bin(n)[2:]

    if n % 2 == 0:
        s += '00'
    else:
        s += '11'

    r = int(s, 2)

    if r < 134:
        Result.append(n)
print(max(Result))
'''
# Ответ: 128


# endregion Домашка: **************************************************




# region Урок:  **************************************************


# Тип 5 № 14692
"""
# Автомат получает на вход четырёхзначное число (число не может начинаться с нуля). По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая и вторая, вторая и третья, третья и четвёртая цифры заданного числа.
# 2. Наименьшая из полученных трёх сумм удаляется.
# 3. Оставшиеся две суммы записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 1984. Суммы: 1 + 9 = 10, 9 + 8 = 17, 8 + 4 = 12. Удаляется 10. Результат: 1217.
#
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 613.

for n in range(1000, 10000):
    M = [int(i) for i in str(n)]
    a = M[0] + M[1]
    b = M[1] + M[2]
    c = M[2] + M[3]

    # Вариант 1
    '''
    maxi = max(a, b, c)
    sred = (a+b+c) - maxi - min(a, b, c)

    r = str(sred) + str(maxi)
    '''

    # Вариант 2
    '''
    A = sorted([a, b, c])
    del A[0]

    r = str(min(A)) + str(max(A))
    '''

    # Вариант 3
    '''
    A = sorted([a, b, c])
    del A[0]
    
    r = f'{min(A)}{max(A)}'
    '''

    if r == '613':
        print(n)
"""
# Ответ: 9424


# Тип 5 № 15791
'''
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится двоичная запись числа N.
# 2. Складываются все цифры полученной двоичной записи. В конец записи (справа) дописывается остаток от деления суммы на 2.
# 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
# 4. Результат переводится в десятичную систему и выводится на экран.

# Какое наименьшее число, большее 97, может появиться на экране в результате работы автомата?

# Вариант 1
Result = []
for n in range(1, 10000):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.

    for _ in range(2):  # 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
        summ = s.count('1')  # 2. дописывается остаток от деления суммы на 2.
        s += str(summ % 2)

    r = int(s, 2)  # 4. Результат переводится в десятичную систему и выводится на экран.

    if r > 97:
        Result.append(r)
print(min(Result))

# Вариант 2
Result = []
for n in range(1, 10000):

    M = []
    while n > 0:
        M.append(n % 2)  # 1. Строится двоичная запись числа N.
        n //= 2
    M.reverse()

    for _ in range(2):   # 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
        M.append(sum(M) % 2)  # 2. дописывается остаток от деления суммы на 2.

    r = 0
    M.reverse()
    for i in range(0, len(M)):  # 4. Результат переводится в десятичную систему и выводится на экран.
        r += M[i] * 2 ** i

    if r > 97:
        Result.append(r)
print(min(Result))

# Вариант 3
def mybin(x, n):
    alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    M = []
    while x > 0:
        M.append(alphabet[x % n])  # 1. Строится двоичная запись числа N.
        x //= n
    M.reverse()
    r = ''.join(M)
    return r

Result = []
for n in range(1, 10000):
    s = mybin(n, 2)  # 1. Строится двоичная запись числа N.

    for _ in range(2):  # 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
        summ = s.count('1')  # 2. дописывается остаток от деления суммы на 2.
        s += str(summ % 2)

    r = int(s, 2)  # 4. Результат переводится в десятичную систему и выводится на экран.

    if r > 97:
        Result.append(r)
print(min(Result))
'''
# Ответ: 102







# endregion Урок:  **************************************************


# todo: Кирилл = [2, 5, 14+], на следующем уроке: Ответить на вопросы по 14 номеру и теории списков/строк. Если вопросов нет, то 5, 8, 12 номера