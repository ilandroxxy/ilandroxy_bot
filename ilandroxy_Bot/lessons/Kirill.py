 # region Домашка:  **************************************************

#№ 4565
# У исполнителя Удвоитель две команды, которым присвоены номера:
# 1.прибавь 1,
# 2.умножь на 2.
# Первая из них увеличивает на 1 число на экране, вторая удваивает его.
# Программа для Удвоителя – это последовательность команд.
# Сколько есть программ, которые число 3 преобразуют в число 23?
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b)
print(F(3, 23))
'''
# Ответ: 22

# Тип 23 № 26965
# Исполнитель преобразует число на экране. У исполнителя есть три команды, которым присвоены номера:
# 1.Прибавить 1
# 2.Прибавить 2
# 3.Умножить на 2
# Сколько существует программ, для которых при исходном числе 4 результатом является число 13, и при этом траектория вычислений содержит число 11?
'''
def F(a,b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a*2, b)
print(F(4, 11) * F(11, 13))
'''
# Ответ: 50

# Тип 23 № 4985 i
# У исполнителя Арифметик две команды, которым присвоены номера:
# 1.прибавь 1,
# 2.прибавь 3.
# Первая из них увеличивает на 1 число на экране, вторая увеличивает это число на 3.
# Программа для Арифметика — это последовательность команд.
# Сколько существует программ, которые число 7 преобразуют в число 20?
'''
def F(a,b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+3, b)
print(F(7, 20))
'''
# Ответ: 88



# №6459
# Алгоритм вычисления значения функции F(n), где n— натуральное число, задан следующими соотношениями:
# F(n) = 2 при n ≤ 2;
# F(n) = 3 × F(n − 1) − F(n − 2) при n> 2.
# Чему равно значение функции F(6)? В ответе запишите только натуральное число.
'''
def F(n):
    if n <= 2:
        return 2
    if n > 2:
        return 3 * F(n - 1) - F(n - 2)

print(F(6))
'''
# Ответ: 68

#№ 35474
#Обозначим через mod(a, b) остаток от деления натурального числа a на натуральное число b.
# Алгоритм вычисления значения функции F(n), где n— целое неотрицательное число, задан следующими соотношениями
#F(0) = 0
#F(n) = F(n / 3), если n > 0 и при этом mod(n, 3)=0;
#F(n) = mod(n, 3) + F(n − mod(n, 3)), если mod(n, 3) > 0.
#Назовите минимальное значение n, для которого F(n) = 11.
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 3 == 0:
        return F(n / 3)
    if n % 3 > 0:
        return (n % 3) + F(n - (n % 3))

for n in range(0, 1000):
    if F(n) == 11:
        print(n)
        break
'''
# Ответ: 485

# № 7372
# Тип 16 № 7372 i
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими рекуррентными соотношениями:
# F(n) = 1 при n = 1;
# F(n) = F(n − 1)·n при n ≥ 2.
# Чему равно значение функции F(6)?
# В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n - 1) * n
print(F(6))
'''
# Ответ: 720


# Тип 23 № 23920
#  У исполнителя есть две команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Умножить на 2
#
#  Сколько существует программ, для которых при исходном числе 1 результатом является число 21 и при этом траектория вычислений содержит число 10 и не содержит числа 18?
'''
def F(a, b):
    if a > b and a == 18:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b)

print(F(1, 10) * F(10, 21))
'''
# Ответ: 28

# endregion Домашка: **************************************************



# region Урок:  **************************************************

# Тип 15 № 34515 i
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
#
# Например, 14&5 = 1110_2 & 0101_2 = 0100_2 = 4.
# print(14 & 5)
#
# Для какого наименьшего неотрицательного целого числа А формула (x&41 ≠ 0) → ((x&33 = 0) → (x&А ≠ 0))
#
# тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении переменной х)?
'''
# Вариант 1
def F(x, A):
    return (x & 41 != 0) <= ((x & 33 == 0) <= (x & A != 0))

for A in range(0, 1000):
    flag = True
    for x in range(0, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break

# Вариант 2
def F(x):
    return (x & 41 != 0) <= ((x & 33 == 0) <= (x & A != 0))

for A in range(0, 1000):
    if all(F(x) for x in range(0, 1000)):
        print(A)
        break


# Вариант 3
def F(x):
    return (x & 41 != 0) <= ((x & 33 == 0) <= (x & A != 0))

R = []
for A in range(0, 1000):
    if all(F(x) for x in range(0, 1000)):
        R.append(A)
print(min(R))


# Вариант 4
R = []
for A in range(0, 1000):
    if all(((x & 41 != 0) <= ((x & 33 == 0) <= (x & A != 0))) for x in range(0, 1000)):
        R.append(A)
print(min(R))

# Вариант 5
print(min([A for A in range(0, 1000) if all(((x & 41 != 0) <= ((x & 33 == 0) <= (x & A != 0))) for x in range(0, 1000))]))
'''
# Ответ: 8


# Тип 15 № 33187 i
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наибольшего натурального числа А формула
# ДЕЛ(90, A) ∧ (¬ДЕЛ(x, А) → (ДЕЛ(x, 15) → ¬ДЕЛ(x, 20)))
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?
'''
def F(x):
    return (90 % A == 0) and ((x % A != 0) <= ((x % 15 == 0) <= (x % 20 != 0)))

for A in range(1, 1000):
    if all(F(x) for x in range(1, 1000)):
        print(A)
'''
#  Ответ: 30


# Тип 15 № 37150 i
# Для какого наибольшего целого неотрицательного числа A выражение
# (2x + y ≠ 70) ∨ (x < y) ∨ (A < x)
# тождественно истинно, то есть принимает значение 1 при любых целых неотрицательных x и y?
'''
def F(x, y):
    return (2*x + y != 70) or (x < y) or (A < x)

for A in range(0, 1000):
    if all(F(x, y) for x in range(0, 100) for y in range(0, 100)):
        print(A)
'''

'''
for A in range(100, -1, -1):
    if all((2*x+y != 70) or (x < y) or (A < x) for x in range(100) for y in range(100)):
        print(A)
        break
'''
# Ответ: 23


# Тип 15 № 34543 i
# На числовой прямой даны два отрезка: P = [3, 13] и Q = [12, 22].
# Какова наибольшая возможная длина интервала A, что формула
#
# ((х ∈ A) → (х ∈ Р)) ∨ (х ∈ Q)
#
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x):
    P = 3 <= x <= 13
    Q = 12 <= x <= 22
    A = a1 <= x <= a2
    return (A <= P) or Q
    # return ((a1 <= x <= a2) <= (3 <= x <= 13)) or (12 <= x <= 22)

R = []
M = [i for i in range(0, 25)]
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(max(R))
'''


# Тип 15 № 7763 i
# На числовой прямой даны два отрезка: P = [5, 30] и Q = [14, 23]. Укажите наибольшую возможную длину промежутка A, для которого формула
#
# ((x ∈ P) ≡ (x ∈ Q)) → ¬(x ∈ A)
#
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.

'''
def F(x):
    P = 5 <= x <= 30
    Q = 14 <= x <= 23
    A = a1 <= x <= a2
    return (P == Q) <= (not A)


R = []
M = [i/4 for i in range(0*4, 35*4)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(max(R))
'''
# Ответ: 9  (округляем)

# endregion Урок:  **************************************************


# todo: Кирилл = [1, 2, 4, 5, 8, 12, 13, 14+, 15, 16, 23], на следующем уроке:
# на прошлом уроке: Разобрали все 15 номера, в том числе и на отрезки, плюс решение в одну строку.
# на следующем уроке: