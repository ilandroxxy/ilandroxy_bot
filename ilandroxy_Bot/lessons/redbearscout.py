# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Цикл - какое-либо повторяющееся действие

# for - отвечает на запросы: "повтори n раз", "пробеги от а до в"
'''
# повтори 10 раз
for i in range(10):  # range(START=0, STOP=10-1, STEP=1)
    print(i, end=' ')  # 0 1 2 3 4 5 6 7 8 9
print()

for i in range(2, 10):  # range(START=2, STOP=10-1, STEP=1)
    print(i, end=' ')  # 2 3 4 5 6 7 8 9
print()

for i in range(2, 10, 2):  # range(START=2, STOP=10-1, STEP=2)
    print(i, end=' ')  # 2 4 6 8
print()

for i in range(2, 10+1, 2):  # range(START=2, STOP=11-1, STEP=2)
    print(i, end=' ')  # 2 4 6 8 10
print()

for i in range(10, 1, -1):  # range(START=10, STOP=1-1, STEP=1)
    print(i, end=' ')  # 10 9 8 7 6 5 4 3 2
print()
'''


# Как работает цикл for с списками:
'''
# i  0  1  2  3  4
M = [1, 2, 3, 4, 5]

print(len(M))  # Возвращает длину списка (кол-во элементов в нем) (5)

for x in M:
    print(x, end=' ')  # 1 2 3 4 5
print()

# Это удобный способ просеивать элементы
for x in M:
    if x % 2 == 0:
        print(x, end=' ')  # 2 4 
print()


for i in range(len(M)):  # range(START=0, STOP=5-1, STEP=1)
    # print(i, end=' ')  # 0 1 2 3 4
    print(M[i], end=' ')  # 1 2 3 4 5
print()

# Через индексы мы можем изменять элементы списков
for i in range(len(M)):  # range(START=0, STOP=5-1, STEP=1)
    M[i] = M[i] ** 2
print(M)  # [1, 4, 9, 16, 25]
'''

# Решим задачку:
# Напишите программу, которая принимает два натуральных числа a и b (a≤b)
# и выводит все целые числа от a до b включительно, удовлетворяющие хотя бы одному из условий:
#
# число кратно 73
# число кратно 15 и 25 одновременно
# число оканчивается на 3.
'''
a = int(input())
b = int(input())

for i in range(a, b+1):
    if i % 73 == 0 or (i % 15 == 0 and i % 25 == 0) or i % 10 == 3:
        print(i)
'''


# while - отвечает на запросы: "повторяй пока выполняется условие", "бесконечные циклы"
'''
for i in range(2, 10+1, 2):  # range(START=2, STOP=11-1, STEP=2)
    print(i, end=' ')  # 2 4 6 8 10
print()

i = 2
while i <= 10:
    print(i, end=' ')  # 2 4 6 8 10 
    i += 2
'''


# Перевод из 10-ной в 2-ную систему счисления
'''
x = 8
n = 2
ostat = []
while x > 0:
    ostat.append(x % n)  # добавили новый элемент в конец списка
    x //= n
ostat.reverse()  # развернули список
print(*ostat)  # 1 0 0 0
'''


# Бесконечные циклы
'''
import random
import time

pas = 'qwerty'
count = 0
password = input('Введите пароль от вашего аккаунта: ')
while True:
    if pas == password:
        print('Welcome')
        break
    count += 1
    if count == 3:
        a = random.randint(-100, 100)
        b = random.randint(-100, 100)
        x = int(input(f'Пройдите проверку на робота, решив пример: {a} + {b} = '))
        if x == a + b:
            count = 0
            print('Проверка пройдена успешно')
        else:
            print('Попробуйте повторить попытку через 5 минут')
            time.sleep(5*60)

    password = input('Неверный пароль, повторите попытку: ')


print('Попали в программу ')
'''

# Решим задачку
# Дано натуральное число n.
# Напишите программу, которая определяет его максимальную и минимальную цифры.

# 3267 // 10 = 326
# 3267 % 10 = 7
num = int(input())
nums = []  # сюда будем складывать цифры числа
while num > 0:
    nums.append(num % 10)
    num //= 10
print(max(nums))
print(min(nums))

# 1234567890
# 123456789 [0]
# 12345678 [0, 9]
# 1234567 [0, 9, 8]
# 123456 [0, 9, 8, 7]
# 12345 [0, 9, 8, 7, 6]
# 1234 [0, 9, 8, 7, 6, 5]
# 123 [0, 9, 8, 7, 6, 5, 4]
# 12 [0, 9, 8, 7, 6, 5, 4, 3]
# 1 [0, 9, 8, 7, 6, 5, 4, 3, 2]
# 0 [0, 9, 8, 7, 6, 5, 4, 3, 2, 1]



# endregion Урок: ******************************************************************


# Тимур = []
# КЕГЭ  = []
# на следующем уроке:
