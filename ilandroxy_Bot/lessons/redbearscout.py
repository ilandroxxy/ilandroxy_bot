# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 16 №5970
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n) = 1 при n ≤ 2;
# F(n) = F(n − 1) + 3·F(n − 2) при n > 2.
# Чему равно значение функции F(7)? В ответе запишите только натуральное число.
'''
def F(n):
    if n <= 2:
        return 1
    if n > 2:
        return F(n - 1) + 3 * F(n - 2)

print(F(7))
'''
# Ответ: 97


# Тип 16 №38591
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n) = 1 при n = 1;
# F(n) = n + F(n − 1), если n чётно,
# F(n) = 2 × F(n − 2), если n > 1 и при этом n нечётно.
#
# Чему равно значение функции F(26)?
'''
def F(n):
    if n == 1:
        return 1
    if n % 2 == 0:
        return n + F(n - 1)
    if n > 1 and n % 2 != 0:
        return 2 * F(n - 2)

print(F(26))
'''
# Ответ: 4122


# Тип 16 №36871
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 1000 и F(n) = 3?

'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)


cnt = 0
for n in range(1, 1000+1):
    if F(n) == 3:
        cnt += 1
print(cnt)
'''

import sys
sys.setrecursionlimit(10000)


# Тип 16 №59721
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n) = n, если n = 1;
# F(n) = n − 1 + F(n − 1), если n > 1.
#
# Чему равно значение выражения F(2024) − F(2022)?
'''
# F(2024) = 2023 + F(2023)
# F(2023) = 2022 + F(2022) − F(2022)

print(2023 + 2022)
'''
# Ответ: 4045

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# todo Тип 12 №48433 Тимур
#     ПОКА НЕ нашлось (00)
#         заменить (011, 20)
#         заменить (022, 10)
#         заменить (01, 220)
#         заменить (02, 110)

# Известно, что исходная строка A содержала ровно два нуля — на первом
# и на последнем месте, а также поровну единиц и двоек.
# После выполнения данной программы получилась строка B,
# содержащая 40 единиц и больше 50 двоек.
# Какое наименьшее количество двоек может быть в строке B?
'''
for n in range(0, 2000):
    s = '0' + '1' * n + '2' * n + '0'
    while '00' not in s:
        s = s.replace('011', '20', 1)
        s = s.replace('022', '10', 1)
        s = s.replace('01', '220', 1)
        s = s.replace('02', '110', 1)
    if s.count('1') == 40 and s.count('2') > 50:
        print(s)
'''

# endregion Разобрать: *************************************************************


# Тимур = [2, 5, 6, 8, 12, 14]
# КЕГЭ  = []
# на следующем уроке:
