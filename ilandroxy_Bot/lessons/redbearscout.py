# region Домашка: ******************************************************************

# КЕГЭ № 8954 Джобс 02.06.2023 (Уровень: Базовый) (Е. Джобс)
# В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от 1 до 10 000 включительно.
# Определите количество пар последовательности, в которых только одно число кратно 7,
# а сумма элементов пары кратна максимальному элементу последовательности,
# оканчивающемуся на 0F в шестнадцатеричной системе счисления.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
R = []
M = [int(x) for x in open('17.txt')]
A = [x for x in M if hex(x)[-2:] == '0f']  # оканчивающемуся на 0F в шестнадцатеричной системе счисления
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (abs(x) % 7 == 0) != (abs(y) % 7 == 0):
        if (x + y) % max(A) == 0:
            R.append(x + y)
print(len(R), max(R))
'''


# КЕГЭ № 4414 (Уровень: Базовый)
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых разность элементов кратна 36 и хотя бы один из элементов кратен 13,
# затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
R = []
M = [int(x) for x in open('17.txt')]
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x - y) % 36 == 0:  # у которых разность элементов кратна 36
            if x % 13 == 0 or y % 13 == 0:  # и хотя бы один из элементов кратен 13
                R.append(x - y)
print(len(R), max(R))
'''
# Ответ: 212587 9972


# КЕГЭ № 6696 (Уровень: Базовый) (Д. Статный)
# В файле содержится последовательность целых чисел.
# Найдите такие тройки элементов, сумма которых кратна 2022 и хотя бы одно из чисел неотрицательно.
# В ответ запишите сначала количество таких троек, а затем – максимальную сумму элементов таких троек.
# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if (x + y + z) % 2022 == 0:
        if x > 0 or y > 0 or z > 0:
            R.append(x + y + z)
print(len(R), max(R))
'''
# Ответ: 7 76836

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 9 №52180
# В каждой строке электронной таблицы записаны пять натуральных чисел.
# Определите, сколько в таблице строк, для которых выполнены следующие условия:
# — все числа в строке различны;
# — чётных чисел больше, чем нечётных;
# — сумма чётных чисел меньше суммы нечётных.
# В ответе запишите число — количество строк, для которых выполнены эти условия.
'''
cnt = 0
for s in open('9.txt'):  # пробегаем каждую строчку файла
    M = [int(x) for x in s.split()]  # каждую строку разбиваем по пробелам и берем числа в int() виде
    if len(M) == len(set(M)):  # все числа в строке различны;
        chet = [x for x in M if x % 2 == 0]
        nechet = [x for x in M if x % 2 != 0]
        if len(chet) > len(nechet):  # — чётных чисел больше, чем нечётных;
            if sum(chet) < sum(nechet):  # — сумма чётных чисел меньше суммы нечётных.
                cnt += 1
print(cnt)
'''


# Тип 9 №59834
# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# — в строке есть только два равных числа, остальные 4 различны;
# — сумма повторяющихся чисел меньше чем среднее арифметическое остальных чисел строки.
# В ответе запишите только число.
'''
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    # [19, 87, 175, 105, 105, 289]
    if len(set(M)) == 5:
        copied = [x for x in M if M.count(x) > 1]
        not_copied = [x for x in M if M.count(x) == 1]
        if sum(copied) < sum(not_copied) / 4:
            cnt += 1
print(cnt)
'''
# Ответ: 613


# Тип 9 №56509
# В каждой строке электронной таблицы записаны шесть натуральных чисел.
# Определите, сколько в таблице строк, для которых выполнены следующие условия:
# — в строке есть как повторяющиеся, так и неповторяющиеся числа;
# — среднее арифметическое всех неповторяющихся чисел строки больше,
# чем среднее арифметическое всех повторяющихся чисел этой строки.
'''
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(M) != len(set(M)):  # — в строке есть как повторяющиеся, так и неповторяющиеся числа;
        copied = [x for x in M if M.count(x) > 1]
        not_copied = [x for x in M if M.count(x) == 1]
        try:
            if sum(not_copied) / len(not_copied) > sum(copied) / len(copied):
                cnt += 1
        except ZeroDivisionError:
            continue
print(cnt)

# if len(B) > 0 and len(A) > 0:
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(M) != len(set(M)):  # — в строке есть как повторяющиеся, так и неповторяющиеся числа;
        copied = [x for x in M if M.count(x) > 1]
        not_copied = [x for x in M if M.count(x) == 1]
        if len(copied) > 0 and len(not_copied) > 0:
            if sum(not_copied) / len(not_copied) > sum(copied) / len(copied):
                cnt += 1
print(cnt)
'''

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Тимур = [2, 5, 6, 8, 9, 12, 14, 15, 16, 17, 23]
# КЕГЭ  = []
# на следующем уроке:
