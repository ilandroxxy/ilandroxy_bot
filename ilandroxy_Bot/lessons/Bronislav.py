# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************

# Тип 15 № 18630
# Для какого наименьшего целого неотрицательного числа A выражение
# (3m + 4n > 63) ∨ ((m ≤ A) ∧ (n < A))
# тождественно истинно при любых целых неотрицательных m и n?
'''
# Вариант 1
def F(m, n, A):
    return (3*m + 4*n > 63) or ((m <= A) and (n < A))

for A in range(0, 10000):
    flag = True
    for m in range(0, 100):
        for n in range(0, 100):
            if F(m, n, A) == False:
                flag = False
                break
    if flag == True:
        print(A)
        break

# Вариант 2
def F(m, n, A):
    return (3*m + 4*n > 63) or ((m <= A) and (n < A))

for A in range(0, 10000):
    if all(F(m, n, A) for m in range(0, 100) for n in range(0, 100)):
        print(A)
        break

# Вариант 3
print(min([A for A in range(0, 1000) if all(((3*m + 4*n > 63) or ((m <= A) and (n < A))) for m in range(0, 100) for n in range(0, 100))]))
'''
# Ответ: 21



# Тип 15 № 35473
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
#
# Для какого наименьшего натурального числа А формула
#
# ДЕЛ(A, 45) ∧ (ДЕЛ(750, x) → (¬ДЕЛ(A, x) → ¬ДЕЛ(120, x)))
#
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?
'''
def F(x, A):
    return (A % 45 == 0) and ((750 % x == 0) <= ((A % x != 0) <= (120 % x != 0)))

for A in range(1, 10000):
    if all(F(x, A) for x in range(1, 1000)):
        print(A)
        break

def F(x, A):
    B = A % 45 == 0
    C = 750 % x == 0
    D = A % x != 0
    E = 120 % x != 0
    return B and (C <= (D <= E))

for A in range(1, 10000):
    if all(F(x, A) for x in range(1, 1000)):
        print(A)
        break
'''
# Ответ: 90

# Тип 15 №  34519
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Например, 14&5 = 11102&01012 = 01002 = 4. Для какого наименьшего неотрицательного целого числа А формула
#
# x&9 = 0 → (x&19 ≠ 0 → x&А ≠ 0)
#
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной х)?
'''
def F(x, A):
    return (x&9 == 0) <= ((x&19 != 0) <= (x&A != 0))

for A in range(0, 10000):
    if all(F(x, A) for x in range(0, 1000)):
        print(A)
        break
    '''
# Ответ: 18


# Тип 15 № 34539
# На числовой прямой даны два отрезка: Р = [22, 72] и Q = [42, 102].
# Какова наименьшая возможная длина интервала A, что логическое выражение
#
# ¬(¬(х ∈ А) ∧ (х ∈ Р)) ∨ (х ∈ Q)
#
# тождественно истинно, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x, a1, a2):
    P = 22 <= x <= 72
    Q = 42 <= x <= 102
    A = a1 <= x <= a2
    return (not((not A) and P)) or Q

R = []
M = [i/4 for i in range(10*4, 110*4)]
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(min(R))  # 19.75
'''
# Ответ: 20


# Тип 16 № 47220
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:

# F(n)=1 при n = 1;
# F(n)= n * F(n - 1), если n > 1.
#
# Чему равно значение выражения F(2023) / F(2020)?

# F(2023) = 2023 * F(2022)
# F(2022) = 2022 * F(2021)
# F(2021) = 2021 * F(2020)   /   F(2020)
'''
print(2023 * 2022 * 2021)
'''
# 8266912626



# Тип 9 № 58321
# Откройте файл электронной таблицы, содержащей в каждой строке четыре натуральных числа.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
#
# — наименьшее из четырёх чисел более чем в шесть раз меньше суммы трёх других;
# — произведение наибольшего и наименьшего числа больше произведения оставшихся чисел.
#
# В ответе запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])

    if (6 * M[0]) < (M[1] + M[2] + M[3]):
        if (M[3] * M[0]) > (M[1] * M[2]):
            count += 1
print(count)
'''


#
# № 8467 (Уровень: Средний)
# (В. Рыбальченко) В каждой строке файла содержится 5 натуральных чисел.
# Необходимо посчитать количество строк, в которых выполняется только одно условие из:
# – Все числа различны;
# – Удвоенная сумма максимального и минимального меньше суммы трех оставшихся чисел.
# В ответ запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    flag1 = False
    flag2 = False
    if len(set(M)) == len(M):  # – Все числа различны;
        flag1 = True
    if 2 * (M[4] + M[0]) < (M[1] + M[2] + M[3]):
        flag2 = True
    if flag2 + flag1 == 1:
        count += 1
print(count)
'''
# Ответ: 4720


# № 6897 OpenFIPI (Уровень: Средний)
# Откройте файл электронной таблицы, содержащей в каждой строке четыре натуральных числа.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
#
# – наибольшее из четырёх чисел меньше суммы трёх других;
# – четыре числа нельзя разбить на две пары чисел с равными суммами.
'''
import itertools
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    if M[3] < (M[0] + M[1] + M[2]):  # – наибольшее из четырёх чисел меньше суммы трёх других;
        if all(A[0] + A[1] != A[2] + A[3] for A in itertools.permutations(M, 4)):
            count += 1
print(count)
'''
# Ответ: 2396


# endregion Урок:  ******************************************************************************

# todo: Бронислав = [1-, 2, 3, 4, 5, 6-, 8, 9, 10, 12, 14, 15, 16, 18-, 19-21-, 22-, 23]
# todo:   КЕГЭ    = []
# на прошлом уроке: Разобрали все 15 номера (всех типов) и 9 номера со строками
# на следующем уроке: #todo: разобрать Тип 9 № 58321, не сходится с ответом. И задачи с float()
