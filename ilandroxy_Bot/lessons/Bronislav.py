# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************

# Тип 2 № 39231
# Логическая функция F задаётся выражением (¬z ≡ y) → ((w ∧ ¬x) ≡ (y ∧ x)).
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F,
# содержащий неповторяющиеся строки. Определите, какому столбцу таблицы истинности функции
# F соответствует каждая из переменных x, y, z, w.
'''
print('x y z w')
for x in range(2):
    for y in (0, 1):
        for z in [0, 1]:
            for w in range(2):
                # F = ((not z) == y) <= ((w and (not x)) == (y and x))   # 39231
                # F = ((not(z == w)) <= (w and (not x))) or (x and (not y))     # 33747
                F = (x and (not y)) or (x == z) or (not w)   # 25832
                if F == False:
                    print(x, y, z, w)
'''


# Тип 2 № 48423
# Логическая функция F задаётся выражением:
# (x → (y ≡ w)) ∧ (y ≡ (w → z)).
#
# Дан частично заполненный фрагмент, содержащий неповторяющиеся строки таблицы истинности функции F.
# Определите, какому столбцу таблицы истинности соответствует каждая из переменных x, y, z, w.
'''
print('x y z w F')
for x in range(2):
    for y in (0, 1):
        for z in [0, 1]:
            for w in range(2):
                F = (x <= (y == w)) and (y == (w <= z))
                print(x, y, z, w, F)
'''

'''
a = 7
b = 2
print(a / b)  # 3.5 обычное вещественное деление
print(a // b)  # 3 целочисленное деление (берет только целую часть) 
print(a % b)  # 1 остаток от деления (числитель от дроби)
'''



# № 8493 Апробация 17.05 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число N делится на 3, то к этой записи дописываются три последние двоичные цифры;
# б) если число N на 3 не делится, то остаток от деления умножается на 3,
# переводится в двоичную запись и дописывается в конец числа.
# Полученная таким образом запись является двоичной записью искомого числа R.
# 3. Результат переводится в десятичную систему и выводится на экран.

# Укажите максимальное число N, после обработки которого с помощью этого алгоритма получается число R, меньшее чем 76.

# Вариант 1 решение через списки list()

def mybin(x):
    M = []
    while x > 0:
        M.append(x % 2)
        x //= 2  # x = x // 2  (одинаковые записи)
    M.reverse()
    return M

for n in range(1, 1000):

    M = mybin(n)

    if n % 3 == 0:  #  если число N делится на 3
        M += M[-3:]
    else:
        M += mybin((n % 3) * 3)







# Показать ответ: 16

# endregion Урок:  ******************************************************************************

# todo: Бронислав = [1-, 2, 3, 4, 5-, 6-, 10, 18-, 19-21-, 22-, 23-]
# todo:   КЕГЭ    = []
# на прошлом уроке: Плотно прошлись по 2 номера и при разборе 5 номеров у меня прервали интернет сеть. Урок сорвался.
# на следующем уроке:
