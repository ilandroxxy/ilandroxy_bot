# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************

# region Все про комментарии в Python
# - однострочный комментарий

'''
многострочный комментарий
'''
# endregion


'''
X = 5
# Типы данных переменных

a = 5  # int (integer) - целочисленные данные

b = 5.0  # float (число с плавающей точкой)
print(a / 2, type(a / 2))

c = '5'  # str (string) - строковый тип данных: буквы, символы, текст, пунктуация и тд
print(a * 4, c * 4)  # 20 '5555'
print(c + 'abc')  # 5abc - склеивание

d1 = True   # bool (boolean)
d2 = False

# Типы данных коллекций

# i  0  1  2
A = [1, 2, 3]  # list (список)

B = (1, 2, 3)  # tuple (кортеж)

C = {1, 2, 3}  # set (множество) - не может хранить копии элемента

D = {1: 'один', 2: "два", 3: "три", 'четыре': 4}  # dict (словарь)
# доступ к значению элемента словаря осуществляется через его ключ
print(D['четыре'])

M = [5, 5.6, '5', True, 3+4, 7/2, '3' * 4, 4 < 10, [1, 2, 3], (1, 2, 3), {1, 2, 3}, {1: 'один', 2: "два", 3: "три"}]
for x in M:
    print(x, type(x))
 '''
# 5 <class 'int'>
# 5.6 <class 'float'>
# 5 <class 'str'>
# True <class 'bool'>
# 7 <class 'int'>
# 3.5 <class 'float'>
# 3333 <class 'str'>
# True <class 'bool'>
# [1, 2, 3] <class 'list'>
# (1, 2, 3) <class 'tuple'>
# {1, 2, 3} <class 'set'>
# {1: 'один', 2: 'два', 3: 'три'} <class 'dict'>


# Типы данных можно конвертировать
'''
a = 5
print(a, type(a))

a = str(a)
print(a, type(a))

a = float(a)
print(a, type(a))

a = int(a)  # ValueError: invalid literal for int() with base 10: '5.0'
print(a, type(a))

A = [1, 2, 3]
print(A, type(A))

A = tuple(A)
print(A, type(A))

A = set(A)
print(A, type(A))

A = list(A)
print(A, type(A))
'''
# Простой пример, где может пригодится конвертация данных
'''
s = '34 23 23 54 78 34 23 4'
M = [int(i) for i in s.split()]  # ['34', '23', '23', '54', '78', '34', '23', '4']
if len(M) == len(set(M)):
    print(True)
else:
    print(False)
print(M)
'''

# Ввод значения с клавиатуры
'''
a = int(input('a: '))  # функция ввод значения с клавиатуры (в базовой форме - ввод строки)
s = input('Введите знак операции: ')
b = int(input('b: '))
if s == '+':
    print(a + b)
elif s == '-':
    print(a - b)
 '''

# Редактирование текстовых строк в функции print()
'''
weather = 'облачно'
temperature = int(input('Введите температуру: '))
# Сегодня отличная погода! Так облачно, а температура 24 градуса.
print('Сегодня отличная погода! Так', weather, ', а температура', temperature, ' градуса.')
print('Сегодня отличная погода! Так ' + weather + ', а температура ' + str(temperature) + ' градуса.')
print('Сегодня отличная погода! Так {}, а температура {} градуса.'.format(weather, temperature))
print(f'Сегодня отличная погода! Так {weather}, а температура {temperature} градуса.')
'''

# if - если, elif - иначе если, else - иначе

# Условные операторы
'''
x = int(input('x: '))
y = int(input('y: '))

if x > 0 and y > 0:  # and - гарантирует, что все условия выполняются
    print('Первая четверть')
elif x < 0 and y > 0:
    print('Вторая четверть')
elif x < 0 and y < 0:
    print('Третья четверть')
elif x > 0 and y < 0:
    print('Четвертая четверть')
else:
    print('Точка лежит оси')
   '''

# Каскадные условные операторы:
'''
if x > 0:
    if y > 0:  # x > 0, y > 0
        print('Первая четверть')
    else:   # x > 0, y <= 0
        print('Четвертая четверть')
else:
    if y > 0:  # x <= 0, y > 0
        print('Вторая четверть')
    else:  # x <= 0, y <= 0
        print('Третья четверть')
'''

# циклы for: повтори n раз, пробеги коллекцию, пробеги коллекцию по ее индексам
'''
# Повтори действие 5 раз
for _ in range(5):
    print('Hello')

# i  0  1  2  3  4   5
M = [4, 5, 6, 3, 8, 10]
# i -6 -5 -4 -3 -2 -1

for x in M:  # Цикл пробегает список напрямую по его значениям
    print(x)

for i in range(0, len(M)):  # пробежали список по его индексам
    print(i, M[i])

for i in range(5):  # [0, 5)  # range(START=0, STOP, STEP=1)      
    print(i)

for i in range(2, 5):  # [2, 5) # range(START, STOP, STEP=1)
    print(i)

for i in range(2, 10, 2):  # [2, 4, 6, 8] # range(START, STOP, STEP)
    print(i)
'''


# Цикл while - цикл с условием. Тело цикла выполняется, только если условие истинно!
'''
for i in range(0, 10+1, 2):
    print(i)

i = 0
while i <= 10:  # будет исполняться, пока i <= 10
    print(i)
    i += 2

count = 1
while True:  # способ запустить бесконечный цикл
    count += 1
    print(count)
'''


# Тип 2 № 15970
# Логическая функция F задаётся выражением (x ∧ ¬y) ∨ (y ≡ z ) ∨ w.
#
# Дан частично заполненный фрагмент, содержащий неповторяющиеся строки таблицы истинности функции F.
#
# Определите, какому столбцу таблицы истинности соответствует каждая из переменных x, y, z, w.

# Как формулу математической логики перенести на язык Python:
# ¬z  - (not z)   отрицание
#  ∧  -  and          конъюнкция
#  ∨  -  or              дизъюнкция
#  →  -  <=            импликация
#  ≡  -  ==             тождество
#
# Приоритет операций:
# отрицание > конъюнкция > дизъюнкция > импликация


print('x y z w')
for x in range(2):   # [0, 2) -> 0, 1
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (x and (not y)) or (y == z) or w
                # if not(F):
                if F == False:
                    print(x, y, z, w)


# endregion Урок:  ******************************************************************************

# todo: Бронислав = [1-, 3, 4, 5-, 6-, 10, 18-, 19-21-, 22-, 23-]
# todo:   КЕГЭ    = []
# на прошлом уроке: Обсудили базову теорию языка: Типы данных, условные операторы и циклы. Посмотрели решение 2 номера - 1 пример.
# на следующем уроке:
