# region Домашка:  ******************************************************************************



# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************


# № 8493 Апробация 17.05 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число N делится на 3, то к этой записи дописываются три последние двоичные цифры;
# б) если число N на 3 не делится, то остаток от деления умножается на 3,
# переводится в двоичную запись и дописывается в конец числа.
# Полученная таким образом запись является двоичной записью искомого числа R.
# 3. Результат переводится в десятичную систему и выводится на экран.

# Укажите максимальное число N, после обработки которого с помощью этого алгоритма получается число R, меньшее чем 76.

# Вариант 1 решение через списки list()
'''
def mybin(x):
    M = []
    while x > 0:
        M.append(x % 2)
        x //= 2  # x = x // 2  (одинаковые записи)
    M.reverse()
    return M

for n in range(1, 1000):

    M = mybin(n)

    if n % 3 == 0:  #  если число N делится на 3
        M += M[-3:]
    else:
        M += mybin((n % 3) * 3)

    r = 0
    M.reverse()
    for i in range(0, len(M)):
        r += M[i] * 2 ** i

    if r < 76:
        print(n)
'''

# Вариант 2 решение через строки
'''
for n in range(1, 1000):
    s = bin(n)[2:]   # 0b-1111100111

    if n % 3 == 0:
        s += s[-3:]
    else:
        s += bin((n % 3) * 3)[2:]

    r = int(s, 2)

    if r < 76:
        print(n)
'''
# Показать ответ: 16


#
# № 7026 Danov2303 (Уровень: Базовый)
# (А.Богданов) На вход алгоритма подается натуральное число N. Алгоритм строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа еще несколько разрядов по следующему правилу:
# а) если N четное, то к нему справа приписываются два нуля, а слева единица;
# б) если N нечетное, то к нему справа приписывается в двоичном виде сумма цифр его двоичной записи;
#
# Полученная таким образом запись (в ней как минимум на один разряд больше,
# чем в записи исходного числа N) является двоичной записью искомого числа R.
#
# Например, исходное число 410=1002 преобразуется число 110002 = 4810,
# а исходное число 1310 = 11012 преобразуется в число 1101112 = 5510.
#
# Укажите такое число N большее 8, для которого число R является наименьшим среди чисел,
# превышающих 88. В ответе это число запишите в десятичной системе счисления.
'''
R = []
for n in range(9, 1000):
    s = bin(n)[2:]

    if n % 2 == 0:
        s = '1' + s + '00'
    else:
        summ = sum([int(i) for i in s if i.isdigit()])
        s = s + bin(s.count('1'))[2:]  # к нему справа приписывается в двоичном виде сумма цифр его двоичной записи
    r = int(s, 2)
    if r > 88:
        R.append([r, n])
print(*min(R))
'''
# Показать ответ: 25


# № 6995 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится двоичная запись числа N.
# 2) К этой записи дописываются ещё несколько разрядов по следующему правилу:
# инвертируется последняя цифра двоичной записи числа N  (0 заменяется на 1, 1 заменяется на 0)
# 3) Затем складываются все цифры полученной двоичной записи, и остаток
# от деления суммы на 2 дописывается в конец числа (справа).
# 4) Результат переводится в десятичную систему и выводится на экран.
#
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
# является двоичной записью искомого числа R.
#
# Пример. Дано число N = 13. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 1101.
# 2. Последняя цифра 1 заменяется на 0: 1100
# 3. Дописывается бит четности: 11000
# 4. На экран выводится число 24.
#
# Укажите число N, после обработки, которого с помощью данного алгоритма получается минимальное значение R, большее 78.
# В ответе запишите это число в десятичной системе счисления.
'''
R = []
for n in range(1, 1000):
    s = bin(n)[2:]

    if s[-1] == '0':
        s = s[:-1] + '1'
    else:
        s = s[:-1] + '0'

    s += str(s.count('1') % 2)

    r = int(s, 2)
    if r > 78:
        R.append([r, n])
print(min(R))
'''
# Показать ответ: 41


# Тип 5 № 29113
# Автомат обрабатывает натуральное число N (128 ≤ N ≤ 255) по следующему алгоритму:
#
# 1. Строится восьмибитная двоичная запись числа N.
# 2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3. Полученное число переводится в десятичную запись.
# 4. Из исходного числа вычитается полученное, разность выводится на экран.
#
# Пример. Дано число N = 131. Алгоритм работает следующим образом:
# 1. Восьмибитная двоичная запись числа N: 10000011.
# 2. Все цифры заменяются на противоположные, новая запись: 01111100.
# 3. Десятичное значение полученного числа: 124.
# 4. На экран выводится число: 131 – 124 = 7.

# Какое число нужно ввести в автомат, чтобы в результате получилось 185?
'''
for n in range(128, 255+1):
    s = bin(n)[2:]

    # r = ''
    # for i in s:
    #     if i == '1':
    #         r += '0'
    #     else:
    #         r += '1'

    s = s.replace('0', '*')
    s = s.replace('1', '0')
    s = s.replace('*', '1')

    r = int(s, 2)

    res = n - r

    if res == 185:
        print(n)
'''
# Ответ: 220


# Тип 8 № 17374
# Полина составляет 6-буквенные коды из букв П, О, Л, И, Н, А.
# Каждую букву нужно использовать ровно 1 раз, при этом нельзя ставить подряд две гласные или две согласные.
# Сколько различных кодов может составить Полина?
'''
s = sorted('ПОЛИНА')
s1 = 'ПЛН'
s2 = 'ОИА'
count = 0
for a in s1:
    for b in s2:
        for c in s1:
            for d in s2:
                for e in s1:
                    for f in s2:
                        slovo = a + b + c + d + e + f
                        if len(slovo) == len(set(slovo)):  # # Каждую букву нужно использовать ровно 1 раз
                            count += 1
                            print(slovo)
print(count * 2)


s = sorted('ПОЛИНА')
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        if len(slovo) == len(set(slovo)):  # # Каждую букву нужно использовать ровно 1 раз
                            if all(x not in slovo for x in 'ПП ПН НП ЛП ПЛ НН НЛ ЛН ЛЛ ОО ОА АО ИО ИИ ОИ АИ ИА АА'.split()):
                                count += 1
                                print(slovo)
print(count)

print('ПП ПН НП ЛП ПЛ НН НЛ ЛН ЛЛ ОО ОА АО ИО ИИ ОИ АИ ИА АА'.split())

import itertools as it
pairs = []
for p in it.product('ПОЛИНА', repeat=2):
    if (p[0] in 'НПЛ' and p[1] in 'НПЛ') or (p[0] in 'АОИ' and p[1] in 'АОИ'):
        pair = ''.join(p)
        pairs.append(pair)

count = 0
for s in it.permutations('ПОЛИНА', 6):
    slovo = ''.join(s)
    if len(slovo) == len(set(slovo)):  # # Каждую букву нужно использовать ровно 1 раз
        if all(x not in slovo for x in pairs):
            count += 1
print(count)
'''

# Тип 8 № 3194
# Все 5-буквенные слова, составленные из букв А, О, У, записаны в алфавитном порядке. Вот начало списка:
#
# 1. ААААА
# 2. ААААО
# 3. ААААУ
# 4. АААОА
#
# Запишите слово, которое стоит на 101-м месте от начала списка.
'''
s = sorted('АОУ')
i = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if i == 101:
                        print(i, slovo)
                    i += 1
'''
# Ответ: ОАУАО


# Тип 8 № 47212
# Определите количество пятизначных чисел, записанных в восьмеричной системе счисления,
# в записи которых только одна цифра 6, при этом никакая нечётная цифра не стоит рядом с цифрой 6.
'''
s = '01234567'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    num = a + b + c + d + e
                    if num.count('6') == 1 and a != '0':
                        if all(x not in num for x in '16 61 36 63 56 65 76 67'.split()):
                            count += 1
print(count)
 '''
# Ответ: 2961


# Тип 14 № 15953
# Значение выражения 36**8 + 6**20 - 12? записали в системе счисления с основанием 6.
# Сколько цифр 0 содержится в этой записи?
'''
x = 36**8 + 6**20 - 12
M = []
while x > 0:
    M.append(x % 6)
    x //= 6
M.reverse()
print(M.count(0))
'''
# Ответ: 5


# Тип 14 № 48387
# Операнды арифметического выражения записаны в системах счисления с основаниями 11 и 19:
#
# x341y_11 + 56x1y_19
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите значения x и y, при которых значение данного арифметического выражения будет наименьшим и кратно 305.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 305
# и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
for x in '0123456789A':
    for y in '0123456789A':
        A = int(f'{x}341{y}', 11)
        B = int(f'56{x}1{y}', 19)
        if (A + B) % 305 == 0:
            print((A + B) // 305)
'''
# Ответ: 2778

# endregion Урок:  ******************************************************************************

# todo: Бронислав = [1-, 2, 3, 4, 5, 6-, 8, 10, 14, 18-, 19-21-, 22-, 23-]
# todo:   КЕГЭ    = []
# на прошлом уроке: Разобрали 5, 8 номера и посмотрели на оба типа 14 номеров. Надо будет закрыть вопросы по этим номерам со след. урока.
# на следующем уроке:
