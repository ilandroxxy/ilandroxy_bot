# region Домашка: ******************************************************************************

'''
# ((y → z) ∨ (¬x ∧ w)) ≡ (w ≡ z).
print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = ((y <= z) or (not(x) and w)) == (w == z)
                if F == True:
                    print(x, y, z, w, F)
'''

# Тип 2 № 36857
'''
# Логическая функция F задаётся выражением ((¬x ∨ z) ≡ (y ∧ ¬w)) → (z ∧ y).
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий неповторяющиеся строки.
# Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных x, y, z, w.

print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = ((((not(x)) or z) == (y and (not(w)))) <= (z and y))
                if F == False:
                    print(x, y, z, w, F)
'''

# endregion Домашка: ******************************************************************************



# region Урок: ******************************************************************************


# Первый тип пятого задания


# Тип 5 № 15101
'''
# Автомат получает на вход четырёхзначное число (число не может начинаться с нуля).
# По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая и вторая, вторая и третья, третья и четвёртая цифры заданного числа.
# 2. Наименьшая из полученных трёх сумм удаляется.
# 3. Оставшиеся две суммы записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 1982. Суммы: 1 + 9 = 10, 9 + 8 = 17, 8 + 2 = 10. Удаляется 10. Результат: 1017.
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 1215.

# [8, 3, 3, 3]
#  0  1  2  3

for n in range(1000, 10000):
     M = [int(i) for i in str(n)]  # Разбил int число на список int значений
     a = M[0] + M[1]  #  Складываются отдельно первая и вторая
     b = M[1] + M[2]
     c = M[2] + M[3]

     maxi = max(a, b, c)
     sred = (a + b + c) - (max(a, b, c) + min(a, b, c))

     r = str(sred) + str(maxi)
     if r == '1215':
         print(n)
         break
'''



# Тип 5 № 10309
'''
# Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 63 179. Суммы: 6 + 1 + 9 = 16; 3 + 7 = 10. Результат: 1016.
#
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 621.


for n in range(10000, 100000):
    M = [int(i) for i in str(n)]
    a = M[0] + M[2] + M[4]  # 1. Складываются отдельно первая, третья и пятая цифры
    b = M[1] + M[3]

    r = str(min(a, b)) + str(max(a, b))
    if r == '621':
        print(n)
        break
'''
# Ответ: 30969



# Тип 5 № 27402
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу:
# а) складываются все цифры двоичной записи числа N, и остаток от деления суммы на 2 дописывается в конец числа (справа).
# Например, запись 11100 преобразуется в запись 111001;
# б) над этой записью производятся те же действия — справа дописывается остаток от деления суммы её цифр на 2.
#
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R.
# Укажите такое наименьшее число N, для которого результат работы данного алгоритма больше числа 77.
# В ответе это число запишите в десятичной системе счисления.

for n in range(1, 1000):
    s = bin(n)[2:]

    for _ in range(2):
        summ = s.count('1')
        s += str(summ % 2)

    r = int(s, 2)
    if r > 77:
        print(n)
        break
'''
# Ответ: 19


# Тип 5 № 35894
# Алгоритм получает на вход натуральное число N>1 и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. Подсчитывается количество нулей и единиц в полученной записи. Если их количество одинаково, в конец записи добавляется её последняя цифра.
# В противном случае в конец записи добавляется та цифра, которая встречается реже.
# 3. Шаг 2 повторяется ещё два раза
# 4. Результат переводится в десятичную систему.
#
# Пример. Дано число N=19. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 10011.
# 2. В полученной записи нулей меньше, чем единиц, в конец записи добавляется 0. Новая запись: 100110.
# 3. В текущей записи нулей и единиц поровну, в конец записывается последняя цифра, это 0.
# Получается 1001100. В этой записи единиц меньше, в конец добавляется 1: 10011001.
# 4. Результат работы алгоритма R=153.
#
# При каком наименьшем числе N>104 в результате работы алгоритма получится число, кратное 4?
'''
for n in range(105, 1000):
    s = bin(n)[2:]

    for _ in range(3):
        if s.count('0') == s.count('1'):
            s += s[-1]
        elif s.count('0') < s.count('1'):
            s += '0'
        else:
            s += '1'

    r = int(s, 2)

    if r % 4 == 0:
        print(n)
        break
'''
# Ответ: 107



# Тип 5 № 17324
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится двоичная запись числа N.
# 2. Удаляется первая слева единица и все следующие непосредственно за ней нули.
# Если после этого в числе не остаётся цифр, результат этого действия считается равным нулю.
# 3. Полученное число переводится в десятичную запись.
# 4. Новое число вычитается из исходного, полученная разность выводится на экран.
#
# Пример. Дано число N = 11. Алгоритм работает следующим образом.
# 1. Двоичная запись числа N: 1011.
# 2. Удаляется первая единица и следующий за ней ноль: 11.
# 3. Десятичное значение полученного числа 3.
# 4. На экран выводится число 11 – 3 = 8.
#
# Сколько разных значений будет показано на экране автомата при последовательном вводе всех натуральных чисел от 10 до 1000?
'''
M = set()  # Тип коллекций set - множество (удаляет повторяющиеся элементы)
for n in range(10, 1000+1):
    s = bin(n)[2:]  # Переводит десятичное число в двоичную (только лишь в 2-ную)

    s = s[1:]  # срезали первый элемент от строки

    r = int(s, 2)  # перевели в 10-ную из 2-ной

    M.add(n - r)  # добавляем элемент в множество
print(M, len(M))
'''
# Ответ: 7





# endregion Урок: ******************************************************************************


# todo: Булат = [2, 8, 12, 14, 16], на следующем уроке: Разбираем 5