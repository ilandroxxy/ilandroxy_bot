# region Домашка: ******************************************************************************

# Тип 23 № 6965
'''
def F(a,b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 2, b) + F(2 * a + 1, b)
print(F(2,16))
'''
#Ответ: 40

# Тип 23 № 5977
'''
def F(a,b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1,b) + F(a + 10, b)
print(F(10,33))
'''
# Ответ: 25


#Тип 6 № 47406
'''
import turtle as t
t.left(90)
t.speed(10)
l = 50
for i in range(4):
    t.forward(12 * l)
    t.right(90)

t.color('blue')
for i in range(3):
    t.forward(12 * l)
    t.right(120)
t.up()
for x in range(0, 13):
    for y in range(0, 13):
        t.goto(x * l, y * l)
        t.dot(2, 'red')
t.done()
'''
#Ответ: 65



# Тип 6 № 47391
'''
import turtle as t
t.left(90)
t.speed(10)
l = 30
for i in range(14):
    t.right(60)
    t.forward(2 * l)
    t.right(60)
    t.forward(2 * l)
    t.right(270)
t.color('blue')
t.up()
for x in range(-9, 12):
    for y in range(-15, 3):
        t.goto(x * l, y * l)
        t.dot(3, 'red')
t.done()
'''
# почему то точки не туда ставятся

# endregion Домашка: ******************************************************************************



# region Урок: ******************************************************************************

"""
M = [1, 2, 3, 4, 5]

# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(0, len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')
print('\n')

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(0, len(M)-2):
    print(f'{M[i]}{M[i+1]}{M[i+2]}', end=' ')
print('\n')

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        print(f'{M[i]}{M[j]}', end=' ')
    print()
'''
for i in range(0, len(M)):
    for j in range(0, len(M)):
        if i < j:
            print(f'{M[i]}{M[j]}', end=' ')
    print()
'''
"""


# f = open('17.txt').readlines()
# print(f)

# M = [int(i) for i in open('17.txt')]

# Тип 17 № 39762
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём парой
# два идущих подряд элемента последовательности. Определите количество пар чисел, произведение которых кратно 15,
# а их сумма делится на 7. В ответе запишите два числа: сначала количество найденных пар, а затем— максимальную сумму
# элементов таких пар.
'''
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] * M[i+1]) % 15 == 0:
        if (M[i] + M[i+1]) % 7 == 0:
            count += 1
            maxi = max(maxi, M[i] + M[i+1])
print(count, maxi)
'''
# Ответ: 170 18662


# M = [int(i) for i in open('17.txt')]
# count = 0
# maxi = 0
# for i in range(0, len(M)):
#     for j in range(i+1, len(M)):
#         if (M[i] - M[j]) % 36 == 0:
#             if M[i] % 13 == 0 or M[j] % 13 == 0:
#                 count += 1
#                 maxi = max(maxi, M[i] - M[j])
# print(count, maxi)



# Тип 17 № 40733
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 3 и хотя бы один из двух элементов меньше среднего арифметического всех чётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.

# '''
# M = [int(i) for i in open('17 (1).txt')]
# A = [i for i in M if i % 2 == 0]
# count = 0
# maxi = 0
# sred = sum(A)/ len(A)
# for i in range(0, len(M)-1):
#     if M[i] % 3 == 0 or M[i+1] % 3 ==0:
#         if M[i] < sred or M[i + 1] < sred:
#             count += 1
#             maxi = max(maxi, M[i] + M[i + 1])
# print(count,maxi)
# '''
# # Ответ: 2288 14875




# Тип 17 № 39764
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём тройкой
# три идущих подряд элемента последовательности. Определите количество троек чисел таких, которые могут являться
# сторонами прямоугольного треугольника. В ответе запишите два числа: сначала количество найденных троек, а затем —
# максимальную сумму элементов таких троек. Если таких троек не найдётся — следует вывести 00.
'''
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-2):
    A = sorted([M[i], M[i+1], M[i+2]])
    if A[2] ** 2 == A[1] ** 2 + A[0] ** 2:
        count += 1
        maxi = max(maxi, M[i] + M[i+1] + M[i+2])
print(count, maxi)
'''

# Тип 17 № 48465
# Файл содержит последовательность целых чисел, по модулю не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
#
# Определите количество таких пар, в которых запись ровно одного элемента заканчивается цифрой 6, а сумма квадратов
# элементов пары меньше, чем квадрат наименьшего из элементов последовательности, запись которых заканчивается цифрой 6.
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную сумму квадратов элементов этих пар.
'''
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
mini = min([i for i in M if abs(i) % 10 == 6])
for i in range(0, len(M)-1):
    if (abs(M[i]) % 10 == 6 and abs(M[i+1]) % 10 != 6) or (abs(M[i]) % 10 != 6 and abs(M[i+1]) % 10 == 6):
        if M[i] ** 2 + M[i + 1] ** 2 < mini ** 2:
            count += 1
            maxi = max(maxi, M[i] ** 2 + M[i + 1] ** 2)
print(count, maxi)
'''
# Ответ: 720 и 99266105

# print(125 / 10)
# print(125 // 10)
# print(125 % 10)

# endregion Урок: ******************************************************************************


# todo: Булат = [2, 8, 10, 12, 14+, 15, 16, 17, 19-21, 25]
# на прошлом уроке: Разобрали 17 номер все типы задач.
# на следующем уроке:
