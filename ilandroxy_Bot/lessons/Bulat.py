
#  Разбор 17 типа задач ЕГЭ

# Тип 1: Назовём парой два идущих подряд элемента последовательности

# Тип 2: В данной задаче под парой подразумевается два различных элемента последовательности.


# Тип 17 № 47014
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых один из двух элементов делится на 5, а другой меньше среднего
# арифметического всех нечётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.

f = open('17.txt', 'r')
M = [int(i) for i in f]

summ = 0
kol = 0
for i in range(0, len(M)):
    if M[i] % 2 != 0:
        summ += M[i]
        kol += 1
sred = summ / kol   # среднее арифметическое всех нечётных элементов последовательности.

count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 5 == 0 and M[i+1] < sred) or (M[i+1] % 5 == 0 and M[i] < sred):
        count += 1
        if maxi < M[i] + M[i+1]:
            maxi = M[i] + M[i+1]
            print(maxi)
print(count, maxi)
'''
# Ответ: 1061 14847.



# Тип 17 № 39246
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 5, а их сумма делится на 7.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.

f = open('17.txt', 'r')
M = [int(i) for i in f]

count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 5 == 0 or M[i+1] % 5 == 0) and (M[i] + M[i+1]) % 7 == 0:
        count += 1
        if maxi < (M[i] + M[i+1]):
            maxi = (M[i] + M[i+1])
print(count, maxi)
'''
# Ответ: 308 18893


# Тип 2: В данной задаче под парой подразумевается два различных элемента последовательности.
# M = [1, 2, 3, 4, 5]
# 12 13 14 15
# 23 24 25
# 34 35
# 45
"""
M = [1, 2, 3, 4, 5]

for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        print(M[i], M[j])
"""



# Тип 17 № 37347
'''
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, для которых произведение
# элементов не кратно 14, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.

f = open('17.txt', 'r')
M = [int(i) for i in f]

count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] * M[j]) % 14 != 0:
            count += 1
            if maxi < M[i] + M[j]:
                maxi = M[i] + M[j]
print(count, maxi)
'''
# 40436496 19999


# Тип 17 № 47221
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от −10000 до 10000 включительно.
# Определите количество пар последовательности, в которых только одно число оканчивается на 3, а сумма
# квадратов элементов пары не меньше квадрата максимального элемента последовательности, оканчивающегося на 3.
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную из сумм квадратов элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# todo: доделать этот номер 47221

f = open('17.txt', 'r')
M = [int(i) for i in f]

count = 0
maxi = 0
maxi = 0
for i in range(0, len(M)):
    if M[i] % 10 == 3:
        if maxi < M[i]**2:
            maxi = M[i]**2
print(maxi)

for i in range(0, len(M)-1):
    if (M[i] % 10 == 3 and M[i+1] % 10 != 3 and (M[i] ** 2 + M[i+1] ** 2) >= max(M[i], M[i+1])**(1/2)) or (M[i+1] % 10 == 3 and M[i] % 10 != 3 and (M[i] ** 2 + M[i+1] ** 2) >= max(M[i], M[i+1])**(1/2)):
        if max(M[i], M[i + 1]) % 10 == 3:
            count += 1
            if maxi < (M[i] ** 2 + M[i+1] ** 2):
                maxi = (M[i] ** 2 + M[i+1] ** 2)
print(count, maxi)
""""""

# 180, 190360573.

f = open('17.txt')
nums = [int(i) for i in f]
max_square_sum = count = 0
max_square = max(list(filter(lambda x: x % 10 == 3, nums))) ** 2

print(max_square ** (1/2))
for i in range(len(nums) - 1):
    check_suf = str(nums[i])[-1] == '3' and str(nums[i + 1])[-1] != '3' or str(nums[i])[-1] != '3' and str(nums[i + 1])[-1] == '3'
    if check_suf and nums[i] ** 2 + nums[i + 1] ** 2 >= max_square:
        count += 1
        max_square_sum = max(max_square_sum, nums[i] ** 2 + nums[i + 1] ** 2)
print(count, max_square_sum)

