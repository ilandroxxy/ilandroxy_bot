# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************



# region Урок: ******************************************************************************


# Тип 8 № 10473
'''
# Шифр кодового замка представляет собой последовательность из пяти символов, каждый из которых является цифрой от 1 до 4.
# Сколько различных вариантов шифра можно задать, если известно, что цифра 1 встречается ровно два раза,
# а каждая из других допустимых цифр может встречаться в шифре любое количество раз или не встречаться совсем?

s = '1234'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('1') == 2:
                        count += 1
print(count)
'''
# Ответ: 270


# Тип 12 № 33514
'''
# Дана программа для редактора:
#
#     ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#         заменить (01, 30)
#         заменить (02, 101)
#         заменить (03, 202)
#     КОНЕЦ ПОКА

# Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 15 единиц, 10 двоек и 60 троек.
# Сколько единиц было в исходной строке?

for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z

            while '01' in s or '02' in s or '03' in s:
                s = s.replace('01', '30', 1)
                s = s.replace('02', '101', 1)
                s = s.replace('03', '202', 1)

            if s.count('1') == 15 and s.count('2') == 10 and s.count('3') == 60:
                print(x)
'''
# Ответ: 45



# Тип 14 № 28552
'''
# Значение выражения 216**6 + 216**4 + 36**6 − 6**14 − 24 записали в системе счисления с основанием 6.
# Сколько различных цифр содержит эта запись?
#
# Пример. Запись 1222337 содержит три различные цифры: 1, 2 и 3.

x = 216**6 + 216**4 + 36**6 - 6**14 - 24
M = []
while x > 0:
    M.append(x % 6)
    x //= 6
M.reverse()
print(M)
A = set(M)  # set() - setter это множество, тип коллекций
print(A, len(A))
'''
# Ответ: 4


# Тип 14 № 48338
'''
# Операнды арифметического выражения записаны в системе счисления с основанием 14:
#
# 1x563_14 + 871x3_14
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита четырнадцатеричной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 24.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 24
# и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789abcd':
    A = int(f'1{x}563', 14)  # перевод в 10-ную систему счисления из 14-ной
    B = int(f'871{x}3', 14)
    if (A + B) % 24 == 0:
        print((A + B) // 24)
        break
'''
# Ответ: 15374


# Тип 14 № 48392
'''
# Операнды арифметического выражения записаны в системах счисления с основаниями 9 и 12:
#
# 2y66x_9 + x0y1_12
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите значения x и y, при которых значение данного арифметического выражения будет наименьшим и кратно 170.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 170
# и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '012345678':
    for y in '012345678':
        A = int(f'2{y}66{x}', 9)
        B = int(f'{x}0{y}1', 12)
        if (A+B) % 170 == 0:
            print((A + B) // 170)
            break
'''
# Ответ: 169



# Тип 14 № 48381
'''
# Числа M и N записаны в системе счисления с основанием 14 соответственно.
#
# M = 8x12x_14, N = 8x542_14
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита четырнадцатеричной системы счисления.
# Определите наименьшее значение натурального числа A, при котором существует такой x, что M + A кратно N.

for A in range(1, 1000):
    for x in '0123456789abcd':
        M = int(f'8{x}12{x}', 14)
        N = int(f'8{x}542', 14)
        if (M + A) % N == 0:
            print(A)
            exit()
'''
# Ответ: 801


# Тип 5 № 10468
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу:
# а) складываются все цифры двоичной записи числа N, и остаток от деления суммы на 2 дописывается в конец числа (справа).
# Например, запись 11100 преобразуется в запись 111001;
# б) над этой записью производятся те же действия — справа дописывается остаток от деления суммы цифр на 2.
#
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью результирующего числа R.
#
# Укажите такое наименьшее число N, для которого результат работы алгоритма больше числа 77. В ответе это число запишите в десятичной системе счисления.

for n in range(1, 1000):
    s = bin(n)[2:]  # перевод из 10-ной системы в 2-ную

    for _ in range(2):  # повторяем действия два раза 
        summ = s.count('1')  # кол-во единиц равно сумме цифр числа
        s += str(summ % 2)  # добавляем к строке остаток деления суммы на 2

    r = int(s, 2)  # переводим из 2-ной в 10-ную 

    if r > 77:
        print(n)
        break
'''
# Ответ: 19


# Тип 16 № 36871
'''
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 1000 и F(n)=3?

def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)

count = 0
for n in range(1, 1000+1):
    if F(n) == 3:
        count += 1
print(count)
'''
# Ответ: 120


# Тип 16 № 4656
'''
# Алгоритм вычисления значения функции F(n) и G(n), где n – натуральное число, задан следующими соотношениями:
#
# F(1) = 0
# F(n) = F(n–1) + n, при n >1
#
# G(1) = 1
# G(n) = G(n–1) * n, при n >1
#
# Чему равно значение функции F(5) + G(5)?

def F(n):
    if n == 1:
        return 0
    if n > 1:
        return F(n - 1) + n

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return G(n - 1) * n

print(F(5) + G(5))
'''



# Тип 16 № 40991
'''
# Обозначим остаток от деления натурального числа a на натуральное число b как a mod b.
#
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n − 1) + 1, если n > 0 и при этом n mod 3 = 2;
# F(n) = F((n − n mod 3) / 3), если n > 0 и при этом n mod 3 < 2.
#
# Укажите наименьшее возможное n, для которого F(n)=5.

def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 3 == 2:
        return F(n - 1) + 1
    if n > 0 and n % 3 < 2:
        return F((n - n % 3) / 3)

for n in range(0, 1000):  # диапазон
    if F(n) == 5:
        print(n)
        break
'''
# Ответ: 242


# Перебрать все числа в диапазоне [1234, 3245]
# for x in range(1234, 3245+1):
#     print(x)


# for x in range(2):  # [0, 2) или [0, 1]
#     print(x)


# for x in range(2, 10+1):  # [2, 10]  или [2, 10+1)
#     print(x)


# for x in range(2, 10+1, 2):  # третий аргумент - это STEP, шаг цикла
#     print(x)



# endregion Урок: ******************************************************************************


# todo: Булат = [2, 8, 12, 14, 16], на следующем уроке: