# 15.02.23

# Тип 15 № 15986
# Для какого наибольшего целого неотрицательного числа A выражение
# (y + 2x ≠ 48) ∨ (A < x) ∨ (x < y)
# тождественно истинно, то есть принимает значение 1 при любых целых неотрицательных x и y?
'''
def F(x, y):
    return (y + 2*x != 48) or (A < x) or (x < y)
for A in range(0, 1000):
    if all(F(x, y) for x in range(0, 100) for y in range(0, 100)):
        print(A)
'''
# Ответ: 15


# Тип 15 № 34543
'''
# На числовой прямой даны два отрезка: P = [3, 13] и Q = [12, 22], A = [a1, a2].
# Какова наибольшая возможная длина интервала A, что формула
# ((х ∈ A) → (х ∈ Р)) ∨ (х ∈ Q)
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
def F(x):
    P = 3 <= x <= 13
    Q = 12 <= x <= 22
    A = a1 <= x <= a2
    return (A <= P) or Q
    # return ((a1 <= x <= a2) <= (3 <= x <= 13)) or (12 <= x <= 22)
R = []
M = [i/5 for i in range(1*5, 30*5)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(max(R))
'''
# Ответ: 19


# Тип 15 № 7790 i
# На числовой прямой даны два отрезка: P = [7, 14] и Q = [9, 11].
# Укажите наибольшую возможную длину промежутка A, для которого формула
#
# ((x ∈ P) ≡ (x ∈ Q)) → ¬(x ∈ A)
#
# истинно (т.е. принимает значение 1) при любом значении переменной х.
'''
def F(x):
    P = 7 <= x <= 14
    Q = 9 <= x <= 11
    A = a1 <= x <= a2
    return (P == Q) <= (not A)
R = []
M = [i/4 for i in range(1*4, 20*4)]
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(max(R))
'''
# Ответ: 3



# Тип 15 № 8666 i
# На числовой прямой даны два отрезка: P = [25; 50] и Q = [32; 47].
# Укажите наибольшую возможную длину промежутка A, для которого формула
# (¬ (x  принадлежит  A) → (x  принадлежит  P)) → ((x  принадлежит  A) → (x  принадлежит  Q))
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.
'''
def F(x):
    P = 25 <= x <= 50
    Q = 32 <= x <= 47
    A = a1 <= x <= a2
    return ((not A) <= P) <= (A <= Q)

M = [i/4 for i in range(20*4, 55*4)]

R = []
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(max(R))
'''

#На числовой прямой даны два отрезка: P = [12, 62] и Q = [32, 92].

#Какова наименьшая возможная длина интервала A, что формула

#(¬(x ∈ А) ∧ (x ∈ Q)) → (x ∈ P)

#тождественно истинна, т.е. принимает значение 1 при любом значении переменной х.
"""""
def F(x):
    P = 12 <= x <= 62
    Q = 32 <= x <= 92
    A = a1 <= x <= a2
    return ((not A) and Q) <= P
R=[]
M = [i/4 for i in range(14,1004)]
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(min(R))

"""

# Тип 15 № 29663
"""
def F(x, A):
    return (A < 50) and ((x % A != 0) <= ((x % 10 == 0) <= (x % 12 != 0)))
for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
"""
#ответ:30

# Тип 15 № 47012

# На числовой прямой даны два отрезка: P=[69;91] и Q=[77;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
# (x∈P)→(¬((x∈P)≡(x∈Q))∨((x∈Q)→(x∈A)))
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).
'''
def F(x):
    P = 69 <= x <= 91
    Q = 77 <= x <= 114
    A = a1 <= x <= a2
    return P <= (not (P == Q) or (Q <= A))

M = [i / 4 for i in range(60*4, 120*4)]

R = []
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2-a1)
print(min(R))
'''
# ответ: 14

# Тип 15 № 47219
"""
def F(x, A):
    return ((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)
for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
"""
#ответ:94


# Тип 15 № 34516 i
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
#
# Так, например, 14&5 = 1110_2 & 0101_2 = 0100_2 = 4.
#
# Для какого наименьшего неотрицательного целого числа А формула
# тождественно истинна (то есть принимает значение 1 при любом неотрицательном целом значении переменной x)?
'''
# Вариант 1
def F(x):
    return ((x & 28 != 0) or (x & 45 != 0)) <= ((x & 48 == 0) <= (x & A != 0))

for A in range(0, 1000):
    if all(F(x) for x in range(0, 1000)):
        print(A)
        break

# Вариант 2
def F(x):
    return ((x & 28 != 0) or (x & 45 != 0)) <= ((x & 48 == 0) <= (x & A != 0))

R = []
for A in range(0, 1000):
    if all(F(x) for x in range(0, 1000)):
        R.append(A)
print(min(R))


# Вариант 3
R = []
for A in range(0, 1000):
    if all((((x & 28 != 0) or (x & 45 != 0)) <= ((x & 48 == 0) <= (x & A != 0))) for x in range(0, 1000)):
        R.append(A)
print(min(R))

# Вариант 4
print(min([A for A in range(0, 1000) if all((((x & 28 != 0) or (x & 45 != 0)) <= ((x & 48 == 0) <= (x & A != 0))) for x in range(0, 1000))]))
'''
# Ответ: 13



# Тип 25 № 28120 i
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [201455; 201470],
# числа, имеющие ровно 4 различных натуральных делителя. Выведите эти четыре делителя для каждого найденного числа в порядке возрастания.

# Вариант 1
'''
for x in range(201455, 201470+1):
    D = []
    for j in range(1, x+1):
        if x % j == 0:
            D.append(j)
    if len(D) == 4:
        print(*D)
'''

# Вариант 2
'''
def F(x):
    D = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            D.add(j)
            D.add(x // j)
    return sorted(D)

for x in range(201455, 201470+1):
    D = F(x)
    if len(D) == 4:
        print(*D)
'''

# Ответ:
# 1 3 67153 201459
# 1 13 15497 201461
# 1 29 6947 201463
# 1 2 100733 201466


# Тип 25 № 33495 i
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения двух натуральных
# чисел и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16=16*1=8*2=4*4,
# множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [2000000; 3000000],
# у которых составленное описанным способом множество разностей будет содержать не меньше трёх элементов, не превышающих 115.
# В ответе перечислите найденные числа в порядке возрастания.
'''
def F(x):
    D = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if (x // j) - j <= 115:
                D.add((x // j) - j)
                if len(D) >= 3:
                    return D
    return D

for x in range(2000000, 3000000+1):
    D = F(x)
    if len(D) >= 3:
        print(x)
'''
# Ответ:
# 2053440
# 2098080
# 2328480
# 2638944