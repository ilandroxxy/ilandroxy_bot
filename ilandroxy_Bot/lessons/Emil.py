# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 9 № 40984
# В каждой строке электронной таблицы записаны три натуральных числа, задающих длины
# трёх взаимно перпендикулярных рёбер прямоугольного параллелепипеда.
# Определите, сколько в таблице троек, для которых у заданного ими параллелепипеда
# для любых трёх граней с общей вершиной сумма площадей двух из них больше площади третьей.
#
# Для нахождения количества параллелепипедов, удовлетворяющих условию, необходимо
# найти площадь наибольшей грани и сумма площадей двух других граней.
# То есть для каждой тройки чисел необходимо найти произведение двух наибольших чисел,
# а также сумму произведений наибольшего и наименьшего чисел
# и среднего по величине и наименьшего чисел. В ячейку D1 запишем формулу
'''
M = [int(i) for i in open('17.txt')]

count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])  # s.split('\t')
    sred = sum(M) - max(M) - min(M)
    if max(M) * sred < sred * min(M) + min(M) * max(M):
    # if M[1] * M[2] < M[1] * M[0] + M[0] * M[2]:
        count += 1
print(count)
'''
# Ответ: 1878.


# № 7030 Danov2303 (Уровень: Сложный)
# (А.Богданов) Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, для которых выполняются все условия
# - в строке три числа повторяются ровно два раза;
# - эти три числа образуют стороны прямоугольного треугольника.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    # if M[0] == M[1] and M[2] == M[3] and M[4] == M[5]:
    if len(set(M)) == 3 and all(M.count(x) == 2 for x in M):
        a, b, c = sorted(set(M))
        if c ** 2 == a ** 2 + b ** 2:
            count += 1
print(count)
'''

'''
c = 0
for s in open('9.txt'):
    m = sorted([int(i) for i in s.split('\t')])
    if m[0] == m[1] and m[2] == m[3] and m[4] == m[5]:
        a, b, c = sorted(set(m))
        if c ** 2 == a ** 2 + b ** 2:
            c += 1
print(c)
'''
# Ответ: 148


# № 3362 Джобс 22.04.2022 (Уровень: Средний)
# Откройте файл электронной таблицы, содержащей в каждой строке пять натуральных чисел.
# Определите количество строк таблицы, сумма нечетных элементов больше суммы четных элементов.
# Если четных или нечетных элементов нет в представленной пятерке, сумма считается равной 0.
'''
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    chet = [i for i in M if i % 2 == 0]
    nechet = [i for i in M if i % 2 != 0]
    if sum(nechet) > sum(chet):
        count += 1
print(count)
'''
# Ответ: 1549


# № 8511 Апробация 17.05 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**8, найдите все числа,
# соответствующие маске 12??15*6, делящиеся на 253 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце – соответствующие им результаты деления этих чисел на 253.
# Количество строк в таблице для ответа избыточно.

# print(10**8)
# print('12??15*6')

# 100000000
# 12??15*6
import itertools
M = []
for l in range(0, 1+1):
    for s in itertools.product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)

R = []
for x in '0123456789':
    for y in '0123456789':
        for z in M:     # перебираем маску "*"
            A = int(f'12{x}{y}15{z}6')
            if A < 10**8:
                if A % 253 == 0:
                    R.append([A, A // 253])

for x in sorted(R):
    print(*x)

# Показать ответ
# 1278156 5052
# 12531596 49532
# 12741586 50362
# 12951576 51192

#
# endregion Урок: ******************************************************************


# todo: Эмиль = []
# на прошлом уроке: Добивали 9-ые номера и начали говорить про 25-ые.
# на следующем уроке:  #todo: разобрать 25 номера с делителями
