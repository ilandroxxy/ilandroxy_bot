# region Домашка: ******************************************************************


# КЕГЭ № 5736 (Уровень: Средний) (Д. Тараскин)
#
# Программа перебирает числа больше 10**9 и выбирает из них числа-палиндромы,
# у которых наибольший делитель (отличный от 1 и самого числа) кратен 7.
# Выведите первые 5 чисел, которые выберет программа, и для каждого числа выведите наибольший делитель.
'''
def divisors(x):
    div = []
    for j in range(2, int(x**0.5)+1):  # (отличный от 1 и самого числа)
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


k = 0
for x in range(10**9+1, 10**10):  # перебирает числа больше 10**9
    if str(x) == str(x)[::-1]:   # выбирает из них числа-палиндромы
        d = divisors(x)
        if max(d) % 7 == 0:  # наибольший делитель кратен 7
            print(x, max(d))
            k += 1
            if k == 5:
                break
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************
'''
f = open('17.txt')
print(f)  # <_io.TextIOWrapper name='17.txt' mode='r' encoding='UTF-8'>
# print(f.readline())  # 5612
# print(f.readlines())   # ['5612\n', '5792\n', '1115\n', '1706\n', '2567\n', '268\n', '7371\n', '5971\n', ...]
# print(f.read())

for s in f:
    print(s)

M = [int(s) for s in open('17.txt')]
print(M)  # [5612, 5792, 1115, 1706, 2567, 268, 7371, 5971, 759, ...]
'''

# Считываем файл из 17 номера:
M = [int(x) for x in open('17.txt')]


# Типы задач 17 номера:
'''
M = [1, 2, 3, 4, 5]

# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(0, len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()
# IndexError: list index out of range


# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(0, len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()


# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''


# Тип 17 №37354
# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, у которых сумма нечётна,
# а произведение делится на 5, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 2 != 0 and (x * y) % 5 == 0:
            count += 1
            maxi = max(maxi, x + y)
print(count, maxi)  


M = [int(x) for x in open('17.txt')]
R = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 2 != 0 and (x * y) % 5 == 0:
            R.append(x + y)
print(len(R), max(R))
'''
# Ответ: 9082691 19995


# Тип 17 №55634
# Файл содержит последовательность целых чисел, модуль которых находится в интервале от 100 до 10 000.
# Назовём парой два идущих подряд элемента последовательности.
#
# Определите количество пар, для которых выполняются следующие условия:
# — последняя цифра записи одного из элементов пары совпадает с предпоследней цифрой записи другого элемента;
# — ровно один элемент из пары делится без остатка на 13;
# — сумма квадратов элементов пары не превышает квадрат наименьшего из элементов последовательности,
# две последние цифры в записи которого одинаковы.
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную величину
# суммы квадратов элементов этих пар.
'''
M = [int(x) for x in open('17.txt')]
A = min([x for x in M if str(x)[-1] == str(x)[-2]])
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (str(x)[-1] == str(y)[-2]) or (str(x)[-2] == str(y)[-1]):
        if (x % 13 == 0) != (y % 13 == 0):
            if (x ** 2 + y ** 2) <= A**2:
                R.append(x ** 2 + y ** 2)
print(len(R), max(R))
'''
# Ответ: 115 96944186


# Тип 17 №61363
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.

# Определите количество троек, для которых выполняются следующие условия:
# — ровно два числа в тройке четырёхзначные;
# — хотя бы одно число в тройке делится на 3;
# — сумма элементов тройки больше максимального элемента последовательности, запись
# которого заканчивается на 19. (Гарантируется, что в последовательности есть хотя
# бы один элемент, запись которого заканчивается на 19.)
#
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
A = max([x for x in M if str(x)[-2:] == '19'])
R = []
for i in range(0, len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    B = [x, y, z]
    # if ((len(str(abs(x))) == 4) + (len(str(abs(y))) == 4) + (len(str(abs(z))) == 4)) == 2:
    if sum([len(str(abs(p))) == 4 for p in B]) == 2:
        if sum([p % 3 == 0 for p in B]) > 0:
            if sum(B) > A:
                R.append(sum(B))
print(len(R), max(R))
'''
# Ответ: 78 115709

# endregion Урок: ******************************************************************


# Лера = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1. 15.1, 16.1, 17.1, 23.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
