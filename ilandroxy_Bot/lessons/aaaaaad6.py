# region Домашка: ******************************************************************

# Тип 24 №46982
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите количество групп из идущих подряд не менее 12 символов, которые начинаются
# и заканчиваются буквой E и не содержат других букв E (кроме первой и последней) и букв F.
'''
s = open('24.txt').readline()
s = s.replace('E', 'E E')
print(len([x for x in s.split() if 'F' not in x and len(x) >= 12]))
'''
# Ответ: 9655


# Тип 24 №52195
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите длину самой длинной цепочки символов, которая начинается и заканчивается буквой D,
# а между двумя последовательными буквами D содержит не более двух букв O и произвольное количество других букв.
'''
s = open('24.txt').readline().split('D')
count = 1
maxi = 0
for x in s:
    if x.count('O') <= 2:
        count += len(x) + 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)
'''
# Ответ: 255
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Теория:
# Адрес сети = IP-адрес узла & Маска, где & - побитовая конъюнкция

# IP состоит из 4 чисел разделенных точкой, на каждое число выделено по 1 байту
# То есть на каждое такое число выделено по 8 бит, числа лежат в диапазоне от 0 (00000000) до 255 (11111111)

# Маска сети имеет длину 32 бита и вид: 11111..00 (сначала единицы, затем нули)
# mask = '.'.join([bin(int(x))[2:].zfill(8) for x in '255.255.224.0'.split('.')])
# print(mask)


# Тип 13 №5591
# По заданным IP-адресу узла и маске определите адрес сети.
# IP-адрес узла: 208.128.193.64
# Маска: 255.255.224.0
'''
from ipaddress import *
net = ip_network('208.128.193.64/255.255.224.0', 0)
print(net)  # 208.128.192.0/19, где 19 - кол-во единиц в маске числа
# маска сети: 11111111.11111111.11100000.00000000
'''
# Ответ: FCDA


# Тип 13 №28687
# Для узла с IP-адресом 98.162.71.123 адрес сети равен 98.162.71.96.
# Чему равен последний (самый правый) байт/октет маски? Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.123/{mask}', 0)
    print(net, net.netmask)
    # 98.162.71.96/27 255.255.255.224
'''
# Ответ: 224
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.123/{mask}', 0)
    if str(net) == f'98.162.71.96/{mask}':
        print(str(net.netmask).split('.')[3])
'''


# Тип 13 №64943
# Узлы с IP -адресами 202.3.20.24 и 202.3.27.11 находятся в одной сети.
# Укажите наименьшее возможное количество принадлежащих этой сети IP -адресов,
# в двоичной записи которых чётное число единиц.
'''
from ipaddress import *
mini = 999999
for mask in range(32+1):
    net1 = ip_network(f'202.3.20.24/{mask}', 0)
    net2 = ip_network(f'202.3.27.11/{mask}', 0)
    cnt = 0
    if net1 == net2:
        for ip in net1:
            if f'{ip:b}'.count('1') % 2 == 0:
                cnt += 1
        if mini > cnt:
            mini = cnt
            print(mini)
'''


# Тип 13 №61359
# Узлы с IP-адресами 120.91.176.213 и 120.91.174.205 находятся в одной сети.
# Укажите наибольшее возможное значение третьего слева байта маски этой сети.
# Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'120.91.176.213/{mask}', 0)
    net2 = ip_network(f'120.91.174.205/{mask}', 0)
    if net1 == net2:
        print(net1.netmask)
        # 255.255.0.0
        # 255.255.128.0
        # 255.255.192.0
        # 255.255.224.0
'''
# Ответ: 224


# № 12922 PRO100 ЕГЭ 26.01.24 (Уровень: Базовый)
# Сеть задана IP-адресом 136.36.240.16 и маской сети 255.255.255.248.
# Сколько в этой сети IP-адресов, в которых в двоичной записи IP-адреса не встречается 101?
# В ответе укажите только число.
'''
from ipaddress import *
net = ip_network('136.36.240.16/255.255.255.248', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'  # перевод в двоичную запись
    if '101' in s:
        cnt += 1
print(cnt)
'''
# Ответ: 4

# № 12467 PRO100 ЕГЭ 29.12.23 (Уровень: Средний)
# Адрес сети равен 183.192.A.0, где А — некоторое допустимое для записи адреса сети число, а маска сети 255.255.252.0.
# Определите минимальное значение А, для которого для всех IP-адресов этой сети
# в двоичной записи IP-адреса суммарное количество единиц в правых двух байтах больше трёх.
'''
from ipaddress import *
for A in range(0, 255+1):
    net = ip_network(f'183.192.{A}.0/255.255.252.0', 0)
    if all(f'{ip:b}'[16:].count('1') > 3 for ip in net):
        print(A)
        break
'''


# № 12947 (Уровень: Базовый)
# Сеть задана IP-адресом 203.111.195.0 и маской сети 255.255.240.0.
# Сколько в этой сети IP-адресов, в двоичной записи которых количество нулей кратно трём,
# а также содержатся три подряд идущие единицы и три подряд идущих нуля одновременно?
# В ответе укажите только число.
'''
from ipaddress import *
net = ip_network('203.111.195.0/255.255.240.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('0') % 3 == 0:
        if '111' in s and '000' in s:
            cnt += 1
print(cnt)
'''
# Ответ: 1043


# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Лера = [2, 3, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# КЕГЭ  = []
# на следующем уроке:
