# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Единицы измерения информации
# 1 бит - минимальная единица измерения информации
# 1 байт = 8 бит = 2**3 бит
# 1 Кбайт = 1024 байт = 2**10 байт = 2**13 бит
# 1 Мбайт = 1024 Кбайт = 2**10 Кбайт = 2**20 байт = 2**23 бит

# 23 Мбайт = 23 * 2**23 бит = 23 * 2**20 байт


# Формулы для 7 номера с изображением
# I (бит) = pixels (шт) * i (бит)
# Вес картинки = кол-во пикселей * бит на один пиксель

# colors = 2 ** i (бит)
# Кол-во цветов = 2 ** бит на один пиксель


# Тип 7 №26952
# На снимок размером 1200 на 1024 пикселей в памяти выделено не более 1000 Кбайт.
# Найдите максимально возможное количество цветов в палитре изображения.
'''
pixels = 1200 * 1024
I = 1000 * 2 ** 13  # бит

i = I / pixels  # 6.6666
i = 6  # Здесь всегда округляем вниз
print(2 ** i)
'''
# Ответ: 64


# Тип 7 №60249
# Прибор автоматической фиксации нарушений правил дорожного
# поведения делает цветные фотографии размером 1024×768 пикселей,
# используя палитру из 4096 цветов.
# Для передачи снимки группируются в пакеты по 256 штук.
# Определите размер одного пакета фотографий в Мбайт.
'''
pixels = 1024 * 768
colors = 4096
print(2**12)  # 4096
i = 12
I = pixels * i
print((256 * I) / (2**23))
'''
# Ответ: 288


# Тип 7 №59740
# Сколько секунд потребуется модему, передающему сообщения со скоростью 15872 бит/с,
# чтобы передать цветное растровое изображение размером 1023×768 пикселей,
# при условии, что цвет каждого пикселя кодируется 3 байтами.
'''
pixels = 1023 * 768
i = 3 * 8
I = pixels * i
V = 15872
print(I / V)
'''
# Ответ: 1188


# Тип 7 №35981
# В информационной системе хранятся изображения размером 2048×1536пк.
# При кодировании используется алгоритм сжатия изображений, позволяющий
# уменьшить размер памяти для хранения одного изображения в среднем в 8 раз
# по сравнению с независимым кодированием каждого пикселя.
# Каждое изображение дополняется служебной информацией, которая занимает 128 Кбайт.
# Для хранения 32 изображений потребовалось 16 Мбайт.
# Сколько цветов использовано в палитре каждого изображения?
'''
pixels = 2048 * 1536
I = (16 * 2**23) / 32  # Сколько весит одно изображение с допами и до сжатия
I = I - (128 * 2**13)  # Сколько весит одно изображение без допов и до сжатия
I = I * 8
i = I / pixels
print(i)
print(2 ** i)
'''
# Ответ: 256


# Тип 11 №13409
'''
# При регистрации в компьютерной системе каждому пользователю выдаётся пароль,
# состоящий из 15 символов и содержащий только символы
# из 8-символьного набора: А, В, C, D, Е, F, G, H.
symbols = 15
alphabet = 8  # alphabet = 2 ** i (это бит на один символ)
i = 3

# В базе данных для хранения сведений о каждом пользователе отведено
# одинаковое минимально возможное целое число байт. При этом используют
# посимвольное кодирование паролей, все символы кодируют одинаковым минимально
# возможным количеством бит.

bit = symbols * i
print(bit / 8)  # 5.625
password_byte = 6

# Кроме собственно пароля для каждого пользователя в системе хранятся
# дополнительные сведения, для чего выделено целое число байт,
# одно и то же для всех пользователей.

# user  = password_byte + dop

# Для хранения сведений о 20 пользователях потребовалось 320 байт.
# Сколько байт выделено для хранения дополнительных сведений об одном пользователе?
# В ответе запишите только целое число — количество байт.

user = 320 / 20
print(user - password_byte)
'''


# Тип 11 №9197
# При регистрации в компьютерной системе каждому пользователю
# выдаётся пароль, состоящий из 15 символов и содержащий только
# символы А, Б, В, Г, Д, Е. Каждый такой пароль в компьютерной
# программе записывается минимально возможным и одинаковым целым
# количеством байт, при этом используют посимвольное кодирование
# и все символы кодируются одинаковым и минимально возможным количеством бит.
# Определите, сколько байт необходимо для хранения 20 паролей.
'''
symbols = 15
alphabet = 6
i = 3

bit = symbols * i
print(bit / 8)  # 5.625
byte = 6

print(20 * byte)
'''
# Ответ: 120


# Тип 11 №58519
# В информационной системе хранится информация об объектах определённой структуры.
# Описание каждого объекта включает в себя код объекта, описание структуры объекта
# и дополнительную информацию.

# Код объекта состоит из 11 символов, каждый из которых может быть либо одной
# из 10 десятичных цифр, либо одной из 26 заглавных латинских букв.
#
# Каждый символ кодируется минимально возможным числом бит, а для хранения
# всего кода отводится минимально возможное целое число байт.
#
# Структура объекта описывается как последовательность простых элементов.
# Всего существует 1500 различных простых элементов.
# Каждый простой элемент кодируется одинаковым для всех элементов минимально
# возможным количеством бит. Для описания структуры объекта выделяется
# одинаковое для всех объектов минимальное количество байт, достаточное
# для записи 30 простых элементов.
#
# Для хранения дополнительной информации выделяется одинаковое для
# всех объектов целое число байт. Известно, что для хранения данных
# о 32768 объектах потребовалось 2 Мбайт. Сколько байт выделено для
# хранения дополнительной информации об одном объекте?

symbols1 = 11
alphabet1 = 36
i1 = 6
bit1 = symbols1 * i1
print(bit1 / 8)  # 8.25
byte1 = 9

symbols2 = 30
alphabet2 = 1500
i2 = 11
bit2 = i2 * symbols2
print(bit2 / 8)  # 41.25
byte2 = 42

I = (2*2**20) / 32768  # байт
print(I - byte2 - byte1)

# Ответ: 13


print(11 * 113)
print(1243 / 8)  # 155.375 -> 156
byte = 156
I = (32768 * byte) / (2 ** 10)
print(I)










# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Лера = [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# КЕГЭ  = []
# на следующем уроке:
