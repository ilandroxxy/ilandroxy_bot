# region Домашка: ******************************************************************

# КЕГЭ № 5632 (Уровень: Средний) (М. Ишимов)
#
# Операнды арифметического выражения записаны в системе счисления с основанием 21.
# 32yxA_21 + 16y18_21
# В записи чисел переменными х и у обозначены две неизвестные цифры из алфавита 21-ричной системы счисления.
# Определите наименьшее значение х, при котором значение данного арифметического
# выражения кратно 12 при любом нечётном значении у.
# Для найденного значения х вычислите частное от деления значения арифметического
# выражения на 12 при у = 7 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for x in alphabet[:21]:
    flag = True
    for y in alphabet[1:21:2]:
        if (int(f'32{y}{x}A', 21) + int(f'16{y}18', 21)) % 12 != 0:
            flag = False
            break
    if flag == True:
        print((int(f'32{7}{x}A', 21) + int(f'16{7}18', 21)) // 12)
        exit()
'''

# Вариант 2
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for x in alphabet[:21]:
    if all((int(f'32{y}{x}A', 21) + int(f'16{y}18', 21)) % 12 == 0 for y in alphabet[1:21:2]):
        print((int(f'32{7}{x}A', 21) + int(f'16{7}18', 21)) // 12)
        exit()
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# Тип 5 №15101
# Автомат получает на вход четырёхзначное число (число не может начинаться с нуля).
# По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая и вторая, вторая и третья, третья и четвёртая цифры заданного числа.
# 2. Наименьшая из полученных трёх сумм удаляется.
# 3. Оставшиеся две суммы записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 1982. Суммы: 1 + 9 = 10, 9 + 8 = 17, 8 + 2 = 10. Удаляется 10. Результат: 1017.
#
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 1215.
'''
for n in range(1000, 10000):
    a, b, c, d = [int(x) for x in str(n)]
    M = sorted([a+b, b+c, c+d])
    del M[0]
    r = str(M[0]) + str(M[1])
    if r == '1215':
        print(n)
        break
'''
# Ответ: 1396


# Тип 5 №16381
# Автомат обрабатывает натуральное число N > 1 по следующему алгоритму.
# 1. Строится двоичная запись числа N.
# 2. Последняя цифра двоичной записи удаляется.
# 3. Если исходное число N было нечётным, в конец записи (справа)
# дописываются цифры 10, если чётным — 01.
# 4. Результат переводится в десятичную систему и выводится на экран.
#
# Пример. Дано число N = 13. Алгоритм работает следующим образом.
# 1. Двоичная запись числа N: 1101.
# 2. Удаляется последняя цифра, новая запись: 110.
# 3. Исходное число нечётно, дописываются цифры 10, новая запись: 11010.
# 4. На экран выводится число 26.
#
# Какое число нужно ввести в автомат, чтобы в результате получилось 2018?
'''
for n in range(2, 10000):
    s = bin(n)[2:]  # перевод в 2-ную запись, результат в виде строки
    s = s[:-1]
    if n % 2 != 0:
        s += '10'
    else:
        s += '01'
    r = int(s, 2)  # перевод из 2-ной в 10-ную

    if r == 2018:
        print(n)
'''
# Ответ: 1009


# Тип 5 №33084
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. Складываются все цифры полученной двоичной записи.
# В конец записи (справа) дописывается остаток от деления суммы на 2.
# 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
# 4. Результат переводится в десятичную систему.
#
# Пример. Дано число N=13. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 1101.
# 2. Сумма цифр двоичной записи 3, остаток от деления на 2 равен 1, новая запись 11011.
# 3. Сумма цифр полученной записи 4, остаток от деления на 2 равен 0, новая запись 110110.
# 4. Результат работы алгоритма R=54.
#
# При каком наименьшем числе N в результате работы алгоритма получится R>154?
# В ответе запишите это число в десятичной системе счисления.
'''
for n in range(1, 1000):
    s = bin(n)[2:]
    for _ in range(2):
        s += str(s.count('1') % 2)
    r = int(s, 2)

    if r > 154:
        print(n)
        break
'''
# Ответ: 39


# Тип 5 №33507
# Алгоритм получает на вход натуральное число N>1 и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Вместо последней (самой правой) двоичной цифры дважды записывается вторая слева цифра двоичной записи.
# 3. Результат переводится в десятичную систему.
# При каком наименьшем числе N в результате работы алгоритма получится R > 92?
# В ответе запишите это число в десятичной системе счисления.
'''
for n in range(2, 10000):
    s = bin(n)[2:]
    s = s[:-1] + s[1] * 2
    r = int(s, 2)
    if r > 92:
        print(n)
        break
'''
# Ответ: 48.


# Тип 5 №18487
# Автомат обрабатывает натуральное число N по следующему алгоритму:
# 1. Строится двоичная запись числа N.
# 2. Запись «переворачивается», то есть читается справа налево.
# Если при этом появляются ведущие нули, они отбрасываются.
# 3. Полученное число переводится в десятичную запись и выводится на экран.
#
# Какое наибольшее число, не превышающее 100, после обработки автоматом даёт результат 13?
'''
R = []
for n in range(1, 100):
    s = bin(n)[2:]
    s = s[::-1]  # 2. Запись «переворачивается»
    r = int(s, 2)
    if r == 13:
        R.append(n)
print(max(R))
'''
# Вариант 2
'''
def my_convert(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while number > 0:
        result += alphabet[number % system]
        number = number // system
    result = result[::-1]
    return result

R = []
for n in range(1, 100):
    s = my_convert(n, 2)
    s = s[::-1]  # 2. Запись «переворачивается»
    r = int(s, 2)
    if r == 13:
        R.append(n)
print(max(R))
'''
# Ответ: 88


# Тип 5 №59798
# На вход алгоритма подается натуральное число N.
# Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится троичная запись числа N.
# 2) Если N не кратно 3, то остаток от деления на 3 умножается на 5,
# переводится в троичную запись и дописывается в конец числа.
# 3) Результат R переводится в десятичную систему счисления и выводится на экран.
#
# Укажите минимальное число N, после обработки которого автомат получается число, большее 146.
'''
def my_convert(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while number > 0:
        result += alphabet[number % system]
        number = number // system
    result = result[::-1]
    return result


for n in range(1, 1000):
    s = my_convert(n, 3)
    if n % 3 != 0:
        x = (n % 3) * 5
        s += my_convert(x, 3)
    r = int(s, 3)
    if r > 146:
        print(n)
        break
'''
# Ответ: 8

'''
s = '12345'
# добавляются две первые цифры этой записи в обратном порядке
# s += s[1] + s[0]
print(s)
'''


# Тип 5 №28681
# Автомат обрабатывает натуральное число N (128 ≤ N ≤ 255) по следующему алгоритму:
# 1. Строится восьмибитная двоичная запись числа N.
# 2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3. Полученное число переводится в десятичную запись.
# 4. Из исходного числа вычитается полученное, разность выводится на экран.

# Какое число нужно ввести в автомат, чтобы в результате получилось 105?
'''
def my_convert(number, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while number > 0:
        result += alphabet[number % system]
        number = number // system
    result = result[::-1]
    return result


for n in range(128, 255+1):
    s = my_convert(n, 2)
    s = s.replace('0', '*').replace('1', '0').replace('*', '1')
    r = int(s, 2)
    if n - r == 105:
        print(n)
'''
# Ответ: 180

# endregion Урок: ******************************************************************


# Лера = [2.1, 5.1, 6.1, 14.1]
# КЕГЭ  = []
# на следующем уроке:
