# region Домашка: ******************************************************************

'''
from itertools import product
count = 0
for var in product('01234567', repeat=6):
    num = ''.join(var)
    if len(set(num)) == len(num):
        if num[0] != '0':
            if all(pair not in num for pair in '02 04 06 13 15 17 20 24 26 31 35 37 40 42 46 51 53 57 60 62 64 71 73 75'.split()):
                if int(num, 8) % 5 == 0:
                    count += 1
print(count)


from itertools import product
count = 0
for var in product('01234567', repeat=6):
    num = ''.join(var)
    if len(set(num)) == len(num):
        if num[0] != '0':
            if int(num, 8) % 5 == 0:
                num = num.replace('0', '2').replace('4', '2').replace('6', '2')
                num = num.replace('3', '1').replace('5', '1').replace('7', '1')
                if '11' not in num and '22' not in num:
                    count += 1
print(count)
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# Функция поиска простого числа
'''
def prime(num: int):  # 17
    for j in range(2, num):
        if num % j == 0:
            return False
    return True


print(prime(24))
'''


# Тип 16 №45250
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n) = 2 при n<3;
# F(n) = F(n − 2) + F(n − 1) − n, если n > 2 и при этом n чётно,
# F(n) =F(n − 1) − F(n − 2) + 2 × n, если n > 2 и при этом n нечётно.
#
# Чему равно значение функции F(32)?
'''
def F(n):
    if n < 3:
        return 2
    if n > 2 and n % 2 == 0:
        return F(n - 2) + F(n - 1) - n
    if n > 2 and n % 2 != 0:
        return F(n - 1) - F(n - 2) + 2 * n


print(F(32))
'''
# Ответ: 3194


# Тип 16 №6925
# Алгоритм вычисления значений функций F(n), где n — натуральное число, задан следующими соотношениями:
# F(1) = 1;
# F(2) = 2;
# F(3) = 3;
# F(n) = F(n − 3)*n при n >3.
#
# Чему равно значение функции F(11)? В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n == 2:
        return 2
    if n == 3:
        return 3
    if n > 3:
        return F(n-3) * n

    
print(F(11))
'''
# Ответ: 880


# Тип 16 №4657
# Алгоритм вычисления значения функции F(n) и G(n), где n – натуральное число, задан следующими соотношениями:
#
# F(1) = 1
# F(n) = 2 * G(n–1) + 5 * n, при n >1

# G(1) = 1
# G(n) = F(n–1) + 2 * n, при n >1
#
# Чему равно значение функции F(4) + G(4)?
# В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return 2 * G(n-1) + 5 * n

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) + 2 * n


print(F(4) + G(4))
'''
# Ответ: 89


# Тип 16 №38950
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.

# Сколько существует таких чисел n, что 1 ≤ n ≤ 500 и F(n) = 8?

'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)


count = 0
for n in range(1, 500+1):
    if F(n) == 8:
        count += 1
print(count)
'''
# Ответ: 5


# № 12248 ЕГКР 16.12.23 (Уровень: Базовый)
# Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)=1 при n≤3;
# F(n)=(n+3)×F(n−2), если n>3.
# Чему равно значение выражения F(2028)/F(2024)?
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n <= 3:
        return 1
    if n > 3:
        return (n+3) * F(n-2)


print(F(2028) / F(2024))

# Вариант 2
# F(2028) = (2031) * F(2026)
# F(2026) = (2029) * F(2024) / F(2024)
print(2031 * 2029)

# [Previous line repeated 996 more times]
# RecursionError: maximum recursion depth exceeded
'''
# Ответ: 4120899


# Тип 23 №7706
# 1. Прибавь 1
# 2. Прибавь 2
# 3. Прибавь 6
# Сколько существует программ, которые число 21 преобразуют в число 30?
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a+6, b)


print(F(21, 30))


# Вариант 2
def F(a, b):
    if a >= b:
        return a == b
    return F(a+1, b) + F(a+2, b) + F(a+6, b)


print(F(21, 30))
'''
# Ответ: 65


# Тип 23 №58490
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Прибавить 3
#
# Сколько существует программ, которые преобразуют исходное число 2 в число 20
# и при этом траектория вычислений содержит число 8 и не содержит чисел 11 и 15?
'''
def F(a, b):
    if a >= b or a == 11 or a == 15:
        return a == b
    return F(a+1, b) + F(a*2, b) + F(a+3, b)


print(F(2, 8) * F(8, 20))
'''
# Ответ: 180


# Тип 23 №6997
# 1. прибавь 1,
# 2. сделай чётное,
# 3. сделай нечётное,
# 4. умножь на 10.
#
# Первая из них увеличивает на 1 исходное число x, вторая умножает это число на 2,
# третья переводит число x в число 2x + 1, четвёртая умножает его на 10.

# Сколько существует программ, которые число 1 преобразуют в число 15?
'''
def F(a, b):
    if a >= b:
        return a == b
    return F(a+1, b) + F(a*2, b) + F(a*2+1, b) + F(a*10, b)


print(F(1, 15))
'''
# Ответ: 84


# Тип 23 №58214
# 1. Вычти 1;
# 2. Найди целую часть от деления на 3.

# Сколько существует программ, для которых при исходном числе 67 результатом является число 5,
# и при этом траектория вычислений содержит число 33?
'''
def F(a, b):
    if a <= b:
        return a == b
    return F(a-1, b) + F(a//3, b)


print(F(67, 33) * F(33, 5))
'''
# Ответ: 20

# endregion Урок: ******************************************************************


# Лера = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1. 16.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
