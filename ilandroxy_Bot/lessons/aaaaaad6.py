# region Домашка: ******************************************************************

# КЕГЭ № 8946 Джобс 02.06.2023 (Уровень: Базовый) (Е. Джобс)
# Откройте файл электронной таблицы, содержащей в каждой строке пять# натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# – квадрат наибольшего значения больше произведения остальных чисел;
# – сумма двух наибольших значений как минимум вдвое больше суммы остальных  значений в строке..
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if (max(M) ** 2) > (M[0] * M[1] * M[2] * M[3]):
        # if (M[-1] + M[-2]) / (M[0] + M[1] + M[2]) >= 2:
        if (M[-1] + M[-2]) >= (M[0] + M[1] + M[2]) * 2:
            count += 1
print(count)
'''

# Откройте файл электронной таблицы, содержащей в каждой строке пять натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены хотя бы одно условие:
# – все числа в строке равны 18;
# – сумма всех чисел строки делится на 18 без остатка.
# В ответе запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if (M.count(18) == 5) or (sum(M) % 18 == 0):
        count += 1
print(count)
'''


# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых
# выполнены оба условия:
# – в строке все числа различны;
# – количество чётных чисел превышает количество нечётных чисел.
# В ответе запишите только число
'''
count = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(M) == len(set(M)):
        c = [x for x in M if x % 2 == 0]
        n = [x for x in M if x % 2 != 0]
        if len(c) > len(n):
            count += 1
print(count)
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 24 №27698
# Текстовый файл состоит не более чем из 10**6 символов L, D и R.
# Определите длину самой длинной последовательности, состоящей из символов R.
# Хотя бы один символ R находится в последовательности.

# RRRRRRRRdRRRRRRRRRdRRRRRRRRRRRRRRRR
'''
# Вариант 1
s = open('24.txt').readline()
count = 1  # счетчик для счета длины промежуточной последоватлеьности
max_count = 0  # будет хранить в себе длину самой большой последовательности
for i in range(len(s)-1):
    # if s[i] == 'R' and s[i+1] == 'R':
    if s[i:i+2] == 'RR':
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)
'''
# Ответ: 1


# Тип 24 №27686
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов X.
# Хотя бы один символ X находится в последовательности.

# Вариант 1
'''
s = open('24.txt').readline()
count = 1  # счетчик для счета длины промежуточной последоватлеьности
max_count = 0  # будет хранить в себе длину самой большой последовательности
for i in range(len(s)-1):
    # if s[i] == 'X' and s[i+1] == 'X':
    if s[i:i+2] == 'XX':
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)
'''


# Вариант 2
'''
s = open('24.txt').readline()
s = s.replace('Y', ' ').replace('Z', ' ')
s = s.split()
maxi = 0
for x in s:
    maxi = max(maxi, len(x))
print(maxi)

# Вариант 2.2
s = open('24.txt').readline()
s = s.replace('Y', ' ').replace('Z', ' ')
print(max([len(x) for x in s.split()]))

# Вариант 2.3
print(max([len(x) for x in open('24.txt').readline().replace('Y', ' ').replace('Z', ' ').split()]))
'''

# Вариант 3
'''
print(open('24.txt').readline())  # ищем строчку через ctrl + F
print(len('XXXXXXXXXXXXXXXXXXX'))
'''
# Ответ: 19


# Тип 24 №27690
# Текстовый файл состоит не более чем из 106 символов A, B и C.
# Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.
'''
s = open('24.txt').readline()
count = 1
max_count = 0
for i in range(len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)

# Вариант 2
f = open('24.txt').readline()
f = f.replace('AA', 'A A').replace('BB', 'B B').replace('CC', 'C C')
print(max([len(x) for x in f.split()]))
'''
# Ответ: 42


# Тип 24 №48472
# Текстовый файл содержит только буквы A, C, D, F, O.
# Определите максимальное количество идущих подряд групп символов вида
# гласная + гласная + согласная.
'''
s = open('24.txt').readline()
for p in 'AAD AAF AAC OOD OOF OOC AOD AOF AOC OAD OAF OAC'.split():
    s = s.replace(p, '*')
for x in 'ACDFO':
    s = s.replace(x, ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 4


# Тип 24 №59848
# Текстовый файл состоит не более чем из 106 символов латинского алфавита.
# Необходимо найти самую длинную подстроку, которая может являться числом в 24 системе счисления.
# В ответ записать длину последовательности символов, которая может являться числом в 24 системе счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
s = open('24.txt').readline()
for x in alphabet[24:]:
    s = s.replace(x, ' ')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 40


# Тип 24 №27689
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите максимальную длину цепочки вида XYZXYZXYZ...
# (составленной из фрагментов XYZ, последний фрагмент может быть неполным).
'''
print(open('24.txt').readline())
print(len('XYZXYZXYZXYZX'))
'''
# Ответ: 13


# Тип 24 №58327
# Текстовый файл состоит не более чем из 106 символов арабских цифр (0,1,...,9).
# Определите максимальное количество идущих подряд цифр, расположенных в невозрастающем порядке.
'''
s = open('24.txt').readline()
count = 1
max_count = 0
for i in range(len(s)-1):
    if int(s[i]) >= int(s[i+1]):
        count += 1
        max_count = max(max_count, count)
    else:
        count = 1
print(max_count)
'''
# Ответ: 11


# Тип 24 №36037
# Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z.
# Определите максимальное количество идущих подряд символов, среди которых нет подстроки XZZY.
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# XZZ ZZY
'''
s = open('24.txt').readline()
s = s.replace('XZZY', 'XZZ ZZY')
print(max([len(x) for x in s.split()]))
'''
# Ответ: 1713


# endregion Урок: ******************************************************************


# Лера = [2.1, 5.1, 6.1, 8.1, 9.1, 12.1, 14.1. 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ  = []
# на следующем уроке: Разбираем 24 номера на строки и кол-во повторений символов
