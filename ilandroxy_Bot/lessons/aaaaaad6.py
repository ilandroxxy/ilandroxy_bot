# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Единицы измерения информации
# 1 бит - минимальная единица измерения информации
# 1 байт = 8 бит = 2**3 бит
# 1 Кбайт = 1024 байт = 2**10 байт = 2**13 бит
# 1 Мбайт = 1024 Кбайт = 2**10 Кбайт = 2**20 байт = 2**23 бит

# 23 Мбайт = 23 * 2**23 бит = 23 * 2**20 байт


# Формулы для 7 номера с изображением
# I (бит) = pixels (шт) * i (бит)
# Вес картинки = кол-во пикселей * бит на один пиксель

# colors = 2 ** i (бит)
# Кол-во цветов = 2 ** бит на один пиксель


# Тип 7 №48428
# Музыкальный фрагмент был записан в формате стерео (двухканальная запись),
# оцифрован с частотой дискретизации 44 кГц и разрешением 16 бит и
# сохранён без использования сжатия данных. Получился файл размером 120 Мбайт.
#
# Затем тот же фрагмент был записан в формате квадро (четырёхканальная запись)
# с частотой дискретизации 88кГц и тоже сохранён без сжатия, при этом получился
# файл размером 720 Мбайт. С каким разрешением проводилась вторая запись?
# В ответе укажите целое число — разрешение в битах, единицу измерения писать не нужно.

# I (бит) = a (шт) * b (Гц) * c (бит) * t (сек)
'''
I1 = 120 * 2 ** 23
a1 = 2
b1 = 44000
c1 = 16
t = I1 / (a1 * b1 * c1)

I2 = 720 * 2 ** 23
a2 = 4
b2 = 88000
# c2 - ?
c2 = I2 / (a2 * b2 * t)


print(c2)  # 23.999999999999996
'''
# Ответ: 24


# Тип 7 №57414
# Голосовое сообщение продолжительностью 90с было записано в формате стерео и оцифровано
# с глубиной кодирования 16 бит и частотой дискретизации 48000 измерений в секунду.
# Сжатие данных не использовалось. Файл с оцифрованным голосовым сообщением был передан
# по каналу связи, пропускная способность которого 3200 бит/с.
# Сколько секунд длилась передача файла? В ответе запишите целое число, единицу измерения указывать не нужно.
'''
t = 90
a = 2
c = 16
b = 48000
I = a * b * c * t  # бит

U = 3200  # бит / сек
T = I / U
print(T)
'''
# 43200


# Тип 7 №55594
# Книгу объёмом 1 Мбайт записали как аудиокнигу. Запись велась в формате стерео (2 канала)
# с частотой 32 кГц и разрешением 16 бит. За одну минуту записывалось
# в среднем 1,5 Кбайт текста. Сжатие данных позволило сократить размер полученного звукового файла на 80%.
# Для удобства использования запись разделили на фрагменты со средним размером 20 Мбайт.
# Определите количество полученных фрагментов.
'''
t = ((1 * 2 ** 23) / (1.5 * 2 ** 13)) * 60
a = 2
b = 32000
c = 16
I = (a * b * c * t) * 0.2
print(I)  # бит
print((I / (2 ** 23)) / 20)
'''
# Ответ: 50



# № 11630
# (М. Ишимов) Текстовый файл состоит из символов, обозначающих знак «+» и цифры от 1 до 9 включительно.
# Определите в прилагаемом файле максимальное количество идущих подряд символов
# (длину непрерывной подпоследовательности, начинающаяся с цифры),
# которые могут представлять корректную запись арифметического выражения
# из натуральных чисел и символов «+» между ними.
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()


while '++' in s:
    s = s.replace('++', ' ')

maxi = 0
for x in s.split():
    if maxi < len(x):
        print(x)
        if x[0] != '+' and '+' in x:
            maxi = len(x)

            print(len(x), x)
'''
# Ответ: 162

'''
s = open('24.txt').readline()
s = s.replace('Q', 'R').replace('W', 'R')
s = s.replace('2', '1').replace('4', '1')
while '11' in s or 'RR' in s:
    s = s.replace('11', '1 1').replace('RR', 'R R')
print(max([len(x) for x in s.split()]))
'''


# from string import *
# alphabet = ascii_uppercase
# print(alphabet)
'''
s = open('24.txt').readline()
maxi = 0
for a in 'ABCDEFGHIJKLM':
    s = s.replace(a, f'{a} {a}')
    maxi = max([len(x) for x in s.split()])
    s = s.replace(f'{a} {a}', a)
print(maxi)
'''
# Ответ: 322

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Лера = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25]
# КЕГЭ  = []
# на следующем уроке: 9,10,14,17,24
