
# region Домашка: ******************************************************************



# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************

# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1) Строится двоичная запись числа N.
# 2) К этой записи дописываются ещё несколько разрядов по следующему правилу:
# если N чётное, то к нему слева дописывается 1, а справа - 10, если N нечетное – слева дописывается 11 и справа 0;
# 3) Результат переводится в десятичную систему и выводится на экран.
# Сколько различных результатов, принадлежащих отрезку [800; 1500], может быть получено в результате работы автомата?
'''
S = set()
for n in range(1, 100000+1):
    s = bin(n)[2:]

    if n % 2 == 0:
        s = '1' + s + '10'
    else:
        s = '11' + s + '0'

    r = int(s, 2)
    if 800 <= r <= 1500:
        S.add(r)
print(len(S))
'''
# Ответ: 44


# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наименьшего натурального числа А формула
# (ДЕЛ(x, 2) → ¬ДЕЛ(x, 3))∨(x + A ≥ 100)
# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?
'''
# Вариант 1
def F(x, A):
    return ((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)

for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break

# Вариант 2
def F(x):
    return ((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)

for A in range(1, 1000):
    if all(F(x) for x in range(1, 1000)):
        print(A)
        break

# Вариант 3
def F(x):
    return ((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)

R = []
for A in range(1, 1000):
    if all(F(x) for x in range(1, 1000)):
        R.append(A)
print(min(R))

# Вариант 4
R = []
for A in range(1, 1000):
    if all((((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)) for x in range(1, 1000)):
        R.append(A)
print(min(R))

# Вариант 5
print(min([A for A in range(1, 1000) if all((((x % 2 == 0) <= (x % 3 != 0)) or (x + A >= 100)) for x in range(1, 1000))]))
'''
# Ответ: 94


# Тип 15 № 15986 i
# Для какого наибольшего целого неотрицательного числа A выражение
#
# (y + 2x ≠ 48) ∨ (A < x) ∨ (x < y)
#
# тождественно истинно, то есть принимает значение 1 при любых целых неотрицательных x и y?
'''
# Вариант 1
def F(x, y):
    return (y + 2*x != 48) or (A < x) or (x < y)

for A in range(0, 1000):
    if all(F(x, y) for x in range(0, 100) for y in range(0, 100)):
        print(A)

# Вариант 2
print(max([A for A in range(0, 1000) if all(((y + 2*x != 48) or (A < x) or (x < y)) for x in range(0, 100) for y in range(0, 100))]))
'''
# Ответ: 15



# Тип 15 № 39244 i
# Обозначим через m & n поразрядную конъюнкцию неотрицательных целых чисел m и n.
#
# Так, например, 14 & 5 = 1110_2 & 0101_2 = 0100_2 = 4. Для какого наименьшего неотрицательного целого числа А формула
# print(14 & 5)
# (x & 105 = 0) → ((x & 58 ≠ 0) → (x & А ≠ 0))
#
# тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении переменной x)?

# A → B  ==>  A <= B  ==>  not(A) or B
'''
# Вариант 1
def F(x):
    return (x & 105 == 0) <= ((x & 58 != 0) <= (x & A != 0))

for A in range(0, 1000):
    if all(F(x) for x in range(0, 100) ):
        print(A)
        break

# Вариант 2
print(min([A for A in range(0, 1000) if all(((x & 105 == 0) <= ((x & 58 != 0) <= (x & A != 0))) for x in range(0, 100))]))
'''
# Ответ: 18



# Тип 15 № 46973
# На числовой прямой даны два отрезка: P=[69;91] и Q=[77;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
# (x∈Q)→(((x∈P)≡(x∈Q))∨(¬(x∈P)→(x∈A)))
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).

def F(x):
    P = 69 <= x <= 91
    Q = 77 <= x <= 114
    A = a1 <= x <= a2
    return Q <= ((P == Q) or ((not P) <= A))
    # return (77 <= x <= 114) <= (((69 <= x <= 91) == (77 <= x <= 114)) or ((not(69 <= x <= 91)) <= (a1 <= x <= a2)))

R = []
L = [i/5 for i in range(60*5, 120*5)]
print(L)
for a1 in L:
    for a2 in L:
        if all(F(x) for x in L):
            R.append(a2 - a1)
print(min(R))

# Ответ: 23


# endregion Урок: ******************************************************************


# todo: Никита2 = [5, 17.1, 22]
# на прошлом уроке: пропуск урока за счет ученика
# на следующем уроке: Разбираем 9, 24 номера. Или теорию игр