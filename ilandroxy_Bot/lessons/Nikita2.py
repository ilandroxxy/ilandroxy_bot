
# region Домашка: ******************************************************************



# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************

# 2. (А. Кабанов) В файле 17-4.txt содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от 0 до 10 000 включительно.
# Рассматривается множество элементов последовательности, которые удовлетворяют следующим условиям:
# − кратны 3, но не кратны 9;
# − последняя цифра не менее 4.
# Найдите количество таких чисел и целую часть их среднего арифметического.
'''
M = [int(i) for i in open('17.txt')]
count = 0
summ = 0
for x in M:
    if x % 3 == 0 and x % 9 != 0:
        # if str(x)[-1] in '456789':
        if x % 10 >= 4:
            count += 1
            summ += x
print(count, int(summ / count))
'''
# Ответ: 247 5706


#
# № 4872 (Уровень: Средний)

# (А. Сардарян) На вход алгоритма подаётся два натуральных числа N и M. Алгоритм строит по ним новое число R следующим образом.
#
# 1) Вычисляется произведение P1 всех ненулевых чётных цифр чисел N и M.
# 2) Вычисляется произведение P2 всех нечётных цифр чисел N и M.
# 3) Результат R вычисляется как модуль разности P1 и P2.
#
# Например, для N = 256 и M = 108 получаем P1 = 2·6·8 = 96 и P2 = 5·1 = 5, так что R = |96 - 5|= 91.
# Укажите минимальное число M, при котором для N = 120 получается R = 29.
'''
def F(A):
    temp = 1
    for x in A:
        temp *= x
    return temp

for m in range(1, 1000):
    n = 120
    P = [int(i) for i in str(n)] + [int(i) for i in str(m)]
    P1 = [i for i in P if i != 0 and i % 2 == 0]
    P2 = [i for i in P if i % 2 != 0]
    p1, p2 = F(P1), F(P2)

    r = abs(p1 - p2)

    if r == 29:
        print(m)
        break
 '''
# Ответ: 238


'''
s = '22222'
print(s.count('2') * 2)

s = '7777'
print(s.count('7') * 7)
'''


# № 4693 Демоверсия 2023 (Уровень: Базовый)
#  На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 0, а затем два левых разряда заменяются на 10;
# б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 1, а затем два левых разряда заменяются на 11.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
#
# Например, для исходного числа 6_10 = 110_2 результатом является число 1000_2 = 8_10,
# а для исходного числа 4_10 = 100_2 результатом является число 1101_2 = 13_10.
#
# Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число R, большее 40.
# В ответе запишите это число в десятичной системе счисления.


# Вариант 1
'''
for n in range(1, 1000):
    s = bin(n)[2:]
    # if sum([int(i) for i in s]) % 2 == 0:
    if s.count('1') % 2 == 0:
        s = '10' + s[2:] + '0'
    else:
        s = '11' + s[2:] + '1'

    r = int(s, 2)  # 2 <= n <= 36

    if r > 40:
        print(n)
        break
'''

# Вариант 2
'''
for n in range(1, 1000):
    temp = n
    M = []
    while n > 0:
        M.append(n % 2)
        n //= 2
    M.reverse()

    if sum(M) % 2 == 0:
        M.append(0)
        M = [1, 0] + M[2:]
    else:
        M.append(1)
        M = [1, 1] + M[2:]

    r = 0
    M.reverse()
    for i in range(0, len(M)):
        r += M[i] * 2 ** i

    if r > 40:
        print(temp)
        break
'''
# Ответ: 16



# На вход алгоритма подаётся натуральное число N. Алгоритм стронт по нему новое число R следующим образом.
# Строится двоичная запись числа N.
# К этой записи дописываются справа ещё два разряда по следующему правилу:
# a) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец числа (справа).
# Например, запись 11100 преобразуется в запись 111001;
# б) над этой записью производятся те же действия - справа дописывается остаток от деления суммы цифр на 2.
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R.
#
# Сколько различных чисел, принадлежащих отрезку [20; 50], могут появиться на экране в результате работы автомата?
'''
M = set()
for n in range(1, 10000+1):
    s = bin(n)[2:]
    for _ in range(2):
        s += str(s.count('1') % 2)

    r = int(s, 2)

    if 20 <= r <= 50:
        M.add(r)

print(len(M))
'''
# Ответ: 8

'''
M = [1, 2, 3, 1, 2, 3, 1, 2, 3]
print(set(M))

'''


# endregion Урок: ******************************************************************


# todo: Никита2 = [5, 17.1]
# на прошлом уроке: Разобрали 17 номера с Полякова и повторили несколько 5 задач на системы счисления.
# на следующем уроке: Добить 17, 5 номера. Разбираем 9, 24 номера.