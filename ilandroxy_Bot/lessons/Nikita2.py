
# region Домашка: ******************************************************************



# endregion Домашка: ******************************************************************



# region Урок: ******************************************************************
print(hex(123)[-2:])


# № 6087 /dev/inf 02.2023 (Уровень: Сложный)
# (А. Рогов) На числовой прямой даны три отрезка: D = [15; 40], C = [21; 63] и А = [7; E].
# Укажите наименьшее возможное целое значение E такое, что формула
#
# (x ∈ D) → ((¬(x ∈ C) /\ ¬(x ∈ A)) → ¬(x ∈ D))
#
# истинна (то есть принимает значение 1 при любом значении переменной х).
'''
def F(x, E):
    D = 15 <= x <= 40
    C = 21 <= x <= 63
    A = 7 <= x <= E
    return D <= (((not C) and (not A)) <= (not D))

R = []
M = [i/4 for i in range(1*4, 70*4)]
for E in M:
    if all(F(x, E) for x in M):
        print(E)
        break
'''
# Показать ответ: 21  (20.75)


#
# № 5133 /dev/inf 11.22 (Уровень: Базовый)
# (А. Рогов) Алгоритм вычисления значения функции

# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)= 1 при n<3;
# F(n)= F(n-1) + n - 1 если n > 2 и при этом n чётно;
# F(n)= F(n-2)+ 2*n - 2, если n > 2 и при этом n нечётно.
#
# Чему равно значение выражения F(2048)−F(2045)?
'''
# F(2048) = F(2047) + 2048 - 1
# F(2047) = F(2045)+ 2*2047 - 2  − F(2045)
print((2048 - 1) + (2*2047 - 2))
'''
# Показать ответ: 6139


# № 5131 /dev/inf 11.22 (Уровень: Средний)
# (А. Рогов) Операнды арифметического выражения записаны в системе счисления с основанием 17.
#
# 149x3_17 + x612_17 - x54x_17
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита 17-ричной системы счисления.
# Определите сумму всех значений x, при которых значение данного арифметического выражения кратно 7.
# В ответе укажите значение суммы в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
ALPHABET = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
summ = 0
for x in ALPHABET[:17]:  # алфавита 17-ричной системы счисления
    A = int(f'149{x}3', 17) + int(f'{x}612', 17) - int(f'{x}54{x}', 17)
    if A % 7 == 0:
        summ += int(x, 17)
        # summ += ALPHABET.index(x)
print(summ)
'''
# Ответ: 19


# № 6900 (Уровень: Базовый)
# На выполнение Редактору дана следующая программа:
#
# ПОКА нашлось(33) ИЛИ нашлось(11) ИЛИ нашлось(22)
#    ЕСЛИ нашлось(33)
#       ТО заменить(33,12)
#    ЕСЛИ нашлось(11)
#       ТО заменить(11,32)
#    ЕСЛИ нашлось(22)
#       ТО заменить(22,31)


# На вход программе поступает строка, содержащая 38 цифр 1, 34 цифры 2 и 30 цифр 3
#
# Какая максимальная сумма цифр строки может быть получена в результате работы приведённой выше программы?
'''
# 32323233232111111111
# 3232323323232323232323131

s = '32' * 30 + '1' * 38 + '2' * 4
while "33" in s or "11" in s or "22" in s:
  if "33" in s:
    s = s.replace("33", "12", 1)
  if "11" in s:
    s = s.replace("11", "32", 1)
  if "22" in s:
    s = s.replace("22", "31", 1)

summ = sum([int(i) for i in s if i.isdigit()])
print(summ)
'''
# Ответ: 253

'''
for x in range(0, 67):

  a = [3,x,2,1]
  a.reverse()
  A = 0
  for i in range(0, len(a)):
    A += a[i]*81**i

  b = [1,7,x,4]
  b.reverse()
  B = 0
  for i in range(0, len(b)):
    B += b[i]*67**i

  if (A+B) % 35 == 0:
    print((A+B)//35)
'''

# 6
'''
import turtle as t
t.left(90)
t.speed(10)
l = 20

for i in range(4):
  t.forward(10*l)
  t.right(90)
t.up()

t.right(90)
t.forward(5*l)
t.left(90)
t.down()
for i in range(4):
  t.forward(10*l)
  t.right(90)

for x in range(-2, 50):
  for y in range(-3, 15):
    t.goto(x*l,y*l)
    t.dot(8, "red")
t.done
'''

'''
def f(a,b):
    if a > b or a == 20:        
        return 0
    elif a == b:        
        return 1
    else:        
        return f(a + 1,b) + f(a * 2,b)
print(f(1,10) * f(10,40))
'''


# endregion Урок: ******************************************************************

import useful
print(useful.Who_Is_Name())

# todo:    Никита2   = [5, 3, 9, 17, 19-21, 22, 24.1]
# todo: Никита2 КЕГЭ = [16, 25]
# на прошлом уроке: Решали разной сложности задачи: 6, 14, 12 - все задачи среднего и сложного уровня
# на следующем уроке:
