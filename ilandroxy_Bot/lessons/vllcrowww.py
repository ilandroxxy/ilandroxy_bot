# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************


# Как найти сумму цифр строки
'''
s = '213y hujhi 123 '

# Вариант 1
# summa1 = s.count('1') + s.count('2') * 2 + s.count('3') * 3 + s.count('4') * 4 ...

# Вариант 2
summ2 = 0
for i in range(1, 9+1):
    summ2 += s.count(str(i)) * i
print(summ2)

# Вариант 3
summa3 = 0
for x in s:
    if x.isdigit():
        summa3 += int(x)
print(summa3)

# Вариант 4
summa4 = sum([int(x) for x in s if x.isdigit()])
print(summa4)

# генератор списка: [что кладем в список | откуда это берем | при каком условии кладем]
'''




# Тип 12 №55808
# Исполнитель Редактор получает на вход строку начинающуюся на 3 и содержащую далее n пятерок (5), где n > 3.
#
# На выполнение Редактору дана следующая программа:
# ПОКА нашлось (25) ИЛИ нашлось (355) ИЛИ нашлось (555)
#   ЕСЛИ нашлось (25)
#       ТО заменить (25, 3)
#   ЕСЛИ нашлось (355)
#       ТО заменить (355, 52)
#   ЕСЛИ нашлось (555)
#       ТО заменить (555, 23)
#
# Найдите минимальное значение n, при котором сумма цифр конечной строки будет равна 27.
'''
for n in range(4, 100):
    s = '3' + '5' * n  # Исходная строка s
    while '25' in s or '355' in s or '555' in s:
        if '25' in s:
            s = s.replace('25', '3', 1)
        if '355' in s:
            s = s.replace('355', '52', 1)
        if '555' in s:
            s = s.replace('555', '23', 1)
    # print(s)  # Получившееся строка s

    if sum([int(x) for x in s if x.isdigit()]) == 27:
        print(n)
        break
'''
# Ответ: 16


# Тип 14 №23914
# Значение арифметического выражения: 9**11*3**20 - 3**9 - 27 записали в системе счисления с основанием 3.
# Сколько цифр 2 содержится в этой записи?
'''
x = 9**11 * 3**20 - 3**9 - 27
n = 3
M = []
while x > 0:
    M.append(x % n)
    x //= n
M.reverse()  # M = M[::-1]
print(M.count(2))

# Вариант 2
x = 9**11 * 3**20 - 3**9 - 27
n = 3
s = ""
while x > 0:
    s += str(x % n)
    x //= n
s = s[::-1]
print(s.count('2'))
'''
# Ответ: 38.


# Тип 14 №48390
# Операнды арифметического выражения записаны в системах счисления с основаниями 9 и 8:
#
# x01y4_9 + xy544_8
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите значения x и y, при которых значение данного арифметического выражения будет наименьшим и кратно 89.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 89
# и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for x in alphabet[:8]:
    for y in alphabet[:8]:
        A = int(f'{x}01{y}4', 9)
        B = int(f'{x}{y}544', 8)
        if (A + B) % 89 == 0:
            print((A + B) // 89)
            exit()
'''
# Ответ: 262

# B = int(f'345544', 37)  # ValueError: int() base must be >= 2 and <= 36, or 0


# Тип 5 №33475
# Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.
# 3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.
# 4. Результат переводится в десятичную систему.
#
# При каком наименьшем числе N в результате работы алгоритма получится R>180?
# В ответе запишите это число в десятичной системе счисления.
'''
for n in range(2, 1000):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.

    s = s + s[-2]  # 2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.
    s = s + s[1]  # 3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.

    r = int(s, 2)  # 4. Результат переводится в десятичную систему.
    if r > 180:
        print(n)
        break
'''
# Ответ: 46


# Тип 5 №15791
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится двоичная запись числа N.
# 2. Складываются все цифры полученной двоичной записи.
# В конец записи (справа) дописывается остаток от деления суммы на 2.
# 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
# 4. Результат переводится в десятичную систему и выводится на экран.
#
# Какое наименьшее число, большее 97, может появиться на экране в результате работы автомата?
'''
R = []
for n in range(1, 1000):
    s = bin(n)[2:]
    for i in range(2):
        s = s + str(s.count('1') % 2)
    r = int(s, 2)
    if r > 97:
        R.append(r)
print(min(R))
'''
# Ответ: 102


# Тип 5 №16033
# На вход алгоритма подаётся натуральное число N.
# Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится двоичная запись числа N.
# 2) К этой записи дописываются справа ещё два разряда по следующему правилу:
#  а) если N чётное, в конец числа (справа) дописывается сначала ноль, а затем единица.
#  б) если N нечётное, справа дописывается сначала единица, а затем ноль.

# Укажите минимальное число R, которое больше 102 и может являться результатом работы данного алгоритма.
# В ответе это число запишите в десятичной системе счисления.
'''
R = []
for n in range(1, 1000):
    s = bin(n)[2:]
    if n % 2 == 0:
        s = s + '01'
    else:
        s = s + '10'
    r = int(s, 2)
    if r > 102:
        R.append(r)
print(min(R))
'''
# Ответ: 105


# Тип 5 №59683
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число N делится на 3, то в этой записи дописываются справа три последние двоичные цифры;
# 6) если число N на 3 не делится, то остаток от деления умножается на 3,
# переводится в двоичную запись и дописывается в конец числа.
# 3. Результат переводится в десятичную систему и выводится на экран.

# Укажите максимальное число R, не превышающее 170, которое может быть получено с помощью описанного алгоритма.
# В ответе запишите это число в десятичной системе счисления.
'''
R = []
for n in range(1, 1000):
    s = bin(n)[2:]
    if n % 3 == 0:
        s = s + s[-3:]
    else:
        x = (n % 3) * 3
        s = s + bin(x)[2:]
    r = int(s, 2)

    if r < 170:
        R.append(r)
print(max(R))
'''
# Ответ: 166



# endregion Урок: ******************************************************************


# Марго = [2.1, 6.1, 12.1, 14.1]
# КЕГЭ  = []
# на следующем уроке:
