# region Домашка: ***************************************************************

# Дана программа для исполнителя Редактор:
# ПОКА нашлось(01) ИЛИ нашлось(02) ИЛИ нашлось(03)
#   заменить(01, 30)
#   заменить(02, 3103)
#   заменить(03, 1201)
# Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 31 единицу, 24 двойки и 46 троек.
# Сколько троек было в исходной строке?
'''
for a in range(46):
    for b in range(46):
        for c in range(46):
            s = '0' + a*'1' + b*'2' + c*'3'
            while '01' in s or '02' in s or '03' in s:
                s = s.replace('01', '30', 1)
                s = s.replace('02', '3103', 1)
                s = s.replace('03', '1201', 1)
            if s.count('1') == 31 and s.count('2') == 24 and s.count('3') == 46:
                print(c)
'''

# endregion Домашка: ************************************************************


# region Урок: ******************************************************************

# Задание 7
# I = pixels * i
# colors = 2 ** i
'''
pixels = 2688 * 344
i = 12 * (2 ** 3)
I = pixels * i  # бит
U = 49152  # бит / с
print(I / U)
'''
# Ответ: 1806


# Задание 11
'''
symbols = 491
alphabet = 9585
print(alphabet, 2 ** 14)
i = 14  # бит на один символ
bit = symbols * i
print(bit / 8)  # 859.25 -> 860
byte = 860
I = byte * 23552  # байт
print(I / (2**10))  # Кбайт
'''
# Ответ: 19780


# Единицы измерения информации:
# - 1 бит - минимальная единица измерения информации
# - 1 байт - 8 бит - 2**3 бит
# - 1 Кбайт - 1024 байт - 2**10 байт - 2**13
# - 1 Мбайт - 1024 Кбайт - 2**10 Кбайт - 2**23
# - 1 Гбайт - 1024 Мбайт - 2**33 бит


# Тип 7 №11110
# Какой минимальный объём памяти (в Кбайт) нужно зарезервировать,
# чтобы можно было сохранить любое растровое изображение размером 320×640
# пикселей при условии, что в изображении могут использоваться 256 различных цветов?
# В ответе запишите только целое число, единицу измерения писать не нужно.
'''
pixels = 320 * 640
colors = 256  # -> i = 8
i = 8
I = pixels * i  # бит
print(I / (2 ** 13))
'''
# Ответ: 200


# Тип 7 №28545
# Для проведения эксперимента создаются изображения, содержащие случайные наборы
# цветных пикселей. Размер изображения — 320x240пк, при сохранении изображения
# каждый пиксель кодируется одинаковым числом битов, все коды пикселей
# записываются подряд, методы сжатия не используются. Размер файла
# не должен превышать 100 Кбайт, при этом 20 Кбайт необходимо выделить для служебной информации.
# Какое максимальное количество различных цветов и оттенков можно использовать в изображении?
'''
pixels = 320 * 240
I = 80 * 2 ** 13
# I = pixels * i
# i = I / pixels
i = I / pixels  # 8.533 -> 8
colors = 2**8
print(colors)
'''
# Ответ: 256


# Тип 7 №17373
# Автоматическая фотокамера с 200 Кбайт видеопамяти производит растровые
# изображения c фиксированным разрешением и 8-цветной палитрой.
# Сколько цветов можно будет использовать в палитре,
# если увеличить видеопамять до 400 Кбайт?
'''
I = 200 * 2 ** 13
colors = 8  # -> 2**3 цветов -> 3 бит на пиксель
i = 3
pixels = I / i
print(pixels)

I2 = 400 * 2 ** 13
i2 = I2 / pixels
print(i2)
print(2 ** i2)
'''
# Ответ: 64


# Тип 7 №63023
# Камера наблюдения каждые n секунд (n — целое число) делает фотографию
# с разрешением 1024×768 пикселей и палитрой 4096 цветов.
# Фотографии передаются по каналу с пропускной способностью 200 Кбайт/сек,
# при этом используются методы сжатия, позволяющие уменьшить размер изображения в среднем на 20%.
#
# Определите минимально возможное значение n, при котором
# возможна передача в режиме реального времени.
'''
pixels = 1024 * 768
colors = 4096  # -> 2**12 -> i = 12
i = 12
I = pixels * i
I = I * (1 - 0.2)
print(I)

U = (200 * 2 ** 13)  # бит /сек
n = I / U
print(n)  # 4.608 -> 5
'''
# Ответ: 5


# Тип 7 №35896
# В информационной системе хранятся изображения размером 1024×768 пикселей.
# Методы сжатия изображений не используются. Каждое изображение дополняется
# служебной информацией, которая занимает 640 Кбайт.
# Для хранения 2048 изображений потребовалось 2 Гбайт.
# Сколько цветов использовано в палитре каждого изображения?
'''
I = 2 * 2**33  # бит
I1 = I / 2048
I1 = I1 - (640 * 2**13)
pixels = 1024 * 768
i = I1 / pixels
print(2 ** i)
'''
# Ответ: 16


# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# todo Разобраться с задачкой из практики https://stepik.org/lesson/1231665/step/9?unit=1245248
# На вход приведённой выше программе поступает строка, начинающаяся с цифры «3»,
# а затем содержащая n цифр «5» (3 <n< 10000).
#
# Определите наибольшее возможное значение суммы числовых значений цифр
# в строке, которая может быть результатом выполнения программы.
'''
R = []
for n in range(3+1, 10000):
    s = '3' + n*'5'
    while '333' in s or '555' in s:
        if '555' in s:
            s = s.replace('555', '3', 1)
        else:
            s = s.replace('333', '5', 1)
    R.append(sum(map(int, s)))
print(max(R))
'''
'''
maxi = 0
for n in range(3+1, 10000):
    s = '3' + n*'5'
    while '333' in s or '555' in s:
        if '555' in s:
            s = s.replace('555', '3', 1)
        else:
            s = s.replace('333', '5', 1)
    # maxi = max(maxi, sum(map(int, s)))
    if maxi < sum(map(int, s)):
        maxi = sum(map(int, s))
        print(maxi)
'''

# endregion Разобрать: *************************************************************


# Марго = [2.1, 5.1, 6.1, 7.1, 8.1, 9.1, 11.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 24.1, 25.1]
# КЕГЭ  = []
# на следующем уроке: Разбираем 11 номер и разбираем 7 номер на музыку
