# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************
'''
n = int(input())
r = range(1, n+1)
print(r)
print(list(r))
'''

# todo придумать как положить сразу два числа в список через генератор
'''
n = int(input())
# divisors = {i for i in range(1, n + 1) if n % i == 0}     # не оптимизированный
divisors = sorted({i for i in range(1, int(n**0.5) + 1) if n % i == 0})
print(divisors)   # 24: {1, 2, 3, 4, 24**0.5,  6, 8, 12, 24}
'''

'''
string = input()
numPlus = 0
numStar = 0
for symb in string:
    if symb == '+':
        numPlus += 1
    if symb == '*':
        numStar += 1
print(f'Символ + встречается {numPlus} раз')
print(f'Символ * встречается {numStar} раз')
'''
'''
string = input()
M = [symb for symb in string if symb in '+*']
print(f'Символ + встречается {M.count("+")} раз')
print(f'Символ * встречается {M.count("*")} раз')
'''


# Тип 12 №10477
# Какая строка получится в результате применения приведённой ниже программы к строке,
# состоящей из 1000 идущих подряд цифр 8? В ответе запишите полученную строку.
#
# ПОКА нашлось (999) ИЛИ нашлось (888)
#   ЕСЛИ нашлось (888)
#     ТО заменить (888, 9)
#   ИНАЧЕ заменить (999, 8)
'''
s = '8' * 1000
while '999' in s or '888' in s:
    if '888' in s:
        s = s.replace('888', '9', 1)
    else:
        s = s.replace('999', '8', 1)
print(s)
'''
# Ответ: 8998


# Тип 12 №46970
# Дана программа для редактора:
#
#     ПОКА НЕ нашлось (00)
#         заменить (01, 210)
#         заменить (02, 3101)
#         заменить (03, 2012)
#
# Известно, что исходная строка начиналась с нуля и заканчивалась нулём,
# а между ними содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 70 единиц, 56 двоек и 23 тройки.
# Сколько цифр было в исходной строке?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'

            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '3101', 1)
                s = s.replace('03', '2012', 1)

            if s.count('1') == 70 and s.count('2') == 56 and s.count('3') == 23:
                print(x+y+z+2)
'''
# Ответ: 40


# Тип 12 №40728
# Дана программа для редактора:
#     ПОКА нашлось (1111)
#         заменить (1111, 22)
#         заменить (222, 1)

# Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр.
# При какой наименьшей длине исходной строки результат работы данной программы
# будет содержать наибольшее возможное число единиц?
'''
maxi = 0
for n in range(201, 1000):
    s = '1' * n

    while '1111' in s:
        s = s.replace('1111', '22', 1)
        s = s.replace('222', '1', 1)

    if maxi < s.count('1'):
        maxi = s.count('1')
        print(n, maxi)
'''
# Ответ: 201


# Тип 14 №39243
# Значение выражения 4**34 + 5*4**22 + 4**13 + 2*4**9 + 82 записали в системе счисления с основанием 16.
# Сколько разных цифр встречается в этой записи?
'''
x = 4**34 + 5*4**22 + 4**13 + 2*4**9 + 82
M = []
while x > 0:
    M.append(x % 16)
    x //= 16
M.reverse()
print(set(M))
print(len(set(M)))  # Сколько разных цифр встречается в этой записи?
'''


# Тип 14 №48392
# Операнды арифметического выражения записаны в системах счисления с основаниями 9 и 12:
# 2y66x_9 + x0y1_12
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите значения x и y, при которых значение данного арифметического выражения будет наименьшим и кратно 170.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 170
# и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for x in alphabet[:9]:
    for y in alphabet[:9]:
        A = int(f'2{y}66{x}', 9)  # 2 <= n <= 36
        B = int(f'{x}0{y}1', 12)
        if (A+B) % 170 == 0:
            print((A+B) // 170)
            exit()
'''
# Ответ: 169


# Тип 14 №55601
# В системе счисления с основанием p выполняется равенство y4y + y65 = xz23.
# Буквами x, y и z обозначены некоторые цифры из алфавита системы счисления с основанием p.
# Определите значение числа xyz_p и запишите это значение в десятичной системе счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for p in range(7, 36+1):
    for x in alphabet[:p]:
        for y in alphabet[:p]:
            for z in alphabet[:p]:
                if int(f'{y}4{y}', p) + int(f'{y}65', p) == int(f'{x}{z}23', p):
                    print(int(f'{x}{y}{z}', p))
'''
# Ответ: 150


# endregion Урок: ******************************************************************


# Марго = [2.1, 6.1, 12.1, 14.1]
# КЕГЭ  = []
# на следующем уроке:
