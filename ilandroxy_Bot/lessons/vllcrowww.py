# region Домашка: ******************************************************************

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************
'''
f = open('17.txt')
print(f)  # <_io.TextIOWrapper name='17.txt' mode='r' encoding='UTF-8'>
f.close()
'''

'''
with open('17.txt', 'r') as f:
    print(f)
'''
# Здесь файл закрыт
'''
with open('17.txt', 'r') as f:
    print(f.readlines())
'''
'''
for s in open('17.txt'):  # пробегаем все строки файла 
    print(s)
'''
'''
# Считывание файла 17.txt для успешного решения задачи
M = [int(x) for x in open('17.txt')]
print(M)
'''

# Разбираем типы задач для 17 номера:
'''
M = [1, 2, 3, 4, 5]

# 1. Назовём парой два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()


# 2. В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''


# Тип 17 №37372
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000. Определите и запишите в ответе сначала количество пар элементов
# последовательности, у которых разность элементов кратна 45 и хотя бы один из элементов кратен 18,
# затем максимальную из разностей элементов таких пар. В данной задаче под парой подразумевается
# два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if abs(x - y) % 45 == 0:
            if abs(x) % 18 == 0 or abs(y) % 18 == 0:
                count += 1
                maxi = max(maxi, x - y)
print(count, maxi)


M = [int(x) for x in open('17.txt')]
R = []
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if abs(x - y) % 45 == 0:
            if abs(x) % 18 == 0 or abs(y) % 18 == 0:
                R.append(x - y)
print(len(R), max(R))
'''
# Ответ: 92471 9945

# print(20 % 18)
# print(-20 % 18)


# Тип 17 №58484
# Файл содержит последовательность натуральных чисел, не превышающих 20000.
# Назовём парой два идущих подряд элемента последовательности.
#
# Определите количество пар, для которых выполняются следующие условия:
# — ровно одно число в паре четырёхзначное;
# — сумма квадратов элементов пары без остатка делится на наименьшее
# в последовательности трёхзначное число, запись которого заканчивается цифрой 5.
#
# В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную из сумм квадратов элементов таких пар.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if len(str(abs(x))) == 3 and str(x)[-1] == '5']
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    # — ровно одно число в паре четырёхзначное;
    # if (len(str(abs(x))) == 4 and len(str(abs(y))) != 4) or (len(str(abs(y))) == 4 and len(str(abs(x))) != 4):
    # if (len(str(abs(x))) == 4) ^ (len(str(abs(y))) == 4):
    # if (len(str(abs(x))) == 4) + (len(str(abs(y))) == 4) == 1:
    if sum([len(str(abs(p))) == 4 for p in [x, y]]) == 1:
        if (x ** 2 + y ** 2) % min(A) == 0:
            R.append(x ** 2 + y ** 2)
print(len(R), max(R))
'''
# Ответ: 101 453256805


# Тип 17 №61363
# Файл содержит последовательность натуральных чисел, не превышающих 100000.
# Назовём тройкой три идущих подряд элемента последовательности.
#
# Определите количество троек, для которых выполняются следующие условия:
# — ровно два числа в тройке четырёхзначные;
# — хотя бы одно число в тройке делится на 3;
# — сумма элементов тройки больше максимального элемента последовательности,
# запись которого заканчивается на 19. (Гарантируется, что в последовательности
# есть хотя бы один элемент, запись которого заканчивается на 19.)
#
# В ответе запишите два числа: сначала количество найденных троек, затем максимальную
# величину суммы элементов этих троек.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if str(x)[-2:] == '19']
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if sum([len(str(abs(p))) == 4 for p in [x, y, z]]) == 2:
        # if x % 3 == 0 or y % 3 == 0 or z % 3 == 0:
        if sum([p % 3 == 0 for p in [x, y, z]]) > 0:
            if (x + y + z) > max(A):
                R.append(x + y + z)
print(len(R), max(R))
'''
# Ответ: 78 115709


# КЕГЭ № 8954 Джобс 02.06.2023 (Уровень: Базовый) (Е. Джобс)
# В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от 1 до 10 000 включительно.
# Определите количество пар последовательности, в которых только одно число кратно 7,
# а сумма элементов пары кратна максимальному элементу последовательности,
# оканчивающемуся на 0F в шестнадцатеричной системе счисления.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(x) for x in open('17.txt')]
A = [x for x in M if hex(x)[-2:] == '0f']
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    # if (x % 7 == 0) != ()
    if (x % 7 == 0) + (y % 7 == 0) == 1:
        if (x + y) % max(A) == 0:
            R.append(x + y)
print(len(R), max(R))
'''
# Ответ: 2 9487

# endregion Урок: ******************************************************************


# Марго = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
