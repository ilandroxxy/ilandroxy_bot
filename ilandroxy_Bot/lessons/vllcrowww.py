# region –î–æ–º–∞—à–∫–∞: ***************************************************************


# endregion –î–æ–º–∞—à–∫–∞: ************************************************************


# region –£—Ä–æ–∫: ******************************************************************

# –ó–∞–¥–∞–Ω–∏–µ 16
# –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ F(n),
# –≥–¥–µ n ‚Äì –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
# F(n) = 1 –ø—Ä–∏ n = 1;
# F(n) = n √ó F(n ‚àí 1), –µ—Å–ª–∏ n > 1.
# –ß–µ–º—É —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è (F(2024) ‚àí F(2023)) / F(2022)?
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n-1)

print( (F(2024) - F(2023)) / F(2022) )

# [Previous line repeated 997 more times]
# RecursionError: maximum recursion depth exceeded
'''
# –û—Ç–≤–µ—Ç: 4092529


# –ö–ï–ì–≠ ‚Ññ 12248 –ï–ì–ö–† 16.12.23 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
# –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ F(n),
# –≥–¥–µ n ‚Äì –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
#
#  F(n)=1 –ø—Ä–∏ n‚â§3;
#  F(n)=(n+3)√óF(n‚àí2), –µ—Å–ª–∏ n>3.
#
# –ß–µ–º—É —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è F(2028)/F(2024)?
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n <= 3:
        return 1
    if n > 3:
        return (n+3) * F(n-2)

print(F(2028) / F(2024))

# –ü–∏—Å—å–º–µ–Ω–Ω–æ:
# F(2028) = 2031 * F(2026)
# F(2026) = 2029 * F(2024) / F(2024)
print(2031 * 2029)
'''
# –û—Ç–≤–µ—Ç: 4120899


# –ö–ï–ì–≠ ‚Ññ 4739 (–£—Ä–æ–≤–µ–Ω—å: –°—Ä–µ–¥–Ω–∏–π) üå∂
#
# (–ê. –ö—É–∫–∞–Ω–æ–≤–∞) –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ F(n),
# –≥–¥–µ n ‚Äì –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
#
# F(n) = n ‚àí 10 000 –ø—Ä–∏ n > 10 000;
# F(n) = F(n+1) + F(n+2) –µ—Å–ª–∏ 1 ‚â§ n ‚â§ 10 000.

# F(12 345) √ó (F(10) ‚àí F(12)) / F(11) + F(10 101)?
'''
# F(10) = F(11) + F(12)
# (F(11) + F(12) ‚àí F(12)) / F(11)
# F(11) / F(11) -> 1
# F(12345) √ó 1 + F(10101)

def F(n):
    if n > 10000:
        return n - 10000
    if 1 <= n <= 10000:
        return F(n+1) + F(n+2)

print(F(12345) + F(10101))
'''


# –ö–ï–ì–≠ ‚Ññ 8561 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
# (–í. –†—ã–±–∞–ª—å—á–µ–Ω–∫–æ) –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π F(n) –∏ G(n), –≥–¥–µ n ‚Äì —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
#
#  F(n) = n, –ø—Ä–∏ n ‚â§ 1;
#  F(n) = F(n‚Äì1) + F(n‚Äì2) + 1, –ø—Ä–∏ n > 1 –∏ –∫—Ä–∞—Ç–Ω–æ–º —Ç—Ä–µ–º;
#  F(n) = G(n‚Äì3), –ø—Ä–∏ n > 1 –∏ –Ω–µ –∫—Ä–∞—Ç–Ω–æ–º —Ç—Ä–µ–º;

#  G(n) = n, –ø—Ä–∏ n > 100;
#  G(n) = G(n + 2) + 1, –ø—Ä–∏ n ‚â§ 100;
#
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è F(15)+F(12).
'''
def F(n):
    if n <= 1:
        return n
    if n > 1 and n % 3 == 0:
        return F(n-1) + F(n-2) + 1
    if n > 1 and n % 3 != 0:
        return G(n-3)


def G(n):
    if n > 100:
       return n
    if n <= 100:
        return G(n + 2) + 1

print(F(15) + F(12))
'''


# ‚Ññ 10718 (–£—Ä–æ–≤–µ–Ω—å: –°—Ä–µ–¥–Ω–∏–π)
# –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
# F(n), –≥–¥–µ n ‚Äì –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
# F(n)=2 –ø—Ä–∏ n<3;
# F(n)=2√óF(n‚àí2)‚àíF(n‚àí1)+2, –µ—Å–ª–∏ n>2 –∏ –ø—Ä–∏ —ç—Ç–æ–º n —á—ë—Ç–Ω–æ;
# F(n)=2√óF(n‚àí1)+F(n‚àí2)‚àí2, –µ—Å–ª–∏ n>2 –∏ –ø—Ä–∏ —ç—Ç–æ–º n –Ω–µ—á—ë—Ç–Ω–æ.
#
# –ß–µ–º—É —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ F(170)?
'''
from functools import *

@lru_cache(None)
def F(n):
    if n < 3:
        return 2
    if n > 2 and n % 2 == 0:
        return 2 * F(n-2) - F(n-1) + 2
    if n > 2 and n % 2 != 0:
        return 2 * F(n-1) + F(n-2) - 2

print(F(170))
'''
# –û—Ç–≤–µ—Ç: 3596910688800

'''
x = 2*729**2014 + 2*243**2016 - 2 * 81**2018 + 2 * 27 ** 2020 - 2*9**2022 - 2024
M = []
while x > 0:
    M.append(x % 27)
    x //= 27
print(len([a for a in M if a > 9]))
'''
# –û—Ç–≤–µ—Ç: 2687

'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a*2, b)

print(F(4, 11) * F(11, 13) * F(13, 15))
'''

'''
from fnmatch import *
for x in range(1917, 10**10, 1917):
    if fnmatch(str(x), '3?12?14*5'):
        print(x, x // 1917)
'''
# –û—Ç–≤–µ—Ç:
# 351261495 183235
# 3212614035 1675855
# 3412614645 1780185
# 3712414275 1936575
# 3912414885 2040905
'''
s = open('24.txt').readline()
s = s.replace('R', 'Q').replace('W', 'Q')
s = s.replace('2', '1').replace('4', '1')
while 'QQ' in s or '11' in s:
    s = s.replace('11', '1 1').replace('QQ', 'Q Q')
print(max([len(x) for x in s.split()]))
'''
# endregion –£—Ä–æ–∫: ******************************************************************


# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************

# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# –ú–∞—Ä–≥–æ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19-21, 22, 23, 24, 25]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
