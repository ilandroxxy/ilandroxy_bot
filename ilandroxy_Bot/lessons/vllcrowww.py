# region Домашка: ***************************************************************


# endregion Домашка: ************************************************************


# region Урок: ******************************************************************
'''
def F(a, b):  # a - start, b - stop
    if a > b or a == 16:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+3, b) + F(a**2, b)


print(F(3, 20) * F(20, 26))


# Вариант 2
def F(a, b):  # a - start, b - stop
    if a >= b or a == 16:
        return a == b
    return F(a+1, b) + F(a+3, b) + F(a**2, b)


print(F(3, 20) * F(20, 26))
'''


# № 12739 (Уровень: Базовый)
# A. Найти целую часть от деления на 2
# B. Найти целую часть от деления на 3
# C. Вычесть 3

# Сколько существует программ, для которых при исходном числе
# 163 результатом является число 3, при этом траектория
# вычислений содержит число 45 и не содержит чисел 36 и 100?
'''
def F(a, b):
    if a <= b or a == 36 or a == 100:
        return a == b
    return F(a//2, b) + F(a//3, b) + F(a-3, b)

print(F(163, 45) * F(45, 3))
'''

'''
from functools import *
my_set = set()
@lru_cache(None)
def F(a, c):  # a - start, c - commands
    if c == 68:
        my_set.add(a)
        return 0
    return F(a+3, c+1) + F(a-2, c+1)


F(1, 0)
print(len(my_set))
'''


# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Марго = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 12, 14, 15, 16, 17, 19-21, 22, 23, 24, 25]
# КЕГЭ  = [22, 23]
# на следующем уроке:
