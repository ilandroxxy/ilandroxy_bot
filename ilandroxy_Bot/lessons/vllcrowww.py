# region Домашка: ******************************************************************

# КЕГЭ № 6588 Пробник ИМЦ СПб (Уровень: Средний)
# Автомат обрабатывает натуральное число N по следующему алгоритму.
#
# 1. Строится двоичная запись числа N.
# 2. Все значащие цифры инвертируются (‘0’ заменяется на ‘1’, а ‘1’ на ‘0’).
# 3. К полученному результату слева добавляется ‘1’.
# 4. К двоичной записи полученного числа справа дописывается бит четности: ‘1’,
# если количество единиц в двоичной записи нечетно, ‘0’ - если четно.
# 5. Полученное в результате этих операций число переводится в десятичную систему счисления.
#
# Полученная таким образом запись является результатом работы алгоритма: R.
#
# Укажите такое наименьшее число N, для которого результат работы данного алгоритма больше числа 180.
# В ответе это число запишите в десятичной системе счисления.
'''
R = []
for n in range(1, 1000):
    s = bin(n)[2:]

    s = s.replace('0', '*')
    s = s.replace('1', '0')
    s = s.replace('*', '1')

    s = '1' + s

    if s.count('1') % 2 != 0:
        s = s + '1'
    else:
        s = s + '0'

    r = int(s, 2)

    if r > 180:
        R.append(n)

print(min(R))
'''


# КЕГЭ № 4869 (Уровень: Сложный)
#
# Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Вычисляется количество единиц, стоящих на чётных местах в двоичной записи числа N без ведущих нулей, и
# количество нулей, стоящих на нечётных местах. Места отсчитываются
# слева направо (от старших разрядов к младшим, начиная с единицы).
# 3. Результатом работы алгоритма становится модуль разности полученных двух чисел.

# При каком наименьшем N в результате работы алгоритма получится R = 5?
'''
for n in range(1, 10000):
    s = bin(n)[2:]
    S1 = [x for x in s[1::2] if x == '1']
    S0 = [x for x in s[0::2] if x == '0']
    r = abs(len(S1) - len(S0))
    if r == 5:
        print(n)
        break
'''
# Ответ: 1023

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 8 №3228
# Все 5-буквенные слова, составленные из букв А, О, У, записаны в алфавитном порядке.
# Вот начало списка:
# 1. ААААА
# 2. ААААО
# 3. ААААУ
# 4. АААОА
#
# Укажите номер слова УАУАУ.
'''
s = sorted('АОУ')
num = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if slovo == 'УАУАУ':
                        print(num, slovo)
                    num += 1

# Вариант 2

from itertools import product
num = 1
for var in product(sorted('АОУ'), repeat=5):
    slovo = ''.join(var)
    if slovo == 'УАУАУ':
        print(num, slovo)
    num += 1
'''
# Ответ: 183

'''
from itertools import product, permutations

# for var in permutations('abc', r=3):  # перемешивает элементы
#     slovo = ''.join(var)
#     print(var, slovo)

# for var in product('abc', repeat=3):  # повторяет элементы
#     slovo = ''.join(var)
#     print(var, slovo)
'''


# Тип 8 №10411
# Игорь составляет таблицу кодовых слов для передачи сообщений, каждому сообщению соответствует
# своё кодовое слово. В качестве кодовых слов Игорь использует 5-буквенные слова,
# в которых есть только буквы A, B, C, X, причём буква X появляется ровно 1 раз.
# Каждая из других допустимых букв может встречаться в кодовом слове
# любое количество раз или не встречаться совсем.
# Сколько различных кодовых слов может использовать Игорь?
'''
s = 'ABCX'
cnt = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if slovo.count('X') == 1:
                        cnt += 1
print(cnt)
'''
# Ответ: 405


# Тип 8 №16439
# Михаил составляет 6-буквенные коды. В кодах разрешается использовать только буквы А, Б, В, Г,
# при этом код не может начинаться с гласной и не может содержать двух одинаковых букв подряд.
# Сколько различных кодов может составить Михаил?
'''
from itertools import product
cnt = 0
for var in product('АБВГ', repeat=6):
    slovo = ''.join(var)
    if slovo[0] != 'А':
        if all(pair not in slovo for pair in 'АА ББ ВВ ГГ'.split()):
            cnt += 1
print(cnt)
'''
# Ответ: 729


# Тип 8 №59741
# Сколько существует чисел, восьмеричная запись которых содержит 5 цифр, причем в записи нет цифры 1.
# Также все цифры записи различны и никакие две чётные и две нечётные цифры не стоят рядом.
'''
s = '01234567'
s1 = '1357'
s2 = '0246'
cnt = 0
for a in s1:
    for b in s2:
        for c in s1:
            for d in s2:
                for e in s1:
                    slovo = a + b + c + d + e
                    if '1' not in slovo:  # причем в записи нет цифры 1
                        if len(slovo) == len(set(slovo)):  # Также все цифры записи различны
                            cnt += 1
for a in s2:
    for b in s1:
        for c in s2:
            for d in s1:
                for e in s2:
                    slovo = a + b + c + d + e
                    if slovo[0] != '0':
                        if '1' not in slovo:  # причем в записи нет цифры 1
                            if len(slovo) == len(set(slovo)):  # Также все цифры записи различны
                                cnt += 1
print(cnt)
'''

'''
from itertools import permutations
cnt = 0
for var in permutations('01234567', 5):
    slovo = ''.join(var)
    if slovo[0] != '0' and '1' not in slovo:
        slovo = slovo.replace('0', '2').replace('4', '2').replace('6', '2')
        slovo = slovo.replace('3', '1').replace('5', '1').replace('7', '1')
        if '22' not in slovo and '11' not in slovo:  # никакие две чётные и две нечётные цифры не стоят рядом
            cnt += 1
print(cnt)
'''
# Ответ: 180


# Тип 8 №58240
# Сколько существует различных пятизначных чисел, записанных в девятеричной
# системе счисления, в записи которых цифры следуют слева направо в убывающем порядке?
'''
from itertools import permutations
cnt = 0
for var in permutations('012345678', 5):
    slovo = ''.join(var)
    # if sorted(slovo, reverse=True) == list(slovo):
    if slovo[0] > slovo[1] > slovo[2] > slovo[3] > slovo[4]:
        cnt += 1
print(cnt)
'''
# Ответ: 126


# endregion Урок: ******************************************************************


# Марго = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1]
# КЕГЭ  = []
# на следующем уроке:
