
# region Тип 16 № 6779
'''
# Алгоритм вычисления значений функций F(n) и G(n), где n — натуральное число, задан следующими соотношениями:
#
# F(1) = 1;
# G(1) = 1;
# F(n) = F(n – 1) – G(n – 1)
# G(n) = F(n–1) + G(n – 1), при n ≥ 2
#
# Чему равно значение величины F(5)/G(5)?
# В ответе запишите только натуральное число.

def F(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n - 1) - G(n - 1)

def G(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n - 1) + G(n - 1)

x = F(5) / G(5)
print(x)
'''
# Ответ: 1
# endregion Тип 16 № 6779

# region Тип 16 № 33486
'''
# Обозначим через a mod b остаток от деления натурального числа a на натуральное число b.
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = n + F(n − 3), если n mod 3=0, и n > 0;
# F(n) = n + F(n − (n mod 3)), если n mod 3 > 0.
#
# Чему равно значение функции F(26)?

def F(n):
    if n == 0:  # F(0) = 0;
        return 0
    elif n % 3 == 0 and n > 0:  # F(n) = n + F(n − 3), если n mod 3=0, и n > 0;
        return n + F(n - 3)
    elif n % 3 > 0:
        return n + F(n - (n % 3))

print(F(26))
'''
# Ответ: 134
# endregion Тип 16 № 33486

# region Тип 16 № 36871
'''
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 1000 и F(n) = 3?

def F(n):
    if n == 0:
        return 0
    elif n > 0 and n % 2 == 0:
        return F(n / 2)
    elif n % 2 != 0:
        return 1 + F(n - 1)

count = 0
for n in range(1, 1000+1):
    if F(n) == 3:
        count += 1
print(count)
'''
# Ответ: 120
# endregion Тип 16 № 36871

# region Тип 16 № 33518
"""
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом n чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Назовите минимальное значение n, для которого F(n) = 12.

def F(n):
    if n == 0:
        return 0
    elif n > 0 and n % 2 == 0:
        return F(n / 2)
    elif n % 2 != 0:
        return 1 + F(n - 1)

for n in range(0, 10000):
    if F(n) == 12:
        print(n)
        break
"""
# Ответ: 4095
# endregion Тип 16 № 33518

# region Тип 16 № 4654
"""
# Последовательность чисел Падована задается рекуррентным соотношением:
#
# F(1) = 1
# F(2) = 1
# F(3) = 1
# F(n) = F(n–3) + F(n–2), при n >3, где n – натуральное число.
#
# Чему равно десятое число в последовательности Падована?
# В ответе запишите только натуральное число.

def F(n):
    if n == 1:  # # F(1) = 1
        return 1
    elif n == 2:  # # F(2) = 1
        return 1
    elif n == 3:  # # F(3) = 1
        return 1
    elif n > 3:  # F(n) = F(n–3) + F(n–2), при n >3
        return F(n - 3) + F(n - 2)

print(F(10))
# Ответ: 9
"""
# endregion Тип 16 № 4654

# region Тип 16 № 5650
'''
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n) = n + 1 при n ≤ 2;
#
# F(n) = F(n− 1) + 2·F(n − 2) при n > 2.
#
# Чему равно значение функции F(4)? В ответе запишите только натуральное число

def F(n):
    if n <= 2:
        return n + 1
    if n > 2:
        return F(n - 1) + 2 * F(n - 2)

print(F(4))
'''
# Ответ: 13
# endregion Тип 16 № 5650

# region Тип 16 № 5682
'''
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n) = 2 при n ≤ 2;
# F(n) = F(n− 1) + 3·F(n − 2) при n > 2.
#
# Чему равно значение функции F(5)? В ответе запишите только натуральное число.


def F(n):
    if n <= 2:
        return 2
    if n > 2:
        return F(n - 1) + 3 * F(n - 2)

print(F(5))
'''
# Ответ: 38
# endregion Тип 16 № 5682


# region Задача 16 (No 4883) (П. Волгин)
'''
# Алгоритм вычисления значения функции F(n), где n – целое
# неотрицательное число, задан следующими соотношениями:
#       F(n) = 1 при n = 0
#       F(n) = 7·(n - 1) + F(n - 1) при n > 0
# Сколько существует значений n на отрезке [2, 200], для которых значение функции F(n) является простым числом?

def Simpler(x):
    for j in range(2, x):
        if x % j == 0:
            return False
    return True

def F(n):
    if n == 0:
        return 1
    if n > 0:
        return 7 * (n-1) + F(n-1)

count = 0
for n in range(2, 200+1):
    if Simpler(F(n)) == True:
        count += 1
print(count)
'''
# Ответ: 43

# endregion Задача 16 (No 4883) (П. Волгин)

