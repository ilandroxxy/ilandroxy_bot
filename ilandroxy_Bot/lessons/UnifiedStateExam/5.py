
# region Тип 5 № 10407
'''
# Автомат получает на вход четырёхзначное число. По этому числу строится новое число по следующим правилам.
# 1.Складываются отдельно первая и вторая цифры, вторая и третья цифры, а также третья и четвёртая цифры.
# 2.Из полученных трёх чисел выбираются два наибольших и записываются друг за другом в порядке неубывания без разделителей.
# Пример. Исходное число: 9575. Суммы: 9+5 = 14; 5+7 = 12; 7+5=12. Наибольшие суммы: 14, 12. Результат:1214.
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 1515.


for i in range(1000,10000):
    temp = i
    M = []
    while i > 0:
        M.append(i % 10)
        i //= 10
        # i = i // 10
    M.reverse()

    a = M[0] + M[1]
    b = M[1] + M[2]
    c = M[2] + M[3]
    A = [a, b, c]


    x2 = max(A)
    x1 = sum(A) - max(A) - min(A)
    res = str(x1) + str(x2)
    #res = int(res)
    if res == '1515':
        print(temp)
'''
# Ответ 9696
# endregion Тип 5 № 10407

# region Тип 5 № 10309
"""
# Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам.
# 1. Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
#
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 621.

for i in range(10000, 100000):
    s = str(i)
    a = int(s[0]) + int(s[2]) + int(s[4])  # 1. Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
    b = int(s[1]) + int(s[3])
    res = str(min(a, b)) + str(max(a, b))  # 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
    if res == '621':
        print(i)
        break
"""
# Ответ: 30969
# endregion Тип 5 № 10309

# region Тип 5 № 7751
'''
#Автомат получает на вход четырёхзначное число. По этому числу строится новое число по следующим правилам:
#1.Складываются первая и вторая, а также третья и четвёртая цифры исходного числа.
#2.Полученные два числа записываются друг за другом в порядке возрастания (без разделителей).
#Пример. Исходное число: 2366. Суммы: 2 + 3 = 5; 6 + 6 = 12. Результат: 512. Укажите наибольшее число, в результате обработки которого автомат выдаст число 117.

for x in range(1000, 10000):
    s = str(x)
    a = int(s[0]) + int(s[1])
    b = int(s[2]) + int(s[3])
    j = str(min(a, b)) + str(max(a, b))
    if j == '117':
        print(x)
'''
# Ответ: 9810
# endregion Тип 5 № 7751

# region Тип 5 № 14767
'''
# Автомат получает на вход четырёхзначное число (число не может начинаться с нуля). По этому числу строится новое число по следующим правилам.
# 1.Складываются отдельно первая и вторая, вторая и третья, третья и четвёртая цифры заданного числа.
# 2.Наименьшая из полученных трёх сумм удаляется.
# 3.Оставшиеся две суммы записываются друг за другом в порядке неубывания без разделителей.
# Пример. Исходное число: 1984. Суммы: 1 + 9 = 10, 9 + 8 = 17, 8 + 4 = 12.
# Удаляется 10. Результат: 1217.
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 613

for x in range(1000, 10000):
    s = str(x)
    a = int(s[0]) + int(s[1])
    b = int(s[1]) + int(s[2])
    c = int(s[2]) + int(s[3])
    Maxi = max(a, b, c)
    Avg = ((a+b+c) - Maxi - min(a, b, c))
    j = str(Avg) + str(Maxi)
    if j == '613':
        print(x)
        break
'''
# Ответ: 1067
# endregion ип 5 № 14767

# region Тип 5 № 9756
'''
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
# 1.Перемножаются первая и вторая, а также вторая и третья цифры.
# 2.Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
# Пример. Исходное число: 631. Произведение: 6 * 3 = 18; 3 * 1 = 3. Результат: 318.
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 621.


for x in range(100, 1000):
    s = str(x)
    a = int(s[0]) * int(s[1])
    b = int(s[1]) * int(s[2])
    j = str(min(a, b)) + str(max(a, b))
    if j == '621':
        print(x)
        break
'''
# Ответ: 237
# endregion Тип 5 № 9756

# region Тип 5 № 45239
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число чётное, то к двоичной записи числа слева дописывается 10;
# б) если число нечётное, то к двоичной записи числа слева дописывается 1 и справа дописывается 01.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
# Например, для исходного числа 410=1002 результатом будет являться число 2010=101002, а
# для исходного числа 510=1012 результатом будет являться число 5310=1101012.
#
# Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число R, большее, чем 441.
# В ответе запишите это число в десятичной системе счисления.

for n in range(1, 1000):
    x = n

    M = []
    while x > 0:
        M.append(x % 2)  # # 1. Строится двоичная запись числа N.
        x //= 2
    M.reverse()

    if n % 2 == 0:
        M.append(1)
        M.append(0)
    else:
        M.append(0)
        M.append(1)
        M.reverse()
        M.append(1)
        M.reverse()

    R = 0
    M.reverse()
    for i in range(0, len(M)):
        R += M[i] * 2 ** i

    if R > 441:
        print(n)
        break
'''
# Ответ: 47
# endregion Тип 5 № 45239

# region Тип 5 № 9190
"""
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Складываются первая и вторая, а также вторая и третья цифры исходного числа.
# 2. Полученные два числа записываются друг за другом в порядке возрастания (без разделителей).
#
# Пример. Исходное число: 843. Суммы: 8 + 4 = 12; 4 + 3 = 7. Результат: 712.
# Сколько существует чисел, в результате обработки которых автомат выдаст число 1216?

count = 0
for x in range(100, 1000):  # [100, 999]
    s = str(x)
    a = int(s[0]) + int(s[1])
    b = int(s[1]) + int(s[2])
    res = str(min(a, b)) + str(max(a, b))

    if res == '1216':
        count += 1
print(count)
"""
# Ответ: 6
# endregion Тип 5 № 9190

# region Тип 5 № 35894
"""
# Алгоритм получает на вход натуральное число N>1 и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. Подсчитывается количество нулей и единиц в полученной записи.
# Если их количество одинаково, в конец записи добавляется её последняя цифра.
# В противном случае в конец записи добавляется та цифра, которая встречается реже.
# 3. Шаг 2 повторяется ещё два раза
# 4. Результат переводится в десятичную систему.
#
# Пример. Дано число N=19. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 10011.
# 2. В полученной записи нулей меньше, чем единиц, в конец записи добавляется 0. Новая запись: 100110.
# 3. В текущей записи нулей и единиц поровну, в конец записывается последняя цифра, это 0. Получается 1001100.
# В этой записи единиц меньше, в конец добавляется 1: 10011001.
# 4. Результат работы алгоритма R=153.

# При каком наименьшем числе N>104 в результате работы алгоритма получится число, кратное 4?

for n in range(105, 100000):
    temp = n

    N = []
    while n > 0:
        N.append(n % 2)  # 1. Строится двоичная запись числа N.
        n //= 2
    N.reverse()
    print(N)

    for i in range(3):  # 3. Шаг 2 повторяется ещё два раза
        if N.count(0) == N.count(1):
            N.append(N[-1])
        elif N.count(0) < N.count(1):
            N.append(0)
        elif N.count(0) > N.count(1):
            N.append(1)

    print(N)

    res = 0
    N.reverse()
    for i in range(0, len(N)):  # 4. Результат переводится в десятичную систему.
        res += N[i] * 2 ** i
    print(res)

    if res % 4 == 0:
        print(temp)
        break
"""
# Ответ: 107
# endregion Тип 5 № 35894

# region Тип 5 № 33084
"""
# Алгоритм получает на вход натуральное число N и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. Складываются все цифры полученной двоичной записи. В конец записи (справа)
# дописывается остаток от деления суммы на 2.
# 3. Предыдущий пункт повторяется для записи с добавленной цифрой.
# 4. Результат переводится в десятичную систему.
#
# Пример. Дано число N=13. Алгоритм работает следующим образом:
# 1. Двоичная запись числа N: 1101.
# 2. Сумма цифр двоичной записи 3, остаток от деления на 2 равен 1, новая запись 11011.
# 3. Сумма цифр полученной записи 4, остаток от деления на 2 равен 0, новая запись 110110.
# 4. Результат работы алгоритма R=54.
#
# При каком наименьшем числе N в результате работы алгоритма получится R>154?
# В ответе запишите это число в десятичной системе счисления.

for n in range(0, 1000):
    temp = n

    N = []
    while n > 0:
        N.append(n % 2)
        n //= 2
    N.reverse()

    print(N)

    for _ in range(2):
        summ = sum(N)
        N.append(summ % 2)

    res = 0
    N.reverse()
    for i in range(0, len(N)):
        res += N[i] * 2 ** i

    if res > 154:
        print(temp)
        break
"""
# Ответ: 39
# endregion Тип 5 № 33084

# region Тип 5 № 10282
'''
# Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
# 2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 63 179. Суммы: 6 + 1 + 9 = 16; 3 + 7 = 10. Результат: 1016.
#
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 723.

for n in range(10000, 100000):
    s = str(n)
    a = int(s[0]) + int(s[2]) + int(s[4])
    b = int(s[1]) + int(s[3])

    res = str(min(a, b)) + str(max(a, b))

    if res == '723':
        print(n)
        break
'''
# Ответ: 50979
# endregion Тип 5 № 10282

# region Тип 5 № 35463
"""
# Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. Подсчитывается количество нулей и единиц в полученной записи.
# Если их количество одинаково, в конец записи добавляется её последняя цифра.
# В противном случае в конец записи добавляется та цифра, которая встречается реже.
# 3. Шаг 2 повторяется ещё два раза
# 4. Результат переводится в десятичную систему.
#
# Пример. Дано число N = 19. Алгоритм работает следующим образом:
#
# 1. Двоичная запись числа N: 10011.
# 2. В полученной записи нулей меньше, чем единиц, в конец записи добавляется 0. Новая запись: 100110.
# 3. В текущей записи нулей и единиц поровну, в конец записывается последняя цифра, это 0.
# Получается 1001100. В этой записи единиц меньше, в конец добавляется 1: 10011001.
# 4. Результат работы алгоритма R = 153.
#
# При каком наименьшем числе N > 99 в результате работы алгоритма получится число, кратное 4?


for n in range(100, 1000):
    x = n

    N = []
    while n > 0:
        N.append(n % 2)  # 1. Строится двоичная запись числа N.
        n //= 2
    N.reverse()

    for _ in range(3):  # 3. Шаг 2 повторяется ещё два раза
        if N.count(0) == N.count(1):
            N.append(N[-1])  # Если их количество одинаково, в конец записи добавляется её последняя цифра.
        else:
            if N.count(0) < N.count(1):  # В противном случае в конец записи добавляется та цифра, которая встречается реже.
                N.append(0)
            else:
                N.append(1)

    N.reverse()
    r = 0
    for i in range(0, len(N)):
        r += N[i] * 2 ** i

    if r % 4 == 0:
        print(x)
        break
"""
# Ответ: 103
# endregion Тип 5 № 35463

# region Тип 5 № 15622
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу: складываются все цифры двоичной записи, если
# а) сумма нечетная к числу дописывается 11,
# б) сумма четная, дописывается 00.
#
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R.
# Укажите такое наименьшее число R, которое превышает 114 и может являться результатом работы алгоритма.
# В ответе это число запишите в десятичной системе счисления.

for n in range(0, 10000):

    N = []
    while n > 0:
        N.append(n % 2)  # 1. Строится двоичная запись числа N.
        n //= 2
    N.reverse()

    summ = sum(N)
    if summ % 2 == 0:
        N.append(0)
        N.append(0)
    else:
        N.append(1)
        N.append(1)

    N.reverse()
    r = 0
    for i in range(0, len(N)):
        r += N[i] * 2 ** i

    if r > 114:
        print(r)
        break
'''
# Ответ: 115
# endregion Тип 5 № 15622

# region Тип 5 № 33475
"""
# Алгоритм получает на вход натуральное число N>1 и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.
# 3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.
# 4. Результат переводится в десятичную систему.
#
# При каком наименьшем числе N в результате работы алгоритма получится R > 180?
# В ответе запишите это число в десятичной системе счисления.

for n in range(2, 1000):
    x = n

    N = []
    while n > 0:
        N.append(n % 2)  # 1. Строится двоичная запись числа N.
        n //= 2
    N.reverse()

    print(N)
    N.reverse()
    temp = N[1]
    N.reverse()
    N.append(temp)  # 2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.

    N.append(N[1])  # 3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.

    N.reverse()
    r = 0
    for i in range(0, len(N)):  # 4. Результат переводится в десятичную систему.
        r += N[i] * 2 ** i

    if r > 180:
        print(x)
        break
"""
# Ответ: 46
# endregion Тип 5 № 33475

# region Тип 5 № 13617
'''
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Перемножаются отдельно первая и вторая цифры, а также – вторая и третья цифры.
# 2. Полученные два числа записываются друг за другом в порядке невозрастания без разделителей.
#
# Пример. Исходное число: 179. Произведения: 1*7 = 7; 7*9 = 63. Результат: 637.

# Укажите наименьшее число, при обработке которого автомат выдаёт результат 123.

# for n in range(999, 99, -1):  если просят найти наибольшее число
for n in range(100, 1000):
    s = str(n)
    # print(x, s[0] + s[1] + s[2])

    a = int(s[0]) * int(s[1])
    b = int(s[1]) * int(s[2])

    r = str(max(a, b)) + str(min(a, b))

    if r == '123':
        print(n)
        break
'''
# Ответ: 134
# endregion Тип 5 № 13617

# region Тип 5 № 18582
'''
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1. Строится двоичная запись числа N без ведущих нулей.
# 2. Если в полученной записи единиц больше, чем нулей, то справа приписывается единица.
# Если нулей больше или нулей и единиц поровну, справа приписывается ноль.
# 3. Полученное число переводится в десятичную запись и выводится на экран.
#
# Пример. Дано число N = 13. Алгоритм работает следующим образом.
# 1. Двоичная запись числа N: 1101.
# 2. В записи больше единиц, справа приписывается единица: 11011.
# 3. На экран выводится десятичное значение полученного числа 27.
#
# Какое наименьшее число, превышающее 100, может получиться в результате работы автомата?

for n in range(1, 1000):
    temp = n

    N = []
    while temp > 0:
        N.append(temp % 2)  # 1. Строится двоичная запись числа N без ведущих нулей.
        temp //= 2
    N.reverse()

    if N.count(1) > N.count(0):  # 2. Если в полученной записи единиц больше, чем нулей, то справа приписывается единица.
        N.append(1)
    else:                   # 2. Если нулей больше или нулей и единиц поровну, справа приписывается ноль.
        N.append(0)

    r = 0
    N.reverse()
    for i in range(0, len(N)):  # 3. На экран выводится десятичное значение полученного числа 27.
        r += N[i] * 2 ** i

    if r > 100:
        print(r)
        break
'''
# Ответ: 103
# endregion Тип 5 № 18582

# region Тип 5 № 16033
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится двоичная запись числа N.
# 2) К этой записи дописываются справа ещё два разряда по следующему правилу:
#   а) если N чётное, в конец числа (справа) дописывается сначала ноль, а затем единица.
#   б)если N нечётное, справа дописывается сначала единица, а затем ноль.
#
# Например, двоичная запись 100 числа 4 будет преобразована в 10001, а двоичная запись 111 числа 7 будет преобразована в 11110.
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью
# числа R — результата работы данного алгоритма.
#
# Укажите минимальное число R, которое больше 102 и может являться результатом работы данного алгоритма.
# В ответе это число запишите в десятичной системе счисления

# Вариант 1
for n in range(1, 1000):
    temp = n

    N = []
    while temp > 0:
        N.append(temp % 2)
        temp //= 2
    N.reverse()

    if n % 2 == 0:
        N.append(0)
        N.append(1)
    else:
        N.append(1)
        N.append(0)

    r = 0
    N.reverse()
    for i in range(0, len(N)):
        r += N[i] * 2 ** i

    if r > 102:
        print(r)
        break


# Вариант 2
for n in range(1, 100):
    s = bin(n)[2:]  # перевод в двоичную систему

    if n % 2 == 0:
        s += "01"
    else:
        s += "10"

    r = int(s, 2)  # перевод в десятичную систему

    if r > 102:
        print(r)
        break
'''
# Ответ: 105
# endregion Тип 5 № 16033

# region Тип 5 № 8094
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится двоичная запись числа N.
# 2) К этой записи дописываются справа ещё два разряда по следующему правилу:
#   а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец числа (справа). Например, запись 11100 преобразуется в запись 111001;
#   б) над этой записью производятся те же действия — справа дописывается остаток от деления суммы цифр на 2.
#
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R.
# Укажите минимальное число R, которое превышает 43 и может являться результатом работы алгоритма. В ответе это число запишите в десятичной системе.

for n in range(1, 10000):
    temp = n

    N = []
    while n > 0:
        N.append(n % 2)  # 1) Строится двоичная запись числа N.
        n //= 2
    N.reverse()

    for _ in range(2):
        summ = sum(N)
        N.append(summ % 2)

    r = 0
    N.reverse()
    for i in range(0, len(N)):
        r += N[i] * 2 ** i

    if r > 43:
        print(r)
        break
'''
# Ответ 46
# endregion Тип 5 № 8094