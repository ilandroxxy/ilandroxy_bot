
# region Тип 23 № 14783
"""
# Исполнитель Тренер преобразует число на экране.
#
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
#
# Первая команда увеличивает число на экране на 1, вторая умножает его на 2.
# Программа для исполнителя Тренер — это последовательность команд.
# Сколько существует программ, которые преобразуют исходное число 1 в число 40
# и при этом траектория вычислений содержит числа 12 и 25?

def f(a,b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return f(a + 1, b) + f(a * 2, b)

print(f(1, 12) * f(12, 25) * f(25, 40))
"""
# Ответ: 40
# endregion Тип 23 № 14783

# region Тип 23 № 14281
'''
# Исполнитель Тренер преобразует число на экране.
# 
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Прибавить 2
# 
# Первая команда увеличивает число на экране на 1, вторая увеличивает его на 2.
# Программа для исполнителя Тренер – это последовательность команд.
# Сколько существует программ, для которых при исходном числе 1 результатом является число 11?

def f(a,b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return f(a + 1, b) + f(a + 2, b)

print(f(1, 11))
'''
# Ответ: 89
# endregion Тип 23 № 14281

# region Тип 23 № 16825
'''
# Исполнитель РазДваТри преобразует число на экране.
#
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Прибавить 3
#
# Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья увеличивает на 3.
# Программа для исполнителя РазДваТри — это последовательность команд.
# Сколько существует программ, которые преобразуют исходное число 3 в число 16
# и при этом траектория вычислений не содержит чисел 6 и 12?

def f(a, b):
    if a > b or a == 6 or a == 12:
        return 0
    elif a == b:
        return 1
    else:
        return f(a + 1, b) + f(a * 2, b) + f(a + 3, b)

print(f(3, 16))
'''
# Ответ: 22
# endregion Тип 23 № 16825

# region Тип 23 № 13606
'''
# Исполнитель А17 преобразует число на экране.
# У исполнителя есть три команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Умножить на 3
#
# Первая команда увеличивает число на экране на 1, вторая – умножает его на 2, третья – умножает на 3.
# Программа для исполнителя А17 – это последовательность команд.
# Сколько существует программ, для которых при исходном числе 2 результатом является число 28
# и при этом траектория вычислений содержит число 14?


def f(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return f(a + 1, b) + f(a * 2, b) + f(a * 3, b)

print(f(2, 14) * f(14, 28))
'''
# Ответ: 38
# endregion Тип 23 № 13606

# region Тип 23 № 27307
'''
# Исполнитель РазДва преобразует число на экране. У исполнителя есть две команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Умножить на 2
#
# Первая команда увеличивает число на экране на 1, вторая умножает его на 2.
# Программа для исполнителя РазДва — это последовательность команд.
# Сколько существует программ, которые преобразуют исходное число 3 в число 62,
# и при этом траектория вычислений содержит число 14 и не содержит числа 59?


def f(a, b):
    if a > b or a == 59:
        return 0
    elif a == b:
        return 1
    else:
        return f(a + 1, b) + f(a * 2, b)

print(f(3, 14) * f(14, 62))
'''
# Ответ: 48
# endregion Тип 23 № 27307

# region Тип 23 № 13471
'''
# Исполнитель НечетМ преобразует число на экране.
# У исполнителя НечетМ две команды, которым присвоены номера:
#
# 1. прибавь 1
# 2. сделай нечётное
#
# Первая из этих команд увеличивает число x на экране на 1, вторая переводит число x в число 2x+1.
# Например, вторая команда переводит число 10 в число 21.
# Программа для исполнителя НечетМ — это последовательность команд.
# Сколько существует таких программ, которые число 1 преобразуют в число 25, причём траектория вычислений не содержит число 24?
# Траектория вычислений программы — это последовательность результатов выполнения всех команд программы.

def f(a, b):
    if a > b or a == 24:
        return 0
    elif a == b:
        return 1
    else:
        return f(a + 1, b) + f(a * 2 + 1, b)

print(f(1, 25))
'''
# Ответ: 10
# endregion Тип 23 № 13471

# region Тип 23 № 29129
'''
# Исполнитель РазДва преобразует число на экране. У исполнителя есть две команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Умножить на 2
#
# Сколько существует программ, которые преобразуют исходное число 3 в число 60, и при этом траектория вычислений содержит числа 13 и 30?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 2, b)

print(F(3, 13) * F(13, 30) * F(30, 60))
'''
# Ответ: 48
# endregion Тип 23 № 29129

# region Тип 23 № 37158
'''
# Исполнитель преобразует число на экране. У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Прибавить 2
# 3. Умножить на 3
#
# Первая команда увеличивает число на 1, вторая — на 2, третья — втрое.
# Программа для исполнителя — это последовательность команд.
# Сколько существует таких программ, которые исходное число 2 преобразуют в число 19 и при этом траектория вычислений программы проходит через 9 и не проходит через 12?


def F(a, b):
    if a > b or a == 12:
        return 0
    if a == b:
        return 1
    else:
        return F(a + 1, b) + F(a + 2, b) + F(a * 3, b)

print(F(2, 9) * F(9, 19))
'''
# Ответ: 650
# endregion Тип 23 № 37158

# region Тип 23 № 6997
'''
# У исполнителя четыре команды, которым присвоены номера:
# 1. прибавь 1,
# 2. сделай чётное,
# 3. сделай нечётное,
# 4. умножь на 10.
#
# Сколько существует программ, которые число 1 преобразуют в число 15?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a * 2, b) + F(a*2 + 1, b) + F(a*10, b)

print(F(1, 15))
'''
# Ответ: 84
# endregion Тип 23 № 6997

# region Тип 23 № 18570
"""
# Исполнитель РазДваТри преобразует число на экране.
#
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Умножить на 3
#
# Сколько существует программ, которые преобразуют исходное число 1 в число 50, и при этом траектория вычислений содержит число 14 и не содержит числа 16?

def F(a, b):
    if a > b or a == 16:  # не содержит числа 16?
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b) + F(a*3, b)

print(F(1, 14) * F(14, 50))   # при этом траектория вычислений содержит число 14
"""
# Ответ: 192
# endregion Тип 23 № 18570

# region Тип 23 № 16898
'''
# Исполнитель РазДваТри преобразует число на экране.
#
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Прибавить 3
#
# Сколько существует программ, которые преобразуют исходное число 2 в число 14 и при этом траектория вычислений не содержит чисел 5 и 10?

def F(a, b):
    if a > b or a == 5 or a == 10:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a * 2, b) + F(a+3, b)

print(F(2, 14))
'''
# Ответ: 26
# endregion Тип 23 № 16898

# region Тип 23 № 13368
'''
# Исполнитель Плюс преобразует число на экране.
#
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 2
# 2. Прибавить 5
#
# Программа для исполнителя Плюс — это последовательность команд.
# Сколько существует программ, которые число 1 преобразуют в число 20?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 2, b) + F(a + 5, b)

print(F(1, 20))
'''
# Ответ: 18
# endregion Тип 23 № 13368


# region Тип 23 вариант 2 Статград 15.12.2022

# Исполнитель преобразует число на экране.
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2

# Сколько существует программ, которые преобразуют исходное число 1 в число 16,
# и при этом никакая команда не повторяется более двух раз подряд?
'''
def F(a, b, p1, p2):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        if p1 == p2 == '+1':
            return F(a*2, b, '*2', p1)
        elif p1 == p2 == '*2':
            return F(a+1, b, '+1', p1)
        else:
            return F(a+1, b, '+1', p1) + F(a*2, b, '*2', p1)

print(F(1, 16, '', ''))
'''
# Ответ: 5

# endregion Тип 23 вариант 2 Статград 15.12.2022


# region Тип 23 вариант 1 Статград 15.12.2022

# Исполнитель преобразует число на экране.
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2

# Сколько существует программ, которые преобразуют исходное число 1 в число 14,
# и при этом никакая команда не повторяется более двух раз подряд?
'''
def F(a, b, p1, p2):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        if p1 == p2 == '+1':
            return F(a*2, b, '*2', p1)
        elif p1 == p2 == '*2':
            return F(a+1, b, '+1', p1)
        else:
            return F(a+1, b, '+1', p1) + F(a*2, b, '*2', p1)

print(F(1, 14, '', ''))
'''
# Ответ: 6

# endregion Тип 23 вариант 1 Статград 15.12.2022