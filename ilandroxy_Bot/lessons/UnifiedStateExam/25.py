
# region Тип 25 № 27422
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [174457;174505], числа, имеющие ровно
# два различных натуральных делителя, не считая единицы и самого числа.
# Для каждого найденного числа запишите эти два делителя в два соседних столбца на экране с новой строки в порядке
# возрастания произведения этих двух делителей. Делители в строке также должны следовать в порядке возрастания.
#
# Например, в диапазоне [5;9] ровно два различных натуральных делителя имеют числа 6 и 8,
# поэтому для этого диапазона вывод на экране должна содержать следующие значения:
# 2 3
# 2 4


for number in range(174457, 174505+1):
    KolDel = 0
    M = []
    for i in range(2, number):
        if number % i == 0:
            KolDel += 1
            M.append(i)
    if KolDel == 2:  #  два различных натуральных делителя, не считая единицы и самого числа.
        print(*M)
'''
# Ответ:
# 3 58153
# 7 24923
# 59 2957
# 13 13421
# 149 1171
# 5 34897
# 211 827
# 2 87251
# endregion Тип 25 № 27422

# region Тип 25 № 27851
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [210235;210300], числа,
# имеющие ровно четыре различных натуральных делителя, не считая единицы и самого числа.
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.
#
# Например, в диапазоне [10;16] ровно четыре различных натуральных делителя имеет число 12,
# поэтому для этого диапазона вывод на экране должна содержать следующие значения:
#
# 2 3 4 6


for number in range(210235, 210300+1):
    KolDel = 0
    M = []
    for i in range(2, number):
        if number % i == 0:
            KolDel += 1
            M.append(i)
    if KolDel == 4:
        print(*M)
'''
# Ответ:
# 2 4 52561 105122
# 2 4 52567 105134
# 2 4 52571 105142
# endregion Тип 25 № 27851

# region Тип 25 № 27856
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632;95650], числа,
# имеющие ровно шесть различных нечётных натуральных делителей (при этом количество четных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.
#
# Например, в диапазоне [2;48] ровно шесть нечётных различных натуральных делителей имеет число 45, поэтому для этого
# диапазона вывод на экране должна содержать следующие значения: 1 3 5 9 15 45;
#
# в диапазоне [480;489] ровно шесть нечётных различных натуральных делителей имеет число 486, поэтому для этого
# диапазона вывод на экране должна содержать следующие значения: 1 3 9 27 81 243.

for number in range(95632, 95650+1):
    KolDel = 0
    Del = []
    for i in range(1, number+1):
        if number % i == 0 and i % 2 != 0:
            KolDel += 1
            Del.append(i)
    if KolDel == 6:
        print(Del)
'''
# Ответ:
# [1, 3, 9, 10627, 31881, 95643]
# [1, 7, 49, 61, 427, 2989]
# [1, 5, 25, 1913, 9565, 47825]
# endregion Тип 25 № 27856

# region Тип 25 № 37160
"""
# Найдите 5 чисел больших 500000, таких, что среди их делителей есть число, оканчивающееся на 8,
# при этом этот делитель не равен 8 и самому числу. В качестве ответа приведите 5 наименьших чисел, соответствующих условию.
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число, затем минимальный делитель,
# оканчивающийся на 8, не равный 8 и самому числу.


count = 0
for x in range(500000, 1000000):
    for i in range(9, x):
        if x % i == 0 and i % 10 == 8:
            print(x, i)
            count += 1
            break
    if count == 5:
        break
"""
# Ответ:
# 500002 178
# 500004 18
# 500016 48
# 500018 58
# 500020 4348
# endregion Тип 25 № 37160

# region Тип 25 № 27857
"""
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [84052;84130], число,
# имеющее максимальное количество различных натуральных делителей, если таких чисел несколько — найдите минимальное из них.
# Выведите на экран количество делителей такого числа и само число.

maxi = 0
number = 0
for x in range(84052, 84130+1):
    count = 0
    for i in range(1, x+1):
        if x % i == 0:
            count += 1
            if maxi < count:
                maxi = count
                number = x
print(maxi, number)
"""
# Ответ: 72 84084
# endregion Тип 25 № 27857

# region Тип 25 № 40741  - посложнее

# Пусть M(N) — сумма двух наибольших различных натуральных делителей натурального числа N, не считая самого числа.
# Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 10000000, для которых 0 < M(N) < 10000.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

# Вариант 1
"""
steps = 0
for x in range(10000000, 1000000000):
    countdel = 0
    sumdel = 0
    for i in range(x // 2, 1, -1):
        if x % i == 0:
            sumdel += i
            countdel += 1
            if sumdel > 10000:
                break
            elif countdel == 2:
                print(sumdel, x)
                steps += 1
                break
    if steps == 5:
        break
"""

# Вариант 2 - быстрее
'''    
def D(x):
    dl = set()
    k = 0
    for j in range(2, int(x ** 0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)

count = 0
for x in range(10000000+1, 20000000):
    dl = D(x)
    if len(dl) >= 2:
        M = dl[-1] + dl[-2]
        if 0 <= M <= 10000:
            print(x, M)
            count += 1
            if count == 5:
                exit()
'''

# Ответ:
# 6876
# 6374
# 6924
# 8024
# 8358
# endregion Тип 25 № 40741

# region Тип 25 № 28121
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [2422000; 2422080], простые числа.
# Выведите все найденные простые числа в порядке возрастания, слева от каждого числа выведите его номер по порядку, считая,
# что первое найденное число имеет номер «1», второе — «2», и т.д.

count = 1
for x in range(2422000, 2422080+1):
    flag = True
    for i in range(2, x):
        if x % i == 0:
            flag = False
            break
    if flag == True:
        print(count, x)
        count += 1
'''
# Ответ:
# 1 2422027
# 2 2422033
# 3 2422037
# 4 2422073
# endregion Тип 25 № 28121

# region Тип 25 № 28120
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [201455; 201470], числа,
# имеющие ровно 4 различных натуральных делителя.
# Выведите эти четыре делителя для каждого найденного числа в порядке возрастания.

for x in range(201455, 201470+1):
    M = [1, x]
    for d in range(2, x):
        if x % d == 0:
            M.append(d)
        if len(M) > 4:
            break
    if len(M) == 4:
        M.sort()
        print(*M)
'''
# Ответ:
# 1 3 67153 201459
# 1 13 15497 201461
# 1 29 6947 201463
# 1 2 100733 201466
# endregion Тип 25 № 28120

# region Тип 25 № 37160
'''
# Найдите 5 чисел больших 500000, таких, что среди их делителей есть число, оканчивающееся на 8, при этом этот делитель не равен 8 и самому числу.
# В качестве ответа приведите 5 наименьших чисел, соответствующих условию.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число,
# затем минимальный делитель, оканчивающийся на 8, не равный 8 и самому числу.

count = 0
for x in range(500000+1, 1000000000):
    for d in range(9, x):
        if x % d == 0:
            if d % 10 == 8:
                print(x, d)
                count += 1
                break
    if count == 5:
        break

'''
# Ответ:
# 500002 178
# 500004 18
# 500016 48
# 500018 58
# 500020 4348
# endregion Тип 25 № 37160

# region Тип 25 № 29673
'''

# Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Например, у числа 6 есть два нетривиальных делителя: 2 и 3. Найдите все натуральные числа,
# принадлежащие отрезку [123456789;223456789] и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе его наибольший нетривиальный делитель. Ответы расположите в порядке возрастания.

for x in range(123456789, 223456789+1):
    count = 0
    M = []
    if round(x ** (1/2)) == x ** (1/2):
        for d in range(2, round(x ** (1/2))+1):
            if x % d == 0:
                if d * d == x:
                    count += 1
                else:
                    M.append(x // d)
                    count += 2
            if count > 3:
                break
        if count == 3:
            M.sort()
            print(x, M[-1])
'''
# Ответ:
# 131079601 1225043
# 141158161 1295029
# 163047361 1442897
# endregion Тип 25 № 29673

# region Тип 25 № 45259
'''
# Среди натуральных чисел, не превышающих 10**9, найдите все числа, соответствующие маске 12345?7?8, делящиеся на число 23 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце — соответствующие им результаты деления этих чисел на 23.
#
# Количество строк в таблице для ответа избыточно.

for x in range(0, 10):
    for y in range(0, 10):
        num = f' 12345{x}7{y}8'
        num = int(num)
        if num % 23 == 0:
            print(num, num // 23)
'''
# Ответ:
# 123450798 5367426
# 123451718 5367466
# 123453788 5367556
# 123454708 5367596
# 123456778 5367686
# 123459768 5367816
# endregion Тип 25 № 45259

# region Тип 25 № 47229
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 2023.

A = {}
for i in range(0, 10):
    for j in range(0, 1000):
        x = int(f'1{i}2139{j}4')
        if x % 2023 == 0:
            A[x] = x // 2023

for i in sorted(A.keys()):
    print(i, A[i])
'''
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048

# endregion Тип 25 № 47229

# region Тип 25 № 36038
'''
# Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то считаем значение M равным нулю.
#
# Напишите программу, которая перебирает целые числа, большие 452021,
# в порядке возрастания и ищет среди них такие, для которых значение M при делении на 7 даёт в остатке 3.
# Вывести первые 5 найденных чисел и соответствующие им значения M.

k = 0
for n in range(452021+1, 100000000):
    M = []
    for j in range(2, n):
        if n % j == 0:
            M.append(j)
            break
    for j in range(n-1, 2, -1):
        if n % j == 0:
            M.append(j)
            break
    if sum(M) % 7 == 3:
        print(n, sum(M))
        k += 1
        if k == 5:
            break
'''
# Ответ:
# 452025 150678
# 452029 23810
# 452034 226019
# 452048 226026
# 452062 226033

# endregion Тип 25 № 36038

# region Тип 25 № 35999
'''
# Найдите все натуральные числа N, принадлежащие отрезку [200000000;400000000],
# которые можно представить в виде N=2**m*3**n, где m — чётное число, n — нечётное число.
# В ответе запишите все найденные числа в порядке возрастания.

# print(2 ** 31)
# print(3 ** 19)

for m in range(2, 1000, 2):
    for n in range(1, 1000, 2):
        N = (2**m) * (3**n)
        if 200000000 <= N <= 400000000:
            print(N)
'''
# 201326592
# 229582512
# 254803968
# 322486272

# endregion Тип 25 № 35999

# region Тип 25 № 27855
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632; 95700],
# числа, имеющие ровно шесть различных чётных натуральных делителей
# (при этом количество нечётных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.


for n in range(95632, 95700+1):
    M = []
    for j in range(2, n+1, 2):
        if n % j == 0:
            M.append(j)
            if len(M) > 6:
                break
    if len(M) == 6:
        print(*M)
'''
# Ответ:
# 2 10 50 3826 19130 95650
# 2 26 338 566 7358 95654
# 2 4 8 23918 47836 95672
# endregion Тип 25 № 27855

# region Тип 25 № 36880
'''
# Найдите все натуральные числа N, принадлежащие отрезку [400_000_000;600_000_000],
# которые можно представить в виде N=2**m * 3**n, где m — чётное число, n — нечётное число.
# В ответе запишите все найденные числа в порядке возрастания.

# print(2**28)  # 30 уже много, а 29 - нечетное (не должно превышать 10**9)
# print(3 ** 17)  # 19 уже много, а 18 - четное (не должно превышать 10**9)

M = []
for m in range(2, 28+1, 2):
    for n in range(1, 17+1, 2):
        N = 2 ** m * 3 ** n
        if 400_000_000 <= N <= 600_000_000:
            M.append(N)
M.sort()
for x in M:
    print(x)
'''
# Ответ:
# 408146688
# 452984832
# 516560652
# 573308928
# endregion Тип 25 № 36880

# region Тип 25 № 40741
'''
# Пусть M(N) — сумма двух наибольших различных натуральных делителей натурального числа N, не считая самого числа.
# Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 10000000, для которых 0<M(N)<10000.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(n):
    dl = set()
    for j in range(2, int(n ** 0.5) + 1):
        if n % j == 0:
            dl.add(j)
            dl.add(n // j)
            if len(dl) > 4:
                break
    return sorted(dl)

count = 0
for n in range(10_000_000+1, 20_000_000):
    dl = D(n)

    if len(dl) >= 2:
        M = dl[-1] + dl[-2]
        if 0 < M < 10000:
            print(M)
            count += 1
            if count == 5:
                break
'''
# Ответ:
# 6876
# 6374
# 6924
# 8024
# 8358
# endregion Тип 25 № 40741

# region Тип 25 № 27855
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632; 95700],
# числа, имеющие ровно шесть различных чётных натуральных делителей
# (при этом количество нечётных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

# Вариант 1
'''
for n in range(95632, 95700+1):
    D = []
    for j in range(2, n+1, 2):
        if n % j == 0:
            D.append(j)
            if len(D) > 6:
                break
    if len(D) == 6:
        print(D)
'''

# Вариант 2
'''
def D(n):
    dl = set()
    for j in range(1, int(n ** 0.5)+1):
        if n % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (n // j) % 2 == 0:
                dl.add(n // j)
            if len(dl) > 6:
                return dl
    return sorted(dl)


for n in range(95632, 95700 + 1):
    dl = D(n)
    if len(dl) == 6:
        print(dl)
'''

# Ответ:
# 2 10 50 3826 19130 95650
# 2 26 338 566 7358 95654
# 2 4 8 23918 47836 95672
# endregion Тип 25 № 27855

# region Тип 25 № 29673 Имеющие ровно три нетривиальных делителя
'''
# Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Например, у числа 6 есть два нетривиальных делителя: 2 и 3.
# Найдите все натуральные числа, принадлежащие отрезку [123456789;223456789] и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе его наибольший нетривиальный делитель. Ответы расположите в порядке возрастания.

print(123456789 ** 0.25)  # 105
print(223456789 ** 0.25)  # 122


def Simpler(x):
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            return False
    return True

for x in range(105, 122+1):
    if Simpler(x) == True:
        print(x**4, x**3)
'''
# Ответ:
# 131079601 1225043
# 141158161 1295029
# 163047361 1442897
# endregion Тип 25 № 29673

# region Тип 25 № 33104 Имеющие ровно три нетривиальных делителя
'''
# Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Найдите все натуральные числа, принадлежащие отрезку [289123456;389123456] и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе его наибольший нетривиальный делитель.
# Ответы расположите в порядке возрастания.


print(289123456 ** 0.25)  # 130
print(389123456 ** 0.25)  # 140


def Simpler(x):
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            return False
    return True

for x in range(130, 140+1):
    if Simpler(x) == True:
        print(x**4, x**3)
'''
# Ответ:
# 294499921 2248091
# 352275361 2571353
# 373301041 2685619
# endregion Тип 25 № 33104 Имеющие ровно три нетривиальных делителя

# region Тип 25 № 33770 У которых ровно три различных чётных делителя
'''
# Найдите все натуральные числа, принадлежащие отрезку [106_000_000; 107_000_000], у которых ровно три различных чётных делителя.
# В ответе перечислите найденные числа в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (x // j) % 2 == 0:
                dl.add(x // j)
            if len(dl) > 3:
                return dl
    return sorted(dl)

for x in range(106000000, 107000000 + 1, 2):
    dl = D(x)
    if len(dl) == 3:
        print(x, dl)
'''
# Ответ:
# 106084178
# 106492418
# 106784498
# 106842962
# endregion Тип 25 № 33770 У которых ровно три различных чётных делителя

# region Тип 25 № 33527 У которых ровно три различных чётных делителя

# Найдите все натуральные числа, принадлежащие отрезку [101_000_000; 102_000_000],
# у которых ровно три различных чётных делителя (при этом количество нечётных делителей может быть любым).
# В ответе перечислите найденные числа в порядке возрастания.

# Код решения Вариант 1
'''
def D(x):
    dl = set()
    for j in range(1, int(x ** 0.5)+1):
        if x % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (x // j) % 2 == 0:
                dl.add(x // j)
            if len(dl) > 3:
                return dl
    return sorted(dl)

for x in range(101_000_000, 102_000_000+1, 2):
    dl = D(x)
    if len(dl) == 3:
        print(x)
   '''

'''
for x in range(101_000_000, 102_000_000+1, 2):
    dl = set()
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (x // j) % 2 == 0:
                dl.add(x // j)
            if len(dl) > 3:
                break
    if len(dl) == 3:
        print(x)
'''

# Вариант 2
# Ответ:
# 101075762
# 101417282
# 101588258
# 101645282
# endregion Тип 25 № 33527 У которых ровно три различных чётных делителя

# region Тип 25 № 38959 M(N) — произведение 5 наименьших различных натуральных делителей
'''
# Пусть M(N) — произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы.
# Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
#
# Найдите 5 наименьших натуральных чисел, превышающих 200_000_000, для которых 0 < M(N) < N.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x ** 0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
            if len(dl) > 10:
                return sorted(dl)
    return sorted(dl)

count = 0
for n in range(200_000_000+1, 400_000_000):
    dl = D(n)
    if len(dl) > 5:
        M = dl[0] * dl[1] * dl[2] * dl[3] * dl[4]
        if 0 < M < n:
            print(n, M)
            count += 1
            if count == 5:
                break
'''
# Ответ:
# 1728
# 21632
# 1260
# 1152
# 4127787
# endregion Тип 25 № 38959 M(N) — произведение 5 наименьших различных натуральных делителей

# region Тип 25 № 39254 M(N) — произведение 5 наименьших различных натуральных делителей
'''
# Пусть M(N) — произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы.
# Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
#
# Найдите 5 наименьших натуральных чисел, превышающих 500_000_000, для которых 0 < M(N) < N.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x ** 0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
            if len(dl) > 10:
                return sorted(dl)
    return sorted(dl)

count = 0
for n in range(500_000_000+1, 600_000_000):
    dl = D(n)
    if len(dl) > 5:
        M = dl[0] * dl[1] * dl[2] * dl[3] * dl[4]
        if 0 < M < n:
            print(n, M)
            count += 1
            if count == 5:
'''
# Ответ:
# 1008
# 1797092
# 48408867
# 1800
# 1156923
# endregion Тип 25 № 39254 Пусть M(N) — произведение 5 наименьших различных натуральных делителей

# region Тип 25 (№ 5857) (В. Петров)

# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
# Среди натуральных чисел, не превышающих 10**9, найдите все числа, семеричная запись которых соответствует маске ?213*5664, делящиеся на 333_10 без остатка.
# В ответе запишите все найденные числа в порядке возрастания,
# справа от каждого числа – соответствующие им частные от деления на 333_10. Все числа в ответе запишите в десятичной системе счисления.
'''
def systems(m, n):
    alphabet = '0123456'
    A = []
    while m > 0:
        A.append(alphabet[m % n])
        m //= n
    A.reverse()
    return ''.join(A)


for x in range(333, 10**9, 333):
    a = systems(x, 7)
    if '213' in a and '5664' in a:
        if a[1:4] == '213' and a[-4:] == '5664':
            print(x, x//333)
'''
#  Ответ:
# 24888420 74740
# 371885742 1116774
# 654120891 1964327
# 937155573 2814281

# endregion Тип 25 (№ 5857) (В. Петров)

# region Тип 25 (№ 5876) (Е. Джобс)

# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
# Среди натуральных чисел, меньших, чем 10**13, найдите числа, соответствующие маске 32*54?123 и делящиеся на 519,
# в которых 1) чётное количество цифр, среди которых нет нулей; 2) сумма цифр первой половины числа равна сумме цифр второй половины числа.
# Запишите в ответе найденные числа в порядке возрастания, справа от каждого числа укажите частное от его деления на 519.

'''
M = [i for i in range(0, 100000)]
M.append('')

for x in M:
    for y in '0123456789':
        a = int(f'32{x}54{y}123')
        A = [int(i) for i in str(a)]
        if 0 not in A:
            if len(A) % 2 == 0:
                if sum(A[:len(A)//2]) == sum(A[len(A)//2:]):
                    if a % 519 == 0:
                        print(a, a // 519)

        # if a < 10 ** 13 and a % 519 == 0 and len(s) % 2 == 0 and s.count('0') == 0 and sum_pol == (sum_ - sum_pol):
        #     f = a // 519
        #     print(a, f)
'''
# Ответ:
# 321525543123 619509717
# 322167546123 620746717
# 323724546123 623746717
# 325281546123 626746717
# 324366549123 624983717
# 325923549123 627983717

# endregion Тип 25 (№ 5876) (Е. Джобс)



