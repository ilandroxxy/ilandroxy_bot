# Тип 4 № 33474
# Для передачи сообщений, составленных из заглавных букв русского алфавита, используется неравномерный двоичный код, в котором никакое кодовое слово не является началом другого кодового слова.
# Это условие обеспечивает возможность однозначной расшифровки закодированных сообщений.
# Известны кодовые слова, назначенные для некоторых букв: А— 000, Б— 0010, В— 101, Г— 11.
# Какое наименьшее количество двоичных знаков может содержать сообщение, кодирующее слово КОЛОБОК?

# К - 2 - 3
# О - 3 - 3
# Л - 1 - 3
# Б - 1 - 3

# 3 ^ 4 = 21

# Ответ: 21


# Тип 12 № 27543
# Дана программа для Редактора:
# ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#     заменить (01, 103)
#     заменить (02, 10)
#     заменить (03, 210)

# Известно, что исходная строка начинается с цифры 0, а далее содержит 12 цифр 1, 15 цифр 2 и 17 цифр 3, расположенных в произвольном порядке.
# Сколько цифр 2 будет в строке, которая получится после выполнения данной программы?

'''
line = '0' + '1' * 12 + '2' * 15 + '3' * 17
while '01' in line or '02' in line or '03' in line:
    line = line.replace('01', '103', 1)
    line = line.replace('02', '10', 1)
    line = line.replace('03', '210', 1)
print(line.count('2'))
'''

# Ответ: 29


# Тип 12 № 33482

# Дана программа для редактора:
# ПОКА нашлось (111)
# заменить (111, 22)
# заменить (222, 11)
#
# Известно, что исходная строка содержала более 100 единиц и не содержала других цифр.
# Укажите минимально возможную длину исходной строки, при которой в результате работы этой программы получится строка, содержащая максимально возможное количество единиц.

'''
line = '1' * 100
max_1 = -99999
for i in range(100, 1000):
    line = i * '1'
    while '111' in line:
        line = line.replace('111', '22', 1)
        line = line.replace('222', '11', 1)
    if max_1 < line.count('1'):
        max_1 = line.count('1')
        print(max_1, i)
'''

# Ответ: 103

# Тип 17 № 37355
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, у которых сумма элементов кратна 7, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.

counter = 0
maximum = 0
file = open('17.1.txt')
line = [int(i) for i in file]
for i in range(len(line)):
    for j in range(i + 1, len(line)):
        if (line[i] + line[j]) % 7 == 0:
            counter += 1
            if maximum < line[i] + line[j]:
                maximum = line[i] + line[j]
print(counter, maximum)

# Ответ: 7142586 19992