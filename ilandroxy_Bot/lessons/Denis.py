# region Домашка:  **************************************************


# endregion Домашка: **************************************************


# region Урок:  **************************************************

# № 7584 Досрочная волна 2023 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число кратно 3, тогда в конец дописывается три младших разряда полученной двоичной записи,
# б) если число не кратно 3, тогда в конец дописывается двоичная последовательность,
# являющаяся результатом умножения 3 на остаток от деления числа N на 3.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
#
# Например, для исходного числа 510 = 1012 результатом является число 1011102 = 4610,
# а для исходного числа 910 = 10012 результатом является число 10010012 = 7310.
# Укажите наибольшее число N, после обработки которого с помощью этого алгоритма получается число R, меньшее 100.
# В ответе запишите это число в десятичной системе счисления.
'''
#         -3  -2 -1
M = [1, 2, 3, 4, 5]

for n in range(1, 10000):
    s = bin(n)[2:]
    if n % 3 == 0:
        s += s[-3:]
    else:
        s += bin(3 * (n % 3))[2:]

    r = int(s, 2)
    if r < 100:
        print(n)
'''
# Показать ответ: 22


#
# № 7588 Досрочная волна 2023 (Уровень: Базовый)
# Откройте файл электронной таблицы, содержащей в каждой строке пять натуральных чисел.
#
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
#
# - каждое число в строке встречается по одному разу,
# - утроенная сумма максимального и минимального значений не превышает удвоенной суммы оставшихся чисел.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    if len(set(M)) == len(M):  # - каждое число в строке встречается по одному разу
        if 3 * (M[0] + M[4]) <= 2 * (M[1] + M[2] + M[3]):
            count += 1
print(count)
'''
# Показать ответ: 853


#
# № 7591 Досрочная волна 2023 (Уровень: Базовый)
# Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
#
# Исполнитель Редактор получает на вход строку начинающуюся на 3 и содержащую далее n цифр 5 (n > 3).
# На выполнение Редактору дана следующая программа:
#
# Найдите минимальное значение n, при котором сумма цифр конечной строки будет равна 27.
'''
for n in range(4, 1000):
    s = '3' + '5' * n

    while '25' in s or '355' in s or '555' in s:
        if '25' in s:
            s = s.replace('25', '3', 1)
        if '355' in s:
            s = s.replace('355', '52', 1)
        if '555' in s:
            s = s.replace('555', '23', 1)

    if sum([int(i) for i in s]) == 27:
        print(n)
        break
'''
# Показать ответ: 16


#
# № 7596 Досрочная волна 2023 (Уровень: Базовый)
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от 1 до 100 000 включительно.
# Определите количество пар последовательности, в которых только одно число трехзначное,
# и сумма элементов пары кратна минимальному трехзначному значению последовательности, оканчивающемуся на 5.
# В ответе запишите два числа: сначала количество найденных пар, затем минимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if len(str(i)) == 3 and str(i)[-1] == '5']
count = 0
mini = 9999999
for i in range(0, len(M)-1):
    if (len(str(M[i])) == 3 and len(str(M[i+1])) != 3) or (len(str(M[i])) != 3 and len(str(M[i+1])) == 3):
        if (M[i] + M[i+1]) % min(A) == 0:
            count += 1
            mini = min(mini, M[i] + M[i+1])
print(count, mini)
'''
# Показать ответ: 2 33120


#
# 15 № 7594 Досрочная волна 2023 (Уровень: Базовый)
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Так, например, 14&5 = 11102&01012 = 01002 = 4.
# Для какого наименьшего неотрицательного целого числа А формула
#
# x&39 = 0 ∨ (x&11 = 0 → ¬(x&А = 0))
#
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной х)?

# Вариант 1
# print(min([A for A in range(0, 1000) if all(( (x&39 == 0) or ((x&11 == 0) <= (not(x&A== 0)))) for x in range(0, 1000))]))
'''
def F(A, x):
    return (x&39 == 0) or ((x&11 == 0) <= (not(x&A == 0)))

for A in range(0, 1000):
    if all(F(A, x) for x in range(0, 1000)):
        print(A)
        break
'''
# Показать ответ: 36



# № 7600 Досрочная волна 2023 (Уровень: Базовый)
# Текстовый файл состоит не более, чем из 1 200 000 прописных символов латинского алфавита.
# Определите максимальное количество идущих подряд символов, среди которых любые
# два символа из набора Q, R, S в различных комбинациях (с учётом повторений) не стоят рядом.

s = open('24.txt').readline()
M = 'QQ QR QS RR RQ RS SS SR SQ'.split()
for x in M:
    s = s.replace(x, ' ')
R = [len(i) for i in s.split()]
print(1+max(R)+1)
# s = 'R00000R'
# s = 'RR00000RR'
# s = '_00000_'

# Показать ответ: 544


# endregion Урок:  **************************************************

import useful
print(useful.who_is_name())

# todo: Денис = [2, 5, 9, 16, 17, 19-21, 23], на следующем уроке:
# на прошлом уроке: Прорешивали 9 номера с домашки и задачи 5, 12, 15, 17, 24 с досрочного вариант экзамена 2023 года
# на следующем уроке:
