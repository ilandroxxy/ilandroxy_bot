# t.me/informatika_kege_itpy




'''
# F=(x→(z≡w))∨¬(y→w)
print('x y z w')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (x <= y) or ((not w) == z) and (x <= y) == (w and (not z))
                if not F:
                    print(x, y, z, w)

'''

# (А.Богданов) Вася составляет пятибуквенные слова из букв слова УДАЧ.
# Каждая буква может не входить или входить в слово многократно.
# Первая буква может быть только гласной.
# Все различные слова пронумеровали в алфавитном порядке начиная с 1.
# Под каким номером стоит слово УДАЧА?
'''
s = sorted('УДАЧ')
k = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if slovo[0] in 'АУ':
                        print(k, slovo)
                        k += 1
'''
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')

for x in alphabet[:22]:
    A = int(f'18{x}89957', 22)
    B = int(f'80{x}33', 22)
    C = int(f'521{x}6', 22)
    if (A+B+C) % 21 == 0:
        print((A+B+C) // 21)
'''



















# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится **шестеричная** запись числа N.
#
# 2. Далее эта запись обрабатывается по следующему правилу:
#
# а) если число N делится на 3, то к этой записи дописываются две первые шестеричные цифры;
#
# б) если число N на 3 не делится, то остаток от деления на 3 умножается на 10, переводится в шестеричную запись и дописывается в конец числа.
#
# Полученная таким образом запись является шестеричной записью искомого числа R.
#
# 3. Результат переводится в десятичную систему и выводится на экран.
#
# Например, для исходного числа 11_10 результатом является число 416_10, а для исходного числа 12_10 это число 444_10.
#
# Укажите **минимальное** число R, большее 680, которое может быть получено с помощью описанного алгоритма.
# В ответе запишите это число в десятичной системе счисления.

from string import *
alphabet = digits + ascii_uppercase
print(alphabet)  #Вывод: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
def my_convert(x, n):
    s = ''
    while x > 0:
        s += alphabet[x % n]
        x //= n
    s = s[::-1]
    return s


for n in range(1, 100000):

    s = my_convert(n, 6)

    if n % 3 == 0:
        s = s + s[:2]
    else:
        x = (n % 3) * 10
        s += my_convert(x, 6)

    r = int(s, 6)

    if r > 680:
        print(r)
        break
'''
# Ответ: 180

import ipaddress





















































'''
        # todo: Тип 23 № 9844 (Уровень: Базовый)
                        fre







                        Сегодня вы узнаете
                        Как решить первый номер ЕГЭ по информатике
                        используя Питон!?

                        Итак, Подключаем библиотеку itertools

                        Перебираем все дороги графа и таблицы

                        Через метод itertools.permutations
                        перебираем все возможные буквенные вершины

                        И заменяем их в табличном представлении,
                        то есть цифры меняем на буквы


                        Если наши графы G и G2 сошлись,
                        то мы нашли подходящий набор вершин!

                        А найти сумму - дело техники.

                        Подписывайся! Еще больше годных разборов ждут тебя в комментариях









                        from itertools import *

                        G = 'AC CA CF FC FD DF ED DE EB BE ' \
                                'CB BC AB BA AG GA GH HG DH HD'
                        T = '15 16 23 27 28 32 36 46 48 51 ' \
                                '57 61 63 64 72 75 78 82 84 87'
                        for per in permutations('ABCDEFGH'):
                            G2 = T
                            for i in range(0, 8):
                                G2 = G2.replace(str(i + 1), per[i])
                            if set(G.split()) == set(G2.split()):
                                print(per)

                        #   1    2    3    4    5    6    7    8
                        # ('H', 'B', 'E', 'F', 'G', 'D', 'A', 'C')
                        # Ответ: BC = 18, GH = 43, 18+43 = 61















                        vrev
'''
