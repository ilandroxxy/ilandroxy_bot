# region Домашка: ********************************************************



# endregion Домашка: ********************************************************


# region Урок: ********************************************************

# Алгоритм получает на вход натуральное число N и строит по нему новое
# число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Если сумма цифр десятичной записи заданного числа нечётна, то в конец
# двоичной записи дописывается 1, если чётна – 0.
# 3–4. Пункт 2 повторяется для вновь полученных чисел ещё два раза.
# 5.  Результатом работы алгоритма становится десятичная запись полученного
# числа R.

# Определите наименьшее возможное значение R > 1028, которое может
# получиться в результате работы алгоритма.
'''
for n in range(1, 1000):
    s = bin(n)[2:]

    for i in range(3):
        if sum([int(i) for i in str(int(s, 2))]) % 2 != 0:
            s += '1'
        else:
            s += '0'

    r = int(s, 2)
    if r > 1028:
        print(r)
        break
'''
# Ответ: 1035


# Вероника составляет коды из букв слова ВЕРОНИКА.
# Код должен состоять из 6 букв, любую букву можно использовать произвольное число раз или не
# использовать вовсе. Вероника хочет, чтобы гласных в каждом коде было
# больше, чем согласных. Сколько кодов, удовлетворяющих этому условию, она сможет составить?
'''
s = 'ВЕРОНИКА'
sogl = 'ВРНК'
glas = 'ЕОИА'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        A = [i for i in temp if i in glas]
                        B = [i for i in temp if i in sogl]
                        if len(A) > len(B):
                            count += 1
print(count)
'''
# Ответ: 90112


# В каждой строке электронной таблицы записаны пять натуральных чисел.
# Определите, сколько в таблице строк, для которых выполнены следующие условия:
# – все числа в строке различны;
# – нечётных чисел больше, чем чётных;
# – сумма нечётных чисел меньше суммы чётных.
# В ответе запишите число – количество строк, для которых выполнены эти условия.
'''
count = 0
for s in open('9.txt'):
    M = [int(i) for i in s.split()]
    if len(set(M)) == len(M):  # – все числа в строке различны;
        Nechet = [i for i in M if i % 2 != 0]
        Chet = [i for i in M if i % 2 == 0]
        if len(Nechet) > len(Chet):
            if sum(Nechet) < sum(Chet):
                count += 1
print(count)
'''
# Ответ: 303


# В базе данных хранится информация об объектах определённой структуры.
# Каждый объект описывается как последовательность из 290 простых
# элементов, при этом всего используется 1012 различных простых элементов.
# Каждое описание объекта записывается как последовательность кодов
# простых элементов, при этом код каждого элемента содержит одинаковое для
# всех элементов минимально возможное число битов, а для описания в целом
# отводится минимально возможное целое число байтов.
# Сколько Кбайтов потребуется для хранения 32 768 описаний, построенных
# по такой схеме? В ответе запишите только число – количество Кбайтов.
'''
symbols = 290
alphabet = 1012
# alphabet = 2 ** i
i = 10  # бит на 1 символ

bit = symbols * i

byte = int(bit / 8) + 1
print(byte)  # 363 байта на 1 запись уходит

print((32768 * byte) / (2**10))
'''
# Ответ: 11616 Кбайт


# Известно, что исходная строка A содержала ровно два нуля – на первом и на
# последнем месте, а также по 10 единиц и двоек. После выполнения данной
# программы получилась строка B, содержащая 7 единиц и 5 двоек. Какое
# наименьшее количество троек может быть в строке B?

# Дана программа для редактора:
# ПОКА НЕ нашлось (00)
#   заменить (012, 30)
#   ЕСЛИ нашлось (011)
#   ТО
#       заменить (011, 20)
#       заменить (022, 40)
#   ИНАЧЕ
#       заменить (01, 10)
#       заменить (02, 101)
#   КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
'''
mini = 99999
from itertools import *
for s in product('12', repeat=20):
    if s.count('1') == 10 and s.count('2') == 10:
        temp = '0' + ''.join(s) + '0'

        while '00' not in temp:
            temp = temp.replace('012', '30', 1)
            if '011' in temp:
                temp = temp.replace('011', '20', 1)
                temp = temp.replace('022', '40', 1)
            else:
                temp = temp.replace('01', '10', 1)
                temp = temp.replace('02', '101', 1)
        if temp.count('1') == 7 and temp.count('2') == 5:
            mini = min(mini, temp.count('3'))
print(mini)
'''
# Ответ: 3

# Дана программа для Редактора:
# ПОКА нашлось (12)
#   заменить (12, 4)
# КОНЕЦ ПОКА
#
# Исходная строка содержит десять единиц и некоторое количество двоек, других цифр нет,
# точный порядок расположения единиц и двоек неизвестен.
# После выполнения программы получилась строка с суммой цифр 25.
# Какое наименьшее количество двоек могло быть в исходной строке?
'''
from itertools import *
for x in range(11, 20):
    for s in product('12', repeat=x):
        if s.count('1') == 10 and s.count('2') <= 8:
            s = ''.join(s)
            while '12' in s:
                s = s.replace('12', '4', 1)
            if sum([int(i) for i in s]) == 25:
                print(x-10)
                exit()
'''


# В выражении 123x_37 + 4x59_37 x обозначает некоторую цифру из алфавита
# системы счисления с основанием 37. Определите наименьшее значение x,
# при котором значение данного выражения кратно 36.  Для найденного x
# вычислите частное от деления данного выражения на 36 и запишите его
# в ответе в десятичной системе счисления.

# print(int('124124124', 37))  # int() base must be >= 2 and <= 36, or 0
'''
for x in range(0, 37):
    A = [1, 2, 3, x]
    B = [4, x, 5, 9]

    a = 0
    A.reverse()
    for i in range(0, len(A)):
        a += A[i] * 37 ** i

    b = 0
    B.reverse()
    for i in range(0, len(B)):
        b += B[i] * 37 ** i

    if (a + b) % 36 == 0:
        print((a + b) // 36)
        break
'''
# Ответ: 7348


# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без
# остатка на натуральное число m».
# Укажите наименьшее целое значение A, для которого формула
# (ДЕЛ(144, x)→ ¬ДЕЛ(x, y)) ∨ (x + y > 100) ∨ (A – x > y)
# тождественно истинна при любых натуральных значениях переменных x и y.
'''
def F(x, y):
    return ((144 % x == 0) <= (x % y != 0)) or (x + y > 100) or (A - x > y)

for A in range(1, 1000):
    if all(F(x, y) for x in range(1, 100) for y in range(1, 100)):
        print(A)
        break
'''
# Ответ: 97

# endregion Урок: ********************************************************


# todo: Никита = [2, 5, 6, 8, 9, 12, 14+, 15+, 16, 17, 18, 19, 20, 21, 23, 24+, 25.2]
# на прошлом уроке: Прорешивали 1 Вариант статград от 15.12.22
# на следующем уроке:
