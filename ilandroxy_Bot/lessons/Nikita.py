# region Домашка: ********************************************************

# endregion Домашка: ********************************************************


# region Урок: ********************************************************

# 27421
#  Текстовый файл состоит не более чем из 106 символов X, Y и Z.
#  Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.

# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
'''
s = open('24.txt').readline()
count = 1
maxi = 0
for i in range(0, len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        maxi = \max(maxi, count)
    else:
        count = 1
print(maxi)


s = open('24.txt').readline()
for x in 'XX ZZ YY'.split():
    s = s.replace(x, ' ')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 35


# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от −10000 до 10000 включительно.
# Определите коичество пар последовательности, в которых только одно число оканчивается на 3,
# а сумма квадратов элементов пары не меньше квадрата максимального элемента последовательности, оканчивающегося на 3.
# В ответе запишите два числа: сначала количество найденных пар,затем максимальную из сумм
# квадентов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
# максимального элемента последовательности, оканчивающегося на 3:
Amax = max([i for i in M if abs(i) % 10 == 3 or str(i)[-1] == '3'])
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (abs(M[i]) % 10 == 3 and abs(M[i+1]) % 10 != 3) or (str(M[i])[-1] != '3' and str(M[i+1])[-1] == '3'):
        if (M[i]**2 + M[i+1]**2) >= Amax**2:
            count += 1
            maxi = max(maxi, M[i]**2 + M[i+1]**2)
print(count, maxi)
'''
# 180 190360573


# № 8510 Апробация 17.05 (Уровень: Средний)
# Текстовый файл состоит из символов, обозначающих прописные буквы латинского алфавита.
# Определите максимальное количество идущих подряд символов, среди которых никакие две
# буквы из набора букв N, O и P (с учетом повторений) не записаны подряд.
# Для выполнения этого задания следует написать программу.
'''
import itertools
pair = []
for s in itertools.product('NOP', repeat=2):
    pair.append(''.join(s))

s = open('24.txt').readline()
for x in pair:
    s = s.replace(x, '* *')
M = [len(i) for i in s.split()]
print(max(M))



import itertools
pair = []
for s in itertools.product('NOP', repeat=2):
    pair.append(''.join(s))

s = open('24.txt').readline()
print(s)
my_str = ''
result_str = ''
count = 1
maxi = 0
for i in range(0, len(s)-1):
    if s[i:i+2] in pair:
        count = 1
        my_str = s[i]
    else:
        count += 1
        my_str += s[i]
        if maxi < count:
            maxi = count
            result_str = my_str
print(maxi, result_str)

print(len('PPREPTPEDTHJDDUTMNCYJMNQUOQBOUGNJCPCPFNEQOSOANHOEPVOJAIPH'))
'''
# Ответ: 57



# № 7891 (Уровень: Средний)
# (Е. Фокин) Текстовый файл состоит не более чем из 106 символов и содержит только буквы латинского алфавита
# и десятичные цифры. Найдите максимальную длину подстроки, ограниченной с двух сторон одним и тем же символом
# и не содержащей этого символа между ними. В ответе укажите длину найденной строки, включая граничные символы.
'''
s = open('24.txt').readline()
maxi = 0
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for a in alphabet:
    M = [len(i) for i in s.split(a)]
    maxi = max(maxi, max(M))
print(maxi+2)
'''
# Ответ: 9747



# № 7853 Danov2304 (Уровень: Сложный)
# (А.Богданов) Текстовый файл состоит из символов латинского алфавита и десятичных цифр.
# Определите максимальное количество идущих подряд символов, среди которых любые два символа из набора N,O,T
# в различных комбинациях(с учётом повторений) не стоят через один символ (который может быть любым).
# Например, ТEN или NUТ не могут быть в искомой подстроке.
'''
import itertools
ALPHABET = sorted('0123456789QWERTYUIOPASDFGHJKKLZXCVBNM')

troyka = []
for s in itertools.product(ALPHABET, repeat=3):
    if s[0] in 'NOT' and s[2] in 'NOT':
        troyka.append(''.join(s))

s = open('24.txt').readline()
for x in troyka:
    s = s.replace(x, '** **')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 1461

# № 5677 Вариант 09.01.23 (Уровень: Средний)
# (А. Игнатюк) В текстовом файле дана последовательность латинских букв.
# Необходимо найти в этой последовательности самую длинную подстроку, состоящую из комбинации DAD,
# при этом первый и последний элементы могут быть неполными. Например ADDADDADDADD.
#
# В ответе укажите количество символов, составляющих наибольшую длину подходящей подстроки.
'''
s = open('24.txt').readline()
print(s)
print(len('DADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDA'))
print(len('DDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDA'))  # 99
print(len('ADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDADDA'))
'''
# Ответ: 99



# № 8427 (Уровень: Средний)
# Файл содержит последовательность натуральных чисел, не превышающих 20 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, для которых выполняются следующие условия:
# – ровно одно число в паре четырёхзначное;
# – сумма квадратов элементов пары без остатка делится на наименьшее в последовательности
# трёхзначное число, запись которого заканчивается цифрой 3.
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную из сумм квадратов элементов таких пар.
'''
M = [int(i) for i in open('17.txt')]
# наименьшее в последовательности трёхзначное число, запись которого заканчивается цифрой 3.
Amin = min([i for i in M if len(str(i)) == 3 and i % 10 == 3])
count = 0
maxi = -9999999
for i in range(0, len(M)-1):
    flag1, flag2 = False, False
    if len(str(M[i])) == 4:
        flag1 = True
    if len(str(M[i+1])) == 4:
        flag2 = True
    if flag1 + flag2 == 1:  # – ровно одно число в паре четырёхзначное;
        if (M[i]**2 + M[i+1]**2) % Amin == 0:
            count += 1
            maxi = max(maxi, M[i]**2 + M[i+1]**2)
print(count, maxi)
'''
# Ответ: 74 433966217

# № 7023 Danov2303 (Уровень: Базовый)
# (А.Богданов) Миша заполнял таблицу истинности логической функции

# ¬(((¬w→¬y)→¬z)→x), но успел заполнить лишь фрагмент из трёх различных её строк даже не указав,
# какому столбцу таблицы соответствует каждая из переменных

# w,x,y,z.
print('x y z w F')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (not((((not w) <= (not y)) <= (not z)) <= x))
                print(x, y, z, w, F)



# endregion Урок: ********************************************************


# todo:   Никита   = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 23, 24+, 25.2, 26.1]
# todo:    КЕГЭ    = [5, 8, 15, 17, 24]
# на прошлом уроке: Прорешали много задач с домашених вопросов: 24, 17, 25, 2. Повторили 24 номера с replace
# на следующем у