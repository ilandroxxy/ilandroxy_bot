# region Домашка: ********************************************************



# endregion Домашка: ********************************************************


# region Урок: ********************************************************

# № 6077 /dev/inf 02.2023 (Уровень: Средний)
# (А. Рогов) По каналу связи передаются трехзначные числа. Для каждой пары таких чисел строится контрольная сумма,
# необходимая для обнаружения ошибок при передаче. Контрольная сумма строится следующим образом:
#
# 1. записывается сумма разрядов сотен исходных чисел
# 2. справа дописывается сумма разрядов десятков исходных чисел
# 3. слева дописывается сумма разрядов единиц исходных чисел
# 4. контрольная сумма — это три цифры полученного числа: число тысяч, сотен и десятков.
#
# Пример: передаются числа 473 и 934. Сумма разрядов сотен равна 13, сумма разрядов десятков равна 10,
# сумма разрядов единиц 7. Получаем число 71310, контрольная сумма 131.
#
# Определите, при каком наибольшем значении первого числа пары контрольная сумма будет равна 2?
'''
for x in range(100, 1000):
    for y in range(100, 1000):
        X = [int(i) for i in str(x)]
        Y = [int(i) for i in str(y)]
        a = X[0] + Y[0]
        b = X[1] + Y[1]
        c = X[2] + Y[2]
        r = str(c) + str(a) + str(b)
        if len(r) > 3:
            result = r[-4:-1]
        else:
            result = r[-3:-1]
        if int(result) == 2:
            print(x, y)
'''
# Ответ: 190


# № 5870 Danov 2301 (Уровень: Средний)
# (А.Богданов) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом:

# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# a) если сумма цифр в двоичной записи числа чётная, то 4 младших бита инвертируются, т.е. 0 изменяется на 1, а 1 на 0;
# b) если сумма цифр в двоичной записи числа нечётная, то инвертируются 4 младших бита, за исключением самого младшего разряда
# 3. Полученная таким образом запись является двоичной записью искомого числа R

# Например, для исходного числа 36_10 = 100100_2. результатом является число 43_10 = 101011_2
# а для исходного числа 37_10 = 100101_2 результатом является число 59_10 = 111011_2
#
# Укажите число N, большее 63, после обработки которого с помощью этого алгоритма
# получается минимальное число R. В ответе запишите число в десятичной системе счисления.
'''
mini = 9999
for n in range(63+1, 10000):
    s = bin(n)[2:]
    if s.count('1') % 2 == 0:
        s = s[:-4] + s[-4:].replace('1', '*').replace('0', '1').replace('*', '0')

    else:
        s = s[:-5] + s[-5:-1].replace('1', '*').replace('0', '1').replace('*', '0') + s[-1]

    R = int(s, 2)
    if mini > R:
        mini = R
        print(n, R)
'''
# Ответ: 94


# № 5694 (Уровень: Средний)
# (Д. Тараскин) Исполнитель СУММАТОР выполняет поразрядную дизъюнкцию чисел M и N.
#
# Поразрядной дизъюнкцией чисел M и N является двоичное число, в котором каждый разряд числа равен дизъюнкции соответствующих двоичных разрядов чисел M и N.
# Приведем пример:
# 10_10 = 1010_2
# 15_10 = 1111_2
# Ответом будет число: 1111_2
#
# Если двоичная запись одного числа короче другого, то её необходимо дополнить незначащими нулями до нужной длины.
# На вход Исполнителю подаётся число M = 278. Для какого наименьшего числа N полученный результат будет содержать 7 единиц?
'''
def MyDiss(m, n):
    M = bin(m)[2:]
    N = bin(n)[2:]

    while len(M) != len(N):
        if len(M) < len(N):
            M = '0' + M
        else:
            N = '0' + N

    R = ''
    for i in range(0, len(N)):
        if M[i] == '0' and N[i] == '0':
            R += '0'
        else:
            R += '1'
    return R

for n in range(1, 10000):
    R = MyDiss(278, n)
    if R.count('1') == 7:
        print(n)
        break
'''
# Ответ: 41

#
# s = '12345678'
# n = len(s) // 2
# print(n)
# s = s[:n] + '111' + s[n:]  # если число четное - добавим внутрь "111"
# print(s)



# № 4872 (Уровень: Средний)
# (А. Сардарян) На вход алгоритма подаётся два натуральных числа N и M.
# Алгоритм строит по ним новое число R следующим образом.
#
# 1) Вычисляется произведение P1 всех ненулевых чётных цифр чисел N и M.
#
# 2) Вычисляется произведение P2 всех нечётных цифр чисел N и M.
#
# 3) Результат R вычисляется как модуль разности P1 и P2.
#
# Например, для N = 256 и M = 108 получаем P1 = 2·6·8 = 96 и P2 = 5·1 = 5,
# так что R = |96 - 5|= 91. Укажите минимальное число M, при котором для N = 120 получается R = 29.
'''
for m in range(1, 10000):
    M = [int(i) for i in str(m)]
    N = [int(i) for i in str(120)]
    P1 = 1
    for x in M + N:
        if x % 2 == 0 and x != 0:
            P1 *= x
    P2 = 1
    for x in M + N:
        if x % 2 != 0:
            P2 *= x
    R = abs(P1 - P2)
    if R == 29:
        print(m)
        break
'''
# Ответ: 238


# endregion Урок: ********************************************************


# todo: Никита = [2, 3, 4, 5, 6, 7, 8, 9.1, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 23, 24+, 25.2]
# на прошлом уроке: Прорешивали сложные задачи 5-го номера с КЕГЭ.
# на следующем уроке:
