


# Тип 24 № 35998
'''
# Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт.
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
#
# В строках, содержащих менее 25 букв A, нужно определить и вывести максимальное расстояние между одинаковыми буквами в одной строке.
#
# Пример. Исходный файл:
# GIGA
# GABLAB
# NOTEBOOK
# AGAAA
#
# В этом примере во всех строках меньше 25 букв A.
# Самое большое расстояние между одинаковыми буквами – в третьей строке между буквами O, расположенными в строке на 2-й и 7-й позициях.
# В ответе для данного примера нужно вывести число 5.
#
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

f = open('24.txt', 'r')
S = f.readlines()

for i in range(0, len(S)):
    print(len(S[i]))
print("Количество строк: ", len(S))

maxi = 0
Alphabet = 'QWERTYUIOPASDFGHJKLZXCVBNM'
for i in S:
    for j in Alphabet:
        if i.count("A") < 25:
            if maxi < i.rfind(j) - i.find(j):
                maxi = i.rfind(j) - i.find(j)
print(maxi)
'''
# Ответ: 1004



# Тип 24 № 33526
'''
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите символ, который чаще всего встречается в файле между двумя одинаковыми символами.
#
# Например, в тексте CBCABABACCC есть комбинации CBC, ABA (два раза), BAB и CCC.
# Чаще всего— 3 раза — между двумя одинаковыми символами стоит B, в ответе для этого случая надо написать B.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

f = open('24.txt', 'r')
s = f.readline()
M = []

for i in range(0, len(s)-2):
    if s[i] == s[i+2]:
        M.append(s[i+1])

print(len(s), len(M))

Alphabet = 'qwertyuiopasdfghjklzxcvbnm'
Alphabet = Alphabet.upper()  # просто было лень переписывать, подняли регистр всех символов
print(Alphabet)

maxi = -9999999  # если бы я попросил найти максимальный элемент в списке отрицательных числе, то maxi = 0 не имело бы смысла
res = 0
for x in Alphabet:
    print(x, M.count(x))
    if maxi < M.count(x):
        maxi = M.count(x)
        res = x
print("Ответ: ", maxi, res)
'''
# Ответ: D


# Тип 24 № 33196
'''
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите символ, который чаще всего встречается в файле сразу после буквы A.
#
# Например, в тексте ABCAABADDD после буквы A два раза стоит B, по одному разу — A и D. Для этого текста ответом будет B.
#
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

f = open('24.txt', 'r')
s = f.readline()
M = []

for i in range(0, len(s)-1):
    if s[i] == "A":
        M.append(s[i+1])

print(len(s), len(M))

Alphabet = 'qwertyuiopasdfghjklzxcvbnm'
Alphabet = Alphabet.upper()  # просто было лень переписывать, подняли регистр всех символов
print(Alphabet)

maxi = -9999999  # если бы я попросил найти максимальный элемент в списке отрицательных числе, то maxi = 0 не имело бы смысла
res = 0
for x in Alphabet:
    print(x, M.count(x))
    if maxi < M.count(x):
        maxi = M.count(x)
        res = x
print("Ответ: ", maxi, res)
'''
# Ответ: G



# Разбираем ДЗ:

# Тип 17 № 37371
'''
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, у которых разность элементов кратна 60,
# затем максимальную из разностей элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.
f = open("17.txt", 'r')
M = [int(i) for i in f]

count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] - M[j]) % 60 == 0:
            count += 1
            if maxi < M[i] - M[j]:
                maxi = M[i] - M[j]
print(count, maxi)
'''
# Ответ: 832722 9960




# Тип 24 № 27692
'''
# Текстовый файл состоит не более чем из 106 символов A, B и C. Определите максимальное количество идущих подряд символов B.
# 
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
f = open("24.txt", 'r')
s = f.readline()
print(s)
count = 1
maxi = 0
for i in range(0, len(s)-1):
    if s[i] == "B" and s[i+1] == "B":
        count += 1
        if maxi < count:
            maxi = count
    else:
        count = 1
print(maxi)
'''
# Ответ: 11


