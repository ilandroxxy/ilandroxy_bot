# region Домашка: ********************************************************


# endregion Домашка: ********************************************************


# region Урок: ********************************************************

# Тип 25 № 37160
'''
# Найдите 5 чисел больших 500000, таких, что среди их делителей есть число, оканчивающееся на 8,
# при этом этот делитель не равен 8 и самому числу. В качестве ответа приведите 5 наименьших чисел, соответствующих условию.
#
# Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число,
# затем минимальный делитель, оканчивающийся на 8, не равный 8 и самому числу.

k = 0
for n in range(500001, 1000000000000):
    for j in range(9, n):
        if n % j == 0 and j % 10 == 8:
            print(n, j)
            k += 1
            if k == 5:
                exit()
            break
'''
# Ответ:
# 500002 178
# 500004 18
# 500016 48
# 500018 58
# 500020 4348



# Тип 25 № 27855
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632; 95700],
# числа, имеющие ровно шесть различных чётных натуральных делителей
# (при этом количество нечётных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.


for n in range(95632, 95700+1):
    M = []
    for j in range(2, n+1, 2):
        if n % j == 0:
            M.append(j)
            if len(M) > 6:
                break
    if len(M) == 6:
        print(*M)
'''
# Ответ:
# 2 10 50 3826 19130 95650
# 2 26 338 566 7358 95654
# 2 4 8 23918 47836 95672



# Тип 25 № 35999
'''
# Найдите все натуральные числа N, принадлежащие отрезку [200000000;400000000],
# которые можно представить в виде N=2**m*3**n, где m — чётное число, n — нечётное число.
# В ответе запишите все найденные числа в порядке возрастания.

# print(2 ** 31)
# print(3 ** 19)

for m in range(2, 1000, 2):
    for n in range(1, 1000, 2):
        N = (2**m) * (3**n)
        if 200000000 <= N <= 400000000:
            print(N)
'''
# 201326592
# 229582512
# 254803968
# 322486272



# Тип 25 № 29673
'''
# Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Например, у числа 6 есть два нетривиальных делителя: 2 и 3.
# Найдите все натуральные числа, принадлежащие отрезку [123456789;223456789] и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе его наибольший нетривиальный делитель.
# Ответы расположите в порядке возрастания.

# 16: 1 2 4 8 16
# 36: 1 2 3 4 6 9 12 18 36

# 27: 1 3 9 27
# 45: 1 3 5 9 15 45

for n in range(123456789, 223456790):
    M = []
    if round(n ** 0.5) == (n ** 0.5):
        for j in range(2, round(n ** 0.5) + 1):
            if n % j == 0:
                if n // j == j:
                    M.append(j)
                else:
                    M.append(j)
                    M.append(n // j)
                if len(M) > 3:
                    break
        if len(M) == 3:
            print(n, max(M))
'''
# 131079601 1225043
# 141158161 1295029
# 163047361 1442897



# Тип 25 № 36038
'''
# Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то считаем значение M равным нулю.
#
# Напишите программу, которая перебирает целые числа, большие 452021,
# в порядке возрастания и ищет среди них такие, для которых значение M при делении на 7 даёт в остатке 3.
# Вывести первые 5 найденных чисел и соответствующие им значения M.

k = 0
for n in range(452021+1, 100000000):
    M = []
    for j in range(2, n):
        if n % j == 0:
            M.append(j)
            break
    for j in range(n-1, 2, -1):
        if n % j == 0:
            M.append(j)
            break
    if sum(M) % 7 == 3:
        print(n, sum(M))
        k += 1
        if k == 5:
            break
'''
# Ответ:
# 452025 150678
# 452029 23810
# 452034 226019
# 452048 226026
# 452062 226033




# Тип 25 № 47229
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 2023.

A = {}
for i in range(0, 10):
    for j in range(0, 1000):
        x = int(f'1{i}2139{j}4')
        if x % 2023 == 0:
            A[x] = x // 2023

for i in sorted(A.keys()):
    print(i, A[i])
'''
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048

# endregion Урок: ********************************************************


# todo: Никита = [2, 5, 6, 8, 12, 14, 15, 16, 17, 23, 24, 25], на следующем уроке: Прорешать 14+ нового типа и Дорешиваем 25
