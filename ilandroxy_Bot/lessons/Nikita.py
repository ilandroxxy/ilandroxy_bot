# region Домашка


# endregion Домашка


# region Урок

"""
# Тип 15 № 34537 Добавить в вариант
# На числовой прямой даны три отрезка: P = [10,15], Q = [10,20] и R=[5,15]. Какова наименьшая возможная длина интервала A, что формулы
#
# (x ∈ A) → (x ∈ P) и (x ∈ Q) → (x ∈ R)
#
# тождественно равны, то есть принимают равные значения при любом значении переменной х (за исключением, возможно, конечного числа точек).


def F(a1, a2, x):
    return ((a1 <= x <= a2) <= (10 <= x <= 15)) == ((10 <= x <= 20) <= (5 <= x <= 15))  # вместо и -> ==, потому что: тождественно равны

M = []
for a1 in range(1, 1000):
    for a2 in range(a1+1, 1000):
        flag = True
        for x in range(1, 1000):
            if not(F(a1,a2,x)):
                flag = False
                break
        if flag == True:
            M.append((a2-a1) + 1)  # Какова наименьшая возможная длина интервала A
            print(M, a2, a1)
print(min(M))
"""


# Тип 15 № 46973
'''
# На числовой прямой даны два отрезка: P=[69;91] и Q=[77;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
# (x∈Q) → (((x∈P) ≡ (x∈Q)) ∨ (¬(x∈P) → (x∈A)))

# ¬Q ∨ (P ≡ Q) ∨ P ∨ A

# x → y   <---->   x <= y
# x → y   <---->  ¬x ∨ y  <---->  (not(x)) or y
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).

def F(a1, a2, x):
    #return ( (77 <= x <= 114) <= (((69 <= x <= 91) == (77 <= x <= 114)) or ((not(69 <= x <= 91)) <= (a1 <= x <= a2))) )
    return ((not(77 <= x <= 114)) or (((69 <= x <= 91) == (77 <= x <= 114)) or ((69 <= x <= 91) or (a1 <= x <= a2))))


mini = 99999
for a1 in range(1, 1000):
    for a2 in range(1, 1000):
        flag = True
        for x in range(1, 1000):
            if F(a1, a2, x) == False:
                flag = False
                break
        if flag == True:
            if mini > (a2-a1):
                mini = (a2 - a1) + 1
                print(mini)
'''
# Ответ: 23



# Тип 23 № 13368
'''
# Исполнитель Плюс преобразует число на экране.
#
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 2
# 2. Прибавить 5
#
# Программа для исполнителя Плюс — это последовательность команд.
# Сколько существует программ, которые число 1 преобразуют в число 20?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 2, b) + F(a + 5, b)

print(F(1, 20))
'''
# Ответ: 18



# Тип 23 № 16898
'''
# Исполнитель РазДваТри преобразует число на экране.
#
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Прибавить 3
#
# Сколько существует программ, которые преобразуют исходное число 2 в число 14 и при этом траектория вычислений не содержит чисел 5 и 10?

def F(a, b):
    if a > b or a == 5 or a == 10:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a * 2, b) + F(a+3, b)

print(F(2, 14))
'''
#  Ответ: 26



# Тип 23 № 18570
"""
# Исполнитель РазДваТри преобразует число на экране.
#
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Умножить на 3
#
# Сколько существует программ, которые преобразуют исходное число 1 в число 50, и при этом траектория вычислений содержит число 14 и не содержит числа 16?

def F(a, b):
    if a > b or a == 16:  # не содержит числа 16?
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b) + F(a*3, b)

print(F(1, 14) * F(14, 50))   # при этом траектория вычислений содержит число 14
"""
# Ответ: 192



# Тип 23 № 6997
'''
# У исполнителя четыре команды, которым присвоены номера:
# 1. прибавь 1,
# 2. сделай чётное,
# 3. сделай нечётное,
# 4. умножь на 10.
#
# Сколько существует программ, которые число 1 преобразуют в число 15?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a * 2, b) + F(a*2 + 1, b) + F(a*10, b)

print(F(1, 15))
'''
# Ответ: 84


# Статград 2022
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 10 + 1, b)

print(F(1, 333))
'''
# Ответ: 73

# endregion Урок


# todo: Никита = [2, 5, 6, 8, 12, 14, 15, 16, 17, 23, 24], на следующем уроке: порешиваем 25
