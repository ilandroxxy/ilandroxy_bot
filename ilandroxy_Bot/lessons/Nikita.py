# region Домашка: ********************************************************

# endregion Домашка: ********************************************************


# region Урок: ********************************************************


# № 5626 (Уровень: Базовый)
# (М. Ишимов) Определите количество пятизначных чисел, записанных в восьмеричной системе счисления,
# запись которых не начинается с нечётных цифр, не оканчивается цифрами 2 или 6, а также не содержит более двух цифр 7.
'''
s = '01234567'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    number = a + b + c + d + e
                    if a != '0':
                        if a not in '1357':
                            if e not in '26':
                                if number.count('7') <= 2:
                                    count += 1
print(count)
'''
# Показать ответ: 9135


# № 5627 (Уровень: Средний)
# (М. Ишимов) Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнено хотя бы одно из условий:
#
# – в строке есть хотя бы одно повторяющееся число;
# – будучи упорядоченными, все числа строки образуют арифметическую прогрессию.
#
# В ответе запишите только число.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    if len(set(M)) != len(M) or all(M[i+1] - M[i] == M[1] - M[0] for i in range(0, len(M)-1)):
        count += 1
print(count)


count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    flag1 = False
    flag2 = False
    if len(set(M)) != len(M):
        flag1 = True
    if all(M[i+1] - M[i] == M[1] - M[0] for i in range(0, len(M)-1)):
        flag2 = True
    if flag1 + flag2 == 1:
        count += 1
print(count)
'''
# Ответ: 525


# № 5632 (Уровень: Средний)
# (М. Ишимов) Операнды арифметического выражения записаны в системе счисления с основанием 21.
#
# 32yxA_21 + 16y18_21
#
# В записи чисел переменными х и у обозначены две неизвестные цифры из алфавита 21-ричной системы счисления.
# Определите наименьшее значение х, при котором значение данного арифметического выражения кратно 12_10
# при любом нечётном значении у. Для найденного значения х вычислите частное от деления значения
# арифметического выражения на 12_10 при у = 7 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
for x in ALPHABET[:21]:
    if all((int(f'32{y}{x}A', 21) + int(f'16{y}18', 21)) % 12 == 0 for y in ALPHABET[1:21:2]):
        print((int(f'32{7}{x}A', 21) + int(f'16{7}18', 21)) // 12)
        break
'''
# Показать ответ: 71524


# № 5634 (Уровень: Базовый)
# (М. Ишимов) Алгоритм вычисления значения функции
# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n) = 1 при n=1;
# F(n)=F(n−1)+n⋅F(n−1), если n>1.
# Чему равно значение выражения F(5997)/F(5995)?

# F(5997) = F(5996) + 5997 * F(5996)
# F(5996) = F(5995) + 5996 * F(5995)  / F(5995)

# Показать ответ: 35970006



# № 5640 (Уровень: Средний)
# (М. Ишимов) Исполнитель преобразует число на экране.
#
# У исполнителя есть две команды, которые обозначены латинскими буквами:
#
# A. Вычти 4
# B. Вычти сумму цифр числа
#
# Сколько существует программ, для которых при исходном числе 36 результатом является число 2,
# и при этом траектория вычислений содержит число 14?
def summ(x):
    return sum([int(i) for i in str(x)])

def F(a, b):
    if a < b:
        return False
    elif a == b:
        return True
    else:
        return F(a-4, b) + F(a - summ(a), b)

print(F(36, 14) * F(14, 2))

def F(a, b):
    if a <= b:
        return a == b
    return F(a-4, b) + F(a - summ(a), b)

print(F(36, 14) * F(14, 2))


# Показать ответ: 7


# endregion Урок: ********************************************************


# todo:   Никита   = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 23, 24+, 25.2, 26.1]
# todo: Никита КЕГЭ = [5, 8, 15, 17, 24]
# на прошлом уроке: Прорешивали задачи с домашнего варианта: 1, 8, 9, 14, 16, 23
# на следующем уроке:
