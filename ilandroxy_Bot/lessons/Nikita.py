# region Домашка: ********************************************************

# endregion Домашка: ********************************************************


# region Урок: ********************************************************

M = [1, 2, 3, 4, 5]
# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности
# 12 23 34 45
'''
for i in range(0, len(M)-1):
    print(f'{M[i]}{M[i+1]}', end=' ')
print()
'''
# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
'''
for i in range(0, len(M)-2):
    print(f'{M[i]}{M[i+1]}{M[i+2]}', end=' ')
print('\n')
'''
# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
'''
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        print(f'{M[i]}{M[j]}', end=' ')
    print()
'''

# № 6605 Пробник ИМЦ СПб (Уровень: Средний)
# В файле содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от –10 000 до 10 000 включительно.
#
# Определите количество пар последовательности, в которых только одно число оканчивается на 5,
# а модуль разности квадратов элементов пары не больше квадрата максимального элемента последовательности, оканчивающегося на 5.
#
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную
# из модулей разностей квадратов элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
A = [i for i in M if abs(i) % 10 == 5]
count = 0
maxi = -99999
for i in range(0, len(M)-1):
    if (str(M[i])[-1] == '5' and str(M[i+1])[-1] != '5') or (abs(M[i]) % 10 != 5 and abs(M[i+1]) % 10 == 5):
        if abs(M[i] ** 2 - M[i+1] ** 2) <= max(A) ** 2:
            count += 1
            maxi = max(maxi, abs(M[i] ** 2 - M[i+1] ** 2))
print(count, maxi)
'''
# 938 98327944


# № 7020 (Уровень: Базовый)
# (М.Шагитов) В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от -100000 до 100000 включительно.
# Определите количество четверок последовательности, в которых остаток от деления ни одного из модулей
# чисел четверки на 111 не равен минимальному положительному элементу последовательности.
# В ответе запишите количество найденных четверок, затем минимальную из сумм элементов таких четверок.
# В данной задаче под четверкой подразумевается четыре идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
A = min([i for i in M if i > 0])   # минимальному положительному элементу последовательности.
count = 0
mini = 99999999
for i in range(0, len(M)-3):
    if all(abs(x) % 111 != A for x in M[i:i+4]):
        count += 1
        mini = min(mini, sum(M[i:i+4]))
print(count, mini)
'''
# 6335 -367715


#
# № 6635 Пробник ИМЦ СПб (Уровень: Средний)
# 1. Вычесть 3
# 2. Умножить на -3
#
# Сколько различных отрицательных результатов можно получить из исходного числа 333
# в ходе исполнения программы, содержащей ровно 13 команд?
'''
my_set = set()
def F(a, h):
    if h == 13:
        my_set.add(a)
        return 1
    return F(a-3, h+1) + F(a * (-3), h+1)

print(F(333, 0))

print(len([i for i in my_set if i < 0]))
'''
# Ответ: 2224


# Тип 23 № 33102
# 1. Прибавить 1
# 2. Умножить на 3
#
# Сколько существует программ, которые преобразуют исходное число 1 в число 65,
# и при этом траектория вычислений содержит число 20?
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 3, b)

print(F(1, 20) * F(20, 65))
'''

'''
def F(a, b):
    if a >= b:
        return a == b
    return F(a + 1, b) + F(a * 3, b)

print(F(1, 20) * F(20, 65))
'''
# Ответ: 36




# endregion Урок: ********************************************************


# todo:   Никита   = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 23, 24+, 25.2, 26.1]
# todo: Никита КЕГЭ = [5, 8, 17, 24]
# на прошлом уроке: Повторяли 17, 23 номера с самого простого до сложного уровня
# на следующем уроке:
