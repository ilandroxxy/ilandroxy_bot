# region Домашка: ********************************************************



# endregion Домашка: ********************************************************


# region Урок: ********************************************************

# Тип 25 № 28121
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [2422000; 2422080], простые числа.
# Выведите все найденные простые числа в порядке возрастания, слева от каждого числа выведите его номер по порядку, считая, что первое найденное число имеет номер «1», второе — «2», и т. д.

'''
for i in range(2422000, 2422080+1):
    flag = True
    for j in range(2, i):
        if i % j == 0:
            flag = False
            break
    if flag == True:
        print(i)
'''

# Вариант 2
'''
def D(x):
    for j in range(2, x):
        if x % j == 0:
            return False
    return True

k = 1
for n in range(2422000, 2422080+1):
    if D(n) == True:
        print(k, n)
        k += 1
'''

# 1 2422027
# 2 2422033
# 3 2422037
# 4 2422073


'''
# Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Например, у числа 6 есть два нетривиальных делителя: 2 и 3.
# Найдите все натуральные числа, принадлежащие отрезку [289_123_456;389123456] и имеющие ровно три нетривиальных делителя.

for n in range(289_123_456, 389_123_456+1):
    M = []
    if round(n**0.5) == (n**0.5):
        for j in range(2, round(n**0.5)+1):
            if n % j == 0:
                if n // j == j:
                    M.append(j)
                else:
                    M.append(j)
                    M.append(n//j)
                if len(M) > 3:
                    break
        if len(M) == 3:
            print(n, max(M))
'''


# Тип 14 № 48339
'''
# Операнды арифметического выражения записаны в системе счисления с основанием 11:
#
# 982x8_11 + 194x7_11
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита одиннадцатиричной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 58.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 58 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789a':
    a = int(f'982{x}8', 11)
    b = int(f'194{x}7', 11)

    if (a + b) % 58 == 0:
        print((a + b) // 58)
        break
'''
# Ответ: 2931


# Тип 14 № 48399
'''
# Операнды арифметического выражения записаны в системе счисления с основаниями 16 и 14:
#
# 3D4x_16 + 4xC4_14
#
# В записи чисел переменной x обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 154.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 154 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789abcd':
    a = int(f'3D4{x}', 16)
    b = int(f'4{x}C4', 14)

    if (a + b) % 154 == 0:
        print((a + b) // 154)
        break
'''
# Ответ: 187


# Тип 14 № 48390
'''
# Операнды арифметического выражения записаны в системах счисления с основаниями 9 и 8:
#
# x01y4_9 + xy544_8
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите значения x и y, при которых значение данного арифметического выражения будет наименьшим и кратно 89.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 89 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '01234567':
    for y in '01234567':
        a = int(f'{x}01{y}4', 9)
        b = int(f'{x}{y}544', 8)

        if (a + b) % 89 == 0:
            print((a + b) // 89)
            exit()
'''
# Ответ: 262


# Тип 14 № 48380
'''
# Числа M и N записаны в системе счисления с основанием 12 соответственно.
#
# M = 49x26_12, N = 49x70_12
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита двенадцатеричной системы счисления.
# Определите наименьшее значение натурального числа A, при котором существует такой x, что M + A кратно N.

for A in range(1, 1000):
    for x in '0123456789ab':
        M = int(f'49{x}26', 12)
        N = int(f'49{x}70', 12)

        if (M + A) % N == 0:
            print(A)
            exit()
'''
# Ответ: 54


# (№ 5497) (В. Шубинкин)
'''
# Числа M и N записаны в системах счисления с основаниями 15 и 13 соответственно.
# M = 2y23x5_15, N = 67x9y_13
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите наименьшее значение натурального числа A, при котором существуют такие x, y, что M + A кратно N.

for A in range(1, 10000):
    for x in '0123456789abc':
        for y in '0123456789abc':
            M = int(f'2{y}23{x}5', 15)
            N = int(f'67{x}9{y}', 13)

            if (M + A) % N == 0:
                print(A)
                exit()
'''
# Ответ: 1535


# Тип 24 № 27696
'''
# Текстовый файл состоит не более чем из 10**6 символов L, D и R.
# Определите длину самой длинной последовательности, состоящей из символов L.
# Хотя бы один символ L находится в последовательности.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
f = open('24.txt', 'r')
s = f.readline()
print(s)


# Вариант 1
print(max([len(i) for i in open('24.txt', 'r').readline().replace('D', ' ').replace('R', ' ').split()]))

# Вариант 2
f = open('24.txt', 'r')
s = f.readline()
s = s.replace('D', ' ')
s = s.replace('R', ' ')
M = s.split()
A = [len(i) for i in M]
print(max(A))


# Вариант 3
f = open('24.txt').readline()
k = 1
m = 1
for i in range(len(f)-1):
    if f[i] == 'L' and f[i+1] == 'L':
        k += 1
        m = max(m, k)
    else:
        k = 1
print(m)
'''
# Ответ: 7


# Тип 24 № 27689
'''
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите максимальную длину цепочки вида XYZXYZXYZ...
# (составленной из фрагментов XYZ, последний фрагмент может быть неполным).
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# Вариант 1
print(max([len(i) for i in open('24.txt', 'r').readline().replace('XYZ', '***').replace('X', ' ').replace('Y', ' ').replace('Z',' ').split()]))

# Выводим для проверки
f = open('24.txt', 'r')
s = f.readline()
print(s)
'''
# Ответ 13, если проверять в исходном файле
# XZXYYXYZXYZXYZXYZXZX



# Тип 24 № 40999
'''
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC...Z). 
# Определите максимальное количество идущих подряд символов, среди которых нет ни одной буквы E и при этом не менее трёх букв A.
# 
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# Вариант 1
print(max([len(i) for i in open('24.txt', 'r').readline().replace('E', ' ').split() if i.count('A') >= 3]))

# Вариант 3
f=open('24.txt')
N=f.readline()
q= 0
t= []
r=[]
for y in range(len(N)):
    t=[]
    while N[y]!='E' and y < (len(N)-1):
        t.append(N[y])
        if N[y]=='A':
            q+=1
        y+=1
    if q >=3 and (len(t))>(len(r)):
        r=t
    q=0
print(len(r))
'''


# endregion Урок: ********************************************************


# todo: Никита = [2, 5, 6, 8, 12, 14+, 15, 16, 17, 23, 24, 25+-], на следующем уроке: Добить 24 номер и перейти к 25 номеру математическим задачам

