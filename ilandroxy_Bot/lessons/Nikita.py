# Тип 17 № 37348

# В файле содержится последовательность из 10000 целых положительных чисел. Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности, для которых произведение
# элементов не кратно 34, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.

# Например:
# M = [1, 2, 3, 4, 5]
# 12 13 14 15  23 24 25   34 35  45

f = open("17.txt", 'r')
M = [int(i) for i in f]
#M = [1, 2, 3, 4, 5]

count = 0
maxi = 0
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        if (M[i] * M[j]) % 34 != 0:
            count += 1
            if maxi < M[i] + M[j]:
                maxi = M[i] + M[j]
print(count, maxi)

# Ответ: 45539445 19999




# Тип 17 № 39246
'''
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 5, а их сумма делится на 7.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.

# Например:
# M = [1, 2, 3, 4, 5]
# 12 23 34 45

f = open("17.txt", 'r')
M = [int(i) for i in f]





count = 0
maxi = 0
for i in range(0, len(M)-1):
    if (M[i] % 5 == 0 or M[i+1] % 5 == 0) and (M[i] + M[i+1]) % 7 == 0:
        count += 1
        if maxi < M[i] + M[i+1]:
            maxi = M[i] + M[i+1]

print(count, maxi)
'''
# Ответ: 308 18893


'''
M = [1, 2, 3, 4, 5]
for i in range(0, len(M)):
    for j in range(i+1, len(M)):
        print(M[i], M[j])
'''


# Тип 24 № 27686
'''
# Текстовый файл состоит не более чем из 10**6 символов X, Y и Z.
# Определите длину самой длинной последовательности, состоящей из символов X. Хотя бы один символ X находится в последовательности.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

#s = 'XXXYYYXXZZYYXZZXXYYXXXXXXXZXYYXXZ' # Ответ: 7

f = open("24_demo.txt", 'r')
s = f.readline()
print(s)

count = 1
maxi = 0
for i in range(0, len(s)-1):
    if s[i] == "X" and s[i+1] == "X":
        count += 1
        if maxi < count:
            maxi = count
    else:
        count = 1
print(maxi)
'''
# Ответ 19



# Тип 24 № 27689
'''
# Текстовый файл состоит не более чем из 106 символов X, Y и Z.
# Определите максимальную длину цепочки вида XYZXY... (составленной из фрагментов XYZ, последний фрагмент может быть неполным).
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

f = open("24_demo.txt", 'r')
#s = f.readline()
s = 'XYZXYZXYZ'
print(s)

count = 2
maxi = 0
for i in range(0, len(s)-2):
    if (s[i] == 'X' and s[i+1] == "Y" and s[i+2] == "Z") or \
            (s[i] == 'Y' and s[i+1] == "Z" and s[i+2] == "X") or \
            (s[i] == 'Z' and s[i+1] == "X" and s[i+2] == "Y"):
        count += 1
        if maxi < count:
            maxi = count
    else:
        count = 2
print(maxi)
'''
# Ответ: 13



# Тип 24 № 37131
# Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z).
# Определите наибольшую длину цепочки символов, среди которых нет символов K и L, стоящих рядом.
#
# Например, в тексте ABCAABAKLD самая длинная цепочка символов, удовлетворяющая условию — ABCAABAK, её длина равна 8.
#
# Для выполнения этого задания следует написать программу.
# Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

f = open('24.txt', 'r')
s = f.readline()

count = 1
maxi = 0
for i in range(0, len(s)):
    if (s[i] == "K" and s[i+1] == 'L') or (s[i] == "L" and s[i+1] == 'K'):
        count = 1
    else:
        count += 1
        if maxi < count:
            maxi = count
print(maxi)