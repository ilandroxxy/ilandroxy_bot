# region Домашка: ********************************************************

# endregion Домашка: ********************************************************


# region Урок: ********************************************************

# № 7830 Danov2304 (Уровень: Базовый)
# (А.Богданов) Логическая функция F задаётся выражением:
# ¬y∧(x→(¬z≡w))∨z.
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий неповторяющиеся строки.



# № 7804 (Уровень: Базовый)
# (М. Ишимов) заполнял таблицу истинности логической функции
# F=¬(y→z)∨(¬x→¬w)∨x,
# но успел заполнить лишь фрагмент из трёх различных её строк, даже не указав,
# какому столбцу таблицы соответствует каждая из переменных


# № 7667 (Уровень: Базовый)
# (В. Рыбальченко) Логическая функция F задаётся выражением
# ((a→b)≡c)∨¬d∧(d→¬a)
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий неповторяющиеся строки.
# Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных


print('x y z w')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                # F = (not y) and (x <= ((not z) == w)) or z   # № 7830 Danov2304 (Уровень: Базовый)
                # F = (not(y <= z)) or ((not x) <= (not w)) or x  # # № 7804 (Уровень: Базовый)
                F = ((x <= y) == z) or (not w) and (w <= (not x))
                if F == False:
                    print(x, y, z, w)


'''
import useful
print(useful.Valid_Parentheses('not(not(x <= (not w)) and z) and (not(w <= z)) and (x <= (not z))'))
'''


#
# № 7817 (Уровень: Базовый)
# (М. Ишимов) Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Пусть на числовой прямой дан отрезок B = [40; 60].
# Для какого наибольшего натурального числа А формула
#
# (ДЕЛ(x, 13) → ¬( x ∈ B )) \/ (A < x + 20)
#
# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?
'''
def F(x, A):
    B = 40 <= x <= 60
    return ((x % 13 == 0) <= (not B)) or (A < x + 20)

for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
 '''

'''
def F(x, A):
    B = 40 <= x <= 60
    return ((x % 13 == 0) <= (not B)) or (A < x + 20)

for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 1000)):
        print(A)
'''

'''
def F(x, A):
    B = 40 <= x <= 60
    return ((x % 13 == 0) <= (not B)) or (A < x + 20)

print(max([A for A in range(1, 1000) if all(F(x, A) for x in range(1, 1000))]))
'''

# Вариант 4
'''
print(max([A for A in range(1, 1000) if all(((x % 13 == 0) <= (not (40 <= x <= 60))) or (A < x + 20) for x in range(1, 1000))]))
'''

# Показать ответ: 71



# № 7846 Danov2304 (Уровень: Базовый)
# (А.Богданов) На числовой прямой даны два отрезка: P = [13; 19] и Q = [17; 23].
# Укажите наибольшую возможную длину такого отрезка A, что формула
#
# ¬(¬(x ∈ P) → (x ∈ Q)) → ((x ∈ A) →(¬(x ∈ Q)→(x ∈ P)))
#
# тождественно истинна, то есть принимает значение 1 при любых x.
'''
def F(x, a1, a2):
    P = 13 <= x <= 19
    Q = 17 <= x <= 23
    A = a1 <= x <= a2
    return (not((not P) <= Q)) <= (A <= ((not Q) <= P))

R = []
M = [i/5 for i in range(1*5, 30*5)]
print(M)
for a1 in M:
    for a2 in M:
        if all(F(x, a1, a2) for x in M):
            R.append(a2-a1)
print(max(R))
'''
# Показать ответ: 10







# endregion Урок: ********************************************************


# todo:   Никита   = [1, 2, 3, 4, 5, 6, 7, 8, 9.1, 11, 12, 13, 14+, 15+, 16, 17, 18, 19-21, 23, 24+, 25.2, 26.1]
# todo: Никита КЕГЭ = [5, 8, 15, 17, 24]
# на прошлом уроке: Повторяли 15 номер через all функцию и задание номер 2.
# на следующем уроке:
