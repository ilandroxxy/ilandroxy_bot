
# region Домашка

#Тип 16 № 5278
'''
#Алгоритм вычисления значения функции F(n), где n - натуральное число, задан следующими соотношениями:
#F(1)= 1;
#F(n) = 2*F(n-1) +1 при n >1.
#Чему равно значение функции F(5)?
def F(n):
    if n == 1:
        return 1
    while n > 1:
        return 2*F(n-1) + 1
print(F(5))
'''
#Ответ 31



#Повтори 5 [Вперёд 7 Направо 120]
#Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом.
#Точки на линии учитывать не следует.
'''
import turtle as t
t.left(90)
t.speed(10)
l = 30
for _ in range(5):
    t.forward(7*l)
    t.right(120)
t.pu()
t.color('red')
for x in range(0,10):
    for y in range(0,12):
        t.goto(x * l, y * l)
        t.dot(3)
t.done()
'''
#овтет 18




#Повтори 4 [Вперёд 8 Направо 150 Вперёд 8 Направо 30]
#Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом.
#Точки на линии учитывать не следует.
'''
import turtle as t
t.left(90)
t.speed(10)
l = 30
for _ in range(4):
    t.forward(8 * l)
    t.right(150)
    t.forward(8 * l)
    t.right(30)
t.pu()
t.color('red')
for x in range(0,10):
    for y in range(-10,10):
        t.goto(x*l,y*l)
        t.dot(3)
t.done()
'''
#ответ 24




#Тип 5 № 18785 Добавить в вариант
#На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#1.алее эта запись обрабатывается по следующему правилу:
#а)если число чётное, то к двоичной записи числа слева дописывается 1, а справа 0. Например, для исходного числа 1002 результатом будет являться число 11000;
#б)если число нечётное, то к двоичной записи числа слева дописывается 11 и справа дописывается 11.
#Полученная таким образом запись является двоичной записью искомого числа R.
#Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число, большее, чем 52. В ответе запишите это число в десятичной системе счисления.
'''
for i in range(1, 1000):
    n = bin(i)[2:]
    if i % 2 == 0:
        n = '1' + n + '0'
    else:
        n = '11' + n + '11'
    k = int(n, base=2)
    if k > 52:
        print(i)
        break
'''
# ответ 3
# endregion Домашка


# region Урок

# Тип 15 № 9320
'''
# Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m».
# Для какого наименьшего натурального числа А формула
#
# ДЕЛ(x, А) → (ДЕЛ(x, 21) + ДЕЛ(x, 35))
#
# тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?

# Вариант 1
for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if ((x % A == 0) <= ((x % 21 == 0) + (x % 35 == 0))) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break


# Вариант 1
def F(x, A):
    return ((x % A == 0) <= ((x % 21 == 0) + (x % 35 == 0)))

for A in range(1, 1000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break
'''



# Тип 15 № 34517
'''
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
#
# Так, например, 12&6 = 1100_2 & 0110_2 = 0100_2 = 4.
#
# Для какого наибольшего целого числа А формула
# х&А != 0 → (x&10 = 0 → х&3 != 0)
#
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной x)?
def F(x, A):
    return (x&A != 0) <= ((x&10 == 0) <= (x&3 != 0))  # & - сложение бинарный чисел

for A in range(1000, 0, -1):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break
'''
# Ответ: 11




# Тип 15 № 16821
'''
# Для какого наименьшего целого неотрицательного числа A выражение
#
# (3x + 4y ≠ 70) ∨ (A > x) ∨ (A > y)
#
# тождественно истинно при любых целых неотрицательных x и y?


def F(x, y, A):
    return ((3 * x + 4 * y) != 70) or (A > x) or (A > y)

for A in range(0, 1000):
    flag = True
    for x in range(0, 1000):
        for y in range(0, 1000):
            if F(x, y, A) == False:
                flag = False
                break
        if flag == False:
            break
    if flag == True:
        print(A)
        break
'''



# Тип 15 № 34545
'''
# На числовой прямой даны два отрезка: P = [12, 62] и Q = [32, 92].
#
# Какова наименьшая возможная длина интервала A, что формула
#
# (¬(x ∈ А) ∧ (x ∈ Q)) → (x ∈ P)
#
# тождественно истинна, т.е. принимает значение 1 при любом значении переменной х.

def F(a1, a2, x):
    return ((not(a1 <= x <= a2)) and (32 <= x <= 92)) <= (12 <= x <= 62)

M = []
for a1 in range(1, 100):
    for a2 in range(1, 100):
        flag = True
        for x in range(1, 100):
            if F(a1, a2, x) == False:
                flag = False
                break
        if flag == True:
            M.append((a2-a1) + 1)
print(min(M))
'''
# Ответ: 30


# endregion Урок



# todo: Никита = [2, 5, 6, 8, 12, 14, 16, 17, 24], на следующем уроке: 15 или 25 номер