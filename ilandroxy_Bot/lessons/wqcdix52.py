# region Домашка: ******************************************************************

# КЕГЭ № 6985 (Уровень: Средний) (Д. Статный)
# Все шестибуквенные слова, в составе которых могут быть только русские
# буквы М, А, Р, К, С, Л записаны в алфавитном порядке и пронумерованы начиная с 1.
# Ниже приведено начало списка.
# 1. АААААА
# 2. АААААК
# 3. АААААЛ
# 4. АААААМ
# 5. АААААР
# 6. АААААС
#
# Под каким последним номером идёт слово, в котором буквы К не стоят рядом с буквой С
# и одна буква повторяется трижды, а остальные не повторяются?
'''
from itertools import product
k = 0
R = []
for s in product(sorted('МАРКСЛ'), repeat=6):
    slovo = ''.join(s)
    k += 1
    if 'КС' not in slovo and 'СК' not in slovo:
        alp = [slovo.count(a) for a in slovo]
        if alp.count(3) == 3 and alp.count(1) == 3:
            R.append(k)
print(max(R))

'''

'''
from itertools import permutations
count = 0
last_num = 0
for i in range(1, 1000000):
    word = "".join(permutations("МАРКСЛ", 6) [i - 1])
    if word.index("К") - word.index("С") != 1:
        if len(set(word)) == 4:
            letter_count = {letter: word.count(letter) for letter in set(word)}
            if 3 in letter_count.values():
                count += 1
                last_num = i
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Задание 5  https://education.yandex.ru/ege/task/0571aef3-c0b0-4d5a-a7b0-67e60e9e8e10
# Яндекс Учебник (Двоичная система счисления)
#
# На вход алгоритма подаются двузначные числа от 10 до 22 включительно.
# Алгоритм строит по нему новое число R следующим образом.
# Строится двоичная запись числа.
# Удаляются все подряд идущие нули справа до первой встретившейся единицы.
# Результат переводится в десятичную систему счисления.
# При каком изначальном числе получится число 1?
# При каком n числе получится r = 1?
'''
for n in range(10, 22+1):
    s = bin(n)[2:]  # Строится двоичная запись числа.
    s = str(int(s[::-1]))[::-1]
    r = int(s, 2)  # Результат переводится в десятичную систему счисления.
    if r == 1:
        print(n)
'''
# Ответ: 16


# Задание 5  # https://education.yandex.ru/ege/task/f8355528-2d18-46e8-a782-1798a2682495
# Яндекс Учебник (Другие системы счисления)
#
# На вход алгоритма подается натуральное число N, оно обрабатывается следующим образом:
# Строится восьмеричная запись этого числа.
# У него удаляются все чётные цифры.
# Полученное число переводится в десятичную систему счисления.
# Какое число получится, если подать на вход число 115?
'''
n = 115
s = oct(n)[2:]  # Строится восьмеричная запись этого числа.
for x in '0246':
    s = s.replace(x, '')
r = int(s, 8)  # Полученное число переводится в десятичную систему счисления.
print(r)
'''
# Ответ: 11


# Задание 5 https://education.yandex.ru/ege/task/70da2546-57ff-4c1f-a941-5e7c3809d06a
# Яндекс Учебник (Другие системы счисления)
#
# На вход алгоритма подается натуральное число N, оно обрабатывается следующим образом:
# Строится шестнадцатеричная запись этого числа.
# У него удаляются все цифры, которые не записываются буквами.
# Полученное число переводится в десятичную систему счисления.
# Какое число получится, если подать на вход число 232?

# 10 - A, 11 - B, 12 - C, 13 - D, 14 - E
# 16: 0123456789ABCDEF
'''
n = 232
s = hex(n)[2:]  # Строится шестнадцатеричная запись этого числа.
for x in '0123456789':
    s = s.replace(x, '')
r = int(s, 16)
print(r)
'''
# Ответ: 14


# Задание 5  # https://education.yandex.ru/ege/task/2e09b9f5-1927-41a3-8963-2ea21f82a52b
# Яндекс Учебник (Другие системы счисления)
#
# На вход алгоритма подается натуральное число N, оно обрабатывается следующим образом:
# Строится пятеричная запись этого числа.
# Число записывается в обратном порядке.
# Полученное число переводится в десятичную систему счисления.
# Какое число было передано, если получилось число 61?
'''
def convert(num: int, system: int):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    r = ''
    while num > 0:
        r += alphabet[num % system]
        num //= system
    return r[::-1]


for n in range(1, 10000):
    s = convert(n, 5)
    s = s[::-1]
    r = int(s, 5)
    if r == 61:
        print(n)
        break
'''
# Ответ: 37


# Тип 5 №33507
# Алгоритм получает на вход натуральное число N>1 и строит по нему новое число R следующим образом:
# 1. Строится двоичная запись числа N.
# 2. Вместо последней (самой правой) двоичной цифры дважды записывается вторая слева цифра двоичной записи.
# 3. Результат переводится в десятичную систему.
#
# При каком наименьшем числе N в результате работы алгоритма получится R > 92?
# В ответе запишите это число в десятичной системе счисления.
'''
for n in range(2, 10000):
    s = bin(n)[2:]
    s = s[:-1] + s[1] * 2
    r = int(s, 2)
    if r > 92:
        print(n)
        break
'''
'''
def convert(num: int, system: int):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    r = ''
    while num > 0:
        r += alphabet[num % system]
        num //= system
    return r[::-1]


for n in range(2, 10000):
    s = convert(n, 2)
    s = s[:-1] + s[1] * 2
    r = int(s, 2)
    if r > 92:
        print(n)
        break
'''
# Ответ: 48



# № 9774 Основная волна 20.06.23 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N.
# Алгоритм строит по нему новое число R следующим образом.
# 1. Строится троичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число N делится на 3, то к этой записи дописываются две последние троичные цифры;
# б) если число N на 3 не делится, то остаток от деления умножается на 5,
# переводится в троичную запись и дописывается в конец числа.
# Полученная таким образом запись является троичной записью искомого числа R.
# 3. Результат переводится в десятичную систему и выводится на экран.
#
# Укажите минимальное число R, большее 133, которое может быть получено с помощью описанного алгоритма.
# В ответе запишите это число в десятичной системе счисления.
'''
def convert(num: int, system: int):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    r = ''
    while num > 0:
        r += alphabet[num % system]
        num //= system
    return r[::-1]


R = []
for n in range(1, 10000):
    s = convert(n, 3)
    if n % 3 == 0:
        s = s + s[-2:]
    else:
        x = (n % 3) * 5
        s = s + convert(x, 3)
    r = int(s, 3)
    if r > 133:
        R.append(r)
print(min(R))
'''
# Ответ: 141


# endregion Урок: ******************************************************************


# Артур = [2.1. 5.1, 6.1, 8.1, 12.1, 14.1]
# КЕГЭ  = []
# на следующем уроке:
