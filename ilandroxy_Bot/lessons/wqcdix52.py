# region Домашка: ******************************************************************
'''
count = 0
for s in open('9.txt'):
    L = [int(x) for x in s.split()]
    if len(L) == len(set(L)):
        if (max(L) + min(L)) * 3 <= 2 * (sum(L) - (max(L) + min(L))):
            count += 1
print(count)


count = 0
for s in open('9.txt'):
    L = sorted([int(x) for x in s.split()])
    if len(L) == len(set(L)):
        if (L[0] + L[-1]) * 3 <= 2 * (sum(L[1:-1])):
            count += 1
print(count)
'''

'''
count = 0
for s in open('9.txt'):
    L = [int(x) for x in s.split()]
    N = [x for x in L if x % 3 == 0]
    if len(N) == 3:
        if (max(L) - min(L)) <= sum(N):
            count += 1
print(count)
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Способ открытия 17.txt файла:
'''
M = [int(x) for x in open('17.txt')]
'''

# Типы задач для 17 номера:
'''
M = [1, 2, 3, 4, 5]

# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    print(f'{x}{y}', end=' ')
print()

# 2. Назовём тройкой три идущих подряд элемента последовательности.
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    print(f'{x}{y}{z}', end=' ')
print()

# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45
for i in range(0, len(M)):
    for j in range(i + 1, len(M)):
        x, y = M[i], M[j]
        print(f'{x}{y}', end=' ')
    print()
'''


# Тип 17 №39762
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар чисел, произведение которых кратно 15, а их сумма делится на 7.
# В ответе запишите два числа: сначала количество найденных пар,
# а затем — максимальную сумму элементов таких пар.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x * y) % 15 == 0 and (x + y) % 7 == 0:
        R.append(x + y)
print(len(R), max(R))
'''
# Ответ: 170 18662


# Тип 17 №37354
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000. Определите и запишите в ответе
# сначала количество пар элементов последовательности, у которых сумма
# нечётна, а произведение делится на 5, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(0, len(M)):
    for j in range(i + 1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 2 != 0 and (x * y) % 5 == 0:
            R.append(x + y)
print(len(R), max(R))
'''
# Ответ: 9082691 19995


# Тип 17 №56545
# Файл содержит последовательность целых чисел, по модулю не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.

# Определите количество пар, для которых выполняются следующие условия:
# — запись элементов пары заканчивается одной и той же цифрой;
# — ровно один элемент из пары делится без остатка на 7;
# — сумма квадратов элементов пары не превышает квадрат наименьшего из элементов последовательности,
# запись которых заканчивается цифрой 7.
#
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную величину
# суммы квадратов элементов этих пар.
'''
M = [int(x) for x in open('17.txt')]
A = min([x for x in M if str(x)[-1] == '7'])
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if str(x)[-1] == str(y)[-1]:  # — запись элементов пары заканчивается одной и той же цифрой;
        if (x % 7 == 0) != (y % 7 == 0):  # — ровно один элемент из пары делится без остатка на 7;
            if (x**2 + y**2) <= A**2:
                R.append(x**2 + y**2)
print(len(R), max(R))
'''
# Ответ: 102 97666192


# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Артур = [2.1. 5.1, 6.1, 8.1, 9.1, 12.1, 14.1, 15.1, 16.1, 17.1, 23.1, 25.1]
# КЕГЭ  = []
# на следующем уроке:
