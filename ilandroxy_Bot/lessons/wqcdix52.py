# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 16 №33761
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом n чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Назовите минимальное значение n, для которого F(n) = 11.
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)


for n in range(0, 10000):
    if F(n) == 11:
        print(n)
        break
'''
# Ответ: 2047


# Тип 16 №4724
# Алгоритм вычисления значения функции F(n). где n — натуральное число, задан следующими соотношениями:
# F(1) = 1;
# F(n) = F(n-1) * (n+1), при n >1.
#
# Чему равно значение функции F(5)? В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n-1) * (n+1)

print(F(5))
'''
# Ответ: 360


# Тип 16 №6779
# Алгоритм вычисления значений функций F(n) и G(n), где n — натуральное число, задан следующими соотношениями:
# F(1) = 1; G(1) = 1;
# F(n) = F(n – 1) – G(n – 1), G(n) = F(n–1) + G(n – 1), при n ≥ 2
#
# Чему равно значение величины F(5)/G(5)? В ответе запишите только натуральное число.
'''
def F(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n - 1) - G(n - 1)

def G(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n-1) + G(n - 1)

print(F(5)/G(5))
'''


# Тип 16 №36871
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 1000 и F(n) = 3?
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)


count = 0
for n in range(1, 1000+1):
    if F(n) == 3:
        count += 1
print(count)
'''
# Ответ: 120


# Тип 16 №59721
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
# F(n) = n, если n = 1;
# F(n) = n − 1 + F(n − 1), если n > 1.
#
# Чему равно значение выражения F(2024) − F(2022)?
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n == 1:
        return n
    if n > 1:
        return n - 1 + F(n - 1)


print(F(2024) - F(2022))


# F(2024) = 2023 + F(2023)
# F(2023) = 2022 + F(2022) - F(2022)
print(2023 + 2022)
'''
# Ответ: 4045

# [Previous line repeated 996 more times]
# RecursionError: maximum recursion depth exceeded


# Тип 23 №15638
# 1. Прибавить 1
# 2. Умножить на 2
# Сколько существует программ, для которых при исходном числе 1 результатом является число 21,
# при этом траектория вычислений содержит число 10 и не содержит число 17?

'''
def F(a, b):
    if a > b or a == 17:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b)


print(F(1, 10) * F(10, 21))


def F(a, b):
    if a >= b or a == 17:
        return a == b
    return F(a+1, b) + F(a*2, b)


print(F(1, 10) * F(10, 21))
'''
# Ответ: 14




# endregion Урок: ******************************************************************


# Артур = [2.1. 5.1, 6.1, 8.1, 12.1, 14.1, 16.1, 23.1]
# КЕГЭ  = []
# на следующем уроке:
