
# region Домашка: ******************************************************************
'''
for pair in '71 17 37 73 57 75 77'.split():
    print(pair)
    # 71
    # 17
    # 37
    # 73
    # 57
    # 75
    # 77
'''


# КЕГЭ № 11827 (Уровень: Средний)
# (Л. Шастин) Определите количество семизначных чисел, записанных в восьмеричной системе счисления,
# запись которых содержит ровно две чётные цифры, и при этом никакая нечётная цифра не стоит рядом с цифрой 7.
'''
from itertools import product
cnt = 0
for per in product('01234567', repeat=7):
    num = ''.join(per)
    if num[0] != '0':
        # chet = [x for x in num if int(x) % 2 == 0]
        chet = [x for x in num if x in '02468']
        if len(chet) == 2:  # запись которых содержит ровно две чётные цифры
            if all(pair not in num for pair in '71 17 37 73 57 75 77'.split()):
                cnt += 1
print(cnt)
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# КЕГЭ № 10026 (Уровень: Средний)
# (С. Чайкин) Откройте файл электронной таблицы, содержащей в каждой строке пять натуральных чисел.
# Определите сумму номеров строк таблицы, для чисел которой выполнено хотя бы одно условие:
#
# – числа в строке расположены в порядке возрастания;
# – в строке есть повторяющиеся числа.
'''
summa = 0
num = 1
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(M) != len(set(M)) or M == sorted(M):
        summa += num
    num += 1
print(summa)
'''


# КЕГЭ № 10910 (Уровень: Средний)
# В файле электронной таблицы в каждой строке записаны 6 натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены следующие условия:
#
# – минимальное число не повторяется;
# – среди остальных чисел строки есть повторяющиеся;
# – сумма максимального и минимального чисел строки меньше, чем сумма повторяющихся чисел.
'''
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if M.count(min(M)) == 1:  # – минимальное число не повторяется;
        if len(M) != len(set(M)):  # – среди остальных чисел строки есть повторяющиеся;
            copied = [x for x in M if M.count(x) > 1]
            if (max(M) + min(M)) < sum(copied):
                cnt += 1
print(cnt)
'''

#
# № 12918 PRO100 ЕГЭ 26.01.24 (Уровень: Средний)
# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите сумму чисел в строке таблицы с наименьшим номером, для которой выполнены все условия:
#
# в строке есть два числа, которые повторяются дважды, остальные два числа различны;
# максимальное число строки не повторяется;
# произведение максимального и минимального чисел строки больше суммы оставшихся четырёх чисел.
# В ответе запишите только число.
'''
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    copied = [x for x in M if M.count(x) == 2]
    if len(copied) == 4:  # в строке есть два числа, которые повторяются дважды, остальные два числа различны;
        if M.count(max(M)) == 1:
            if (M[0] * M[-1]) > sum(M[1:-1]):
                print(sum(M))
                exit()
'''
# Ответ: 138


# № 8554 (Уровень: Средний)
# (В. Рыбальченко)В файле 9.xlsx в каждой строке содержится 5 целых чисел.
# Необходимо посчитать количество строк, в которых выполняется оба условия:
# – Ровно три числа заканчиваются цифрой 3;
# – Квадрат суммы положительных чисел меньше квадрата суммы отрицательных чисел.
# В ответ запишите только число.
'''
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len([x for x in M if str(x)[-1] == '3']) == 3:  # – Ровно три числа заканчиваются цифрой 3;
        A = [x for x in M if x > 0]
        B = [x for x in M if x < 0]
        if sum(A) ** 2 < sum(B) ** 2:
            cnt += 1
print(cnt)
'''
# Ответ: 23


# № 8365 Danov2305 (Уровень: Средний)
# (А.Богданов) Откройте файл электронной таблицы, содержащей в каждой строке
# пять натуральных чисел. Определите количество строк таблицы, содержащих числа,
# для которых выполнены оба условия:
#
# – в строке все числа различны;
#  – можно выбрать две пары чисел так, чтобы среднее арифметическое каждой пары было равно оставшемуся числу.
#
# В ответе запишите только число.
'''
from itertools import permutations

cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(M) == len(set(M)):
        if any((A[0] + A[1]) / 2 == A[-1] and (A[2] + A[3]) / 2 == A[-1] for A in permutations(M)):
            cnt += 1
print(cnt)
'''
# Ответ: 3


'''
for A in permutations([47, 35, 76, 16, 85]):
    print(A)
    # (47, 35, 76, 16, 85)
    # (47, 35, 76, 85, 16)
    # ...
'''


# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# todo Разобраться с ответом № 12453 (Уровень: Базовый)
# (Л. Шастин) Леонид составляет коды перестановкой букв слова СОВЕСТЬ.
# При этом в кодах не должно быть двух стоящих рядом гласных и двух
# стоящих рядом согласных одновременно. Сколько различных кодов может составить Леонид?
# Примечание: в этой задаче мягкий знак принять за гласную букву.
'''
from itertools import permutations
cnt = 0
for per in permutations('СОВЕСТЬ'):
    slovo = ''.join(per)
    slovo = slovo.replace('С', 'В').replace('Т', 'В')
    slovo = slovo.replace('О', 'Е').replace('Ь', 'Е')
    if not('EE' in slovo and 'ВВ' in slovo):
        cnt += 1

print(cnt)
'''
# 5040 -> 720

# endregion Разобрать: *************************************************************


# Геля = [1, 2, 3, 4, 5, 6, 8, 12, 14, 15, 16, 17, 19-21, 22, 23, 24, 25]
# КЕГЭ  = [5, 8, 9, 14]
# на следующем уроке: 13, 17, 18, 19-21, 22, 23, 24, 25
