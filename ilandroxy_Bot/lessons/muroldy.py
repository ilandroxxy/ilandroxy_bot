
# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

#
# № 13308 Открытый курс "Слово пацана" (Уровень: Базовый)
# (М. Попков) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1) Строится двоичная запись числа N.
# 2) К этой записи дописываются справа ещё два разряда по следующему правилу:
# а) в конец числа (справа) дублируется последняя цифра двоичной записи.
# б) к этой записи дописывается справа остаток от деления ее суммы цифр на 2.
#
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
# является двоичной записью искомого числа R. Укажите максимальное число R, меньшее 13500,
# которое может являться результатом работы алгоритма. В ответе это число запишите в десятичной системе.
'''
R = []
for n in range(1, 100000):
    s = bin(n)[2:]
    s = s + s[-1]
    s = s + str(s.count('1') % 2)
    r = int(s, 2)
    if r < 13500:
        R.append(r)
print(max(R))
'''
# Ответ: 13497


#
# № 13306 Открытый курс "Слово пацана" (Уровень: Базовый)
# (М. Попков) Автомат обрабатывает натуральное число N по следующему алгоритму:
#
# 1) Строится двоичная запись числа N.
# 2) Запись «переворачивается», то есть читается справа налево.
# Если при этом появляются ведущие нули, они отбрасываются.
# 3) Полученное число переводится в десятичную запись и выводится на экран.
#
# Какое наименьшее число, превышающее 2000, после обработки автоматом даёт результат 57?
'''
for n in range(2001, 10000):
    s = bin(n)[2:]
    s = s[::-1]
    r = int(s, 2)
    if r == 57:
        print(n)
        break
'''
# Ответ: 2496


#
# № 12914 PRO100 ЕГЭ 26.01.24 (Уровень: Базовый)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
#     а) если число N делится на 3, то все нули заменяются на 11;
#     б) если число N на 3 не делится, то все единицы заменяются на 10.
# Полученная таким образом запись является двоичной записью искомого числа R.
# 3. Результат переводится в десятичную систему и выводится на экран.
#
# Укажите максимальное число R, не превышающее 161, которое может быть получено с
# помощью описанного алгоритма. В ответе запишите это число в десятичной системе счисления.
'''
R = []
for n in range(1, 10000):
    s = bin(n)[2:]
    if n % 3 == 0:
        s = s.replace('0', '11')
    else:
        s = s.replace('1', '10')
    r = int(s, 2)
    if r < 161:
        R.append(r)
        
print(max(R))
'''
# Ответ: 148


# № 12721 (Уровень: Базовый)
# (C. Горбачёв) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится восьмеричная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если количество чётных цифр в записи числа нечётно, то к трём последним
# разрядам восьмеричной записи справа дописывается 46;
# б) если количество чётных цифр в записи числа чётно, то остаток от деления
# числа на 8 умножается на 5, переводится в восьмеричную запись и дописывается слева.
# Полученная таким образом запись является восьмеричной записью искомого числа R.
# 3. Результат переводится в десятичную систему и выводится на экран.

# Укажите минимальное число R, которое может быть получено с помощью описанного
# алгоритма при N не меньшем 80. В ответ запишите это число в десятичной системе счисления.
'''
R = []
for n in range(80, 1000):
    s = oct(n)[2:]
    chet = [x for x in s if x in '0246']
    if len(chet) % 2 != 0:
        s = s[-3:] + '46'
    else:
        x = (n % 8) * 5
        s = oct(x)[2:] + s
    r = int(s, 8)
    R.append(r)
print(min(R))
'''

'''
def convert(num, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while num > 0:
        result += alphabet[num % system]
        num //= system
    return result[::-1]


R = []
for n in range(80, 1000):
    s = convert(n, 8)
    chet = [x for x in s if x in '0246']
    if len(chet) % 2 != 0:
        s = s[-3:] + '46'
    else:
        x = (n % 8) * 5
        s = convert(x, 8) + s
    r = int(s, 8)
    R.append(r)
print(min(R))
'''
# Ответ: 38


#
# № 12459 PRO100 ЕГЭ 29.12.23 (Уровень: Базовый)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится четверичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
#     а) если количество значащих цифр в четверичной записи числа чётное, то к этой записи в середину дописывается 0;
#     б) если количество значащих цифр в четверичной записи числа нечётное, то запись не изменяется.
# Полученная таким образом запись является десятичной записью искомого числа R.
#
# Укажите максимальное число N, после обработки которого с помощью этого алгоритма,
# получается число R, не большее, чем 180. В ответе запишите это число в десятичной системе счисления.
'''
def convert(num, system):
    alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
    result = ''
    while num > 0:
        result += alphabet[num % system]
        num //= system
    return result[::-1]


R = []
for n in range(1, 10000):
    s = convert(n, 4)
    if len(s) % 2 == 0:
        s = s[:len(s) // 2] + '0' + s[len(s) // 2:]

    r = int(s, 4)
    if r <= 180:
        R.append(n)
print(max(R))
'''
# Ответ: 63


# № 9828 Основная волна 27.06.23 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится троичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число N делится на 3, то слева к нему приписывается «1», а справа «02»;
# 6) если число N на 3 не делится, то остаток от деления на 3 умножается на 4,
# переводится в троичную запись и дописывается в конец числа.
# Полученная таким образом запись является троичной записью искомого числа R.
# 3. Результат переводится в десятичную систему и выводится на экран.

# Укажите максимальное число N, после обработки которого с помощью этого алгоритма получается число R, меньшее 199.
'''
def convert(num, system):
    result = ''
    while num > 0:
        result += str(num % system)
        num //= system
    return result[::-1]


for n in range(1, 10000):
    s = convert(n, 3)
    if n % 3 == 0:
        s = '1' + s + '02'
    else:
        x = (n % 3) * 4
        s = s + convert(x, 3)
    r = int(s, 3)
    if r < 199:
        print(n)
'''
# Ответ: 20

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# № todo 7702 (Уровень: Сложный)
# (Грачев Н.) Дано арифметическое выражение 5xyА_18 + 18x7_y.
# Определите, сколько различных значений может принимать выражение при всех возможных x и y.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
R = set()
for y in range(11, 36+1):
    for x in alphabet[:y]:
        A = int(f'5{x}{alphabet[y]}А', 18)
        B = int(f'18{x}7', y)
        R.add(A + B)
print(len(R))
'''
# endregion Разобрать: *************************************************************


# Геля = [1, 2, 3, 4, 5, 6, 8, 12, 14, 15, 16, 17, 19-21, 22, 23, 24, 25]
# КЕГЭ  = [5, 14]
# на следующем уроке: 8, 9, 13, 17, 18, 19-21, 22, 23, 24, 25
