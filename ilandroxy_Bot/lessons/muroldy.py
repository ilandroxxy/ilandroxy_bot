
# region Домашка: ******************************************************************
'''
for pair in '71 17 37 73 57 75 77'.split():
    print(pair)
    # 71
    # 17
    # 37
    # 73
    # 57
    # 75
    # 77
'''


# КЕГЭ № 11827 (Уровень: Средний)
# (Л. Шастин) Определите количество семизначных чисел, записанных в восьмеричной системе счисления,
# запись которых содержит ровно две чётные цифры, и при этом никакая нечётная цифра не стоит рядом с цифрой 7.
'''
from itertools import product
cnt = 0
for per in product('01234567', repeat=7):
    num = ''.join(per)
    if num[0] != '0':
        # chet = [x for x in num if int(x) % 2 == 0]
        chet = [x for x in num if x in '02468']
        if len(chet) == 2:  # запись которых содержит ровно две чётные цифры
            if all(pair not in num for pair in '71 17 37 73 57 75 77'.split()):
                cnt += 1
print(cnt)
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# № 13094 (Уровень: Средний)
# Сколько существует 9-значных девятеричных чисел, в записи которых не встречается цифра 0,
# любые две соседние цифры имеют разную чётность, и никакая цифра не повторяется больше 3 раз?
'''
from itertools import product
cnt = 0
for per in product('012345678', repeat=9):
    num = ''.join(per)
    if num[0] != '0':
        if all(num.count(x) <= 3 for x in num):
            num = num.replace('3', '1').replace('5', '1').replace('7', '1')
            num = num.replace('0', '2').replace('4', '2').replace('6', '2').replace('8', '2')
            if '22' not in num and '11' not in num:
                cnt += 1
print(cnt)
'''
# 483840


# № 12917 PRO100 ЕГЭ 26.01.24 (Уровень: Базовый)
# Петя составляет слова путём перестановки букв в слове ПРОСТО.
# Сколько он сможет составить слов, если запрещено ставить рядом две одинаковые буквы?
'''
from itertools import permutations
cnt = set()
for per in permutations('ПРОСТО'):
    slovo = ''.join(per)
    if 'ОО' not in slovo:
        cnt.add(slovo)
print(len(cnt))
'''
# Ответ: 240


# № 12462 PRO100 ЕГЭ 29.12.23 (Уровень: Базовый)
# Сколько существует различных трёхзначных и пятизначных чисел, записанных в шестнадцатеричной системе счисления,
# в записи которых цифры следуют слева направо в строго убывающем порядке?
'''
from itertools import permutations
cnt = 0
s = '0123456789ABCDEF'
for per in permutations(s, 3):
    slovo = ''.join(per)
    if slovo[0] > slovo[1] > slovo[2]:
        cnt += 1

for per in permutations(s, 5):
    slovo = ''.join(per)
    if slovo[0] > slovo[1] > slovo[2] > slovo[3] > slovo[4]:
        cnt += 1
print(cnt)
'''
# Ответ: 4928


#
# № 11300 (Уровень: Базовый)
# (М. Ишимов) Все 6-буквенные слова, составленные из букв Г, О, Н, Д, У, Б, Ш,
# записаны в алфавитном порядке и пронумерованы.
# Вот начало списка:
# 1. ББББББ
# 2. БББББГ
# 3. БББББД
# 4. БББББН
# 5. БББББО
# 6. БББББУ

# Под каким номером в списке стоит последнее слово с нечётным номером,
# которое не начинается с буквы Б, содержит не менее двух букв Н и не содержит букв У?
'''
s = sorted('ГОНДУБШ')
num = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        if num % 2 != 0:
                            if a != 'Б':
                                if slovo.count('Н') >= 2:
                                    if 'У' not in slovo:
                                        print(num, slovo)
                        num += 1

# Вариант 2
from itertools import *

num = 1
for s in product(sorted('ГОНДУБШ'), repeat=6):
    slovo = ''.join(s)
    if num % 2 != 0 and slovo[0] != 'Б':
        if slovo.count('Н') >= 2 and 'У' not in slovo:
            print(num)
    num += 1
'''
# Ответ: 117625


# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# todo Разобраться с ответом № 12453 (Уровень: Базовый)
# (Л. Шастин) Леонид составляет коды перестановкой букв слова СОВЕСТЬ.
# При этом в кодах не должно быть двух стоящих рядом гласных и двух
# стоящих рядом согласных одновременно. Сколько различных кодов может составить Леонид?
# Примечание: в этой задаче мягкий знак принять за гласную букву.
'''
from itertools import permutations
cnt = 0
for per in permutations('СОВЕСТЬ'):
    slovo = ''.join(per)
    slovo = slovo.replace('С', 'В').replace('Т', 'В')
    slovo = slovo.replace('О', 'Е').replace('Ь', 'Е')
    if not('EE' in slovo and 'ВВ' in slovo):
        cnt += 1

print(cnt)
'''
# 5040 -> 720

# № 7702 (Уровень: Сложный) -  в условие буква A русская... done
# (Грачев Н.) Дано арифметическое выражение 5xyА_18 + 18x7_y.
# Определите, сколько различных значений может принимать выражение при всех возможных x и y.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
R = set()
for y in range(9, 18):
    for x in alphabet[:y]:
        A = int(f'5{x}{alphabet[y]}A', 18)
        B = int(f'18{x}7', y)
        R.add(A + B)
print(len(R))
'''
# Ответ: 116

# endregion Разобрать: *************************************************************


# Геля = [1, 2, 3, 4, 5, 6, 8, 12, 14, 15, 16, 17, 19-21, 22, 23, 24, 25]
# КЕГЭ  = [5, 8, 14]
# на следующем уроке: 9, 13, 17, 18, 19-21, 22, 23, 24, 25
