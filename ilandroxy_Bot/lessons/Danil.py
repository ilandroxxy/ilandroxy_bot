# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# № 6904 (Уровень: Базовый)
# (Д. Статный) Логическая функция F задаётся выражением

# ¬(((x→y∧w)∧(z→x∨y))≡w).
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F,
# содержащий неповторяющиеся строки. Определите, какой столбец в таблице каждой переменной в выражении.
'''
print('x y z w')
for x in range(2):
    for y in range(2):
        for z in [0, 1]:
            for w in range(2):
                F = (not(((x <= (y and w)) and (z <= (x or y))) == w))
                if F == True:
                    print(x, y, z, w)
'''


# № 7020 (Уровень: Базовый)
# (М.Шагитов) В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые значения от -100000 до 100000 включительно.
# Определите количество четверок последовательности, в которых остаток от деления
# ни одного из модулей чисел четверки на 111 не равен минимальному положительному элементу последовательности.
# В ответе запишите количество найденных четверок, затем минимальную из сумм элементов таких четверок.
# В данной задаче под четверкой подразумевается четыре идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]
A = min([i for i in M if i > 0])  # минимальному положительному элементу последовательности
count = 0
mini = 9999999
for i in range(0, len(M)-3):
    # if abs(M[i]) % 111 != A and abs(M[i+1]) % 11 != A and ...
    if all(abs(x) % 111 != A for x in [M[i], M[i+1], M[i+2], M[i+3]]):
        count += 1
        mini = min(mini, sum([M[i], M[i+1], M[i+2], M[i+3]]))
print(count, mini)
'''
# Ответ: 6335 -367715



# № 7341 (Уровень: Базовый)
# 1. Прибавить 1
# 2. Умножить на 2

# Сколько существует программ, для которых при исходном числе 1 результатом является число 40,
# при этом траектория вычислений содержит число 10 и не содержит 20?

def F(a, b):
    if a > b or a == 20:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b)

print(F(1, 10) * F(10, 40))


def F(a, b):
    if a >= b or a == 20:
        return a == b
    return F(a+1, b) + F(a*2, b)

print(F(1, 10) * F(10, 40))

# Показать ответ: 126


# endregion Урок: ******************************************************************************


# todo:    Данил   = [1, 2, 3, 4, 5, 6, 7.1, 8, 9.1, 11, 12, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# todo: Данил КЕГЭ = [14, 15]
# на прошлом уроке: Прорешивали номера: 2, 17, 23, 18 из домашнего вариант
# на следующем уроке:
