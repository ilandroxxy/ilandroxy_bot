# region Домашка: ******************************************************************

# КЕГЭ № 2184 (Уровень: Базовый)
# На числовой прямой даны два отрезка: P = [1, 39] и Q = [23, 58].
# Какова наибольшая возможная длина интервала A, что логическое выражение
#
#   ((x ∈ P) → ¬(x ∈ Q)) → ¬(x ∈ А)
# тождественно истинно, то есть принимает значение 1 при любом значении переменной х.
'''
def f(x, a1, a2):
    P = 1 <= x <= 39
    Q = 23 <= x <= 58
    A = a1 <= x <= a2
    return (P <= (not Q)) <= (not A)


R = []
M = [x / 4 for x in range(1 * 4, 60 * 4)]
for a1 in M:
    for a2 in M:
        if all(f(x, a1, a2) for x in M):
            R.append(a2 - a1)
print(int(max(R)))
'''

# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Открытие файла для 9 номера:
'''
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
'''

# Тип 9 №61389
# В каждой строке электронной таблицы записаны шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых одновременно выполнены все следующие условия:
# — все числа в строке различны;
# — среднее арифметическое наибольшего и наименьшего чисел в
# строке меньше среднего арифметического всех остальных чисел.
# В ответе запишите число — количество строк, удовлетворяющих заданным условиям.
'''
cnt = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if len(M) == len(set(M)):  # — все числа в строке различны;
        if (max(M) + min(M)) / 2 < (sum(M[1:-1]) / len(M[1:-1])):
            cnt += 1
print(cnt)
'''


# Тип 9 №47213
# Откройте файл электронной таблицы, содержащей в каждой строке шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# — в строке только одно число повторяется ровно два раза, остальные числа различны;
# — среднее арифметическое неповторяющихся чисел строки не больше суммы повторяющихся чисел.
# В ответе запишите только число.
'''
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(set(M)) == 5:  # — в строке только одно число повторяется ровно два раза, остальные числа различны;
        copied = sum(M) - sum(set(M))
        if (sum(M) - copied * 2) / 4 <= copied * 2:
            cnt += 1
print(cnt)
'''
# Ответ: 2241


# Тип 9 №59714
# В файле находится таблица, которая содержит в каждой из строк по 7 натуральных чисел.
# Ваша задача состоит в том, чтобы посчитать количество таких строк, в которых два числа повторяются по 2 раза,
# а три других различны, и среднее арифметическое неповторяющихся чисел больше среднего арифметического повторяющихся.
'''
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    copied = [x for x in M if M.count(x) == 2]
    not_copied = [x for x in M if M.count(x) == 1]
    if len(copied) == 4 and len(not_copied) == 3:  # в которых два числа повторяются по 2 раза, а три других различны
        if sum(not_copied) / 3 > sum(copied) / 4:
            cnt += 1
print(cnt)
'''
# Ответ: 96


# Тип 9 №52180
# В каждой строке электронной таблицы записаны пять натуральных чисел.
# Определите, сколько в таблице строк, для которых выполнены следующие условия:
# — все числа в строке различны;
# — чётных чисел больше, чем нечётных;
# — сумма чётных чисел меньше суммы нечётных.
#
# В ответе запишите число — количество строк, для которых выполнены эти условия.
'''
cnt = 0
for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    if len(M) == len(set(M)):
        chet = [x for x in M if x % 2 == 0]
        nechet = [x for x in M if x % 2 != 0]
        if len(chet) > len(nechet):
            if sum(chet) < sum(nechet):
                cnt += 1
print(cnt)
'''
# Ответ: 241


# Тип 9 №46967
# В каждой строке электронной таблицы записаны четыре натуральных числа.
# Определите, сколько в таблице таких четвёрок, из которых можно выбрать три числа,
# которые не могут быть сторонами никакого треугольника, в том числе вырожденного
# (вырожденным называется треугольник, у которого сумма длин двух сторон равна длине третьей стороны).
'''
cnt = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if M[0] + M[1] < M[2] or M[0] + M[1] < M[3]:
        cnt += 1
print(cnt)

# Вариант 2
from itertools import permutations
cnt = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])

    if any(m[0] + m[1] < m[2] for m in permutations(M, 3)):
        cnt += 1
print(cnt)
'''
# Ответ: 3094


# Тип 9 №58476
# В каждой строке электронной таблицы записаны шесть натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых одновременно выполнены все следующие условия:
# — максимальное число встречается в строке ровно один раз;
# — хотя бы одно число в строке повторяется более одного раза;
# — максимальное число в строке превышает среднее арифметическое всех остальных чисел этой строки более чем в три раза.
#
# В ответе запишите число — количество строк, для которых выполнены эти условия.
'''
cnt = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if M.count(max(M)) == 1:
        if len(set(M)) != len(M):
            if max(M) > (sum(M[:-1]) / len(M[:-1])) * 3:
                cnt += 1
print(cnt)
'''
# Ответ: 95


# Тип 9 №58321
# Откройте файл электронной таблицы, содержащей в каждой строке четыре натуральных числа.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# — наименьшее из четырёх чисел более чем в шесть раз меньше суммы трёх других;
# — произведение наибольшего и наименьшего числа больше произведения оставшихся чисел.
#
# В ответе запишите только число.
'''
cnt = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    if min(M) * 6 < sum(M[1:]):
        if min(M) * max(M) > M[1] * M[2]:
            cnt += 1
print(cnt)
'''
# Ответ: 118


# Тип 9 №59778
# Откройте файл электронной таблицы, содержащей в каждой строке семь натуральных чисел.
# Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
# — среди семи чисел совпадают ровно четыре числа;
# — среднее значение неповторяющихся чисел больше суммы повторяющихся чисел.
#
# В ответе запишите только число.
'''
cnt = 0
for s in open('9.txt'):
    M = sorted([int(x) for x in s.split()])
    copied = [x for x in M if M.count(x) == 4]
    not_copied = [x for x in M if M.count(x) == 1]
    if len(copied) == 4:
        if sum(not_copied) / 3 > sum(copied):
            cnt += 1
print(cnt)
'''
# Ответ: 7

# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Данил = [2, 5, 6, 8, 9, 12, 14, 15, 16, 23]
# КЕГЭ  = []
# на следующем уроке:
