# region Домашка: ******************************************************************************

# Тип 12 № 40987
'''
# Дана программа для редактора:
#
# ПОКА нашлось (1111)
#     заменить (1111, 22)
#     заменить (222, 1)
# КОНЕЦ ПОКА
#
# Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр.
# При какой наименьшей длине исходной строки результат работы данной программы будет содержать наименьшее возможное число единиц?

mini = 999999
for n in range(200+1, 1000):
    s = '1' * n

    while '1111' in s:
        s = s.replace('1111', '22', 1)
        s = s.replace('222', '1', 1)
    if mini > s.count('1'):
        mini = s.count('1')
        print(n, mini)
'''
# Ответ: 204



# Тип 12 № 38946
'''
# Дана программа для редактора:
#
#     ПОКА нашлось (111) ИЛИ нашлось (222)
#         заменить (111, 22)
#         заменить (222, 1)
#     КОНЕЦ ПОКА

# Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр,
# а после выполнения программы тоже получилась строка, содержащая только единицы.
# Какое наименьшее количество единиц могло быть в исходной строке?

for n in range(200+1, 1000):
    s = '1' * n

    while '111' in s or '222' in s:
        s = s.replace('111', '22', 1)
        s = s.replace('222', '1', 1)
    # if '2' not in s:
    if s.count('2') == 0:
        print(n)
        break
'''
# Ответ: 205

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************
'''
def MyLen(A):
    kol = 0
    for x in A:
        kol += 1
    return kol

def MySum(*args):
    summ = 0
    for x in args:
        summ += x
    return summ

M = [1, 2, 3, 4]
print(len(M))
print(MyLen(M))

print(min(M), max(M), sum(M))
print(min(1, 2, 3), max(1, 2, 3))
print(MySum(1, 2, 3, 10, 20))
'''



# Тип 23 № 7998
'''
# У исполнителя три команды, каждой команде присвоен номер:
# 1) Прибавь 1
# 2) Прибавь 2
# 3) Прибавь следующее
#
#  Сколько существует программ, которые число 2 преобразуют в число 10?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a + 2, b) + F(a + a + 1, b)


print(F(2, 10))
'''
# Ответ: 47



# Тип 23 № 11358
'''
# Исполнитель А16 преобразует число, записанное на экране.
#
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Прибавить 2
# 3. Умножить на 2

# Сколько существует таких программ, которые исходное число 3 преобразуют в число 12
# и при этом траектория вычислений программы содержит число 10?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a * 2, b)

print(F(3, 10) * F(10, 12))
'''
# Ответ: 60



# Тип 23 № 7347
'''
# У исполнителя четыре команды, которым присвоены номера:
# 1. прибавь 1
# 2. сделай чётное
# 3. сделай нечетное
# 4. умножь на 10
#
# Сколько существует программ, которые число 1 преобразуют в число 14?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 2, b) + F((a * 2) + 1, b) + F(a * 10, b)

print(F(1, 14))
'''
# Ответ: 71


# Тип 23 № 13471
'''
# 1. прибавь 1
# 2. сделай нечётное
#
# Сколько существует таких программ, которые число 1 преобразуют в число 25, причём траектория вычислений не содержит число 24?

def F(a, b):
    if a > b or a == 24:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F((a * 2) + 1, b)

print(F(1, 25))
'''
# Ответ: 10


# Тип 23 № 27551
'''
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2

# Сколько существует программ, которые преобразуют исходное число 1 в число 20,
# и при этом траектория вычислений содержит ровно одно из чисел 9 и 10?

def F(a, b):
    if a > b or a == 10:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 2, b)

def G(a, b):
    if a > b or a == 9:
        return 0
    elif a == b:
        return 1
    else:
        return G(a + 1, b) + G(a * 2, b)

print(F(1, 9) * F(9, 20) + G(1, 10) * G(10, 20))
'''
# Ответ: 18



# Тип 16 № 38591
'''
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n)=1 при n=1;
# F(n)=n+F(n−1), если n чётно,
# F(n)=2×F(n−2), если n>1 и при этом n нечётно.

# Чему равно значение функции F(26)?

def F(n):
    if n == 1:
        return 1
    if n % 2 == 0:
        return n+F(n-1)
    if n > 1 and n % 2 != 0:
        return 2 * F(n - 2)

print(F(26))
'''
# Ответ: 4122


# Тип 16 № 36871
'''
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 1000 и F(n) = 3?

def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)

count = 0
for n in range(1, 1000+1):
    if F(n) == 3:
        count += 1
print(count)
'''
# Ответ: 120


# Тип 16 № 6779
'''
# Алгоритм вычисления значений функций F(n) и G(n), где n  — натуральное число, задан следующими соотношениями:
#
# F(1) = 1;
# G(1) = 1;
# F(n) = F(n – 1) – G(n – 1), при n ≥ 2
# G(n) = F(n–1) + G(n – 1), при n ≥ 2
#
# Чему равно значение величины F(5)/G(5)? В ответе запишите только натуральное число.

def F(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n - 1) - G(n - 1)

def G(n):
    if n == 1:
        return 1
    if n >= 2:
        return F(n - 1) + G(n - 1)

print(F(5)/G(5))
'''
# Ответ: 1


# endregion Урок: ******************************************************************************


# todo: Данил = [2, 5, 8, 12, 14+, 16, 23], на следующем уроке: