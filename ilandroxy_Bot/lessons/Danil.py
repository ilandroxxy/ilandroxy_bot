# region Домашка: ******************************************************************************



# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************


# Тип 8 № 16439
'''
# Михаил составляет 6-буквенные коды. В кодах разрешается использовать только буквы А, Б, В, Г,
# при этом код не может начинаться с гласной и не может содержать двух одинаковых букв подряд.
# Сколько различных кодов может составить Михаил?

s = 'АБВГ'
count = 0
for a in 'БВГ':
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        if a != b and b != c and c != d and d != e and e != f:
                            count += 1
                            print(temp)

print(count)
'''
# Ответ 729


# Тип 8 № 28546
'''
# Настя составляет 4-буквенные коды из букв Н, А, С, Т, Я.
# Каждую букву можно использовать не более одного раза, при этом нельзя ставить рядом две гласные и две согласные.
# Сколько различных кодов может составить Настя?

s = 'НАСТЯ'
s1 = 'АЯ'
s2 = 'НСТ'
count = 0
for a in s1:
    for b in s2:
         for c in s1:
             for d in s2:
                M = [a, b, c, d]
                A = set(M)
                if len(A) == len(M):
                    print(A)
                    count += 1

for a in s2:
    for b in s1:
         for c in s2:
             for d in s1:
                 temp = a + b + c + d
                 M = [a, b, c, d]
                 A = set(M)
                 if len(A) == len(M):
                     print(A)
                     count += 1

print(count)
'''
# Ответ 24



# Тип 5 № 14767
'''
# Автомат получает на вход четырёхзначное число (число не может начинаться с нуля).
# По этому числу строится новое число по следующим правилам.
#
# 1. Складываются отдельно первая и вторая, вторая и третья, третья и четвёртая цифры заданного числа.
# 2. Наименьшая из полученных трёх сумм удаляется.
# 3. Оставшиеся две суммы записываются друг за другом в порядке неубывания без разделителей.
#
# Пример. Исходное число: 1984. Суммы: 1 + 9 = 10, 9 + 8 = 17, 8 + 4 = 12.
# Удаляется 10. Результат: 1217.
#
# Укажите наименьшее число, при обработке которого автомат выдаёт результат 613.

s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
for a in [1, 2, 3, 4, 5, 6, 7, 8, 9]:
    for b in s:
        for c in s:
            for d in s:
                x1 = a + b
                x2 = b + c
                x3 = c + d

                maxi = max(x1, x2, x3)
                sred = (x1 + x2 + x3) - (max(x1, x2, x3) + min(x1, x2, x3))

                r = str(sred) + str(maxi)

                if r == '613':
                    print(a, b, c, d)
                    exit()  # прервать выполнение программы
'''
# Ответ: 1067


# Тип 12 № 37147
'''
# Дана программа для редактора:
#
# ПОКА нашлось (111) или нашлось (88888)
#   ЕСЛИ нашлось (111)
#       ТО заменить (111, 88)
#   ИНАЧЕ заменить (88888, 8)
#   КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
#
# На вход программе подана строка из 100 единиц. Какая строка будет получена исполнителем после выполнения данного алгоритма?

a = '123143214'
print('123' in a)  # True

s = '1' * 100
print(s, len(s))

while '111' in s or '88888' in s:  # ПОКА нашлось (111) или нашлось (88888)
    if '111' in s:  # ЕСЛИ нашлось (111)
        s = s.replace('111', '88', 1)  # ТО заменить (111, 88)
    else:
        s = s.replace('88888', '8', 1)

print(s)
'''
# Ответ: 881





# Тип 12 № 23912
'''
# На вход приведённой ниже программе поступает строка, начинающаяся с символа «>», а затем содержащая 10 цифр 1, 20 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.
#
# Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.
#
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)
#     ЕСЛИ нашлось (>1)
#         ТО заменить (>1, 22>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>2)
#         ТО заменить (>2, 2>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>3)
#         ТО заменить (>3, 1>)
#     КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА

s = '>' + '1' * 10 + '2' * 20 + '3' * 30
while '>1' in s or '>2' in s or '>3' in s:
    if '>1' in s:
        s = s.replace('>1', '22>')
    if '>2' in s:
        s = s.replace('>2', '2>')
    if '>3' in s:
        s = s.replace('>3', '1>')

print(s)

# Вариант 1
summ1 = 0
for x in s[:-1]:
    summ1 += int(x)
print(summ1)

# Вариант 2
M = [int(x) for x in s[:-1]]
print(sum(M))

# Вариант 3
print(sum([int(x) for x in s[:-1]]))

# Вариант 4
print(s.count('1') + s.count('2') * 2 + s.count('3') * 3)
'''

# Тип 12 № 33514
'''

# Дана программа для редактора:
#
#     ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#         заменить (01, 30)
#         заменить (02, 101)
#         заменить (03, 202)
#     КОНЕЦ ПОКА
#
# Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 15 единиц, 10 двоек и 60 троек. Сколько единиц было в исходной строке?

for x in range(1, 50):
    for y in range(1, 50):
        for z in range(1, 50):
            s = '0' + '1' * x + '2' * y + '3' * z
            temp = s

            while '01' in s or '02' in s or '03' in s:
                s = s.replace('01', '30', 1)
                s = s.replace('02', '101', 1)
                s = s.replace('03', '202', 1)

            if s.count('1') == 15 and s.count('2') == 10 and s.count('3') == 60:
                print(temp, temp.count('1'))
'''
# Ответ 45










# endregion Урок: ******************************************************************************


# todo: Данил = [2, 5, 8, 14+], на следующем уроке: Повторяем 12, если нужно и разбираем функции, 16 номер