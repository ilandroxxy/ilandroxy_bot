# region Домашка: ******************************************************************************



# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 25 № 27854
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [110203;110245],
# числа, имеющие ровно четыре различных чётных натуральных делителя (при этом количество нечётных делителей может быть любым).
# Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (x // j) % 2 == 0:
                dl.add(x//j)
            if len(dl) > 4:
                return sorted(dl)
    return sorted(dl)

for x in range(110203, 110245+1):
    dl = D(x)
    if len(dl) == 4:
        print(*dl)
'''
# Ответ:
# 2 4 55102 110204
# 2 14 15746 110222
# 2 6 36742 110226
# 2 22 10022 110242



# Тип 25 № 27850
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [245690; 245756] простые числа.
# Выведите на экран все найденные простые числа в порядке возрастания,
# слева от каждого числа выведите его порядковый номер в последовательности.
# Каждая пара чисел должна быть выведена в отдельной строке.

def D(x):
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            return False
    return True

k = 1
for x in range(245690, 245756+1):
    if D(x) == True:
        print(k, x)
    k += 1
'''
# Ответ:
# 22 245711
# 30 245719
# 34 245723
# 52 245741
# 58 245747
# 64 245753


# print(list(D(x) for x in range(1,1000)))

# for x in range(2, 1000):
#     if D(x) == True:
#         print(x, end=' ')


# Тип 25 № 36038
'''
# Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа.
# Если таких делителей у числа нет, то считаем значение M равным нулю.
#
# Напишите программу, которая перебирает целые числа, большие 452021,
# в порядке возрастания и ищет среди них такие, для которых значение M при делении на 7 даёт в остатке 3.
# Вывести первые 5 найденных чисел и соответствующие им значения M.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):  #  не считая единицы и самого числа
        if x % j == 0:
            return j + (x//j)
    return 0

k = 0
for x in range(452021+1, 4520210):
    M = D(x)
    if M % 7 == 3:
        print(x, M)
        k += 1
        if k == 5:
            break
'''
# Ответ:
# 452025 150678
# 452029 23810
# 452034 226019
# 452048 226026
# 452062 226033



# Тип 25 № 39254
'''
# Пусть M(N) — произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы.
# Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
#
# Найдите 5 наименьших натуральных чисел, превышающих 500_000_000, для которых 0 < M(N) < N.
# В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.

def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)

k = 0
for x in range(500_000_000+1, 900_000_000):
    dl = D(x)
    if len(dl) > 5:
        M = dl[0] * dl[1] * dl[2] * dl[3] * dl[4]
        if 0 < M < x:
            print(M)
            k += 1
            if k == 5:
                break
'''
# Ответ:
# 1008
# 1797092
# 48408867
# 1800
# 1156923



# Тип 25 № 33495
'''
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами
# в виде произведения двух натуральных чисел и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [2000000; 3000000],
# у которых составленное описанным способом множество разностей будет содержать не меньше трёх элементов, не превышающих 115.
# В ответе перечислите найденные числа в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x ** 0.5)+1):
        if x % j == 0:
            if (x // j) - j <= 115:  # не превышающих 115
                dl.add((x//j)-j)
                if len(dl) > 2:
                    return sorted(dl)
    return sorted(dl)

for x in range(2000000, 3000000+1):
    dl = D(x)
    if len(dl) > 2:
        print(x)
'''
# Ответ:
# 2053440
# 2098080
# 2328480
# 2638944


# Тип 25 № 33197
'''
# Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения двух натуральных чисел
# и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 16 получим: 16 = 16*1 = 8*2 = 4*4, множество разностей содержит числа 15, 6 и 0.
# Найдите все натуральные числа, принадлежащие отрезку [1000000;2000000],
# у которых составленное описанным способом множество разностей будет содержать не меньше трёх элементов, не превышающих 100.
# В ответе перечислите найденные числа в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x ** 0.5)+1):
        if x % j == 0:
            if (x // j) - j <= 100:  # не превышающих 115
                dl.add((x//j)-j)
                if len(dl) > 2:
                    return sorted(dl)
    return sorted(dl)

for x in range(1000000, 2000000+1):
    dl = D(x)
    if len(dl) > 2:
        print(x)
'''
# Ответ:
# 1113840
# 1179360
# 1208844
# 1499400



# Тип 25 № 47229
'''
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**10,
# найдите все числа, соответствующие маске 1?2139*4,
# делящиеся на 2023 без остатка.

# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — соответствующие им результаты деления этих чисел на 2023.

print(10**10)
print('1?2139***4')

my_dict = {}
for x in '0123456789':
    for y in range(0, 1000):
        A = int(f'1{x}2139{y}4')
        if A % 2023 == 0:
            my_dict[A] = A // 2023


for key in sorted(my_dict):
    print(key, my_dict[key])
'''
# Ответ:
# 162139404 80148
# 1321399324 653188
# 1421396214 702618
# 1521393104 752048




# endregion Урок: ******************************************************************************


# todo: Данил = [2, 5, 8, 12, 14+, 15+, 16, 23, 25.1]
# на прошлом уроке: Разбирали 25 номера на М, оканчания 8, маски
# на следующем уроке: