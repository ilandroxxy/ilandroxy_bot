# region Домашка: ******************************************************************

# Дополните приведенный код, чтобы он:
# Заменил второй элемент списка на 14;
# Добавил числа 1, 2 и 5 в конец списка;
# Удалил первый элемент списка;
# Утроил список;
# Вставил число 45 по индексу 4;
# Вывел список, с помощью функции print()
'''
L = [4, 5, 6, 9]
L[1] = 14
# L.extend([1, 2, 5])
L += [1, 2, 5]  # конкатенация (склеивание) списков
"""
print(L)  # [4, 14, 6, 9, 1, 2, 5]
x = L.pop(0)  # Забрать элемент из списка
print(x, L)  # 4 [14, 6, 9, 1, 2, 5]
"""
del L[0]  # Просто удаление по индексу

L *= 3
# L.insert(4, 45)  # Вставили (то есть длину тоже увеличили)
# L[4] = 45  # Заменили элемент по индексу 4
L = L[:4] + [45] + L[4:]  # Вставили (то есть длину тоже увеличили)
print(L)
'''
import subprocess

# На вход программе подается натуральное число n, а затем n целых чисел.
# Напишите программу, которая выводит список, состоящий только из чётных чисел.
'''
n = int(input())
M = []
for i in range(n):
    x = int(input())
    if x % 2 == 0:
        M.append(x)
print(M)
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 8 №3230
# Все 5-буквенные слова, составленные из букв А, К, Р, У, записаны в алфавитном порядке. Вот начало списка:
# 1. ААААА
# 2. ААААК
# 3. ААААР
# 4. ААААУ
# 5. АААКА
# Укажите номер слова УКАРА.
'''
s = sorted('АКРУ')
num = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if slovo == 'УКАРА':
                        print(num, slovo)
                    num += 1

# Вариант 2
from itertools import product
num = 1
for p in product(sorted('АКРУ'), repeat=5):
    slovo = ''.join(p)
    if slovo == 'УКАРА':
        print(num, slovo)
    num += 1
'''
# Ответ: 841


# Тип 8 №19059
# Все 4-буквенные слова, в составе которых могут быть буквы Н, О, Т, К, И,
# записаны в алфавитном порядке и пронумерованы, начиная с 1.
# Ниже приведено начало списка.
# 1. ИИИИ
# 2. ИИИК
# 3. ИИИН
# 4. ИИИО
# 5. ИИИТ
# 6. ИИКИ
# Под каким номером в списке идёт первое слово, которое начинается с буквы О
'''
from itertools import product
num = 1
for p in product(sorted('НОТКИ'), repeat=4):
    slovo = ''.join(p)
    if slovo[0] == 'О':
        print(num, slovo)
        break
    num += 1
'''
# Ответ: 376


# Тип 8 №59713
# Составляют 5-буквенные слова из букв слова ПЯТНИЦА.
# Найти количество слов, которые не начинаются с Н
# и в которых есть только одна буква Я. Буквы в слове могут повторяться.
'''
from itertools import product
cnt = 0
for p in product('ПЯТНИЦА', repeat=5):
    slovo = ''.join(p)
    if slovo[0] != 'Н':
        if slovo.count('Я') == 1:
            cnt += 1
print(cnt)
'''
# Ответ: 5616


# Тип 8 №9194
# Сколько слов длины 6, начинающихся и заканчивающихся согласной буквой,
# можно составить из букв Г, О, Д? Каждая буква может входить в слово несколько раз.
# Слова не обязательно должны быть осмысленными словами русского языка.
'''
from itertools import product
cnt = 0
for p in product('ГОД', repeat=6):
    slovo = ''.join(p)
    if slovo[0] in 'ГД' and slovo[-1] in 'ГД':
        cnt += 1
print(cnt)
'''
# Ответ: 324


# Тип 8 №27379
# Виктор составляет 4-буквенные коды из букв В, И, К, Т, О, Р.
# Каждую букву можно использовать не более одного раза, при
# этом нельзя ставить рядом две гласные и две согласные.
# Сколько различных кодов может составить Виктор?
'''
from itertools import permutations  # делает перестановки букв без повторений
cnt = 0
for p in permutations('ВИКТОР', 4):
    slovo = ''.join(p)
    # if all(pair not in slovo for pair in 'ИО ОИ ВТ ТВ ВК КВ ВР РВ ТР РТ ТК КТ РК КР'.split()):
    slovo = slovo.replace('И', 'О')
    slovo = slovo.replace('Т', 'В').replace('Р', 'В').replace('К', 'В')
    if 'ВВ' not in slovo and 'ОО' not in slovo:
        cnt += 1
print(cnt)
'''
# Ответ: 48


# Тип 8 №59741
# Сколько существует чисел, восьмеричная запись которых содержит 5 цифр, причем в записи нет цифры 1.
# Также все цифры записи различны и никакие две чётные и две нечётные цифры не стоят рядом.
'''
from itertools import permutations  # # Также все цифры записи различны
cnt = 0
for p in permutations('01234567', 5):
    number = ''.join(p)
    if number[0] != '0':   # важная строчка!
        # if '1' not in number:
        if number.count('1') == 0:
            number = number.replace('0', '2').replace('4', '2').replace('6', '2')
            number = number.replace('3', '1').replace('5', '1').replace('7', '1')
            if '11' not in number and '22' not in number:
                cnt += 1
print(cnt)
'''
# Ответ: 180


# Тип 8 №58237
# Сколько существует различных четырёхзначных чисел, записанных в семеричной системе счисления,
# в записи которых цифры следуют слева направо в строго убывающем порядке?
'''
from itertools import product
cnt = 0
for p in product('0123456', repeat=4):
    num = ''.join(p)
    if num[0] > num[1] > num[2] > num[3]:
        cnt += 1
print(cnt)


from itertools import product
cnt = 0
for p in product('0123456', repeat=4):
    if len(p) == len(set(p)):
        if list(p) == sorted(p, reverse=True):
            cnt += 1
print(cnt)
'''


# Тип 8 №59745
# Все 5-буквенные слова, в составе которых могут быть буквы А, Л, Г, О, Р, И, Т, М,
# записаны в алфавитном порядке и пронумерованы начиная с 1.
#
# Ниже приведено начало списка.
# ААААА
# ААААГ
# ААААИ
# ААААЛ
# ААААМ
# ААААО
# ААААР
#
# Определите в этом списке количество слов с нечетными номерами, которые не начинаются с буквы Г
# и при этом содержат в своей записи не менее двух букв И.
'''
from itertools import product
num = 1
cnt = 0
for p in product(sorted('АЛГОРИТМ'), repeat=5):
    slovo = ''.join(p)
    if num % 2 != 0:
        if slovo[0] != 'Г':
            if slovo.count('И') >= 2:
                cnt += 1
    num += 1
print(cnt)
'''
# Ответ: 2429


# КЕГЭ № 12917 PRO100 ЕГЭ 26.01.24 (Уровень: Базовый)
# Петя составляет слова путём перестановки букв в слове ПРОСТО.
# Сколько он сможет составить слов, если запрещено ставить рядом две одинаковые буквы?

from itertools import permutations
R = []
for p in permutations('ПРОСТО'):
    slovo = ''.join(p)
    if 'ОО' not in slovo:
        R.append(slovo)

print(len(R))
print(len(set(R)))


# endregion Урок: ******************************************************************

# Данил = [2.1, 6.1, 8.1, 12.1]
# КЕГЭ  = []
# на следующем уроке:
