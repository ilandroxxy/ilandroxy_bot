# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# № 7584 Досрочная волна 2023 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число кратно 3, тогда в конец дописывается три младших разряда полученной двоичной записи,
# б) если число не кратно 3, тогда в конец дописывается двоичная последовательность,
# являющаяся результатом умножения 3 на остаток от деления числа N на 3.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
#
# Например, для исходного числа 510 = 1012 результатом является число 1011102 = 4610,
# а для исходного числа 910 = 10012 результатом является число 10010012 = 7310.
# Укажите наибольшее число N, после обработки которого с помощью этого алгоритма получается число R, меньшее 100.
# В ответе запишите это число в десятичной системе счисления.
'''
for n in range(1, 10000):
    s = bin(n)[2:]

    if n % 3 == 0:
        s = s + s[-3:]
    else:
        s = s + bin(3 * (n % 3))[2:]

    r = int(s, 2)

    if r < 100:
        print(n)
'''
# Ответ: 22


#
# № 7585 Досрочная волна 2023 (Уровень: Базовый)
# В начальный момент Черепаха находится в начале координат,
# её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Вправо 315
# Повтори 7 [Вперёд 16 Направо 45 Вперёд 8 Направо 135]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией,
# заданной данным алгоритмом. Точки на линии учитывать не следует.
'''
import turtle as t
t.left(90)
t.speed(100)
l = 20

t.right(315)
for i in range(7):
    t.forward(16 * l)
    t.right(45)
    t.forward(8 * l)
    t.right(135)

t.up()
for x in range(0, -13, -1):
    for y in range(0, 20):
        t.goto(x * l, y * l)
        t.dot(2, 'red')
t.done()
'''
# Показать ответ: 77



# № 7586 Досрочная волна 2023 (Уровень: Базовый)
# Пользователь записал голосовое сообщение.
# Сообщение представляет собой стерео аудиофайл со следующими параметрами: глубина кодирования – 24 бит,
# частота дискретизации 16000 отсчётов в секунду, время записи – 90 с.
# Данное сообщение было отправлено по Сети со скоростью 64 000 бит/c.
# Сколько секунд будет передаваться голосовое сообщение?

# I(бит) = a(шт) * b(бит) * c(Гц) * t(сек)
'''
I = 2 * 24 * 16000 * 90
print(I)
print(I / 64000)
'''
# Показать ответ: 1080


# № 7587 Досрочная волна 2023 (Уровень: Базовый)
# Все четырехбуквенные слова, в составе которых могут быть только русские буквы А, В, Л, О, Р записаны
# в алфавитном порядке и пронумерованы начиная с 1.
# Ниже приведено начало списка.
# 1. АААА
# 2. АААВ
# 3. АААЛ
# 4. АААО
# 5. АААР
# 6. ААВА
# Под каким номером идет первое слово, начинающееся на Л?
'''
s = 'АВЛОР'
k = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                slovo = a + b + c + d
                if a == 'Л':
                    print(k, slovo)
                    exit()
                k += 1
'''
# Показать ответ: 251


# 1 бит
# 1 байт = 8 бит = 2 ** 3 бит
# 1 Кбайт = 1024 байт = 2 ** 10 байта = 2 ** 13 бит
# 1 Мбайт = 1024 Кбайт = 2 ** 10 Кбайта = 2 ** 23 бит
# 1 Гбайт = 1024 Мбайт = 2 ** 10 Мбайта = 2 ** 33 бит


# № 7590 Досрочная волна 2023 (Уровень: Базовый)
# При регистрации в компьютерной системе каждому объекту присваивается
# идентификатор, состоящий из 113 символов и содержащий только десятичные цифры и символы из 2025-символьного
# специального алфавита. В базе данных для хранения каждого идентификатора отведено одинаковое и минимально возможное
# целое число байт. При этом используют посимвольное кодирование идентификаторов, все символы кодируют одинаковым и
# минимально возможным количеством бит. Определите объём памяти (в Кбайт), необходимый для хранения 32 768
# идентификаторов.
# В ответе запишите только целое число – количество Кбайт.
'''
symbols = 113
alphabet = 2025 + 10
# alphabet = 2 ** i (бит на один символ)
i = 11  # 2**10 = 1024 < 2035 < 2**11 = 2048
bit = symbols * i  # кол-во бит на один идентификатор
byte = int(bit / 8)+1
print(byte)
I = (32_768 * byte) / (2**10)
print(I)
'''
# Показать ответ: 4992


# № 7591 Досрочная волна 2023 (Уровень: Базовый)
# Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
#
# Исполнитель Редактор получает на вход строку начинающуюся на 3 и содержащую далее n цифр 5 (n > 3).
#
# На выполнение Редактору дана следующая программа:
#
# Найдите минимальное значение n, при котором сумма цифр конечной строки будет равна 27.
'''
for n in range(4, 1000):  # n > 3
    s = '3' + '5' * n

    while '25' in s or '355' in s or '555' in s:
        if '25' in s:
            s = s.replace('25', '3', 1)
        if '355' in s:
            s = s.replace('355', '52', 1)
        if '555' in s:
            s = s.replace('555', '23', 1)

    if sum([int(i) for i in s]) == 27:   # как получить сумму цифр строки
        print(n)
        break
'''
# Показать ответ: 16


#
# № 7594 Досрочная волна 2023 (Уровень: Базовый)
# Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
# Так, например, 14&5 = 11102&01012 = 01002 = 4.
# Для какого наименьшего неотрицательного целого числа А формула
#
# x&39 = 0 ∨ (x&11 = 0 → ¬(x&А = 0))
#
# тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной х)?

# Вариант 1
'''
def F(x, A):
    return (x & 39 == 0) or ((x & 11 == 0) <= (not(x & A == 0)))

for A in range(0, 10000):
    if all(F(x, A) for x in range(0, 10000)):
        print(A)
        break

# Вариант 2
print(min([A for A in range(0, 1000) if all(((x & 39 == 0) or ((x & 11 == 0) <= (not(x & A == 0)))) for x in range(0, 10000))]))
'''
# Показать ответ: 36


# endregion Урок: ******************************************************************************


# todo: Данил = [2, 3, 5, 7.1, 8, 9.1, 12, 14+, 15+, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# на прошлом уроке: Прорешивали новый вариант с Досрочного экзамена, номера: 5, 6, 7, 8, 11, 15
# на следующем уроке: На след уроке рассмотреть 6 номера
