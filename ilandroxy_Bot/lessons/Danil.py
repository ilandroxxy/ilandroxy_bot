# region Домашка: ******************************************************************************



# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 15 № 7763
'''
# На числовой прямой даны два отрезка: P = [5, 30] и Q = [14, 23].
# Укажите наибольшую возможную длину промежутка A, для которого формула
#
# ((x ∈ P) ≡ (x ∈ Q)) → ¬(x ∈ A)
#
# тождественно истинна, то есть принимает значение 1 при любом значении переменной х.

def F(x):
    P = 5 <= x <= 30
    Q = 14 <= x <= 23
    A = a1 <= x <= a2
    return (P == Q) <= (not A)

L = [i/4 for i in range(1*4, 50*4)]

M = []
for a1 in L:
    for a2 in L:
        if all(F(x) for x in L) == True:
            M.append(a2-a1)
print(max(M))
'''
# Ответ: 9


# Тип 15 № 40990
'''
# На числовой прямой даны два отрезка: P=[19;84] и Q=[4;51].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
#
# (x∈P)→(¬(x∈Q)→¬((x∈P)∧¬(x∈A)))
#
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).

def F(x):
    P = 19 <= x <= 84
    Q = 4 <= x <= 51
    A = a1 <= x <= a2
    return P <= ((not Q) <= (not (P and (not A))))

L = [i/4 for i in range(1*4, 100*4)]

M = []
for a1 in L:
    for a2 in L:
        if all(F(x) for x in L) == True:
            M.append(a2-a1)
print(min(M))
'''
# Ответ: 33




# Тип 15 № 46973
'''
# На числовой прямой даны два отрезка: P=[69;91] и Q=[77;114].
# Укажите наименьшую возможную длину такого отрезка A, для которого формула
#
# (x∈Q)→(((x∈P)≡(x∈Q))∨(¬(x∈P)→(x∈A)))
#
# тождественно истинна (т.е. принимает значение 1 при любом значении переменной х).

def F(x):
    P = 69 <= x <= 91
    Q = 77 <= x <= 114
    A = a1 <= x <= a2
    return Q <= ((P == Q) or ((not P) <= A))

L = [i/4 for i in range(60*4, 120*4)]

M = []
for a1 in L:
    for a2 in L:
        if all(F(x) for x in L) == True:
            M.append(a2-a1)
print(min(M))
'''
# Ответ: 23


# № 5132
'''
# Обозначим через ОД(n, m) утверждение «натуральное число n и натуральное число m имеют хотя бы один общий делитель, отличный от 1».
#
# Для какого наименьшего натурального числа А формула
#
# (ОД(x, 42) → ¬ОД(x, 7)) \/ (x + A ≥ 25)
#
# тождественно истинна (т.е. принимает значение 1) при любом натуральном значении переменной х?

def OD(n, m):
    for j in range(2, min(m, n)+1):
        if n % j == 0 and m % j == 0:
            return True
    return False

def F(x, A):
    return ((OD(x, 42)==True) <= (OD(x, 7) == False)) or ((x + A) >= 25)

for A in range(1,1000):
    flag = True
    for x in range(1, 1000):
        if F(x, A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break
'''
# Ответ: 18



# № 4283
'''
# Элементами множеств А, P, Q являются натуральные числа, причём P={1,3,4,9,11,13,15,17,19,21}, Q={3,6,9,12,15,18,21,24,27,30}. Известно, что выражение
#
# ((x ∈ P) → (x ∈ A)) ∨ ((x ∉ A) → (x ∉ Q))
#
# истинно (т.е. принимает значение 1 при любом значении переменной х. Определите наименьшее возможное произведение элементов в множестве A


a = set()  # Если наименьшее возможное

def F(x):
    P = x in {1,3,4,9,11,13,15,17,19,21}
    Q = x in {3,6,9,12,15,18,21,24,27,30}
    A = x in a
    return (P <= A) or ((not A) <= (not Q))

for x in range(1, 1000):
    if F(x) == False:
        a.add(x)  # Если наименьшее возможное
print(a)
print(9*3*21*15)
'''
# Ответ: 8505

# № 3156
'''
# Элементами множеств А, P и Q являются натуральные числа, причём P = { 2, 4, 6, 8, 10, 12, 14, 16, 18, 20}
# и Q = { 5, 10, 15, 20, 25, 30, 35, 40, 45, 50}. Известно, что выражение
#
# ((x ∈ A) → (x ∈ P)) ∧ ((x ∈ Q) → ¬(x ∈ A))
#
# истинно (т. е. принимает значение 1) при любом значении переменной х.
# Определите наибольшее возможное количество элементов множества A.

a = set(range(1, 1000))  # Если наибольшее возможное

def F(x):
    P = x in { 2, 4, 6, 8, 10, 12, 14, 16, 18, 20}
    Q = x in { 5, 10, 15, 20, 25, 30, 35, 40, 45, 50}
    A = x in a
    return (A <= P) and (Q <= (not A))

for x in range(1, 1000):
    if F(x) == False:
        a.remove(x)  # Если наибольшее возможное
print(a, len(a))
'''
# Ответ: 8



# № 1409
'''
# Элементами множеств А, P, Q, R являются натуральные числа, причём P={2,4,6,8,10,12,14,16,18,20}, Q={3,6,9,12,15,18,21,24,27,30},
# R={12,24,36,48,60}. Известно, что выражение
#
# (x ∉ A) → (((x ∈ P) ∧ (x ∈ Q)) → (x ∈ R))
#
# истинно (т.е. принимает значение 1 при любом значении переменной х. Определите наименьшее возможное произведение элементов в множестве A.


a = set()  # Если наименьшее возможное

def F(x):
    P = x in {2,4,6,8,10,12,14,16,18,20}
    Q = x in {3,6,9,12,15,18,21,24,27,30}
    R = x in {12, 24, 36, 48, 60}
    A = x in a
    return (not A) <= ((P and Q) <= R)

for x in range(1, 1000):
    if F(x) == False:
        a.add(x)  # Если наименьшее возможное
print(a)
print(18 * 6)
'''
# Ответ: 108


# Тип 7 № 18788
# Автоматическая фотокамера производит растровые изображения размером 480 на 640 пикселей.
# При этом объём файла с изображением не может превышать 40 Кбайт, упаковка данных не производится.
# Какое максимальное количество цветов можно использовать в палитре?

i = (40 * 2 ** 13) / (480 * 640)
i = int(i)
print(i)
N = 2**i
print(N)


# Тип 7 № 27538
# Для проведения эксперимента записывается звуковой фрагмент
# в формате квадро (четырёхканальная запись) с частотой дискретизации 32 кГц и 32-битным разрешением.
# Результаты записываются в файл, сжатие данных не производится; дополнительно в файл записывается служебная информация, н
# еобходимая для эксперимента, размер полученного файла 97 Мбайт.
# Затем производится повторная запись этого же фрагмента в формате моно (одноканальная запись) с частотой дискретизации 16 кГц и 16-битным разрешением.
# Результаты тоже записываются в файл без сжатия и со служебной информацией, размер полученного файла 7 Мбайт.
# Объём служебной информации в обоих случаях одинаков.
# Укажите этот объём в мегабайтах. В ответе укажите только число (количество Мбайт), единицу измерения указывать не надо.

# I = a * b * c * t
t1 = (97 * 2 ** 23) / (4 * 32000 * 32)
t1 = int(t1)
print(t1)

t2 = (7 * 2 ** 23) / (1 * 16000 * 16)

print(t2)





# endregion Урок: ******************************************************************************


# todo: Данил = [2, 5, 8, 12, 14+, 15+, 16, 23], на следующем уроке: Разбираем 25 номера