# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

'''
from fnmatch import fnmatch
i = 1
for x in range(0, 10**10, 4546):
    if fnmatch(str(x), '8*80*06'):
        if i % 60 == 1:
            print(x, x // 4546)
        i += 1
'''

#
# № 8511 Апробация 17.05 (Уровень: Базовый)
# Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

# Среди натуральных чисел, не превышающих 108, найдите все числа,
# соответствующие маске 12??15*6, делящиеся на 253 без остатка.
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце – соответствующие им результаты деления этих чисел на 253.
# Количество строк в таблице для ответа избыточно.

# Вариант 1
'''
import itertools
M = []
for l in range(0, 1+1):
    for s in itertools.product('0123456789', repeat=l):
        s = ''.join(s)
        M.append(s)

R = []
for x in '0123456789':
    for y in '0123456789':
        for z in M:     # перебираем маску "*"
            A = int(f'12{x}{y}15{z}6')
            if A < 10**8:
                if A % 253 == 0:
                    R.append([A, A // 253])

for x in sorted(R):
    print(*x)
'''

# Вариант 2
'''
from fnmatch import *
for x in range(253, 10**8, 253):
    if fnmatch(str(x), '12??15*6'):
        print(x, x//253)
'''
# Показать ответ
# 1278156 5052
# 12531596 49532
# 12741586 50362
# 12951576 51192

'''
import turtle

turtle.forward(100)
turtle.done()
'''
'''
import turtle as t

t.forward(100)
t.done()
'''
'''
from turtle import forward, done

forward(100)
done()
'''
'''
from turtle import *

forward(100)
done()
color('red')
'''


# № 6799 (Уровень: Базовый)
# (PRO100 ЕГЭ) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 9?979*8,
# делящиеся на 50068 без остатка и содержащие хотя бы одну цифру 0.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им результаты деления этих чисел на 50068.
''' 
from fnmatch import *
for x in range(50068, 10**10, 50068):
    if fnmatch(str(x), '9?979*8'):
        if str(x).count('0') >= 1:
            print(x, x//50068)
          
9097906348 181711
9297928008 185706
'''


#
# № 6763 (Уровень: Базовый)
# (Д. Статный) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
#
#
# — символ «?» означает ровно одну произвольную цифру;
#
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
#
# Среди натуральных чисел, не превышающих 10**9, найдите все числа,
# соответствующие маске 6323*353?, делящиеся на 28 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце — соответствующие им результаты деления этих чисел на 28.
'''
from fnmatch import *
for x in range(28, 10**9, 28):
    if fnmatch(str(x), '6323*353?'):
        print(x, x//28)
'''
# Показать ответ
# 632303532 22582269
# 632363536 22584412
# 632373532 22584769


# № 6276 Danov2302 (Уровень: Средний)
# (А.Богданов) Найдите все натуральные числа, не превышающие 10**10, которые соответствуют маске 1?1?1?1*1
# и при этом без остатка делятся на 2023, а сумма цифр числа равна 22.
# В ответе запишите все найденные числа в порядке возрастания.
'''
from fnmatch import *
for x in range(2023, 10**10, 2023):
    if fnmatch(str(x), '1?1?1?1*1'):
        if sum([int(i) for i in str(x)]) == 22:
            print(x)
'''
# Показать ответ
# 19131511
# 1012141291
# 1319111311
# 1516111051


# № 6210 (Уровень: Средний)
# (Н. Сафронов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Найдите все натуральные числа, не превосходящие 107, для которых выполняются одновременно все условия:
#

# № 6210 (Уровень: Средний)
# • соответствуют маске *2?2*;
# • являются палиндромами;
# • делятся на число 53 без остатка;
# • количество делителей больше 30.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце — сумму делителей.
'''
def Divisors(x):
    divisors = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            divisors.add(j)
            divisors.add(x // j)
    return sorted(divisors)

from fnmatch import *
for x in range(53, 10**7, 53):
    if fnmatch(str(x), '*2?2*'):
        if str(x) == str(x)[::-1]:   # • являются палиндромами;
            if x % 53 == 0:  # но можно не писать
                diviors = Divisors(x)
                if len(diviors) > 30:
                    print(x, sum(diviors))
'''

'''
from fnmatch import *
for x in range(53, 10**7, 53):
    if fnmatch(str(x), '*2?2*'):  # • соответствуют маске *2?2*;
        if str(x) == str(x)[::-1]: # • являются палиндромами;
            # делятся на число 53 без остатка; (уже выполнено)
            divisors = set()
            for j in range(1, int(x**0.5)+1):
                if x % j == 0:
                    divisors.add(j)
                    divisors.add(x//j)
            if len(divisors) > 30:  # • количество делителей больше 30.
                print(x, sum(divisors))
'''

# Показать ответ
# 212212 508032
# 2527252 5588352
# 4282824 13789440
# 4626264 11787120
# 8125218 19595520
# 8824288 19908504




# endregion Урок: ******************************************************************************


# todo:    Данил   = [1, 2, 3, 4, 5, 6, 7.1, 8, 9.1, 10, 11, 12, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# todo: Данил КЕГЭ = [14, 15]
# на прошлом уроке: Посмотрели на решение 25 через fnmatch
# на следующем уроке:
