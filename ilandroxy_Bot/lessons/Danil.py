# region Домашка: ******************************************************************
'''
x = 10
M = []
while x > 0:
    M.append(x % 2)  # добавить новый элемент в конец (справа)
    x //= 2
M.reverse()
print(M)  # [1, 0, 1, 0]


x = 10
M = []
while x > 0:
    M = [x % 2] + M  # добавили остаток от деления слева
    x //= 2
print(M)  # [1, 0, 1, 0]
'''

'''
M = []
alphabet = sorted('0987654321MLPOIUYTREWQAZXCVBNKJHGFDS')
for x in alphabet [:18]:
    R = int('77968' + x + '11',18) + int('4' + x + '213',18)
    if R % 7 == 0:
        M.append(R)

print(max(M)//7)
'''

'''
M = []
alphabet = sorted('0987654321MLPOIUYTREWQAZXCVBNKJHGFDS')
for x in alphabet[:8]:
    for y in alphabet[:8]:
        R = int(f'{y}04{x}5', 11) + int(f'253{x}{y}', 8)
        if R % 117 == 0:
            M.append(R)

print(min(M)//117)
'''


# КЕГЭ № 6845 (Уровень: Средний)
# В системе счисления с основанием p выполняется равенство
# 1x77 + xx77 = y0yy
# Буквами x и y обозначены некоторые цифры из алфавита системы счисления с основанием p.
# Определите значение числа yxyx_p и запишите это значение в десятичной системе счисления.
'''
alphabet = sorted('0987654321MLPOIUYTREWQAZXCVBNKJHGFDS')
for p in range(8, 36+1):
    for x in alphabet[:p]:
        for y in alphabet[:p]:
            if int(f'1{x}77', p) + int(f'{x}{x}77', p) == int(f'{y}0{y}{y}', p):
                print(int(f'{y}{x}{y}{x}', p))
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Десятичные цифры: 0123456789
# Простые числа: {2, 3, 5, 7, 11, 13, 17, 19, 23, ...}  - имеют только лишь два делителя: единица и сами на себя
# Натуральные числа: {1, 2, 3, ..., 1000,..., 10000000,..., + inf}
# Целые числа: {-inf, ..., -3, -2, -1, 0, 1, 2, 3, .., +inf}
# Вещественные: натуральные + целые + рациональные + иррациональные - это дроби  (float)


# Тип 5 №18618
# Автомат обрабатывает натуральное число N по следующему алгоритму:
# 1. Строится двоичная запись числа N.
# 2. Запись «переворачивается», то есть читается справа налево.
# Если при этом появляются ведущие нули, они отбрасываются.
# 3. Полученное число переводится в десятичную запись и выводится на экран.
#
# Пример. Дано число N = 58. Алгоритм работает следующим образом.
# 1. Двоичная запись числа N: 111010.
# 2. Запись справа налево: 10111 (ведущий ноль отброшен).
# 3. На экран выводится десятичное значение полученного числа 23.
#
# Какое наибольшее число, не превышающее 100, после обработки автоматом даёт результат 11?
'''
for n in range(1, 100):
    s = bin(n)[2:]   # 1. Строится двоичная запись числа N.
    s = s[::-1]  # 2. Запись «переворачивается», то есть читается справа налево.
    r = int(s, 2)  # # 3. Полученное число переводится в десятичную запись и выводится на экран.
    if r == 11:
        print(n)


R = []
for n in range(1, 100):
    s = bin(n)[2:]   # 1. Строится двоичная запись числа N.
    s = s[::-1]  # 2. Запись «переворачивается», то есть читается справа налево.
    r = int(s, 2)  # # 3. Полученное число переводится в десятичную запись и выводится на экран.
    if r == 11:
        R.append(n)
print(max(R))


for n in range(100, 0, -1):
    s = bin(n)[2:]   # 1. Строится двоичная запись числа N.
    s = s[::-1]  # 2. Запись «переворачивается», то есть читается справа налево.
    r = int(s, 2)  # # 3. Полученное число переводится в десятичную запись и выводится на экран.
    if r == 11:
        print(n)
        break
'''
# Ответ: 52


# Тип 5 №15622
# На вход алгоритма подаётся натуральное число N.
# Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу:
# складываются все цифры двоичной записи, если
# а) сумма нечетная к числу дописывается 11,
# б) сумма четная, дописывается 00.
#
# Укажите такое наименьшее число R,
# которое превышает 114 и может являться результатом работы алгоритма.
# В ответе это число запишите в десятичной системе счисления.
'''
R = []
for n in range(1, 1000):
    s = bin(n)[2:]
    if s.count('1') % 2 != 0:
        s = s + '11'
    else:
        s = s + '00'
    r = int(s, 2)
    if r > 114:
        R.append(r)
print(min(R))
'''

'''
for n in range(0, 255+1):
    s = bin(n)[2:]
    print(s)
    l = 8 - len(s)
    s = s.zfill(8)
    print(s)
    s = s.replace('0', '1', l)
    print(s)
    print('----------')
'''

# Тип 5 №16809
# Автомат обрабатывает натуральное число N (0 ≤ N ≤ 255) по следующему алгоритму:
# 1. Строится восьмибитная двоичная запись числа N.
#
# 2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
#
# 3. Полученное число переводится в десятичную запись.
#
# 4. Из нового числа вычитается исходное, полученная разность выводится на экран.
#
# Какое число нужно ввести в автомат, чтобы в результате получилось 133?
'''
for n in range(0, 255+1):
    s = bin(n)[2:].zfill(8)
    s = s.replace('0', '*')
    s = s.replace('1', '0')
    s = s.replace('*', '1')
    r = int(s, 2)
    res = r - n
    if res == 133:
        print(n)
'''
# Ответ: 61


# Тип 5 №28542
# Автомат обрабатывает натуральное число N по следующему алгоритму:
# 1. Строится троичная запись числа N.
# 2. В конец записи (справа) дописывается остаток от деления числа N на 3.
# 3. Результат переводится из троичной системы в десятичную и выводится на экран.
#
# Какое наименьшее четырёхзначное число может появиться на экране в результате работы автомата?
'''
def convert(number: int, system: int):
    alphabet = sorted(set('0123456789QWERTYUIOPASDFGHJKLZXCVBNM'))
    result = ''
    while number > 0:
        # result = alphabet[number % system] + result
        result += alphabet[number % system]
        number //= system
    return result[::-1]


R = []
for n in range(1, 1000):
    s = convert(n, 3)
    s = s + str(n % 3)
    r = int(s, 3)
    if len(str(r)) == 4:
        R.append(r)

print(min(R))
'''


# Тип 5 №16435
# Автомат обрабатывает натуральное число N > 1 по следующему алгоритму.
# 1. Строится двоичная запись числа N.
# 2. Последняя цифра двоичной записи удаляется.
# 3. Если исходное число N было нечётным, в конец записи (справа) дописываются цифры 10, если четным — 01.
# 4. Результат переводится в десятичную систему и выводится на экран.
#
# Какое число нужно ввести в автомат, чтобы в результате получилось 2017?
'''
def convert(number: int, system: int):
    alphabet = sorted(set('0123456789QWERTYUIOPASDFGHJKLZXCVBNM'))
    result = ''
    while number > 0:
        # result = alphabet[number % system] + result
        result += alphabet[number % system]
        number //= system
    return result[::-1]


for n in range(2, 10000):
    s = convert(n, 2)
    s = s[:-1]  # все, что до -1
    if n % 2 != 0:
        s = s + '10'
    else:
        s = s + '01'
    r = int(s, 2)
    if r == 2017:
        print(n)
        '''
# Ответ: 1008




# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Данил = [2.1, 5.1, 6.1, 8.1, 12.1, 14.1]
# КЕГЭ  = []
# на следующем уроке:
