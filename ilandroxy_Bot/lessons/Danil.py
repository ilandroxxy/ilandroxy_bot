# Домашка
'''
s = input()
if 'суббота' in s.lower() or 'воскресенье' in s.lower():
    print('YES')
else:
    print('NO')
'''
# СуббОта

'''
x = int(input('x: '))
if -3 < x < 7:
 print('YES')
else:
 print('NO')
'''

'''
x1 = int(input('x1: '))
y1 = int(input('y1: '))
x2 = int(input('x2: '))
y2 = int(input('y2: '))
if x1 == x2 and y1 == y2:
    print('Надо обязательно сделать ход!')
elif x1 == x2 or y1 == y2:
    print('YES')
else:
    print('NO')
'''


# Разбираем 2 номер из ЕГЭ

# Список операций математической логики на ПИТОНЕ
#  ¬z    <--->  (not(z))   инверсия (отрицание)
# z ∨ w  <--->  z or w    дизъюнкция (логическое сложение)
# z ∧ w  <--->  z and w   конъюнкция (логическое умножение)
# x → y  <--->  x <= y    инверсия
# x ≡ w  <--->  x == w    тождество

d1 = True
s2 = False  # bool  (boolean)



# Тип 2 № 40718
"""
# Логическая функция F задаётся выражением ((x → y) ∧ (z ∨ w)) → ((x ≡ w) ∨ (y ∧ ¬z)).
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий
# неповторяющиеся строки. Определите, какому столбцу таблицы истинности функции F соответствует
# каждая из переменных x, y, z, w.

print('x y z w F')
for x in range(2):  # 0, 1
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = ( ((x <= y) and (z or w)) <= ((x == w) or (y and (not(z)))) )
                if F == False:
                    print(x, y, z, w, F)
"""




# Тип 2 № 29109
# Логическая функция F задаётся выражением ((z → w) ∨ (y ≡ w))∧((x∨z) ≡ y).
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий неповторяющиеся строки.
# Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных x, y, z, w.

print('x y z w F')
for x in range(2):  # 0, 1
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = ( ((z <= w) or (y == w)) and ((x or z) == y) )
                if F == True:
                    print(x, y, z, w, F)