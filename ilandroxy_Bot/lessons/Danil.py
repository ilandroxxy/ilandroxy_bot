# region Домашка: ******************************************************************************



# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Теория
'''
def D(x):
    M = []
    for j in range(1, x+1):
        if x % j == 0:
            M.append(j)
    return M

def new_D(x):  # имя функции придумываем автоматически
    dl = set()  # создание пустого множества
    for j in range(1, int(x ** 0.5)+1):  # пробегаем до корня числа, потому что тем самым делим кол-во делителей пополам
        if x % j == 0:  # если число делится, то добавляем делитель в множество
            dl.add(j)
            dl.add(x // j)  # и добавляем его пару в множество
    return sorted(dl)  # sorted() возвращает результат в виде списка

print(new_D(200_000_000_000_000))  # считает 3 секунды
# print(D(200_000_000))  # считаем 16 секунд
print(48**0.5)
'''


# Тип 25 № 27857
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [84052;84130],
# число, имеющее максимальное количество различных натуральных делителей,
# если таких чисел несколько — найдите минимальное из них.
# Выведите на экран количество делителей такого числа и само число.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
    return sorted(dl)

maxi = 0
result = []
for x in range(84052, 84130+1):
    dl = D(x)
    if maxi < len(dl):
        maxi = len(dl)
        result = x
        print(maxi, result)
'''
# Ответ: 72 84084


# Тип 25 № 29673
# Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Например, у числа 6 есть два нетривиальных делителя: 2 и 3.
# Найдите все натуральные числа, принадлежащие отрезку [123456789;223456789]
# и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе его наибольший нетривиальный делитель.
# Ответы расположите в порядке возрастания.

'''
def D(x):
    dl = set()
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            dl.add(j)
            dl.add(x // j)
            if len(dl) > 3:
                return sorted(dl)
    return sorted(dl)

for x in range(123_456_789, 223_456_789+1):
    print(x)
    dl = D(x)
    if len(dl) == 3:
        print(x, dl[-1])
'''

# Ответ:
# 131079601 1225043
# 141158161 1295029
# 163047361 1442897


# Тип 25 № 27855
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632;95700],
# числа, имеющие ровно шесть различных чётных натуральных делителей (при этом количество нечётных делителей может быть любым).
# Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.

def D(x):
    dl = set()
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            if j % 2 == 0:
                dl.add(j)
            if (x // j) % 2 == 0:
                dl.add(x // j)
            if len(dl) > 6:
                return sorted(dl)
    return sorted(dl)

for x in range(95632, 95700+1):
    dl = D(x)
    if len(dl) == 6:
        print(*dl)
'''
# Ответ:
# 2 10 50 3826 19130 95650
# 2 26 338 566 7358 95654
# 2 4 8 23918 47836 95672



# Тип 25 № 28121
'''
# Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [2422000; 2422080], простые числа.
# Выведите все найденные простые числа в порядке возрастания, слева от каждого числа выведите его номер по порядку,
# считая, что первое найденное число имеет номер «1», второе — «2», и т.д.

def Simpler(x):
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            return False
    return True

k = 1
for x in range(2422000, 2422080+1):
    if Simpler(x) == True:
        print(k, x)
        k += 1
'''
# Ответ:
# 1 2422027
# 2 2422033
# 3 2422037
# 4 2422073




# Тип 25 № 35999
'''
# Найдите все натуральные числа N, принадлежащие отрезку [200_000_000; 400_000_000],
# которые можно представить в виде N=2**m*3**n, где m — чётное число, n — нечётное число.
# В ответе запишите все найденные числа в порядке возрастания.

# подбор значений
print(400_000_000)
print(2**28)
print(3**17)
print('---------')

# решение 
result = []
for m in range(0, 28+1, 2):
    for n in range(1, 17+1, 2):
        N = 2 ** m * 3 ** n
        if 200_000_000 <= N <= 400_000_000:
            result.append(N)
for x in sorted(result):
    print(x)
'''
# Ответ:
# 201326592
# 229582512
# 254803968
# 322486272

# 201326592
# 229582512
# 254803968
# 322486272



# endregion Урок: ******************************************************************************


# todo: Данил = [2, 5, 8, 12, 14+, 15+, 16, 23, 25.1], на следующем уроке: Разбираем 25 номера на М, оканчания 8, маски