# region Домашка: ******************************************************************************

# № 8496 Апробация 17.05 (Уровень: Базовый)
# Все шестибуквенные слова, составленные из букв А, В, О, Р, Т, записаны в алфавитном порядке и пронумерованы начиная с 1.
# Ниже приведено начало списка.
# 1. АААААА
# 2. АААААВ
# 3. АААААО
# 4. АААААР
# 5. АААААТ
# 6. ААААВА
# …
# Под каким номером стоит слово ВОРОТА?
'''
s = sorted("АВОРТ")
i = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a+b+c+d+e+f
                        if temp == 'ВОРОТА':
                            print(i, temp)
                        i += 1
'''
# Ответ: # 4821


#
# № 8503 Апробация 17.05 (Уровень: Базовый)
# Обозначим через m & n поразрядную конъюнкцию неотрицательных целых чисел m и n. Так, например, 14 & 5 = 11102& 01012 = 01002 = 4.
# Для какого наименьшего неотрицательного целого числа А формула
#
# ((x & 52 ≠ 0) /\ (x & 36 = 0)) → ¬ (x & А = 0)
#
# тождественно истинна (т.е. принимает значение 1) при любом неотрицательном целом значении переменной х?
'''
def F(x, A):
    return ((x & 52 != 0) and (x & 36 == 0)) <= (not(x & A == 0))

for A in range(0, 1000):
    if all(F(x, A) for x in range(0, 1000)):
        print(A)
        break
'''
# Ответ: 16



# № 8494 Апробация 17.05 (Уровень: Базовый)
# Черепахе был дан для исполнения следующий алгоритм:
# Направо 315 Повтори 7 [Вперёд 12 Направо 45 Вперёд 6 Направо 135].
# Определите, сколько точек с целочисленными координатами будут находиться внутри области,
# ограниченной линией, заданной данным алгоритмом. Точки на линии учитывать не следует.
'''
import turtle as t
t.left(90)
t.speed(100)
l = 20


t.right(315)
for i in range(7):
    t.forward(12*l)
    t.right(45)
    t.forward(6*l)
    t.right(135)

t.up()
for x in range(-15, 1):
    for y in range(0, 15):
        t.goto(x * l , y * l)
        t.dot(2, 'red')
t.done()
'''
# Показать ответ: 40

# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************


# 25 № 5642 (Уровень: Средний)
# (М. Ишимов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, больших 500 000, найдите 5 наименьших чисел
# у которых есть ровно три соответствующих маске *1?3 делителя.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им максимальные делители, не считая самого числа.
# Количество строк в таблице для ответа избыточно.
'''
def Divisors(x):
    divisors = set()
    count = 0  # считаем числа соответствующие маски
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            divisors.add(j)
            if len(str(j)) >= 3 and str(j)[-3] == '1' and str(j)[-1] == '3':
                count += 1

            divisors.add(x//j)
            if len(str(x // j)) >= 3 and str(x//j)[-3] == '1' and str(x//j)[-1] == '3':
                count += 1
    return sorted(divisors), count

k= 0
for x in range(500000+1, 1000000000):
    divisors, count = Divisors(x)
    if count == 3:  # ровно три соответствующих маске *1?3 делителя
        print(x, max(divisors))
        k += 1
        if k == 5:
            break
'''
# Показать ответ
# 500786 250393
# 501963 167321
# 503006 251503
# 503217 167739
# 506142 253071



# № 5641 (Уровень: Средний)
# (М. Ишимов) Текстовый файл состоит из символов N, R, O и P.
#
# Определите максимальную длину последовательности, в которых нет подряд идущих символов NP или PO в прилагаемом файле.
#
# Для выполнения этого задания следует написать программу.
'''
s = open('24.txt').readline()
s = s.replace('NP', 'N P').replace('PO', 'P O')
M = [len(i) for i in s.split()]
print(max(M))
'''
# Ответ: 123

'''
def my_systems(M: list, n: int):
    r = 0
    M.reverse()
    for i in range(0, len(M)):
        r += M[i] * n ** i
    return r

for p in range(2, 1000):
    for x in range(p):
        for y in range(p):
            if my_systems([x, y, 7], p) == 71 * 57:
                print(my_systems([y * x], p))
                exit()
'''

# endregion Урок: ******************************************************************************


# todo:    Данил   = [1, 2, 3, 4, 5, 6, 7.1, 8, 9.1, 10, 11, 12, 14, 15, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# todo: Данил КЕГЭ = [14, 15]
# на прошлом уроке: Прорешивали вопросы по 25, 24, 14 номерам
# на следующем уроке:
