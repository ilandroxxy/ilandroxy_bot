# region Домашка: ******************************************************************
'''
from itertools import permutations

cnt = []
for p in permutations('СОТОЧКА', 7):
    slovo = ''.join(p)

    if 'ОА' in slovo or 'АО' in slovo or 'ОО' in slovo:
        cnt.append(slovo)
print(len(set(cnt)))
'''


# КЕГЭ № 4465 Джобс 15.06.2022 (Уровень: Базовый)
# Все четырехбуквенный слова, в составе которых могут быть
# только буквы П, Я, Т, Ь, Д, Н, Е, Й, записаны в алфавитном порядке и пронумерованы начиная с 1.
#
# Ниже приведено начало списка.
# 1. ДДДД
# 2. ДДДЕ
# 3. ДДДЙ
# 4. ДДДН
# 5. ДДДП
# 6. ДДДТ
# 7. ДДДЬ
# 8. ДДДЯ
# 9. ДДЕД
#
# Под каким номером в списке идёт последнее слово,
# которое не содержит ни одной гласной и все буквы в нем различны?
'''
s = sorted('ПЯТЬДНЕЙ')
num = 1
M = []
for a in s:
    for b in s:
        for c in s:
            for d in s:
                slovo = a + b + c + d
                if 'Я' not in slovo and 'Е' not in slovo:
                    if len(set(slovo)) == len(slovo):  # все буквы в нем различны
                        M.append(num)
                num += 1
print(max(M))
'''
# endregion Домашка: ******************************************************************


# region Урок: ******************************************************************

# Тип 14 №27301
# Сколько единиц содержится в двоичной записи значения выражения 16**4 + 8**4 + 4**6 - 64?
'''
x = 16**4 + 8**4 + 4**6 - 64
M = []  # сюда будем складывать остатки
while x > 0:
    M.append(x % 2)  # в список закидываем остаток от деления на 2
    x //= 2
M.reverse()
print(M.count(1))

# Вариант 2
print(bin(16**4 + 8**4 + 4**6 - 64).count('1'))
'''
# Ответ: 8


# Тип 14 №33093
# Значение выражения 81**15 + 3**22 - 27? записали в системе счисления с основанием 9.
# Сколько цифр «8» содержится в этой записи?
'''
x = 81**15 + 3**22 - 27
M = [] 
while x > 0:
    M.append(x % 9)
    x //= 9
M.reverse()
print(M.count(8))
'''
# Ответ: 9


# Тип 14 №27385
# Значение выражения 343**5 + 343**4 + 49**6 - 7**13 - 21
# записали в системе счисления с основанием 7.
# Сколько различных цифр содержит эта запись?
'''
x = 343**5 + 343**4 + 49**6 - 7**13 - 21
n = 7
M = []
while x > 0:
    M.append(x % n)
    x //= n
M.reverse()
print(len(set(M)))
print(set(M))
'''


# Тип 14 №48339
# Операнды арифметического выражения записаны в системе счисления с основанием 11:
#
# 982x8_11 + 194x7_11
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита
# одиннадцатиричной системы счисления. Определите наименьшее значение x,
# при котором значение данного арифметического выражения кратно 58.
# Для найденного значения x вычислите частное от деления значения
# арифметического выражения на 58 и укажите его в ответе в десятичной
# системе счисления. Основание системы счисления в ответе указывать не нужно.

# import string
# alphabet = string.digits + string.ascii_uppercase
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
print(len(set(alphabet)))  # можно себя проверить
for x in alphabet[:11]:
    A = int(f'982{x}8', 11)  # перевод из 11-ой в 10-ную систему
    B = int(f'194{x}7', 11)
    if (A + B) % 58 == 0:
        print((A + B) // 58)
'''
# Ответ: 2931


# Тип 14 №48388
# Операнды арифметического выражения записаны в системах счисления с основаниями 12 и 14:
#
# x231y_12 + 78x98y_14
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления
# неизвестные цифры. Определите значения x и y, при которых значение данного
# арифметического выражения будет наименьшим и кратно 99.
# Для найденных значений x и y вычислите частное от деления значения
# арифметического выражения на 99 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for x in alphabet[:12]:
    for y in alphabet[:12]:
        A = int(f'{x}231{y}', 12)
        B = int(f'78{x}98{y}', 14)
        if (A + B) % 99 == 0:
            print((A + B) // 99)
'''
# Ответ: 41428


# Тип 14 №48379
# Числа M и N записаны в системе счисления с основанием 9 соответственно.
#
# M = 842x5_9, N = 8x725_9
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита
# девятеричной системы счисления. Определите наименьшее значение натурального числа A,
# при котором существует такой x, что M + A кратно N.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for A in range(1, 100000):
    for x in alphabet[:9]:
        M = int(f'842{x}5', 9)
        N = int(f'8{x}725', 9)
        if (M + A) % N == 0:
            print(A)
            exit()
'''
# Ответ: 387

# int(f'8725', 39)
# ValueError: int() base must be >= 2 and <= 36, or 0


# Тип 14 №56514
# В системе счисления с основанием p выполняется равенство 32x8 + xxx9 = yy02.
# Буквами x и y обозначены некоторые цифры из алфавита системы счисления с основанием p.
# Определите значение числа yyx_p и запишите это значение в десятичной системе счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
for p in range(10, 36+1):
    for x in alphabet[:p]:
        for y in alphabet[:p]:
            if int(f'32{x}8', p) + int(f'{x}{x}{x}9', p) == int(f'{y}{y}02', p):
                print(int(f'{y}{y}{x}', p))
'''
# Ответ: 2407.


# Тип 14 №61360
# В числе 12x643y7_37 x и y обозначают некоторые цифры из алфавита системы счисления
# с основанием 37. Определите такие значения x и y, при которых приведённое
# число кратно 36, а число yx_37 имеет наибольшее возможное значение.
# В ответе запишите значение числа yx37 в десятичной системе счисления.

def my_int(L: list, n: int):
    L.reverse()
    r = 0
    for i in range(len(L)):
        r += L[i] * n ** i
    return r

R = []
for x in range(37):
    for y in range(37):
        A = my_int([1, 2, x, 6, 4, 3, y, 7], 37)
        if A % 36 == 0:
            R.append(my_int([y, x], 37))
print(max(R))

# Ответ: 1345



# endregion Урок: ******************************************************************


# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************


# Данил = [2.1, 6.1, 8.1, 12.1, 14.1]
# КЕГЭ  = []
# на следующем уроке:
