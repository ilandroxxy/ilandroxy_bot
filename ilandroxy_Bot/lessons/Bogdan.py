# region Домашка:  ******************************************************************************

# Тип 5 № 15622
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. К этой записи дописываются справа ещё два разряда по следующему правилу: складываются все цифры двоичной записи, если
# а) сумма нечетная к числу дописывается 11,
# б) сумма четная, дописывается 00.
# 3. Перевести в 10-ную обратно
#
# Укажите такое наименьшее число R, которое превышает 114
#  В ответе это число запишите в десятичной системе счисления.

for n in range(1, 1000):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.

    summ = s.count('1')
    if summ % 2 != 0:
        s += '11'  # а) сумма нечетная к числу дописывается 11,
    else:
        s += '00'  # б) сумма четная, дописывается 00.

    r = int(s, 2)  # 3. Перевести в 10-ную обратно

    if r >= 114:  # Укажите такое наименьшее число R, которое превышает 114
        print(r)
        break
'''
# Ответ: 115




# Тип 5 № 33177
'''
# Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R следующим образом:
#
# 1. Строится двоичная запись числа N.
# 2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.
# 3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.
# 4. Результат переводится в десятичную систему.

#
# При каком наименьшем числе N в результате работы алгоритма получится R>150?
# В ответе запишите это число в десятичной системе счисления.

for n in range(2, 1000):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.

    s += s[-2]
    s += s[1]

    r = int(s, 2)  # 3. Перевести в 10-ную обратно

    if r > 150:  # Укажите такое наименьшее число R, которое превышает 114
        print(n)
        break
'''
# Ответ: 38


# Тип 5 № 29191
'''
# Автомат обрабатывает натуральное число N > 1 по следующему алгоритму:
#
# 1. Строится двоичная запись числа N.
# 2. В конец двоичной записи добавляются две первые цифры этой записи в обратном порядке.
# 3. Результат переводится в десятичную систему и выводится на экран.
#
# При каком наименьшем исходном N результат на экране автомата будет больше 74?


for n in range(2, 1000):
    s = bin(n)[2:]  # 1. Строится двоичная запись числа N.

    s += s[1] + s[0]  # # 2. В конец двоичной записи добавляются две первые цифры этой записи в обратном порядке.

    r = int(s, 2)  # 3. Перевести в 10-ную обратно

    if r > 74:  # Укажите такое наименьшее число R, которое превышает 114
        print(n)
        break
'''
# Ответ: 19



# Тип 12 № 18820
'''
# Найдите сумму цифр в строке, которая получится в результате применения приведённой ниже программы к строке, состоящей из 65 цифр 9.

#     ПОКА нашлось (999) ИЛИ нашлось (222)
#         ЕСЛИ нашлось (222)
#             ТО заменить (222, 9)
#         ИНАЧЕ
#             заменить (999, 2)
#         КОНЕЦ ЕСЛИ
#     КОНЕЦ ПОКА

s = '9' * 65
while '999' in s or '222' in s:  # ПОКА нашлось (999) ИЛИ нашлось (222)
    if '222' in s:  # ЕСЛИ нашлось (222)
        s = s.replace('222', '9', 1)  # ТО заменить (222, 9)
    else:
        s = s.replace('999', '2', 1)  # заменить (999, 2)

print(s)  
'''
# Ответ: 9



# Тип 12 № 33184
'''
# Дана программа для редактора:

#     ПОКА нашлось (111)
#         заменить (111, 22)
#         заменить (222, 11)
#     КОНЕЦ ПОКА
#

# Известно, что исходная строка содержала более 100 единиц и не содержала других цифр.
# Укажите минимально возможную длину исходной строки, при которой в результате работы этой программы получится строка,
# содержащая минимально возможное количество единиц.

mini = 99999
for n in range(100+1, 1000):
    s = '1' * n

    while '111' in s:
        s = s.replace('111', '22', 1)
        s = s.replace('222', '11', 1)
    if mini > s.count('1'):
        mini = s.count('1')
        print(n, s)
'''
# Ответ: 104


# Тип 12 № 18590
'''
# Какая строка получится в результате применения приведённой ниже программы к строке вида 1…12…2 (45 единиц и 45 двоек)?
#
# ПОКА нашлось (111)
#     заменить (111, 2)
#     заменить (222, 1)
# КОНЕЦ ПОКА

s = '1' * 45 + '2' * 45

while '111' in s:
    s = s.replace('111', '2', 1)
    s = s.replace('222', '1', 1)
print(s)
'''
# Ответ: 12


# Тип 12 № 47009
'''
# Дана программа для редактора:
#
#     ПОКА НЕ нашлось (00)
#         заменить (01, 210)
#         заменить (02, 3101)
#         заменить (03, 2012)
#     КОНЕЦ ПОКА

# Известно, что исходная строка начиналась с нуля и заканчивалась нулём, а между ними содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 61 единицу, 50 двоек и 18 троек.
# Сколько цифр было в исходной строке?

for x in range(1, 50):
    for y in range(1, 50):
        for z in range(1, 50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'

            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '3101', 1)
                s = s.replace('03', '2012', 1)

            if s.count('1') == 61 and s.count('2') == 50 and s.count('3') == 18:
                print(x+y+z+2)
# Ответ: 38
'''


# Тип 12 № 27543
'''
# Дана программа для Редактора:

# ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)
#     заменить (01, 103)
#     заменить (02, 10)
#     заменить (03, 210)
# КОНЕЦ ПОКА
#
# Известно, что исходная строка начинается с цифры 0, а далее содержит 12 цифр 1, 15 цифр 2 и 17 цифр 3,
# расположенных в произвольном порядке. Сколько цифр 2 будет в строке, которая получится после выполнения данной программы?

s = '0' + '3' * 17 + '2' * 15 + '1' * 12 

while '01' in s or '02' in s or '03' in s:
    s = s.replace('01', '103', 1)
    s = s.replace('02', '10', 1)
    s = s.replace('03', '210', 1)
print(s.count('2'))
'''
# Ответ: 29




# Тип 12 № 25844
'''
# На вход приведённой ниже программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 11 цифр 1, 12 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.
#
# Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.
#
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)
#     ЕСЛИ нашлось (>1)
#         ТО заменить (>1, 22>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>2)
#         ТО заменить (>2, 2>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>3)
#         ТО заменить (>3, 1>)
#     КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА

s = '>' + '1' * 11 + '2' * 12 + '3' * 30
while '>1' in s or '>2' in s or '>3' in s:
    if '>1' in s:
        s = s.replace('>1', '22>', 1)
    if '>2' in s:
        s = s.replace('>2', '2>', 1)
    if '>3' in s:
        s = s.replace('>3', '1>', 1)
print(s)

# Вариант 1
M = [int(i) for i in s[:-1]]
print(M, sum(M))

# Вариант 2
summ = 0
for x in s[:-1]:
    summ += int(x)
print(summ)

# Вариант 3
print(s.count('1') + s.count('2') * 2)
'''
# Ответ: 98

# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************




# endregion Урок:  ******************************************************************************


# todo: Богдан = [2, 5, 12, 14+]
# на прошлом уроке: Повторили 5 и разобрали 12 номера, все типы.
# на следующем уроке: Повторяем 5 и 12 номера и разбираем 8 номер.