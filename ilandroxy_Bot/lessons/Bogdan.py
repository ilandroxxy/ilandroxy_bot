# region Домашка:  ******************************************************************************


# Тип 8 № 10384
'''
# Алексей составляет таблицу кодовых слов для передачи сообщений, каждому сообщению соответствует своё кодовое слово.
# В качестве кодовых слов Алексей использует 4-буквенные слова, в которых есть только буквы A, B, C, D, X,
# причём буква X может появиться на первом месте или не появиться вовсе.
# Сколько различных кодовых слов может использовать Алексей?

count = 0
for a in 'ABCDX':
    for b in 'ABCD':
        for c in 'ABCD':
            for d in 'ABCD':
                temp = a + b + c + d
                print(temp)
                count += 1
print(count)
'''
# Ответ: 320


# Тип 8 № 7338
'''
# Рассматриваются символьные последовательности длины 6 в пятибуквенном алфавите {К, А, Т, Е, Р}.
# Сколько существует таких последовательностей, которые начинаются с буквы Р и заканчиваются буквой К?

# Вариант 1
s = 'КАТЕР'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        if a == 'Р' and f == 'К':
                            count += 1
print(count)

# Вариант 2
s = 'КАТЕР'
count = 0
for a in 'Р':
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in 'К':
                        count += 1
print(count)
'''
# Ответ: 625


# Тип 8 № 7986
'''
# Сколько слов длины 5, начинающихся с согласной буквы и заканчивающихся гласной буквой, можно составить из букв З, И, М, А?
# Каждая буква может входить в слово несколько раз.
s = 'ЗИМА'
sogl = 'ЗМ'
glas = 'ИА'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if a in sogl and e in glas:
                        print(temp)
                        count += 1
print(count)
'''
# ответ: 256


# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************

# Функции в языке Python
'''
range()
print()
len()
min()
max()
sum()
int()
str()
list()
'''

# Методы - это функции, прописанные для определенного объекта класса (тип данных)
'''
print(type(4))  # <class 'int'>

class Bogdan:

    def __init__(self):
        pass

    def my_lvl(self):  # метод объекта класса Bogdan
        pass
'''

# Методы списков
'''
.append()
.count()
.reverse()
'''

# Методы строк
'''
.index()
.count()
.replace()
'''

# Как создать свою функцию
'''
def My_Square(a, b, c):
    if a == 0:
        return f'Это не квадратное уравнение'
    D = b**2-4*a*c
    if D < 0:
        return f'Корней нет'
    elif D == 0:
        return f'Всего один корень: {(-b + (D ** 0.5)) / (2 * a)}'
    else:
        x1 = (-b + (D**0.5)) / (2*a)
        x2 = (-b - (D**0.5)) / (2*a)
        return f'x1 = {x1}, x2 = {x2}'


print(My_Square(0, 2, 3))  # Это не квадратное уравнение
print(My_Square(2, 3, 4))  # Корней нет
print(My_Square(5, 0, 0))  # Всего один корень: 0.0
print(My_Square(3, 8, -11))  # x1 = 1.0, x2 = -3.6666666666666665
'''


# Тип 16 № 6925
'''
# Алгоритм вычисления значений функций F(n), где n — натуральное число, задан следующими соотношениями:
# F(1) = 1; F(2) = 2; F(3) = 3;
#
# F(n) = F(n − 3)*n при n > 3.
#
# Чему равно значение функции F(11)? В ответе запишите только натуральное число.

def F(n):
    if n == 1:
        return 1
    if n == 2:
        return 2
    if n == 3:
        return 3
    if n > 3:
        return F(n - 3) * n

print(F(11))
'''
# Ответ: 880



# Тип 16 № 45250
'''
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n)=2 при n<3;
#
# F(n)=F(n−2)+F(n−1)−n, если n>2 и при этом n чётно,
#
# F(n)=F(n−1)−F(n−2)+2×n, если n>2 и при этом n нечётно.
#
# Чему равно значение функции F(32)?

def F(n):
    if n < 3:
        return 2
    if n > 2 and n % 2 == 0:
        return F(n-2)+F(n-1)-n
    if n > 2 and n % 2 != 0:
        return F(n-1)-F(n-2)+2*n

print(F(32))
'''
# Ответ: 3194


# Тип 16 № 47220
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n)=1 при n=1;
# F(n)=n·F(n−1), если n>1.
#
# Чему равно значение выражения F(2023) / F(2020)?
'''
from functools import *
@lru_cache(None)
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n-1)

print(F(2023) / F(2020))  # RecursionError: maximum recursion depth exceeded in comparison

print(2023*2022*2021)
'''
# Ответ: 8266912626



# Тип 16 № 4656
'''
# Алгоритм вычисления значения функции F(n) и G(n), где n – натуральное число, задан следующими соотношениями:
#
# F(1) = 0
# F(n) = F(n–1) + n, при n >1
#
# G(1) = 1
# G(n) = G(n–1) * n, при n >1
#
# Чему равно значение функции F(5) + G(5)?

def F(n):
    if n == 1: # F(1) = 0
        return 0
    if n > 1:  # F(n) = F(n–1) + n, при n >1
        return F(n-1) + n

def G(n):
    if n == 1:  # # G(1) = 1
        return 1
    if n > 1:  # G(n) = G(n–1) * n, при n >1
        return G(n-1) * n

print(F(5) + G(5))
'''
# Ответ: 134


# Тип 23 № 13606
'''
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Умножить на 3

# Сколько существует программ, для которых при исходном числе 2 результатом является число 28 и при этом траектория вычислений содержит число 14?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b) + F(a*3, b)

print(F(2, 14) * F(14, 28))
'''
# Ответ: 38


# Тип 23 № 18634
'''
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Прибавить 2
# 3. Умножить на 3

# Сколько существует программ, которые преобразуют исходное число 1 в число 15, и при этом траектория вычислений содержит число 9 и не содержит числа 13?

def F(a, b):
    if a > b or a == 13:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a*3, b)

print(F(1, 9) * F(9, 15))
'''
# Ответ: 159


# Тип 23 № 29671 i
'''
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 3

# Сколько существует программ, которые преобразуют исходное число 1 в число 70, и при этом траектория вычислений содержит число 22?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*3, b)

print(F(1, 22) * F(22, 70))
'''
# Ответ: 45

# endregion Урок:  ******************************************************************************


# todo: Богдан = [2, 5, 8, 12, 14+]
# на прошлом уроке: Начали пораньше на 10 минут, повторили 8 номер и Разбирали теорию функций, так же разобрали по несколько 16, 23 номеров
# на следующем уроке: Добиваем 23 номера и переходим к 15 номеру