# region Домашка:  ******************************************************************************

"""

x=25**5+5**14-5
M=[]
while x > 0:
    M.append(x % 5)
    x//= 5
M.reverse()
print(M.count(4))
"""

# Тип 25 № 47229
"""
x=216**6+216**4+36**6-6**14-24
M=[]
while x>0:
    M.append(x%6)
    x//=6
M.reverse()
print("M:", M)
A=set(M)
print("A:",A,len (A))
"""

# Тип 2 № 16377
'''
# Логическая функция F задаётся выражением ((x → y) ≡ (y → z)) ∧ (y ∨ w).
#
# Дан частично заполненный фрагмент, содержащий неповторяющиеся строки таблицы истинности функции F.
#
# Определите, какому столбцу таблицы истинности соответствует каждая из переменных x, y, z, w.


# Правила алгебры логики на языке Python
#   ¬y   <--->  (not(y))   инверсия (отрицание)
# x ∧ y  <--->  x and y    конъюнкция (логическое умножение)
# x ∨ w  <--->  x or y     дизъюнкция (логическое сложение)
# w → z  <--->  w <= z     импликация
# x ≡ z  <--->  x == z     тождество (равны ли элементы)

print('x y z w F')
for x in range(2):  # [0, 2)
    for y in range(2):
        for z in range(2):
            for w in range(2):
                # ((x → y) ≡ (y → z)) ∧ (y ∨ w)
                F = ((x <= y) == (y <= z)) and (y or w)
                if F == True:
                    print(x, y, z, w, F)
'''

# endregion Домашка:  ******************************************************************************


# region Урок:  ******************************************************************************

# Теория строк: str()
'''
s = '65432'
print(s[0], s[-1])  # первый и последний элемент строки

for x in s:
    print(x, end=' ')
print()

for i in range(0, len(s)):
    print(s[i], end=' ')
print()

# Строки полностью идентичны спискам, за исключением: Нельзя менять элемент строки
M = [1, '2', 3, '4', 5]
M[1] = '*'
print(M)

s = '12345'
# s[1] = '98'  # Так делать нельзя
s = s[:1] + '*' + s[2:]  # можно менять элементы, но путем создания новой строки из подстрок старой
print(s)
'''

# Срезы строк - подстроки (аналогично работают со списками)
'''
s = '87654322'
print(s[3])
print(s[3:6])  # индекс крайнего правого не берется
print(s[:3])  # все, что слева
print(s[3:])  # все, что справа
print(s[::2])  # чередуя через шаг
print(s[::-1])  # переворот строки аналогичный reverse() у списков
'''

# f-строка
'''
for x in '0123456789':
    temp = f'1{x}'
    print(temp)
'''

# Методы строк
'''
s = '123412341234'
print(s.count('1'))  # выводит кол-во вхождений элемента в строку
print(s.index('1'), s.rindex('1'))  # выводим индекс первого и последнего вхождения

s = s.replace('1', '*')  # заменит все элементы на новые
print(s)
s = s.replace('*', '1', 2)    # заменит первые два элемента на новые
print(s)

# методы split и join
id = '123.43.244.8'

M = [int(i) for i in id.split('.')]
print(M)

# A = [int(i) for i in input('Введите числа через пробел: ').split()]  # ввод списка в одну строчку
# print(A)


B = id.split('.')  # разбивает строку на список строк
print(B)
r = '***'.join(B)  # склеивание списка строк в строку 
print(r)
'''

# Тип 24 № 27697
'''
# Текстовый файл состоит не более чем из 106 символов L, D и R. 
# Определите длину самой длинной последовательности, состоящей из символов D. Хотя бы один символ D находится в последовательности.
# 
# Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

# Вариант 1
print(max([len(i) for i in open('24.txt').readline().replace('L', ' ').replace('R', ' ').split()]))

# Вариант 2
f = open('24.txt')
s = f.readline()
s = s.replace('L', ' ')
s = s.replace('R', ' ')
M = s.split()
print(M)
print(max([len(i) for i in M]))
'''
# Ответ: 11



# Тип 14 № 48377
'''
# Операнды арифметического выражения записаны в системе счисления с основанием 13:
#
# 26x98_13 + 4x296_13
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита тринадцатеричной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 34.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 34 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789abc':
    a = int(f'26{x}98', 13)
    b = int(f'4{x}296', 13)

    if (a + b) % 34 == 0:
        print((a + b) // 34)
'''
# Ответ: 6141



# Тип 14 № 48396
'''
# Операнды арифметического выражения записаны в системе счисления с основаниями 19 и 16:
#
# 2x84_19 + 2B3x_16
#
# В записи чисел переменной x обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 88.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 88 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789abcdef':
    a = int(f'2{x}84', 19)
    b = int(f'2B3{x}', 16)

    if (a + b) % 88 == 0:
        print((a + b) // 88)
'''
# Ответ: 345



# Тип 14 № 48392
'''
# Операнды арифметического выражения записаны в системах счисления с основаниями 9 и 12:
#
# 2y66x_9 + x0y1_12
#
# В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры.
# Определите значения x и y, при которых значение данного арифметического выражения будет наименьшим и кратно 170.
# Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 170 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '012345678':
    for y in '012345678':
        a = int(f'2{y}66{x}', 9)
        b = int(f'{x}0{y}1', 12)

        if (a + b) % 170 == 0:
            print((a + b) // 170)
'''
# Ответ: 169



# Тип 14 № 48379
'''
# Числа M и N записаны в системе счисления с основанием 9 соответственно.
#
# M = 842x5_9, N = 8x725_9
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита девятеричной системы счисления.
# Определите наименьшее значение натурального числа A, при котором существует такой x, что M + A кратно N.

for A in range(1, 100000):
    for x in '012345678':
        M = int(f'842{x}5', 9)
        N = int(f'8{x}725', 9)

        if (M + A) % N == 0:
            print(A)
            exit()  # чтобы вывести только первое - оно будет наименьшим 
'''
# Ответ: 387


# endregion Урок:  ******************************************************************************


# todo: Богдан = [2, 14+], на следующем уроке: Разбираем 5 номер
