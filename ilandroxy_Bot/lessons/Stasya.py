
# region Домашка: **********************************************************

# Тип 17 № 47221
# В файле содержится последовательность целых чисел. Элементы последовательности могут принимать целые значения от −10000 до 10000 включительно.
# Определите количество пар последовательности, в которых только одно число оканчивается на 3,
# а сумма квадратов элементов пары не меньше квадрата максимального элемента последовательности, оканчивающегося на 3.
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную из сумм квадратов элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]

maxsumm = 0
count = 0
maxi = 0

for x in M:
    if abs(x) % 10 == 3:
        maxi = max(maxi, x)

for i in range(len(M)-1):
    if (abs(M[i]) % 10 == 3 and abs(M[i + 1]) % 10 != 3) or (abs(M[i]) % 10 != 3 and abs(M[i + 1]) % 10 == 3):
        if (M[i] ** 2 + M[i + 1] ** 2) >= (maxi ** 2):
            count += 1
            maxsumm = max(maxsumm, M[i]**2 + M[i+1]**2)
print(count, maxsumm)
'''
# Ответ:180 190360573


# Тип 17 № 47014
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых один из двух элементов делится на 5, а другой меньше среднего арифметического всех нечётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.
'''
M = [int(i) for i in open('17.txt')]

count = 0
summ = 0
for x in M:
    if x % 2 != 0:
        summ += x
        count += 1
sred = summ/count

kol = 0
maxi = 0
for i in range(0, len(M)- 1):
    if (M[i] % 5 == 0 and M[i+1] < sred) or (M[i] < sred and M[i+1] % 5 == 0):
        kol += 1
        maxi = max(maxi, M[i] + M[i+1])
print(kol, maxi)
Ответ: 1061 14847
'''

# endregion Домашка: **********************************************************


# region Урок: **********************************************************

# № 6061 (Уровень: Средний)
# (А. Игнатюк) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**7, найдите все числа, удовлетворяющие маске 34?8*9
# имеющие более 4 простых делителей (не равных самому числу и 1).
# В ответ в порядке возрастания выпишите подходящие числа и их наибольшие простые делители.

# print(10**7)
# print('34?8**9')
'''
import itertools

def What_Prime_Number(x: int) -> bool:
    """
    Проверяем число на простоту

    :param x: Число приходит на проверку
    :return: Возвращает булевую переменную Истинна или ложсь
    """
    for j in range(2, x):
        if x % j == 0:
            return False
    return True

# print(len.__doc__)
# print(help(len))
# print(What_Prime_Number.__doc__)


def Seacrh_Divisors(x: int) -> list:
    divisors = set()
    for j in range(2, int(x**0.5)+1):  # (не равных самому числу и 1)
        if x % j == 0:
            if What_Prime_Number(j):
                divisors.add(j)
            if What_Prime_Number(x // j):
                divisors.add(x // j)
    return sorted(divisors)

M = []
for l in range(0, 2+1):
    for s in itertools.product('0123456789', repeat=l):
        slovo = ''.join(s)
        M.append(slovo)

R = []
for x in M:
    for y in range(10):
        A = int(f'34{y}8{x}9')
        divisors = Seacrh_Divisors(A)
        if len(divisors) > 4:
            R.append([A, max(divisors)])

for x in sorted(R):
    print(*x)
'''
# Показать ответ:
# 3408699 107
# 3418989 157
# 3428139 131
# 3428679 79
# 3438799 53
# 3468969 79
# 3488199 173
# 3488709 233




# № 6060 (Уровень: Базовый)
# (А.Игнатюк) В файле представлена последовательность, состоящая из символов X, Y, Z.
# Необходимо указать количество всех палиндромов (слова, которые справа налево и слева
# направо читаются одинаково), состоящих из 9 символов, имеющихся в последовательности.

# s = '1234321'
# print(s == s[::-1])
'''
s = open('24.txt').readline()
count = 0
for i in range(0, len(s)-8):
    slovo = s[i:i+9]
    if slovo == slovo[::-1]:
        count += 1
print(count)
'''
# Ответ:
# 202820


# № 5676 Вариант 09.01.23 (Уровень: Базовый)
# 1. Вычти 3
# 2. Найди целую часть от деления на 7

# Сколько существует программ, для которых при исходном числе 50 результатом является число 1?
'''
def F1(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F1(a-3, b) + F1(a // 7, b)

def F2(a, b):
    if a <= b:
        return a == b
    else:
        return F2(a-3, b) + F2(a // 7, b)

print(F2(50, 1))
'''
# Показать ответ: 6


# endregion Урок: **********************************************************


# todo: Стася = [1, 2, 3, 4, 5, 6, 7, 8, 9.2, 11, 12, 14+, 15, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# на прошлом уроке: Прорешивали новый вариант, успели решить: 25, 25, 23 номера
# на следующем уроке:

