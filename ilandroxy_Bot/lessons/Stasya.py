
# region Домашка

# Тип 6 № 47308
#В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 5 [Вперёд 8 Направо 60 Вперёд 8 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом.
# Точки на линии учитывать не следует.

'''
import turtle as t
t.left(90)
l = 40

for _ in range(5):
    t.forward(8 * l)
    t.right(60)
    t.forward(8 * l)
    t.right(120)

t.pu()
t.color('red')
for x in range(0, 9):
    for y in range(0, 15):
        t.goto(x * l,y * l)
        t.dot(6)

t.done()
'''
# Ответ: 48


# Тип 6 № 47246
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 14 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом.
# Точки на линии учитывать не следует.

'''
import turtle as t
t.left(90)
l = 30

for _ in range(4):
    t.forward(14 * l)
    t.right(120)

t.pu()
t.color('red')
for x in range(0, 15):
    for y in range(0, 15):
        t.goto(x * l,y * l)
        t.dot(6)

t.done()
'''
# Ответ: 78

# Тип 6 № 47303
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 5 Направо 90 Вперёд 10 Направо 90]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом.
# Точки на линии учитывать не следует.

'''
import turtle as t
t.left(90)
l = 40

for _ in range(4):
    t.forward(5 * l)
    t.right(90)
    t.forward(10 * l)
    t.right(90)

t.pu()
t.color('red')
for x in range(0, 11):
    for y in range(0, 7):
        t.goto(x * l,y * l)
        t.dot(6)

t.done()
'''
# Ответ: 36

# endregion Домашка


# region Урок


# Тип 6 № 47249
'''
# В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен.
#
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 6 [Вперёд 13 Направо 120]
#
# Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом.
# Точки на линии учитывать не следует.
import turtle as t
t.left(90)
t.speed(100)
t.color('red')
l = 30

t.begin_fill()
for _ in range(3):
    t.forward(13 * l)
    t.right(120)
t.end_fill()

canvas = t.getcanvas()
count = 0
for x in range(-100*l, 100*l, l):
    for y in range(-100*l, 100*l, l):
        z = canvas.find_overlapping(x,y,x,y)
        if len(z) == 1 and z[0] == 5:
            count += 1
print(count)

t.done()
'''
# Ответ: 66



# Теория строк
'''
s = '3456'
# i  0123

print(s[0], s[-1])

for x in s:
    print(x, end=' ')
print()

for i in range(0, len(s)):
    print(s[i], end=' ')
print()
'''

# Срезы
'''
s = '123456789'
print(s[2:6])  # крайний правый индекс не входит в диапазон
print(s[:6])
print(s[6:])
print(s[::2])  # вывели все элементы строки через одного
a = s[::-1]  # по сути говоря revers-нули строку (в обратном порядке)
print(a)

# Задача поменять цифру 5 на * в строке s
s = s[:4] + '*' + s[5:]
print(s)
'''


# Методы строк
'''
s = '121313121hdUSHUWHDndwjndw'
print(s.count('1'))

print(s.index('2'), s.rindex('2'))  # достали индексы первой и последней 2-ки

s = s.replace('1', '*')
print(s)

s = s.replace('*', '1', 3)
print(s)

s = s.lower()
print(s)

s = s.upper()
print(s)

ip = '123.32.45.232'
M = ip.split('.')  # разбил строку на список строк через точки
print(M)


r = ','.join(M)  # склеили список строк в одну строку
print(r)

M = [int(i) for i in input().split()]  # списочное выражение - ввели int список с клавиатуры
M = [int(i)**2 for i in input().split() if int(i) % 2 == 0]
print(M)
'''


# Тип 14 № 48376
'''
# Операнды арифметического выражения записаны в системе счисления с основанием 16:
#
# 8x834_16 + 44x27_16
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита шестнадцатеричной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 23.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 23 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in range(0, 16):
    A = [8, x, 8, 3, 4]
    a = 0
    A.reverse()
    for i in range(0, len(A)):
        a += A[i] * 16 ** i

    B = [4, 4, x, 2, 7]
    b = 0
    B.reverse()
    for i in range(0, len(B)):
        b += B[i] * 16 ** i

    if (a + b) % 23 == 0:
        print((a + b) // 23)
'''

# вариант 2
'''
Alphabet = '0123456789abcdef'
for x in Alphabet:
    A = f'8{x}834'
    B = f'44{x}27'

    a = int(A, 16)
    b = int(B, 16)

    if (a + b) % 23 == 0:
        print((a + b) // 23)


# вариант 3
for x in '0123456789abcdef':
    a = int(f'8{x}834', 16)
    b = int(f'44{x}27', 16)

    if (a + b) % 23 == 0:
        print((a + b) // 23)

'''

# Тип 14 № 48394
'''
# Операнды арифметического выражения записаны в системе счисления с основаниями 15 и 13:
#
# 4Cx4_15 + x62A_13
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита десятичной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 121.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 121 и укажите его в ответе в десятичной системе счисления.
# Основание системы счисления в ответе указывать не нужно.

for x in '0123456789abcde':
    a = int(f'4c{x}4', 15)
    b = int(f'{x}62a', 13)

    if (a + b) % 121 == 0:
        print((a + b) // 121)
        break
'''
# Ответ: 234


# Тип 8 № 19059
'''
# Все 4-буквенные слова, в составе которых могут быть буквы Н, О, Т, К, И, записаны в алфавитном порядке и пронумерованы, начиная с 1.
#
# Ниже приведено начало списка.
# 1.ИИИИ
# 2.ИИИК
# 3.ИИИН
# 4.ИИИО
# 5.ИИИТ
# 6.ИИКИ
#
# Под каким номером в списке идёт первое слово, которое начинается с буквы О?

s = 'ИКНОТ'
count = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                temp = a + b + c + d
                #if temp[0]
                if a == 'О':
                    print(count, temp)
                    exit()
                count += 1
'''
# Ответ: 376



# Тип 8 № 33478
'''
# Андрей составляет 6-буквенные коды из букв А, Н, Д, Р, Е, Й.
# Буква Й может использоваться в коде не более одного раза, при этом она не может стоять на первом месте, на последнем месте и рядом с буквой Е.
# Все остальные буквы могут встречаться произвольное количество раз или не встречаться совсем.
# Сколько различных кодов может составить Андрей?

count = 0
s = 'АНДРЕЙ'
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a + b + c + d + e + f
                        if temp.count('Й') == 1 or temp.count('Й') == 0:
                            if a != 'Й' and f != 'Й':
                                if 'ЙЕ' not in temp and 'ЕЙ' not in temp:
                                    print(temp)
                                    count += 1
print(count)
'''
# Ответ: 23625


# Тип 8 № 3699
'''
# Все 5-буквенные слова, составленные из букв Б, К, Ф, Ц, записаны в алфавитном порядке и пронумерованы.
# Вот начало списка:
# 1.БББББ
# 2.ББББК
# 3.ББББФ
# 4.ББББЦ
# 5.БББКБ

# Запишите слово, которое стоит на 239-м месте от начала списка.


s = 'БКФЦ'
M = []
count = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    M.append(temp)
                    if count == 239:
                        print(count, temp)
                    count += 1
print(M[239-1])  # так как список начинает свой счет с нуля
'''
# Ответ: БЦФЦФ


# endregion Урок


# todo: Стася = [2, 5, 6, 8, 14+], на следующем уроке: Добиваем 8 номер и разбираем 12