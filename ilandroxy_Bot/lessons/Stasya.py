
# region Домашка: **********************************************************

# № 5630 (Уровень: Средний)
# (М. Ишимов) Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
#
# Дана программа для Редактора:

# ПОКА нашлось(>1) ИЛИ нашлось(>3) ИЛИ нашлось(>2)
#    ЕСЛИ нашлось(>1)
#       ТО заменить(>1, 1>)
#    КОНЕЦ ЕСЛИ
#    ЕСЛИ нашлось(>3)
#       ТО заменить(>3, >2)
#    КОНЕЦ ЕСЛИ
#    ЕСЛИ нашлось(>2)
#       ТО заменить(>2, >1)
#    КОНЕЦ ЕСЛИ
# На вход приведённой выше программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 16 цифр «1», n цифр «2» и 16 цифр «3», расположенных в произвольном порядке.
#
# Определите наименьшее значение n, при котором сумма числовых значений цифр строки,
# получившейся в результате выполнения программы, является простым числом.
'''
def Prime(x):
    for j in range(2, x):
        if x % j == 0:
            return False
    return True


for n in range(1, 100):
    s = '>' + '1' * 16 + '2' * n + '3' * 16

    while '>1' in s or '>3' in s or '>2' in s:
        if '>1' in s:
            s = s.replace('>1', '1>', 1)
        if '>3' in s:
            s = s.replace('>3', '>2', 1)
        if '>2' in s:
            s = s.replace('>2', '>1', 1)

    summ = sum([int(i) for i in s if i.isdigit()])

    if Prime(summ):
        print(n)
        break
'''
# Показать ответ: 5


# endregion Домашка: **********************************************************


# region Урок: **********************************************************

#
# № 5640 (Уровень: Средний)
# (М. Ишимов) Исполнитель преобразует число на экране.

# A. Вычти 4
# B. Вычти сумму цифр числа
#
# Сколько существует программ, для которых при исходном числе 36 результатом является число 2,
# и при этом траектория вычислений содержит число 14?
'''
def MySum(x):
    summ = sum([int(i) for i in str(x)])
    return summ

def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a-4, b) + F(a - MySum(a), b)

print(F(36, 14) * F(14, 2))
'''
# Показать ответ: 7


# № 5642 (Уровень: Средний)
# (М. Ишимов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
#
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, больших 500 000,
# найдите 5 наименьших чисел у которых есть ровно три соответствующих маске *1?3 делителя.
#
# В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
# а во втором столбце – соответствующие им максимальные делители, не считая самого числа.
# Количество строк в таблице для ответа избыточно.
'''
import itertools
M = []
for l in range(0, 4+1):
    for s in itertools.product('0123456789', repeat=l):
        slovo = ''.join(s)
        for y in '0123456789':
            M.append(int(f'{slovo}1{y}3'))

def Divisors(x):
    divsors = set()
    count_mask = 0
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            divsors.add(j)
            divsors.add(x // j)
            if j in M:
                count_mask += 1
            if (x // j) in M:
                count_mask += 1
            if count_mask > 3:
                return sorted(divsors)
    return sorted(divsors), count_mask


count = 0
for x in range(500000+1, 10000000+1):
    divsors, count_mask = Divisors(x)
    if count_mask == 3:
        print(x, max(divsors))
        count += 1
        if count == 5:
            break
'''
# Показать ответ:
# 500786 250393
# 501963 167321
# 503006 251503
# 503217 167739
# 506142 253071





# endregion Урок: **********************************************************


# todo: Стася = [1, 2, 3, 4, 5, 6, 7, 8, 9.2, 11, 12, 14+, 15, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# на прошлом уроке: Посмотрели задания 12, 18, 22 из домашки и повторили решение 25 номеров с масками и делителями.
# на следующем уроке:

