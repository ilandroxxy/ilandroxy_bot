
# region Домашка: **********************************************************

# Тип 8 № 7986
# Сколько слов длины 5, начинающихся с согласной буквы и заканчивающихся гласной буквой, можно составить из букв З, И, М, А?
# Каждая буква может входить в слово несколько раз.
'''
count = 0
s = 'ЗИМА'
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if (temp[0] == 'З' or temp[0] == 'М') and (temp[3] == 'И' or temp[3] == 'А'):
                        print(temp)
                        count += 1
print(count)
# Ответ: 256
'''

# Тип 8 № 23908
# Вася составляет 5-буквенные слова, в которых есть только буквы В, О, Л, К, причём буква В используется в каждом слове ровно 1 раз.
# Каждая из других допустимых букв может встречаться в слове любое количество раз или не встречаться совсем.
# Словом считается любая допустимая последовательность букв, не обязательно осмысленная.
# Сколько существует таких слов, которые может написать Вася?
'''
count = 0
s = 'ВОЛК'
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('В') == 1:
                        print(temp)
                        count += 1
print(count)
# Ответ: 405
'''

# Тип 8 № 10384
# В качестве кодовых слов Алексей использует 4-буквенные слова, в которых есть только буквы A, B, C, D, X, причём буква X может появиться на первом месте или не появиться вовсе.
# Сколько различных кодовых слов может использовать Алексей?
'''
count = 0
s = 'ABCDX'
for a in s:
    for b in s:
        for c in s:
            for d in s:
                temp = a + b + c + d
                if (temp[0]  == 'X' or temp[0] != 'X') and temp[1] != 'X' and temp [2] != 'X' and temp[3] != 'X':
                    print(temp)
                    count += 1
print(count)
# Ответ: 320
'''

# Тип 12 № 29660
# Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 99 единиц?

# НАЧАЛО
# ПОКА нашлось (111)
# заменить (111, 22)
# заменить (222, 11)
# КОНЕЦ ПОКА
# КОНЕЦ
'''
s = '1' * 99
while '111' in s:
    s = s.replace('111', '22', 1)
    s = s.replace('222', '11', 1)
print(s)
# Ответ: 221
'''

# Тип 12 № 10290
# Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из цифры 1, за которой следуют 80 идущих подряд цифр 8?
#
# НАЧАЛО
# ПОКА нашлось (18) ИЛИ нашлось (288) ИЛИ нашлось (3888)
# ЕСЛИ нашлось (18)
# ТО заменить (18, 2)
# ИНАЧЕ ЕСЛИ нашлось (288)
# ТО заменить (288, 3)
# ИНАЧЕ заменить (3888, 1)
# КОНЕЦ ЕСЛИ
# КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
# КОНЕЦ
'''
s = '1' + '8' * 80
while '18' in s or '288' in s or '3888' in s:
    if '18' in s:
        s  = s.replace('18', '2', 1)
    if '288' in s:
        s = s.replace('288', '3', 1)
    else:
        s = s.replace('3888', '1', 1)
print(s)
# Ответ: 28
'''

# Тип 12 № 15799
# Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 100 единиц?
#
# НАЧАЛО
# ПОКА нашлось (111)
# заменить (11, 2)
# заменить (22, 1)
# КОНЕЦ ПОКА
# КОНЕЦ
'''
s = '1' * 100
while '111' in s:
    s = s.replace('11', '2', 1)
    s = s.replace('22', '1', 1)
print(s)
# Ответ: 211
'''

# endregion Домашка: **********************************************************


# region Урок: **********************************************************

'''
M = [1, 2, 3]
print(sum(M))
print(max(M))  # функции
print(len(M))

M.append(4)  # методы
M.reverse()
'''

# Функция подсчета факториала числа n!
'''
def Factorial(x):
    f = 1
    while x > 0:
        f *= x
        x -= 1
    return f

M = [1, 2, 3, 4, 5]
for x in M:
    print(Factorial(x))


def Simpler(x):
    for j in range(2, x):  # исключаю перебор 1 и самого числа
        if x % j == 0:
            return False
    return True

M = []
for i in range(2, 1000):
    if Simpler(i) == True:
        M.append(i)
print(M)
'''


# Тип 23 № 5064
'''
# У исполнителя Удвоитель-Утроитель три команды, которым присвоены номера:
# 1. прибавь 1
# 2. умножь на 2
# 3. умножь на 3.
# Сколько существует программ, которые число 1 преобразуют в число 13?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a + 1, b) + F(a * 2, b) + F(a * 3, b)

print(F(1, 13))
'''
# Ответ: 38




# Тип 23 № 40998
'''
# Исполнитель преобразует число на экране. У исполнителя есть три команды, которым присвоены номера:
#
# 1. Прибавить 1
# 2. Прибавить 2
# 3. Умножить на 3
#
# Сколько существует программ, которые преобразуют исходное число 1 в число 15, и при этом траектория вычислений содержит число 10?

def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a*3, b)

print(F(1, 10) * F(10, 15))
# Ответ 672
'''


# Тип 23 № 16898
'''
# Исполнитель РазДваТри преобразует число на экране.
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# 3. Прибавить 3
#
# Сколько существует программ, которые преобразуют исходное число 2 в число 14
# и при этом траектория вычислений не содержит чисел 5 и 10?


def F(a, b):
    if a > b or a == 5 or a == 10:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b) + F(a+3, b)

print(F(2, 14))
'''
# Ответ: 26



# Тип 23 № 27307
'''
# Исполнитель РазДва преобразует число на экране.
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
#
# Сколько существует программ, которые преобразуют исходное число 3 в число 62,
# и при этом траектория вычислений содержит число 14 и не содержит числа 59?

def F(a, b):
    if a > b or a == 59:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a*2, b)

print(F(3, 14) * F(14, 62))
'''
# Ответ: 48



# Тип 16 № 36029
'''
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(1) = 1;
# F(n) = n + F(n − 1), если n чётно;
# F(n) = 2*F(n − 2), если n > 1 и при этом нечётно.
#
# Чему равно значение функции F(24)?

def F(n):
    if n == 1:
        return 1
    if n % 2 == 0:
        return n + F(n - 1)
    if n > 1 and n % 2 != 0:
        return 2*F(n - 2)

print(F(24))
'''
# Ответ: 2072



# Тип 16 № 36871
'''
# Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
#
# F(0) = 0;
# F(n) = F(n / 2), если n > 0 и при этом чётно;
# F(n) = 1 + F(n − 1), если n нечётно.
#
# Сколько существует таких чисел n, что 1 ≤ n ≤ 1000 и F(n) = 3?

def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n - 1)


count = 0
for n in range(1, 1000+1):
    if F(n) == 3:
        count += 1
print(count)
'''
# Ответ: 120


# endregion Урок: **********************************************************


# todo: Стася = [2, 5, 6, 8, 12, 14+, 16, 23], на следующем уроке:  Разбираем 15 номера