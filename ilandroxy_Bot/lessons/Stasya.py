
# region Домашка: **********************************************************

# Тип 17 № 47221
# В файле содержится последовательность целых чисел. Элементы последовательности могут принимать целые значения от −10000 до 10000 включительно.
# Определите количество пар последовательности, в которых только одно число оканчивается на 3,
# а сумма квадратов элементов пары не меньше квадрата максимального элемента последовательности, оканчивающегося на 3.
# В ответе запишите два числа: сначала количество найденных пар, затем максимальную из сумм квадратов элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
M = [int(i) for i in open('17.txt')]

maxsumm = 0
count = 0
maxi = 0

for x in M:
    if abs(x) % 10 == 3:
        maxi = max(maxi, x)

for i in range(len(M)-1):
    if (abs(M[i]) % 10 == 3 and abs(M[i + 1]) % 10 != 3) or (abs(M[i]) % 10 != 3 and abs(M[i + 1]) % 10 == 3):
        if (M[i] ** 2 + M[i + 1] ** 2) >= (maxi ** 2):
            count += 1
            maxsumm = max(maxsumm, M[i]**2 + M[i+1]**2)
print(count, maxsumm)
'''
# Ответ:180 190360573


# Тип 17 № 47014
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых один из двух элементов делится на 5, а другой меньше среднего арифметического всех нечётных элементов последовательности.
# В ответе запишите два числа: сначала количество найденных пар, а затем — максимальную сумму элементов таких пар.
'''
M = [int(i) for i in open('17.txt')]

count = 0
summ = 0
for x in M:
    if x % 2 != 0:
        summ += x
        count += 1
sred = summ/count

kol = 0
maxi = 0
for i in range(0, len(M)- 1):
    if (M[i] % 5 == 0 and M[i+1] < sred) or (M[i] < sred and M[i+1] % 5 == 0):
        kol += 1
        maxi = max(maxi, M[i] + M[i+1])
print(kol, maxi)
Ответ: 1061 14847
'''

# endregion Домашка: **********************************************************


# region Урок: **********************************************************

# Тип 11 № 6298
# Для регистрации на сайте некоторой страны пользователю требуется придумать пароль. Длина пароля —
# ровно 9 символов. В качестве символов могут быть использованы десятичные цифры и 29 различных букв местного
# алфавита, причём все буквы используются в двух начертаниях: как строчные, так и прописные (регистр буквы имеет
# значение!). Под хранение каждого такого пароля на компьютере отводится одинаковое и минимально возможное целое
# количество байтов. При этом используется посимвольное кодирование, и все символы кодируются одинаковым и минимально
# возможным количеством битов. Определите объём памяти, который используется для хранения 20 паролей. (Ответ дайте в
# байтах.)
'''
symbols = 9
alphabet = 10 + 29 * 2
print(alphabet)  # 68
i = 7  # alphabet = 2 ** i
bit = symbols * i
byte = int(bit / 8) + 1
print(byte)
I = 8 * 20
print(I)
'''
# Ответ: 160


# Тип 11 № 10316 При регистрации в компьютерной системе каждому пользователю выдаётся пароль, состоящий из 20
# символов и содержащий только символы из 8-символьного набора: А, В, C, D, Е, F, G, H. В базе данных для хранения
# сведений о каждом пользователе отведено одинаковое минимально возможное целое число байт. При этом используют
# посимвольное кодирование паролей, все символы кодируют одинаковым минимально возможным количеством бит. Кроме
# собственно пароля для каждого пользователя в системе хранятся дополнительные сведения, для чего выделено целое
# число байт, одно и то же для всех пользователей.
#
# Для хранения сведений о 20 пользователях потребовалось 400 байт. Сколько байт выделено для хранения дополнительных
# сведений об одном пользователе? В ответе запишите только целое число — количество байт.
'''
symbols = 20
alphabet = 8
i = 3
bit = symbols * i
byte = int(bit / 8) + 1
print(byte)
I = (400 / 20) - byte
print(I)
'''

# № 6077 /dev/inf 02.2023 (Уровень: Средний)
# (А. Рогов) По каналу связи передаются трехзначные числа.
# Для каждой пары таких чисел строится контрольная сумма, необходимая для обнаружения ошибок при передаче.
# Контрольная сумма строится следующим образом:
#
# 1. записывается сумма разрядов сотен исходных чисел
# 2. справа дописывается сумма разрядов десятков исходных чисел
# 3. слева дописывается сумма разрядов единиц исходных чисел
# 4. контрольная сумма — это три цифры полученного числа: число тысяч, сотен и десятков.
#
# Пример: передаются числа 473 и 934.
# Сумма разрядов сотен равна 13, сумма разрядов десятков равна 10, сумма разрядов единиц 7.
# Получаем число 71310, контрольная сумма 131.
#
# Определите, при каком наибольшем значении первого числа пары контрольная сумма будет равна 002?
'''
R = []
for m in range(100, 1000):
    for n in range(100, 1000):
        M = [int(i) for i in str(m)]
        N = [int(i) for i in str(n)]
        a = M[0] + N[0]
        b = M[1] + N[1]
        c = M[2] + N[2]
        r = str(c) + str(a) + str(b)

        if int(r[-4:-1]) == 2:
            R.append(m)
print(max(R))
'''
# Показать ответ: 190



# № 5899 (Уровень: Сложный)
# (Д. Тараскин) Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам:
#
# 1) Из цифр, образующих десятичную запись N,строятся все возможные двузначные числа (числа не могут начинаться с нуля).
# 2) Из получившихся двузначных чисел выбираются только те, которые являются простыми.
#
# Каждую цифру трехзначного числа можно использовать ровно столько раз, сколько она встречается в этом числе.
# К примеру, возьмем число 123. Из него можно составить числа: 12, 13, 21, 31, 23, 32.
#
# Для какого наибольшего N количество выбранных простых чисел будет максимальным?

# Вариант 1
'''
def simpler(x):
    for j in range(2, x):
        if x % j == 0:
            return False
    return True


import itertools
maxi = 0
for n in range(100, 1000):
    M = [i for i in str(n)]
    A = [int(''.join(i)) for i in itertools.permutations(M, 2)]  # [(1, 2), (1, 3), (2, 1), (2, 3), (3, 1), (3, 2)]
    S = [i for i in A if all(i % j != 0 for j in range(2, i))]
    if maxi <= len(S):
        maxi = len(S)
        print(n)
'''

# Вариант 2
'''
import itertools
maxi = 0
for n in range(100, 1000):
    M = [i for i in str(n)]
    A = [int(''.join(i)) for i in itertools.permutations(M, 2)]  # [(1, 2), (1, 3), (2, 1), (2, 3), (3, 1), (3, 2)]
    S = [i for i in A if all(i % j != 0 for j in range(2, i))]
    if maxi <= len(S):
        maxi = len(S)
        print(n,)
'''
# Показать ответ: 731


# № 5589 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если количество разрядов в числе чётное, тогда в центр записи числа дописывается 111.
# б) если количество разрядов в числе нечётное, тогда к этой записи справа дописывается 1,
# а затем два левых разряда заменяются на 11.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
#
# Например, для исходного числа 510 = 1012 результатом является число 11112 = 1510, а для исходного числа 810 = 10002
# результатом является число 10111002 = 9210.
#
# Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число R, большее 4000.
# В ответе запишите это  число в десятичной системе счисления.
'''
for n in range(8, 1000):
    s = bin(n)[2:]
    if len(s) % 2 == 0:
        s = s[:len(s)//2] + '111' + s[len(s)//2:]
    else:
        s = '11' + s[2:] + '1'
    r = int(s, 2)
    if r > 4000:
        print(n)
        break
'''
# Показать ответ: 512

print(bin.__doc__)
print(hex.__doc__)

# endregion Урок: **********************************************************


# todo: Стася = [1, 2, 3, 4, 5, 6, 7, 8, 9.2, 12, 14+, 15, 16, 17, 18, 19-21, 22, 23, 24, 25.2]
# на прошлом уроке: Прорешивали 5 номера КЕГЭ среднего уровня
# на следующем уроке:

