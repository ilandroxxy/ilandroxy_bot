# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

#
# № 5723 (Уровень: Средний)
# На вход алгоритма подаётся натуральное число N меньшее 1000. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
#
# а) если сумма цифр в двоичной записи числа чётная, то к этой записи слева дописывается 10, а иначе – 11;
#
# б) если сумма цифр числа, получившегося в пункте а),
# в двоичной записи числа нечётная, то к этой записи справа дописывается 11, а иначе – 00.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
#
# Укажите количество чисел R, меньших 860, которые могут быть получены при обработке числа N.
'''
count = 0
for n in range(1, 1000):
    s = bin(n)[2:]

    # if sum([int(i) for i in s]) % 2 == 0:
    if s.count('1') % 2 == 0:
        s = '10' + s
    else:
        s = '11' + s

    if s.count('1') % 2 != 0:
        s = s + '11'
    else:
        s = s + '00'

    r = int(s, 2)  # перевод строки s из двоичной записи в 10-ную

    if r < 860:
        count += 1

print(count)
'''
# Показать ответ: 47



# № 6063 (Уровень: Средний)
# Черепахе был дан для исполнения следующий алгоритм:

# Повтори 4 [Вперед 15 Направо 90]
# Повтори 4 [Вперед 10 Направо 90]
# Повтори 4 [Вперед 5 Направо 90]

# Необходимо посчитать количество прямых линий, нарисованных черепахой.
# Прямой линией считать отрезок, состоящий из максимального количества звеньев ломанной, лежащих на одной прямой.
'''
import turtle as t
t.left(90)
t.speed(10)
l = 20

for _ in range(4):
    t.forward(15 * l)
    t.right(90)
for _ in range(4):
    t.forward(10 * l)
    t.right(90)
for _ in range(4):
    t.forward(5 * l)
    t.right(90)

t.done()
'''
# Показать ответ: 8


# № 1950 (Уровень: Базовый)
# (И. Женецкий) Абдурахман составляет 8-буквенные слова из букв П, И, Т, О, Н, Я, Г, А,
# причём гласная буква не может стоять в начале слова, а также рядом с гласной буквой.
# Буквы в слове могут повторяться. Сколько таких слов может составить Абдурахман?
'''
import itertools
count = 0
M = []
for s in itertools.product('ИОЯА', repeat = 2):
    pair = ''.join(s)
    M.append(pair)
print(M)
for s in itertools.product('ПИТОНЯГА', repeat=8):  # ('Т', 'П', 'П', 'П', 'Г', 'И', 'А', 'Я')
    slovo = ''.join(s)
    if slovo[0] not in 'ИОЯА':
        if all(x not in slovo for x in M):  # каждой такой пары в слове быть не может
            count += 1
print(count)
'''
# Показать ответ: 2228224


# № 5707 (Уровень: Средний)
# В каждой строке электронной таблицы содержится 6 натуральных чисел.
# Необходимо найти количество строк, где сумма квадратов трёх минимальных чисел больше произведения трёх максимальных.
'''
count = 0
for s in open('9.txt'):
    M = sorted([int(i) for i in s.split()])
    summ = M[0] ** 2 + M[1] ** 2 + M[2] ** 2  # сумма квадратов трёх минимальных чисел
    proz = M[3] * M[4] * M[5]  # больше произведения трёх максимальных
    if summ > proz:
        count += 1
print(count)
'''
# Ответ: 0


# № 6066 (Уровень: Средний) (А. Игнатюк)
# Какое количество вариантов строки можно получить при выходе из Фиксика,
# если использовать четыре 1, три 3 и две 2 на входе.
#
# НАЧАЛО
#    ПОКА нашлось (133) ИЛИ нашлось (221) ИЛИ нашлось (23)
#       ЕСЛИ нашлось (133)
#          ТО заменить (133, 1)
#       КОНЕЦ ЕСЛИ
#       ЕСЛИ нашлось (221)
#          ТО заменить (221, 31)
#       КОНЕЦ ЕСЛИ
#       ЕСЛИ нашлось (23)
#          ТО заменить (23, 21)
#       КОНЕЦ ЕСЛИ
#    КОНЕЦ ПОКА
# КОНЕЦ
'''
import itertools
my_set = set()
for s in itertools.permutations('1' * 4 + '3' * 3 + '2' * 2, 9):
    s = ''.join(s)

    while '133' in s or '221' in s or '23' in s:
        if '133' in s:
            s = s.replace('133', '1', 1)
        if '221' in s:
            s = s.replace('221', '31', 1)
        if '23' in s:
            s = s.replace('23', '21', 1)

    my_set.add(s)
print(len(my_set))
'''
# Показать ответ: 640


# № 4802 (Уровень: Средний)
# Операнды арифметического выражения записаны в системе счисления с основанием 12.
#
# Пусть T = 4Ax_12 + y1B23_12
#
# В записи чисел переменными x и y обозначены неизвестные цифры из алфавита 12-ричной системы счисления.
# Причём известно, что x кратно 9, а y больше двух.
#
# Определите наименьшее значение выражения 2*(x+y), при котором значение арифметического выражения T кратно 6.
# Укажите его в ответе в десятичной системе счисления.
'''
for x in '0123456789AB':
    for y in '0123456789AB':
        if int(x, 12) % 9 == 0 and int(y, 12) > 2:  # Причём известно, что x кратно 9, а y больше двух
            T = int(f'4A{x}', 12) + int(f'{y}1B23', 12)
            if T % 6 == 0:
                print(2 * (int(x, 12) + int(y, 12)))
'''
# Показать ответ: 24


# № 6059 (Уровень: Базовый)
# (А. Игнатюк) В файле представлена последовательность чисел от 0 от 10000 включительно.
# Необходимо определить количество пар, где имеется два четных натуральных числа с наибольшим общими делителем,
# превышающим число 100, и указать наибольшую возможную разность между числами в паре.
# Известно, что парой принято называть два стоящих подряд числа.

# НОД(24, 48) =  24
'''
from math import gcd
M = [int(i) for i in open('17.txt')]
count = 0
maxi = 0
for i in range(0, len(M)-1):
    if M[i] % 2 == 0 and M[i+1] % 2 == 0:  # где имеется два четных натуральных числа
        if gcd(M[i], M[i+1]) > 100:  # с наибольшим общими делителем, превышающим число 100
            count += 1
            maxi = max(maxi, abs(M[i] - M[i+1]))
print(count, maxi)
'''
# Ответ: 27 7952 (опечатка в КЕГЭ)


# endregion Урок: ******************************************************************************


# todo: Иван = [2, 3, 6, 8, 10, 12, 13, 14+, 15+, 16, 17, 19-21, 23]
# на прошлом уроке: Разбирали вариант Джобса от 21.03.2023, номера: 5, 6, 8, 9, 12, 14, 17
# на следующем уроке: