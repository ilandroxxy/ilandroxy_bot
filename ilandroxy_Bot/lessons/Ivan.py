# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R следующим образом:
# 1) Если исходное число кратно 4, оно делится на 2, иначе из него вычитается 1.
# 2) Если полученное на предыдущем шаге число кратно 5, оно делится на 5, иначе из него вычитается 1.
# 3) Если полученное на предыдущем шаге число кратно 3, оно делится на 3, иначе из него вычитается 1.
# 4) Число, полученное на шаге 3, считается результатом работы алгоритма.
# Сколько существует различных натуральных чисел N, при обработке которых получится R = 3?
'''
R = set()
for n in range(2, 1000):
    temp = n

    if n % 4 == 0:   # 1)
        n //= 2
    else:
        n -= 1

    if n % 5 == 0:  # 2)
        n //= 5
    else:
        n -= 1

    if n % 3 == 0:  # 3)
        n //= 3
    else:
        n -= 1

    if n == 3:
        R.add(temp)

print(len(R), R)
'''
# Ответ: 3


# номер 23

# Прибавить 1
# Умножить на 2
# Умножить на 3

# Сколько существует таких программ, которые преобразуют исходное число 2 в число 40
# и при этом траектория вычислений программы содержит число 13 и не содержит число 17?
'''
def F(x,y):
    if x > y:
        return 0
    if x == y:
        return 1
    if x == 17:
        return 0
    return F(x+1, y)+F(x*2, y)+F(x*3, y)
print(F(2,13)*F(13,40))


def F(x,y):
    if x >= y or x == 17:
        return x == y
    return F(x+1, y)+F(x*2, y)+F(x*3, y)
print(F(2,13)*F(13,40))
'''
# Ответ: 75


# Номер 12
# Дана программа для Редактора:
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)
#    заменить (>1, 22>3)
#    заменить (>2, 33>)
#    заменить (>3, 11>2)
# КОНЕЦ ПОКА

# На вход приведённой ниже программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 20 цифр 1, 20 цифр 2 и 10 цифр 3, расположенных в произвольном порядке.

# Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.

'''
s = '>' + '1' * 20 + '2' * 20 + '3' * 10
while '>1' in s or '>2' in s or '>3' in s:
    s = s.replace('>1', '22>3', 1)
    s = s.replace('>2', '33>', 1)
    s = s.replace('>3', '11>2', 1)
print(s)

# Вараинт 1
print(s.count('1') + s.count('2') * 2 + s.count('3') * 3)

# Вариант 2
print(sum([int(i) for i in s[:-1]]))

# Вариант 3
s = s.replace('>',  '')
print(sum([int(i) for i in s]))
'''
# Ответ: 440


# Ваня составляет 6-буквенные коды перестановкой букв слова ФОКСИК.
# При этом нельзя ставить рядом две гласные. Сколько различных кодов может составить Ваня?
'''
s = "ФОКСИК"
k = set()
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        temp = a+b+c+d+e+f
                        if len(set(temp)) == 5 and temp.count('К') == 2:
                            if 'ОИ' not in temp and 'ИО' not in temp and 'ОО' not in temp and 'ИИ' not in temp:
                                print(temp)
                                k.add(temp)
print(len(k)) 
'''
# Ответ: 240

# Все 4-буквенные слова, составленные из букв Ф, О, К, С записаны в алфавитном порядке.
# Вот начало списка:
# 1. КККК
# 2. КККО
# 3. КККС
# 4. КККФ
# 5. ККОК
# ……
# Запишите номер слова ФОКС
'''
s = sorted("ФОКС")
k = 1
for a in s:
    for b in s:
        for c in s:
            for d in s:
                temp = a+b+c+d
                if temp == 'ФОКС':
                    print(k, temp)
                k += 1
s = sorted(['Ф','О','К','С'])


k = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                temp = a+b+c+d
                k += 1
                if temp == 'ФОКС':
                    print(k, temp)
'''
# Ответ: 211


# В файле электронной таблицы представлены результаты ежечасного измерения температуры воздуха на протяжении
# трёх месяцев. Определите величину самого большого повышения среднесуточной температуры
# между двумя соседними сутками (т.е. на сколько больше среднесуточная температура в текущий
# день по сравнению с предыдущим).
# Ответ округлите до целого числа.

R = []
for s in open('9.txt'):
    M = [float(i) for i in s.replace(',', '.').split()]
    sred = sum(M) / len(M)
    R.append(sred)
print(R)

B = []
for i in range(0, len(R)-1):
    B.append(abs(R[i] - R[i+1]))
print(max(B))

# Ответ: 9


# endregion Урок: ******************************************************************************


# todo: Иван = [2, 3, 6, 8, 10, 12, 13, 14+, 15+, 16, 17, 19-21, 23]
# на прошлом уроке:  Проводили сразу два урока. Прорешивали Досрочнй вариант 2 волны, успели решить номера: 5, 8, 12, 14, 15, 16, 23, 17, 9
# на следующем уроке: