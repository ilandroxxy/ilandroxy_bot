# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

# Тип 12 № 29660 i
# Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 99 единиц?
#
# НАЧАЛО
#     ПОКА нашлось (111)
#         заменить (111, 22)
#         заменить (222, 11)
#     КОНЕЦ ПОКА
# КОНЕЦ
'''
s = '1' * 99
while '111' in s:
    s = s.replace('111', '22', 1)
    s = s.replace('222', '11', 1)
print(s)
'''
# Ответ: 221


# Тип 12 № 33184
# Дана программа для редактора:
#

# НАЧАЛО
#     ПОКА нашлось (111)
#         заменить (111, 22)
#         заменить (222, 11)
#     КОНЕЦ ПОКА
# КОНЕЦ
#
# Известно, что исходная строка содержала более 100 единиц и не содержала других цифр.
# Укажите минимально возможную длину исходной строки, при которой в результате работы этой программы получится строка,
# содержащая минимально возможное количество единиц.
'''
mini = 99999
for n in range(100+1, 1000):
    s = '1' * n
    while '111' in s:
        s = s.replace('111', '22', 1)
        s = s.replace('222', '11', 1)
    if mini > s.count('1'):
        mini = s.count('1')
        print(n, s)
'''
# Ответ: 104


# Тип 12 № 25844
# На вход приведённой ниже программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 11 цифр 1, 12 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.
# Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.
#
# НАЧАЛО
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)
#     ЕСЛИ нашлось (>1)
#         ТО заменить (>1, 22>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>2)
#         ТО заменить (>2, 2>)
#     КОНЕЦ ЕСЛИ
#     ЕСЛИ нашлось (>3)
#         ТО заменить (>3, 1>)
#     КОНЕЦ ЕСЛИ
# КОНЕЦ ПОКА
# КОНЕЦ
'''
s = '>' + '1' * 11 + '2' * 12 + '3' * 30
while '>1' in s or '>2' in s or '>3' in s:
    if '>1' in s:
        s = s.replace('>1', '22>', 1)
    if '>2' in s:
        s = s.replace('>2', '2>', 1)
    if '>3' in s:
        s = s.replace('>3', '1>', 1)
print(s)

summ1 = 0
for x in s[:-1]:
    summ1 += int(x)
print(summ1)

print(sum([int(i) for i in s[:-1]]))

print(s.count('1') + s.count('2') * 2)
'''
# Ответ: 98


# Тип 12 № 35986 i
# Дана программа для редактора:
#
# НАЧАЛО
#     ПОКА НЕ нашлось (00)
#         заменить (01, 210)
#         заменить (02, 320)
#         заменить (03, 3012)
#     КОНЕЦ ПОКА
# КОНЕЦ
#

# Известно, что исходная строка начиналась с нуля и заканчивалась нулём,
# а между ними содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка, содержащая 23 единицы, 48 двоек и 41 тройку.
# Сколько цифр было в исходной строке?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '3' * z + '1' * x + '2' * y + '0'  # 2 + x + y + z

            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '320', 1)
                s = s.replace('03', '3012', 1)
            if s.count('1') == 23 and s.count('2') == 48 and s.count('3') == 41:  # содержащая 23 единицы, 48 двоек и 41 тройку.
                print(2 + x + y + z)
'''
# Ответ: 34


# Тип 12 № 28550
# Дана программа для Редактора:
#
# НАЧАЛО
# ПОКА нашлось (21)
#   заменить (21, 5)
# КОНЕЦ ПОКА
# КОНЕЦ

# Исходная строка содержит десять единиц и некоторое количество двоек,
# других цифр нет, точный порядок расположения единиц и двоек неизвестен.
# После выполнения программы получилась строка с суммой цифр 34.
# Какое наименьшее количество двоек могло быть в исходной строке?
'''
import itertools
for l in range(1, 10):
    for s in itertools.product('12', repeat=10+l):
        if s.count('1') == 10:
            s = ''.join(s)

            while '21' in s:
                s = s.replace('21', '5', 1)

            summ = sum([int(i) for i in s])
            if summ == 34:
                print(l)
                exit()
'''
# Ответ: 6


#
# № 1120 (Уровень: Средний)
# При каком наименьшем натуральном значении переменной x двоичная запись выражения
# 4**2015 + 2**x – 2**2015 + 15 содержит ровно 500 единиц?
'''
for x in range(1, 10000):
    n = 4 ** 2015 + 2 ** x - 2 ** 2015 + 15
    s = bin(n)[2:]
    if s.count('1') == 500:
        print(x)
        break
'''
# Ответ: 2510


#
# № 5952 (Уровень: Средний)
# (П. Волгин) Операнды арифметического выражения записаны в системах счисления с основанием 16:
#
# 10xА_16 + FFx78_16
#
# В записи чисел переменной x обозначена неизвестная цифра из алфавита 16-ричной системы счисления.
# Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 19.
# Для найденного значения x вычислите частное от деления значения арифметического выражения на 19
# и укажите его в ответе в десятичной системе счисления. Основание системы счисления в ответе указывать не нужно.
'''
for x in '0123456789ABCDEF':
    A = int(f'10{x}A', 16)  # перевод из 16-ной в 10-ную
    B = int(f'FF{x}78', 16)
    if (A + B) % 19 == 0:
        print((A + B) // 19)
        exit()
'''
# Показать ответ: 55238

'''
def F(n, r):
    if n == 0:
        return 2 * r
    else:
        return F(n//10, r*10 + n % 10)

for n in range(1, 1000000):
    if F(n, 0) == 628648:
        print(n)
        break
 '''
# Ответ: 423413

# endregion Урок: ******************************************************************************


# todo: Иван = [2, 3, 6, 8, 10, 12, 13, 14+, 15+, 16, 17, 19-21, 23]
# на прошлом уроке: Сам прорешивал вариант с апробации, решил номера: 6, 9, 10, 13, 14, 16
# на следующем уроке: