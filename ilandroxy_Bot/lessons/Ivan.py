
# Тип 2 № 15124
"""
# Логическая функция F задаётся выражением (x ≡ y ) ∨ ((y ∨ z) → x).
#
# Дан частично заполненный фрагмент, содержащий неповторяющиеся строки таблицы истинности функции F.
#
# Определите, какому столбцу таблицы истинности соответствует каждая из переменных x, y, z.

M = [1, 2, 3]
#    0  1  2

# for x in range(2):  # [0, 2) -> 0 1
# for x in range(2, 10):  # [2, 10) -> 0 1

print('x y z')
for x in range(2):
    for y in range(2):
        for z in range(2):
            F = (x == y) or ((y or z) <= x)
            if F == False:
                print(x, y, z, F)
"""

# Тип 2 № 33081
""" 
# Логическая функция F задаётся выражением (x ∨ ¬z) ∧ (x ≡ ¬w) ∧ (x → y).
# На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий неповторяющиеся строки.
# Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных x, y, z, w.

print('x y z w')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                F = (x or (not(z))) and (x == (not(w))) and (x <= y)
                if F == True:
                    print(x, y, z, w,  F)
"""


# Тип 14 № 9367
"""
# Значение арифметического выражения: 9**8 + 3**5 – 9 – записали в системе счисления с основанием 3.
# Сколько цифр «2» содержится в этой записи?

x = 9**8 + 3**5 - 9
M = []
while x > 0:
    M.append(x % 3)
    x //= 3
M.reverse()
print(M, M.count(2))
"""
# Ответ: 3


# Тип 14 № 38948
"""
# Значение выражения 4**36 + 3*4**20 + 4**15 + 2*4**7 + 49 записали в системе счисления с основанием 16.
# Сколько разных цифр встречается в этой записи?
x = 4**36 + 3*4**20 + 4**15 + 2*4**7 + 49
M = []
while x > 0:
    M.append(x % 16)
    x //= 16
M.reverse()
print(M)

A = []
for i in M:
    if i not in A:
        A.append(i)
print(A, len(A))

A = set(M)  # множество
print(A, len(A))
"""


# Тип 14 № 47011
'''
# Значение выражения 3*343**8 + 5*49**12 + 7**15 - 49 записали
# в системе счисления с основанием 7 без незначащих нулей.
# Какая цифра чаще всего встречается в этой записи?

x = 3*343**8 + 5*49**12 + 7**15 - 49
M = []
while x > 0:
    M.append(x % 7)
    x //= 7
M.reverse()
print(M)

A = {}
for i in M:
    A[i] = M.count(i)
print(A)
'''
# Ответ: 6


# Тип 5 № 45239
'''
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#
# 1. Строится двоичная запись числа N.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число чётное, то к двоичной записи числа слева дописывается 10;
# б) если число нечётное, то к двоичной записи числа слева дописывается 1 и справа дописывается 01.
#
# Полученная таким образом запись является двоичной записью искомого числа R.
# Например, для исходного числа 410=1002 результатом будет являться число 2010=101002, а
# для исходного числа 510=1012 результатом будет являться число 5310=1101012.
#
# Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число R, большее, чем 441.
# В ответе запишите это число в десятичной системе счисления.

for n in range(1, 1000):
    x = n

    M = []
    while x > 0:
        M.append(x % 2)  # # 1. Строится двоичная запись числа N.
        x //= 2
    M.reverse()

    if n % 2 == 0:
        M.append(1)
        M.append(0)
    else:
        M.append(0)
        M.append(1)
        M.reverse()
        M.append(1)
        M.reverse()
        
    R = 0
    M.reverse()
    for i in range(0, len(M)):
        R += M[i] * 2 ** i

    if R > 441:
        print(n)
        break
'''


# Тип 5 № 9190
"""
# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
#
# 1. Складываются первая и вторая, а также вторая и третья цифры исходного числа.
# 2. Полученные два числа записываются друг за другом в порядке возрастания (без разделителей).
#
# Пример. Исходное число: 843. Суммы: 8 + 4 = 12; 4 + 3 = 7. Результат: 712.
# Сколько существует чисел, в результате обработки которых автомат выдаст число 1216?

count = 0
for x in range(100, 1000):  # [100, 999]
    s = str(x)
    a = int(s[0]) + int(s[1])
    b = int(s[1]) + int(s[2])
    res = str(min(a, b)) + str(max(a, b))

    if res == '1216':
        count += 1
print(count)
"""








