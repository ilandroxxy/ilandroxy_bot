# region Домашка: ******************************************************************************

# Все 5-буквенные слова, составленные из букв С, Л, О, Н записаны в алфавитном порядке и пронумерованы.
'''
#Вот начало списка:
#1.ЛЛЛЛЛ
#2.ЛЛЛЛН
#3.ЛЛЛЛО
#4.ЛЛЛЛС
#5.ЛЛЛНЛ

#Запишите слово, которое стоит под номером 1020.

a = {0: "Л", 1: "Н", 2: "О", 3: "С"}
k = 0
for i in range(0, len(a)):
    for j in range(0, len(a)):
        for g in range(0, len(a)):
            for m in range(0, len(a)):
                for n in range(0, len(a)):
                    k += 1
                    if k == 1020:
                        print(a[i], a[j], a[g], a[m], a[n], end=" ")



s = sorted(['С', "Л", "О", "Н"])
k = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    k += 1
                    if k == 1020:
                        print(a + b + c + d + e)
'''
# Ответ: СССОС


# Сколько слов длины 5, начинающихся с гласной буквы, можно составить из букв Е, Г, Э?
# Каждая буква может входить в слово несколько раз.
# Слова не обязательно должны быть осмысленными словами русского языка.


# 2*3*3*3*3 = 162
# Ответ:162


# Тип 8 № 10500
'''
# Шифр кодового замка представляет собой последовательность из пяти символов,
# каждый из которых является цифрой от 1 до 5. Сколько различных вариантов шифра можно задать,
# если известно, что цифра 1 встречается ровно три раза, а каждая из других допустимых цифр может встречаться в шифре любое количество
# раз или не встречаться совсем?

s = '12345'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('1') == 3:
                        count += 1
print(count)
'''


# Тип 12 № 11243

'''
s = '1' + '9' * 98
while ('19' in s) or ('299' in s) or ('3999' in s):
    s = s.replace('19', '2', 1)
    s = s.replace('299', '3', 1)
    s = s.replace('3999', '1', 1)
print(s)
'''

# Тип 12 № 11270
'''
s = '1'+'9'*100
while ('19' in s) or ('299' in s) or ('3999' in s):
    s = s.replace('19', '2', 1)
    s = s.replace('299', '3', 1)
    s = s.replace('3999', '1', 1)
print(s)

'''
# Тип 23 № 6430
'''
def f(x, y):
    if x > y:
        return 0
    if x == y:
        return 1
    else:
        return f(x + 1, y) + f(x * 2, y)
print(f(1, 20))

'''

# Тип 23 № 13498
'''
def f(x, y):
    if x > y:
        return 0
    if x == y:
        return 1
    else:
        return f(x + 1, y) + f(x + 3, y)
print(f(1, 9) * f(9, 17))
'''
# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************



# Тип 16 № 4657
'''
# Алгоритм вычисления значения функции F(n) и G(n), где n – натуральное число, задан следующими соотношениями:
#
# F(1) = 1
# F(n) = 2 * G(n–1) + 5 * n, при n >1
#
# G(1) = 1
# G(n) = F(n–1) + 2 * n, при n >1
#
# Чему равно значение функции F(4) + G(4)?
#
# В ответе запишите только натуральное число.

def F(n):
    if n == 1:  # F(1) = 1
        return 1
    if n > 1:  # F(n) = 2 * G(n–1) + 5 * n, при n >1
        return 2 * G(n - 1) + 5 * n

def G(n):
    if n == 1:  # G(1) = 1
        return 1
    if n > 1:   # G(n) = F(n–1) + 2 * n, при n >1
        return F(n - 1) + 2 * n

print(F(4) + G(4))
'''
# Ответ: 89


# Тип 16 № 47220
'''
# Алгоритм вычисления значения функции F(n), где n — натуральное число, задан следующими соотношениями:
#
# F(n)=1 при n=1;
# F(n) = n·F(n−1), если n>1.
#
# Чему равно значение выражения F(2023) / F(2020)?

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n - 1)

# print( F(2023) / F(2020))
print(2021 * 2022 * 2023)
'''
# Ответ: 8266912626



# Тип 7 № 13620
# Производится звукозапись музыкального фрагмента в формате стерео (двухканальная запись) с частотой дискретизации 32 кГц и 32-битным разрешением.
# Результаты записываются в файл, сжатие данных не производится; размер полученного файла – 64 Мбайт.
# Затем производится повторная запись этого же фрагмента в формате моно (одноканальная запись) с частотой дискретизации 16 кГц и 16-битным разрешением. Сжатие данных не производилось.
# Укажите размер файла в Мбайт, полученного при повторной записи. В ответе запишите только целое число, единицу измерения писать не нужно.

# I = a * b * c * t

t = (64*2**23) / (2 * 32000 * 32)
t = int(t)
I2 = (1 * 16000 * 16 * t) / (2**23)
print(I2)

# 1 Мбайт = 2**10 Кбайт = 2**20 Байт = 2**23 бит



# Тип 11 № 15135
'''
# При регистрации в компьютерной системе для каждого пользователя формируется индивидуальный идентификатор, состоящий из 12 символов.
# Для построения идентификатора используют только заглавные латинские буквы (26 букв).
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое минимально возможное целое число байт.
# При этом используют посимвольное кодирование идентификаторов, все символы кодируют одинаковым минимально возможным количеством бит.
# Кроме идентификатора для каждого пользователя в системе хранятся дополнительные сведения, для чего выделено одинаковое целое количество
# байт на каждого пользователя. Для хранения информации о 20 пользователях потребовалось 600 байт.
# Сколько байт выделено для хранения дополнительных сведений об одном пользователе?
# В ответе запишите только целое число — количество байт.

symbols = 12
alphabet = 26
# alphabet = 2 ** i  2**4 == 16 < 26 < 2**5 == 32
i = 5
I_bit = symbols * i
print(I_bit)
I_byte = I_bit / 8
print(I_byte)  # 7 < 7.5 < 8  -> I_bute = 8
I_byte = 8
I = 600 / 20
print(I)

print(30 - 8)
'''
# Ответ: 22

# Тип 11 № 14699
# При регистрации в компьютерной системе для каждого пользователя формируется индивидуальный идентификатор, состоящий из 14 символов.
# Для построения идентификатора используют только латинские буквы (26 заглавных и 26 строчных букв).
# В базе данных для хранения сведений о каждом пользователе отведено одинаковое минимально возможное целое число байт.
# При этом используют посимвольное кодирование идентификаторов, все символы кодируют одинаковым минимально возможным количеством бит.
# Кроме идентификатора для каждого пользователя в системе хранятся дополнительные сведения, для чего выделено 19 байт на каждого пользователя.
#
# Сколько байт нужно для хранения сведений о 25 пользователях? В ответе запишите только целое число – количество байт.


symbols = 14
alphabet = 52
i = 6

I_bit = symbols * i
print(I_bit)

I_byte = I_bit / 8
print(I_byte)
I_byte = 11

I = 19 + 11

print(25 * I)

# Ответ: 750






# endregion Урок: ******************************************************************************


# todo: Иван = [2, 8, 10, 12, 13, 14, 16, 23], на следующем уроке: Разбираем 15 номера, фулл стак
