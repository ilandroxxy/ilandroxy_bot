# region Домашка: ******************************************************************************


# endregion Домашка: ******************************************************************************


# region Урок: ******************************************************************************

'''
from turtle import *

k = 10
speed(100)
dot(3, 'red')
up()
forward(30*k)
right(90)
forward(10*k)
right(30)
down()
for i in range(10):
    forward(25*k)
    right(90)

up()

for x in range(-5, 30):
    for y in range(-32, 5):
        goto(x*k, y*k)
        dot(3, 'red')
done()
'''


# Вариант 2
'''
from turtle import *

k = 10
speed(10)

up()
forward(30*k)
right(90)
forward(10*k)
right(30)
down()
begin_fill()
for i in range(4):
    forward(25*k)
    right(90)
end_fill()
up()


canvas = getcanvas()
count = 0
for x in range(-1000*k, 1000*k, k):
    for y in range(-1000*k, 1000*k, k):
        item = canvas.find_overlapping(x, y, x, y)
        if len(item) == 1 and item[0] == 5:
            count += 1
print(count)
done()
'''


'''
def F(n):
    if n < 3:
        return n
    if n > 2 and n % 2 == 0:
        return 2*(n-1)+F(n-1)+2
    if n > 2 and n % 2 != 0:
        return 2*(n+1)+F(n-2)-5
print(F(32))
'''
# Ответ: 530

'''
print("w x y z F")
for w in range(2):
    for x in range(2):
        for y in range(2):
            for z in range(2):
                F = x and (y <= z) and ((not y) <= ((not z) == w))
                print(w, x, y, z, F)
'''
#Отввет: xzyw


# номер 14
'''
x = 4 * 25**2022 - 2*5**2000 + 125**1011-3*5**100-660

M = []

while x > 0:
    M.append(x % 5)
    x //= 5
M.reverse()
print(M.count(4))
'''
#Отввет: 3028


"""
def F(x,A):
    return((x % 13 == 0) <= (x % 21 != 0)) or (x + A >= 500)

M = []
for A in range(1,1000):
    flag = True
    for x in range(1,1000):
        if F(x,A) == False:
            flag = False
            break
    if flag == True:
        print(A)
        break
# Ответ: 227
"""
'''
def F(x):
    return ((x % 13 == 0) <= (x % 21 != 0)) or (x + A >= 500)

for A in range(1, 1000):
    if all(F(x) for x in range(1, 1000)):
        print(A)
        break
'''
# Ответ: 227

# Номер 8
# Определите количество пятизначных чисел, записанных в восьмеричной системе счисления,
# в записи которых ровно две цифры 4, и при этом никакая нечётная цифра не стоит рядом с цифрой 4
'''
s = '01234567'
nope = ['14', '34', '54', '74', '41', '43', '45', '47']
count = 0
for a in '1234567':
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    temp = a + b + c + d + e
                    if temp.count('4') == 2:
                        flag = True
                        for x in nope:
                            if x in temp:
                                flag = False
                        if flag == True:
                            print(temp)
                            count += 1
print(count)
'''
# Ответ: 612

# Номер 12
# Какая строка получится в результате применения приведённой ниже программы к строке,
# состоящей из двух двоек, 2023 идущих подряд цифр 1 и опять двух двоек?
# В ответе запишите полученную строку.

#     ПОКА нашлось (211) ИЛИ нашлось (112)
#         заменить (11, 1)
#         ЕСЛИ нашлось (21)
#             ТО заменить (21, 12)
#         ИНАЧЕ
#               заменить (12, 1)
'''
s = '22' + '1' * 2023 + '22'
while '211' in s or '112' in s:
    s = s.replace('11', '1', 1)
    if '21' in s:
        s = s.replace('21', '12', 1)
    else:
        s = s.replace('12', '1', 1)

print(s)
'''
# Ответ: 121222


# Номер 7
# Для хранения сжатого произвольного растрового изображения размером 512 на 750 пикселей
# отведено 80 Кбайт памяти без учёта размера заголовка файла.
# Файл оригинального изображения больше сжатого на 65 %.
# Для кодирования цвета каждого пикселя используется одинаковое количество бит,
# коды пикселей записываются в файл один за другим без промежутков.
# Какое максимальное количество цветов можно использовать в изображении?
'''
I = (80 / 100) * 165
print(I)  # вес оригинала

i = (I*2**13) / (512 * 750)
print(i)
N = 2*2
print(N)
'''
# Ответ: 4

# Номер 11
# При регистрации в компьютерной системе каждому объекту присваивается идентификатор, состоящий из 711 символов
# и содержащий только десятичные цифры и символы из 500-символьного специального алфавита.
# В базе данных для хранения каждого идентификатора отведено одинаковое и минимально возможное целое число байт.
# При этом используют посимвольное кодирование идентификаторов, все символы кодируют одинаковым и минимально возможным количеством бит.
# Определите объём памяти (в Кбайт), необходимый для хранения 3584 идентификаторов
# В ответе запишите только целое число - количество Кбайт.
'''
symbols = 711
alphabet = 510

# alphabet = 2 ** i, следовательно i = 9 бит на символ
i = 9
bit = 711 * i
byte = int(bit/8) + 1
print(byte)

I = (3584 * byte) / (2**10)
print(I)
'''
# Ответ: 2800 Кбайт





# endregion Урок: ******************************************************************************


# todo: Иван = [2, 6, 8, 10, 12, 13, 14+, 15+, 16, 17, 23]
# на прошлом уроке: Прорешивали задачи с 1 варианта сборника Крылова
# на следующем уроке: Теория игр 19-21 на две кучи